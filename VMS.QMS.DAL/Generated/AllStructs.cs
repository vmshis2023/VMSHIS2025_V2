using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.QMS.DAL
{
	#region Tables Struct
	public partial struct Tables
	{
		
		public static readonly string DmucChung = @"dmuc_chung";
        
		public static readonly string DmucKieudmuc = @"dmuc_kieudmuc";
        
		public static readonly string QmsCanLamSang = @"QMS_CanLamSang";
        
		public static readonly string QmsChoKham = @"QMS_ChoKham";
        
		public static readonly string QmsGoiLoa = @"QMS_GoiLoa";
        
		public static readonly string QmsLoai = @"QMS_LOAI";
        
		public static readonly string QmsPhongBan = @"QMS_PhongBan";
        
		public static readonly string QmsPhongchucnang = @"qms_phongchucnang";
        
		public static readonly string QmsPhongkham = @"qms_phongkham";
        
		public static readonly string QmsSoKham = @"QMS_So_Kham";
        
		public static readonly string QmsTiepdon = @"qms_tiepdon";
        
		public static readonly string QmsThoigianCho = @"QMS_THOIGIAN_CHO";
        
		public static readonly string SysWebServicePath = @"Sys_WebServicePath";
        
	}
	#endregion
    #region Schemas
    public partial class Schemas {
		
		public static TableSchema.Table DmucChung
		{
            get { return DataService.GetSchema("dmuc_chung", "ORM"); }
		}
        
		public static TableSchema.Table DmucKieudmuc
		{
            get { return DataService.GetSchema("dmuc_kieudmuc", "ORM"); }
		}
        
		public static TableSchema.Table QmsCanLamSang
		{
            get { return DataService.GetSchema("QMS_CanLamSang", "ORM"); }
		}
        
		public static TableSchema.Table QmsChoKham
		{
            get { return DataService.GetSchema("QMS_ChoKham", "ORM"); }
		}
        
		public static TableSchema.Table QmsGoiLoa
		{
            get { return DataService.GetSchema("QMS_GoiLoa", "ORM"); }
		}
        
		public static TableSchema.Table QmsLoai
		{
            get { return DataService.GetSchema("QMS_LOAI", "ORM"); }
		}
        
		public static TableSchema.Table QmsPhongBan
		{
            get { return DataService.GetSchema("QMS_PhongBan", "ORM"); }
		}
        
		public static TableSchema.Table QmsPhongchucnang
		{
            get { return DataService.GetSchema("qms_phongchucnang", "ORM"); }
		}
        
		public static TableSchema.Table QmsPhongkham
		{
            get { return DataService.GetSchema("qms_phongkham", "ORM"); }
		}
        
		public static TableSchema.Table QmsSoKham
		{
            get { return DataService.GetSchema("QMS_So_Kham", "ORM"); }
		}
        
		public static TableSchema.Table QmsTiepdon
		{
            get { return DataService.GetSchema("qms_tiepdon", "ORM"); }
		}
        
		public static TableSchema.Table QmsThoigianCho
		{
            get { return DataService.GetSchema("QMS_THOIGIAN_CHO", "ORM"); }
		}
        
		public static TableSchema.Table SysWebServicePath
		{
            get { return DataService.GetSchema("Sys_WebServicePath", "ORM"); }
		}
        
	
    }
    #endregion
    #region View Struct
    public partial struct Views 
    {
		
    }
    #endregion
    
    #region Query Factories
	public static partial class DB
	{
        public static DataProvider _provider = DataService.Providers["ORM"];
        static ISubSonicRepository _repository;
        public static ISubSonicRepository Repository 
        {
            get 
            {
                if (_repository == null)
                    return new SubSonicRepository(_provider);
                return _repository; 
            }
            set { _repository = value; }
        }
        public static Select SelectAllColumnsFrom<T>() where T : RecordBase<T>, new()
	    {
            return Repository.SelectAllColumnsFrom<T>();
	    }
	    public static Select Select()
	    {
            return Repository.Select();
	    }
	    
		public static Select Select(params string[] columns)
		{
            return Repository.Select(columns);
        }
	    
		public static Select Select(params Aggregate[] aggregates)
		{
            return Repository.Select(aggregates);
        }
   
	    public static Update Update<T>() where T : RecordBase<T>, new()
	    {
            return Repository.Update<T>();
	    }
	    
	    public static Insert Insert()
	    {
            return Repository.Insert();
	    }
	    
	    public static Delete Delete()
	    {
            return Repository.Delete();
	    }
	    
	    public static InlineQuery Query()
	    {
            return Repository.Query();
	    }
	    	    
	    
	}
    #endregion
    
}
#region Databases
public partial struct Databases 
{
	
	public static readonly string ORM = @"ORM";
    
}
#endregion