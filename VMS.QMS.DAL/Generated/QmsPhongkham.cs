using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.QMS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the QmsPhongkham class.
	/// </summary>
    [Serializable]
	public partial class QmsPhongkhamCollection : ActiveList<QmsPhongkham, QmsPhongkhamCollection>
	{	   
		public QmsPhongkhamCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>QmsPhongkhamCollection</returns>
		public QmsPhongkhamCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                QmsPhongkham o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the qms_phongkham table.
	/// </summary>
	[Serializable]
	public partial class QmsPhongkham : ActiveRecord<QmsPhongkham>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public QmsPhongkham()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public QmsPhongkham(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public QmsPhongkham(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public QmsPhongkham(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("qms_phongkham", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarSoKham = new TableSchema.TableColumn(schema);
				colvarSoKham.ColumnName = "so_kham";
				colvarSoKham.DataType = DbType.Int32;
				colvarSoKham.MaxLength = 0;
				colvarSoKham.AutoIncrement = false;
				colvarSoKham.IsNullable = false;
				colvarSoKham.IsPrimaryKey = false;
				colvarSoKham.IsForeignKey = false;
				colvarSoKham.IsReadOnly = false;
				colvarSoKham.DefaultSetting = @"";
				colvarSoKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoKham);
				
				TableSchema.TableColumn colvarMaPhong = new TableSchema.TableColumn(schema);
				colvarMaPhong.ColumnName = "ma_phong";
				colvarMaPhong.DataType = DbType.String;
				colvarMaPhong.MaxLength = 10;
				colvarMaPhong.AutoIncrement = false;
				colvarMaPhong.IsNullable = false;
				colvarMaPhong.IsPrimaryKey = false;
				colvarMaPhong.IsForeignKey = false;
				colvarMaPhong.IsReadOnly = false;
				colvarMaPhong.DefaultSetting = @"";
				colvarMaPhong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaPhong);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = false;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNgayTiepdon = new TableSchema.TableColumn(schema);
				colvarNgayTiepdon.ColumnName = "ngay_tiepdon";
				colvarNgayTiepdon.DataType = DbType.DateTime;
				colvarNgayTiepdon.MaxLength = 0;
				colvarNgayTiepdon.AutoIncrement = false;
				colvarNgayTiepdon.IsNullable = false;
				colvarNgayTiepdon.IsPrimaryKey = false;
				colvarNgayTiepdon.IsForeignKey = false;
				colvarNgayTiepdon.IsReadOnly = false;
				colvarNgayTiepdon.DefaultSetting = @"";
				colvarNgayTiepdon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTiepdon);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 10;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarTenBenhnhan = new TableSchema.TableColumn(schema);
				colvarTenBenhnhan.ColumnName = "ten_benhnhan";
				colvarTenBenhnhan.DataType = DbType.String;
				colvarTenBenhnhan.MaxLength = 100;
				colvarTenBenhnhan.AutoIncrement = false;
				colvarTenBenhnhan.IsNullable = false;
				colvarTenBenhnhan.IsPrimaryKey = false;
				colvarTenBenhnhan.IsForeignKey = false;
				colvarTenBenhnhan.IsReadOnly = false;
				colvarTenBenhnhan.DefaultSetting = @"";
				colvarTenBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenBenhnhan);
				
				TableSchema.TableColumn colvarNamSinh = new TableSchema.TableColumn(schema);
				colvarNamSinh.ColumnName = "nam_sinh";
				colvarNamSinh.DataType = DbType.Int32;
				colvarNamSinh.MaxLength = 0;
				colvarNamSinh.AutoIncrement = false;
				colvarNamSinh.IsNullable = false;
				colvarNamSinh.IsPrimaryKey = false;
				colvarNamSinh.IsForeignKey = false;
				colvarNamSinh.IsReadOnly = false;
				colvarNamSinh.DefaultSetting = @"";
				colvarNamSinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNamSinh);
				
				TableSchema.TableColumn colvarTuoi = new TableSchema.TableColumn(schema);
				colvarTuoi.ColumnName = "tuoi";
				colvarTuoi.DataType = DbType.Int32;
				colvarTuoi.MaxLength = 0;
				colvarTuoi.AutoIncrement = false;
				colvarTuoi.IsNullable = false;
				colvarTuoi.IsPrimaryKey = false;
				colvarTuoi.IsForeignKey = false;
				colvarTuoi.IsReadOnly = false;
				colvarTuoi.DefaultSetting = @"";
				colvarTuoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuoi);
				
				TableSchema.TableColumn colvarGioitinh = new TableSchema.TableColumn(schema);
				colvarGioitinh.ColumnName = "gioitinh";
				colvarGioitinh.DataType = DbType.String;
				colvarGioitinh.MaxLength = 10;
				colvarGioitinh.AutoIncrement = false;
				colvarGioitinh.IsNullable = false;
				colvarGioitinh.IsPrimaryKey = false;
				colvarGioitinh.IsForeignKey = false;
				colvarGioitinh.IsReadOnly = false;
				colvarGioitinh.DefaultSetting = @"";
				colvarGioitinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGioitinh);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.Byte;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = false;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				
						colvarTrangThai.DefaultSetting = @"((0))";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarMaKhoakcb = new TableSchema.TableColumn(schema);
				colvarMaKhoakcb.ColumnName = "ma_khoakcb";
				colvarMaKhoakcb.DataType = DbType.String;
				colvarMaKhoakcb.MaxLength = 10;
				colvarMaKhoakcb.AutoIncrement = false;
				colvarMaKhoakcb.IsNullable = false;
				colvarMaKhoakcb.IsPrimaryKey = false;
				colvarMaKhoakcb.IsForeignKey = false;
				colvarMaKhoakcb.IsReadOnly = false;
				colvarMaKhoakcb.DefaultSetting = @"";
				colvarMaKhoakcb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKhoakcb);
				
				TableSchema.TableColumn colvarIdPhongkham = new TableSchema.TableColumn(schema);
				colvarIdPhongkham.ColumnName = "id_phongkham";
				colvarIdPhongkham.DataType = DbType.Int32;
				colvarIdPhongkham.MaxLength = 0;
				colvarIdPhongkham.AutoIncrement = false;
				colvarIdPhongkham.IsNullable = false;
				colvarIdPhongkham.IsPrimaryKey = false;
				colvarIdPhongkham.IsForeignKey = false;
				colvarIdPhongkham.IsReadOnly = false;
				colvarIdPhongkham.DefaultSetting = @"";
				colvarIdPhongkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhongkham);
				
				TableSchema.TableColumn colvarIdKham = new TableSchema.TableColumn(schema);
				colvarIdKham.ColumnName = "id_kham";
				colvarIdKham.DataType = DbType.Int64;
				colvarIdKham.MaxLength = 0;
				colvarIdKham.AutoIncrement = false;
				colvarIdKham.IsNullable = false;
				colvarIdKham.IsPrimaryKey = false;
				colvarIdKham.IsForeignKey = false;
				colvarIdKham.IsReadOnly = false;
				colvarIdKham.DefaultSetting = @"";
				colvarIdKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKham);
				
				TableSchema.TableColumn colvarIdDichvuKcb = new TableSchema.TableColumn(schema);
				colvarIdDichvuKcb.ColumnName = "id_dichvu_kcb";
				colvarIdDichvuKcb.DataType = DbType.Int32;
				colvarIdDichvuKcb.MaxLength = 0;
				colvarIdDichvuKcb.AutoIncrement = false;
				colvarIdDichvuKcb.IsNullable = false;
				colvarIdDichvuKcb.IsPrimaryKey = false;
				colvarIdDichvuKcb.IsForeignKey = false;
				colvarIdDichvuKcb.IsReadOnly = false;
				colvarIdDichvuKcb.DefaultSetting = @"";
				colvarIdDichvuKcb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDichvuKcb);
				
				TableSchema.TableColumn colvarTenDichvuKcb = new TableSchema.TableColumn(schema);
				colvarTenDichvuKcb.ColumnName = "ten_dichvu_kcb";
				colvarTenDichvuKcb.DataType = DbType.String;
				colvarTenDichvuKcb.MaxLength = 200;
				colvarTenDichvuKcb.AutoIncrement = false;
				colvarTenDichvuKcb.IsNullable = false;
				colvarTenDichvuKcb.IsPrimaryKey = false;
				colvarTenDichvuKcb.IsForeignKey = false;
				colvarTenDichvuKcb.IsReadOnly = false;
				colvarTenDichvuKcb.DefaultSetting = @"";
				colvarTenDichvuKcb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenDichvuKcb);
				
				TableSchema.TableColumn colvarHieuLuc = new TableSchema.TableColumn(schema);
				colvarHieuLuc.ColumnName = "hieu_luc";
				colvarHieuLuc.DataType = DbType.Byte;
				colvarHieuLuc.MaxLength = 0;
				colvarHieuLuc.AutoIncrement = false;
				colvarHieuLuc.IsNullable = false;
				colvarHieuLuc.IsPrimaryKey = false;
				colvarHieuLuc.IsForeignKey = false;
				colvarHieuLuc.IsReadOnly = false;
				
						colvarHieuLuc.DefaultSetting = @"((1))";
				colvarHieuLuc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHieuLuc);
				
				TableSchema.TableColumn colvarDaKham = new TableSchema.TableColumn(schema);
				colvarDaKham.ColumnName = "da_kham";
				colvarDaKham.DataType = DbType.Byte;
				colvarDaKham.MaxLength = 0;
				colvarDaKham.AutoIncrement = false;
				colvarDaKham.IsNullable = true;
				colvarDaKham.IsPrimaryKey = false;
				colvarDaKham.IsForeignKey = false;
				colvarDaKham.IsReadOnly = false;
				
						colvarDaKham.DefaultSetting = @"((0))";
				colvarDaKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaKham);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("qms_phongkham",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("SoKham")]
		[Bindable(true)]
		public int SoKham 
		{
			get { return GetColumnValue<int>(Columns.SoKham); }
			set { SetColumnValue(Columns.SoKham, value); }
		}
		  
		[XmlAttribute("MaPhong")]
		[Bindable(true)]
		public string MaPhong 
		{
			get { return GetColumnValue<string>(Columns.MaPhong); }
			set { SetColumnValue(Columns.MaPhong, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime NgayTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NgayTiepdon")]
		[Bindable(true)]
		public DateTime NgayTiepdon 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTiepdon); }
			set { SetColumnValue(Columns.NgayTiepdon, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("TenBenhnhan")]
		[Bindable(true)]
		public string TenBenhnhan 
		{
			get { return GetColumnValue<string>(Columns.TenBenhnhan); }
			set { SetColumnValue(Columns.TenBenhnhan, value); }
		}
		  
		[XmlAttribute("NamSinh")]
		[Bindable(true)]
		public int NamSinh 
		{
			get { return GetColumnValue<int>(Columns.NamSinh); }
			set { SetColumnValue(Columns.NamSinh, value); }
		}
		  
		[XmlAttribute("Tuoi")]
		[Bindable(true)]
		public int Tuoi 
		{
			get { return GetColumnValue<int>(Columns.Tuoi); }
			set { SetColumnValue(Columns.Tuoi, value); }
		}
		  
		[XmlAttribute("Gioitinh")]
		[Bindable(true)]
		public string Gioitinh 
		{
			get { return GetColumnValue<string>(Columns.Gioitinh); }
			set { SetColumnValue(Columns.Gioitinh, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public byte TrangThai 
		{
			get { return GetColumnValue<byte>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("MaKhoakcb")]
		[Bindable(true)]
		public string MaKhoakcb 
		{
			get { return GetColumnValue<string>(Columns.MaKhoakcb); }
			set { SetColumnValue(Columns.MaKhoakcb, value); }
		}
		  
		[XmlAttribute("IdPhongkham")]
		[Bindable(true)]
		public int IdPhongkham 
		{
			get { return GetColumnValue<int>(Columns.IdPhongkham); }
			set { SetColumnValue(Columns.IdPhongkham, value); }
		}
		  
		[XmlAttribute("IdKham")]
		[Bindable(true)]
		public long IdKham 
		{
			get { return GetColumnValue<long>(Columns.IdKham); }
			set { SetColumnValue(Columns.IdKham, value); }
		}
		  
		[XmlAttribute("IdDichvuKcb")]
		[Bindable(true)]
		public int IdDichvuKcb 
		{
			get { return GetColumnValue<int>(Columns.IdDichvuKcb); }
			set { SetColumnValue(Columns.IdDichvuKcb, value); }
		}
		  
		[XmlAttribute("TenDichvuKcb")]
		[Bindable(true)]
		public string TenDichvuKcb 
		{
			get { return GetColumnValue<string>(Columns.TenDichvuKcb); }
			set { SetColumnValue(Columns.TenDichvuKcb, value); }
		}
		  
		[XmlAttribute("HieuLuc")]
		[Bindable(true)]
		public byte HieuLuc 
		{
			get { return GetColumnValue<byte>(Columns.HieuLuc); }
			set { SetColumnValue(Columns.HieuLuc, value); }
		}
		  
		[XmlAttribute("DaKham")]
		[Bindable(true)]
		public byte? DaKham 
		{
			get { return GetColumnValue<byte?>(Columns.DaKham); }
			set { SetColumnValue(Columns.DaKham, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varSoKham,string varMaPhong,DateTime varNgayTao,DateTime varNgayTiepdon,long varIdBenhnhan,string varMaLuotkham,string varTenBenhnhan,int varNamSinh,int varTuoi,string varGioitinh,byte varTrangThai,string varMaKhoakcb,int varIdPhongkham,long varIdKham,int varIdDichvuKcb,string varTenDichvuKcb,byte varHieuLuc,byte? varDaKham)
		{
			QmsPhongkham item = new QmsPhongkham();
			
			item.SoKham = varSoKham;
			
			item.MaPhong = varMaPhong;
			
			item.NgayTao = varNgayTao;
			
			item.NgayTiepdon = varNgayTiepdon;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.MaLuotkham = varMaLuotkham;
			
			item.TenBenhnhan = varTenBenhnhan;
			
			item.NamSinh = varNamSinh;
			
			item.Tuoi = varTuoi;
			
			item.Gioitinh = varGioitinh;
			
			item.TrangThai = varTrangThai;
			
			item.MaKhoakcb = varMaKhoakcb;
			
			item.IdPhongkham = varIdPhongkham;
			
			item.IdKham = varIdKham;
			
			item.IdDichvuKcb = varIdDichvuKcb;
			
			item.TenDichvuKcb = varTenDichvuKcb;
			
			item.HieuLuc = varHieuLuc;
			
			item.DaKham = varDaKham;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,int varSoKham,string varMaPhong,DateTime varNgayTao,DateTime varNgayTiepdon,long varIdBenhnhan,string varMaLuotkham,string varTenBenhnhan,int varNamSinh,int varTuoi,string varGioitinh,byte varTrangThai,string varMaKhoakcb,int varIdPhongkham,long varIdKham,int varIdDichvuKcb,string varTenDichvuKcb,byte varHieuLuc,byte? varDaKham)
		{
			QmsPhongkham item = new QmsPhongkham();
			
				item.Id = varId;
			
				item.SoKham = varSoKham;
			
				item.MaPhong = varMaPhong;
			
				item.NgayTao = varNgayTao;
			
				item.NgayTiepdon = varNgayTiepdon;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.TenBenhnhan = varTenBenhnhan;
			
				item.NamSinh = varNamSinh;
			
				item.Tuoi = varTuoi;
			
				item.Gioitinh = varGioitinh;
			
				item.TrangThai = varTrangThai;
			
				item.MaKhoakcb = varMaKhoakcb;
			
				item.IdPhongkham = varIdPhongkham;
			
				item.IdKham = varIdKham;
			
				item.IdDichvuKcb = varIdDichvuKcb;
			
				item.TenDichvuKcb = varTenDichvuKcb;
			
				item.HieuLuc = varHieuLuc;
			
				item.DaKham = varDaKham;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn SoKhamColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaPhongColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTiepdonColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn TenBenhnhanColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NamSinhColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn TuoiColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn GioitinhColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhoakcbColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhongkhamColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhamColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDichvuKcbColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn TenDichvuKcbColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn HieuLucColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn DaKhamColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string SoKham = @"so_kham";
			 public static string MaPhong = @"ma_phong";
			 public static string NgayTao = @"ngay_tao";
			 public static string NgayTiepdon = @"ngay_tiepdon";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string TenBenhnhan = @"ten_benhnhan";
			 public static string NamSinh = @"nam_sinh";
			 public static string Tuoi = @"tuoi";
			 public static string Gioitinh = @"gioitinh";
			 public static string TrangThai = @"trang_thai";
			 public static string MaKhoakcb = @"ma_khoakcb";
			 public static string IdPhongkham = @"id_phongkham";
			 public static string IdKham = @"id_kham";
			 public static string IdDichvuKcb = @"id_dichvu_kcb";
			 public static string TenDichvuKcb = @"ten_dichvu_kcb";
			 public static string HieuLuc = @"hieu_luc";
			 public static string DaKham = @"da_kham";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
