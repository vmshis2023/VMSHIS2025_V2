using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.QMS.DAL
{
    /// <summary>
    /// Controller class for QMS_ChoKham
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class QmsChoKhamController
    {
        // Preload our schema..
        QmsChoKham thisSchemaLoad = new QmsChoKham();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public QmsChoKhamCollection FetchAll()
        {
            QmsChoKhamCollection coll = new QmsChoKhamCollection();
            Query qry = new Query(QmsChoKham.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public QmsChoKhamCollection FetchByID(object RegId)
        {
            QmsChoKhamCollection coll = new QmsChoKhamCollection().Where("Reg_ID", RegId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public QmsChoKhamCollection FetchByQuery(Query qry)
        {
            QmsChoKhamCollection coll = new QmsChoKhamCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object RegId)
        {
            return (QmsChoKham.Delete(RegId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object RegId)
        {
            return (QmsChoKham.Destroy(RegId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int RegId,int? PatientId,string PatientCode,string PatientName,int? YearOfBirth,int? PatientSex,DateTime? RegDate,DateTime? InputDate,short? DepartmentId,short? DoctorAssignId,byte? Status,short? SoKham,short? UuTien,string MaKhoaThien,string MaPhongStt,string MaCoSo,int? ExamId,byte? HienThi,bool? QmsHienThi)
	    {
		    QmsChoKham item = new QmsChoKham();
		    
            item.RegId = RegId;
            
            item.PatientId = PatientId;
            
            item.PatientCode = PatientCode;
            
            item.PatientName = PatientName;
            
            item.YearOfBirth = YearOfBirth;
            
            item.PatientSex = PatientSex;
            
            item.RegDate = RegDate;
            
            item.InputDate = InputDate;
            
            item.DepartmentId = DepartmentId;
            
            item.DoctorAssignId = DoctorAssignId;
            
            item.Status = Status;
            
            item.SoKham = SoKham;
            
            item.UuTien = UuTien;
            
            item.MaKhoaThien = MaKhoaThien;
            
            item.MaPhongStt = MaPhongStt;
            
            item.MaCoSo = MaCoSo;
            
            item.ExamId = ExamId;
            
            item.HienThi = HienThi;
            
            item.QmsHienThi = QmsHienThi;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int RegId,int? PatientId,string PatientCode,string PatientName,int? YearOfBirth,int? PatientSex,DateTime? RegDate,DateTime? InputDate,short? DepartmentId,short? DoctorAssignId,byte? Status,short? SoKham,short? UuTien,string MaKhoaThien,string MaPhongStt,string MaCoSo,int? ExamId,byte? HienThi,bool? QmsHienThi)
	    {
		    QmsChoKham item = new QmsChoKham();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.RegId = RegId;
				
			item.PatientId = PatientId;
				
			item.PatientCode = PatientCode;
				
			item.PatientName = PatientName;
				
			item.YearOfBirth = YearOfBirth;
				
			item.PatientSex = PatientSex;
				
			item.RegDate = RegDate;
				
			item.InputDate = InputDate;
				
			item.DepartmentId = DepartmentId;
				
			item.DoctorAssignId = DoctorAssignId;
				
			item.Status = Status;
				
			item.SoKham = SoKham;
				
			item.UuTien = UuTien;
				
			item.MaKhoaThien = MaKhoaThien;
				
			item.MaPhongStt = MaPhongStt;
				
			item.MaCoSo = MaCoSo;
				
			item.ExamId = ExamId;
				
			item.HienThi = HienThi;
				
			item.QmsHienThi = QmsHienThi;
				
	        item.Save(UserName);
	    }
    }
}
