<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="SubSonicService" type="SubSonic.SubSonicSection, SubSonic" requirePermission="false"/>
  
      <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
          <section name="Janus.Windows.Common.JanusApplicationSettings.grdAssignDetail" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
      </sectionGroup>
  </configSections>

  <appSettings>
    <add key="TenBenhVien" value="BỆNH VIỆN SÀI GÒN" />
    <add key="TenKhoaKhamBenh" value="KHOA KHÁM BỆNH" />
    <add key="Title" value="Hệ thống gọi loa khoa CĐHA-Quét (hoặc nhập) mã phiếu chỉ định. Sau đó lấy số khám theo các phòng chức năng" />
    <add key="IsHienThiMedia" value="true" />
    <add key="ma_khoakcb" value="KKB" />
    <add key="ma_phong" value="PSA01,PSA02,PXQ01" />
    <add key="ma_chucnang" value="SA,SAT,XQ" />
    <add key="dodai_ma" value="11" />
    <add key="tudong_quetkhitoidodaima" value="1" />
    <add key="FontSize" value="40" />
    <add key="PrinterName" value="" />
    <add key="PathMedia" value="UocMoNgotNgao.MP4" />
    <add key="PathReport" value="CRPT_SOKHAM.rpt" />
    <add key="LeasedLine" value="http://192.168.7.163:8019/Services/HospitalFee/Execute" />
    <add key="TTSURL" value="http://192.168.10.2:9005/TTS.svc" />
    <add key="loai_qms" value="1" />
    <!--0=QMS tiep don;1= QMS phong kham;2= QMS phong chuc nang;3=QMS khoa CDHA;4=QMS quay thuoc;5=QMS quay thanh toan-->
    <add key="ma_loa" value="1" />
    <add key="do_tre" value="1" />
    <add key="thoigian_cho" value="500" />
    <add key="thoigian_refresh" value="3000" />
    <add key="thoigian_goi_googleTTS" value="5000" />
    <add key="MaBenhVien" value="BVSG" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <connectionStrings>
    <add name="subSonicConnectionString" connectionString="Data Source=192.168.10.2; Initial Catalog=QMS; User ID=sa;Password=Vms@123456;" providerName="System.Data.SqlClient" />
  </connectionStrings>

  <SubSonicService defaultProvider="ORM">
    <providers>
      <clear/>
      <add name="ORM" type="SubSonic.SqlDataProvider, SubSonic" connectionStringName="subSonicConnectionString" generatedNamespace="VietBa.HISLink.Models"/>
    </providers>
  </SubSonicService>
  <startup useLegacyV2RuntimeActivationPolicy="true">
  <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
  </startup>
<userSettings>
        <Janus.Windows.Common.JanusApplicationSettings.grdAssignDetail>
                <setting name="LayoutSettings" serializeAs="Xml">
                        <value>
                                <base64Binary></base64Binary>
                        </value>
                </setting>
        </Janus.Windows.Common.JanusApplicationSettings.grdAssignDetail>
    </userSettings>
</configuration>
