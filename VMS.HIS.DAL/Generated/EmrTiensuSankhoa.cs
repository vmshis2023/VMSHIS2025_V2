using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the EmrTiensuSankhoa class.
	/// </summary>
    [Serializable]
	public partial class EmrTiensuSankhoaCollection : ActiveList<EmrTiensuSankhoa, EmrTiensuSankhoaCollection>
	{	   
		public EmrTiensuSankhoaCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>EmrTiensuSankhoaCollection</returns>
		public EmrTiensuSankhoaCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                EmrTiensuSankhoa o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the emr_tiensu_sankhoa table.
	/// </summary>
	[Serializable]
	public partial class EmrTiensuSankhoa : ActiveRecord<EmrTiensuSankhoa>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public EmrTiensuSankhoa()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public EmrTiensuSankhoa(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public EmrTiensuSankhoa(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public EmrTiensuSankhoa(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("emr_tiensu_sankhoa", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 10;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarSolanCothai = new TableSchema.TableColumn(schema);
				colvarSolanCothai.ColumnName = "solan_cothai";
				colvarSolanCothai.DataType = DbType.Byte;
				colvarSolanCothai.MaxLength = 0;
				colvarSolanCothai.AutoIncrement = false;
				colvarSolanCothai.IsNullable = true;
				colvarSolanCothai.IsPrimaryKey = false;
				colvarSolanCothai.IsForeignKey = false;
				colvarSolanCothai.IsReadOnly = false;
				colvarSolanCothai.DefaultSetting = @"";
				colvarSolanCothai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSolanCothai);
				
				TableSchema.TableColumn colvarNam = new TableSchema.TableColumn(schema);
				colvarNam.ColumnName = "nam";
				colvarNam.DataType = DbType.Int32;
				colvarNam.MaxLength = 0;
				colvarNam.AutoIncrement = false;
				colvarNam.IsNullable = true;
				colvarNam.IsPrimaryKey = false;
				colvarNam.IsForeignKey = false;
				colvarNam.IsReadOnly = false;
				colvarNam.DefaultSetting = @"";
				colvarNam.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNam);
				
				TableSchema.TableColumn colvarDeduthang = new TableSchema.TableColumn(schema);
				colvarDeduthang.ColumnName = "deduthang";
				colvarDeduthang.DataType = DbType.Boolean;
				colvarDeduthang.MaxLength = 0;
				colvarDeduthang.AutoIncrement = false;
				colvarDeduthang.IsNullable = true;
				colvarDeduthang.IsPrimaryKey = false;
				colvarDeduthang.IsForeignKey = false;
				colvarDeduthang.IsReadOnly = false;
				colvarDeduthang.DefaultSetting = @"";
				colvarDeduthang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDeduthang);
				
				TableSchema.TableColumn colvarDethieuthang = new TableSchema.TableColumn(schema);
				colvarDethieuthang.ColumnName = "dethieuthang";
				colvarDethieuthang.DataType = DbType.Boolean;
				colvarDethieuthang.MaxLength = 0;
				colvarDethieuthang.AutoIncrement = false;
				colvarDethieuthang.IsNullable = true;
				colvarDethieuthang.IsPrimaryKey = false;
				colvarDethieuthang.IsForeignKey = false;
				colvarDethieuthang.IsReadOnly = false;
				colvarDethieuthang.DefaultSetting = @"";
				colvarDethieuthang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDethieuthang);
				
				TableSchema.TableColumn colvarSay = new TableSchema.TableColumn(schema);
				colvarSay.ColumnName = "say";
				colvarSay.DataType = DbType.Boolean;
				colvarSay.MaxLength = 0;
				colvarSay.AutoIncrement = false;
				colvarSay.IsNullable = true;
				colvarSay.IsPrimaryKey = false;
				colvarSay.IsForeignKey = false;
				colvarSay.IsReadOnly = false;
				colvarSay.DefaultSetting = @"";
				colvarSay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSay);
				
				TableSchema.TableColumn colvarHut = new TableSchema.TableColumn(schema);
				colvarHut.ColumnName = "hut";
				colvarHut.DataType = DbType.Boolean;
				colvarHut.MaxLength = 0;
				colvarHut.AutoIncrement = false;
				colvarHut.IsNullable = true;
				colvarHut.IsPrimaryKey = false;
				colvarHut.IsForeignKey = false;
				colvarHut.IsReadOnly = false;
				colvarHut.DefaultSetting = @"";
				colvarHut.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHut);
				
				TableSchema.TableColumn colvarNao = new TableSchema.TableColumn(schema);
				colvarNao.ColumnName = "nao";
				colvarNao.DataType = DbType.Boolean;
				colvarNao.MaxLength = 0;
				colvarNao.AutoIncrement = false;
				colvarNao.IsNullable = true;
				colvarNao.IsPrimaryKey = false;
				colvarNao.IsForeignKey = false;
				colvarNao.IsReadOnly = false;
				colvarNao.DefaultSetting = @"";
				colvarNao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNao);
				
				TableSchema.TableColumn colvarCovac = new TableSchema.TableColumn(schema);
				colvarCovac.ColumnName = "covac";
				colvarCovac.DataType = DbType.Boolean;
				colvarCovac.MaxLength = 0;
				colvarCovac.AutoIncrement = false;
				colvarCovac.IsNullable = true;
				colvarCovac.IsPrimaryKey = false;
				colvarCovac.IsForeignKey = false;
				colvarCovac.IsReadOnly = false;
				colvarCovac.DefaultSetting = @"";
				colvarCovac.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCovac);
				
				TableSchema.TableColumn colvarChuangoaitucung = new TableSchema.TableColumn(schema);
				colvarChuangoaitucung.ColumnName = "chuangoaitucung";
				colvarChuangoaitucung.DataType = DbType.Boolean;
				colvarChuangoaitucung.MaxLength = 0;
				colvarChuangoaitucung.AutoIncrement = false;
				colvarChuangoaitucung.IsNullable = true;
				colvarChuangoaitucung.IsPrimaryKey = false;
				colvarChuangoaitucung.IsForeignKey = false;
				colvarChuangoaitucung.IsReadOnly = false;
				colvarChuangoaitucung.DefaultSetting = @"";
				colvarChuangoaitucung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChuangoaitucung);
				
				TableSchema.TableColumn colvarThaichetluu = new TableSchema.TableColumn(schema);
				colvarThaichetluu.ColumnName = "thaichetluu";
				colvarThaichetluu.DataType = DbType.Boolean;
				colvarThaichetluu.MaxLength = 0;
				colvarThaichetluu.AutoIncrement = false;
				colvarThaichetluu.IsNullable = true;
				colvarThaichetluu.IsPrimaryKey = false;
				colvarThaichetluu.IsForeignKey = false;
				colvarThaichetluu.IsReadOnly = false;
				colvarThaichetluu.DefaultSetting = @"";
				colvarThaichetluu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThaichetluu);
				
				TableSchema.TableColumn colvarConhiensong = new TableSchema.TableColumn(schema);
				colvarConhiensong.ColumnName = "conhiensong";
				colvarConhiensong.DataType = DbType.Boolean;
				colvarConhiensong.MaxLength = 0;
				colvarConhiensong.AutoIncrement = false;
				colvarConhiensong.IsNullable = true;
				colvarConhiensong.IsPrimaryKey = false;
				colvarConhiensong.IsForeignKey = false;
				colvarConhiensong.IsReadOnly = false;
				colvarConhiensong.DefaultSetting = @"";
				colvarConhiensong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarConhiensong);
				
				TableSchema.TableColumn colvarThongtintreCannangBenhtat = new TableSchema.TableColumn(schema);
				colvarThongtintreCannangBenhtat.ColumnName = "thongtintre_cannang_benhtat";
				colvarThongtintreCannangBenhtat.DataType = DbType.String;
				colvarThongtintreCannangBenhtat.MaxLength = 255;
				colvarThongtintreCannangBenhtat.AutoIncrement = false;
				colvarThongtintreCannangBenhtat.IsNullable = true;
				colvarThongtintreCannangBenhtat.IsPrimaryKey = false;
				colvarThongtintreCannangBenhtat.IsForeignKey = false;
				colvarThongtintreCannangBenhtat.IsReadOnly = false;
				colvarThongtintreCannangBenhtat.DefaultSetting = @"";
				colvarThongtintreCannangBenhtat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThongtintreCannangBenhtat);
				
				TableSchema.TableColumn colvarPhuongphapde = new TableSchema.TableColumn(schema);
				colvarPhuongphapde.ColumnName = "phuongphapde";
				colvarPhuongphapde.DataType = DbType.String;
				colvarPhuongphapde.MaxLength = 255;
				colvarPhuongphapde.AutoIncrement = false;
				colvarPhuongphapde.IsNullable = true;
				colvarPhuongphapde.IsPrimaryKey = false;
				colvarPhuongphapde.IsForeignKey = false;
				colvarPhuongphapde.IsReadOnly = false;
				colvarPhuongphapde.DefaultSetting = @"";
				colvarPhuongphapde.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhuongphapde);
				
				TableSchema.TableColumn colvarTaibienHausan = new TableSchema.TableColumn(schema);
				colvarTaibienHausan.ColumnName = "taibien_hausan";
				colvarTaibienHausan.DataType = DbType.Boolean;
				colvarTaibienHausan.MaxLength = 0;
				colvarTaibienHausan.AutoIncrement = false;
				colvarTaibienHausan.IsNullable = true;
				colvarTaibienHausan.IsPrimaryKey = false;
				colvarTaibienHausan.IsForeignKey = false;
				colvarTaibienHausan.IsReadOnly = false;
				colvarTaibienHausan.DefaultSetting = @"";
				colvarTaibienHausan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTaibienHausan);
				
				TableSchema.TableColumn colvarTuoithai = new TableSchema.TableColumn(schema);
				colvarTuoithai.ColumnName = "tuoithai";
				colvarTuoithai.DataType = DbType.String;
				colvarTuoithai.MaxLength = 10;
				colvarTuoithai.AutoIncrement = false;
				colvarTuoithai.IsNullable = true;
				colvarTuoithai.IsPrimaryKey = false;
				colvarTuoithai.IsForeignKey = false;
				colvarTuoithai.IsReadOnly = false;
				colvarTuoithai.DefaultSetting = @"";
				colvarTuoithai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuoithai);
				
				TableSchema.TableColumn colvarNoiketthucthainghen = new TableSchema.TableColumn(schema);
				colvarNoiketthucthainghen.ColumnName = "noiketthucthainghen";
				colvarNoiketthucthainghen.DataType = DbType.String;
				colvarNoiketthucthainghen.MaxLength = 255;
				colvarNoiketthucthainghen.AutoIncrement = false;
				colvarNoiketthucthainghen.IsNullable = true;
				colvarNoiketthucthainghen.IsPrimaryKey = false;
				colvarNoiketthucthainghen.IsForeignKey = false;
				colvarNoiketthucthainghen.IsReadOnly = false;
				colvarNoiketthucthainghen.DefaultSetting = @"";
				colvarNoiketthucthainghen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoiketthucthainghen);
				
				TableSchema.TableColumn colvarDienbienthai = new TableSchema.TableColumn(schema);
				colvarDienbienthai.ColumnName = "dienbienthai";
				colvarDienbienthai.DataType = DbType.String;
				colvarDienbienthai.MaxLength = 10;
				colvarDienbienthai.AutoIncrement = false;
				colvarDienbienthai.IsNullable = true;
				colvarDienbienthai.IsPrimaryKey = false;
				colvarDienbienthai.IsForeignKey = false;
				colvarDienbienthai.IsReadOnly = false;
				colvarDienbienthai.DefaultSetting = @"";
				colvarDienbienthai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDienbienthai);
				
				TableSchema.TableColumn colvarTthaiXoa = new TableSchema.TableColumn(schema);
				colvarTthaiXoa.ColumnName = "tthai_xoa";
				colvarTthaiXoa.DataType = DbType.Boolean;
				colvarTthaiXoa.MaxLength = 0;
				colvarTthaiXoa.AutoIncrement = false;
				colvarTthaiXoa.IsNullable = true;
				colvarTthaiXoa.IsPrimaryKey = false;
				colvarTthaiXoa.IsForeignKey = false;
				colvarTthaiXoa.IsReadOnly = false;
				
						colvarTthaiXoa.DefaultSetting = @"((0))";
				colvarTthaiXoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTthaiXoa);
				
				TableSchema.TableColumn colvarTthaiAn = new TableSchema.TableColumn(schema);
				colvarTthaiAn.ColumnName = "tthai_an";
				colvarTthaiAn.DataType = DbType.Boolean;
				colvarTthaiAn.MaxLength = 0;
				colvarTthaiAn.AutoIncrement = false;
				colvarTthaiAn.IsNullable = true;
				colvarTthaiAn.IsPrimaryKey = false;
				colvarTthaiAn.IsForeignKey = false;
				colvarTthaiAn.IsReadOnly = false;
				
						colvarTthaiAn.DefaultSetting = @"((0))";
				colvarTthaiAn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTthaiAn);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = false;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 30;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("emr_tiensu_sankhoa",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("SolanCothai")]
		[Bindable(true)]
		public byte? SolanCothai 
		{
			get { return GetColumnValue<byte?>(Columns.SolanCothai); }
			set { SetColumnValue(Columns.SolanCothai, value); }
		}
		  
		[XmlAttribute("Nam")]
		[Bindable(true)]
		public int? Nam 
		{
			get { return GetColumnValue<int?>(Columns.Nam); }
			set { SetColumnValue(Columns.Nam, value); }
		}
		  
		[XmlAttribute("Deduthang")]
		[Bindable(true)]
		public bool? Deduthang 
		{
			get { return GetColumnValue<bool?>(Columns.Deduthang); }
			set { SetColumnValue(Columns.Deduthang, value); }
		}
		  
		[XmlAttribute("Dethieuthang")]
		[Bindable(true)]
		public bool? Dethieuthang 
		{
			get { return GetColumnValue<bool?>(Columns.Dethieuthang); }
			set { SetColumnValue(Columns.Dethieuthang, value); }
		}
		  
		[XmlAttribute("Say")]
		[Bindable(true)]
		public bool? Say 
		{
			get { return GetColumnValue<bool?>(Columns.Say); }
			set { SetColumnValue(Columns.Say, value); }
		}
		  
		[XmlAttribute("Hut")]
		[Bindable(true)]
		public bool? Hut 
		{
			get { return GetColumnValue<bool?>(Columns.Hut); }
			set { SetColumnValue(Columns.Hut, value); }
		}
		  
		[XmlAttribute("Nao")]
		[Bindable(true)]
		public bool? Nao 
		{
			get { return GetColumnValue<bool?>(Columns.Nao); }
			set { SetColumnValue(Columns.Nao, value); }
		}
		  
		[XmlAttribute("Covac")]
		[Bindable(true)]
		public bool? Covac 
		{
			get { return GetColumnValue<bool?>(Columns.Covac); }
			set { SetColumnValue(Columns.Covac, value); }
		}
		  
		[XmlAttribute("Chuangoaitucung")]
		[Bindable(true)]
		public bool? Chuangoaitucung 
		{
			get { return GetColumnValue<bool?>(Columns.Chuangoaitucung); }
			set { SetColumnValue(Columns.Chuangoaitucung, value); }
		}
		  
		[XmlAttribute("Thaichetluu")]
		[Bindable(true)]
		public bool? Thaichetluu 
		{
			get { return GetColumnValue<bool?>(Columns.Thaichetluu); }
			set { SetColumnValue(Columns.Thaichetluu, value); }
		}
		  
		[XmlAttribute("Conhiensong")]
		[Bindable(true)]
		public bool? Conhiensong 
		{
			get { return GetColumnValue<bool?>(Columns.Conhiensong); }
			set { SetColumnValue(Columns.Conhiensong, value); }
		}
		  
		[XmlAttribute("ThongtintreCannangBenhtat")]
		[Bindable(true)]
		public string ThongtintreCannangBenhtat 
		{
			get { return GetColumnValue<string>(Columns.ThongtintreCannangBenhtat); }
			set { SetColumnValue(Columns.ThongtintreCannangBenhtat, value); }
		}
		  
		[XmlAttribute("Phuongphapde")]
		[Bindable(true)]
		public string Phuongphapde 
		{
			get { return GetColumnValue<string>(Columns.Phuongphapde); }
			set { SetColumnValue(Columns.Phuongphapde, value); }
		}
		  
		[XmlAttribute("TaibienHausan")]
		[Bindable(true)]
		public bool? TaibienHausan 
		{
			get { return GetColumnValue<bool?>(Columns.TaibienHausan); }
			set { SetColumnValue(Columns.TaibienHausan, value); }
		}
		  
		[XmlAttribute("Tuoithai")]
		[Bindable(true)]
		public string Tuoithai 
		{
			get { return GetColumnValue<string>(Columns.Tuoithai); }
			set { SetColumnValue(Columns.Tuoithai, value); }
		}
		  
		[XmlAttribute("Noiketthucthainghen")]
		[Bindable(true)]
		public string Noiketthucthainghen 
		{
			get { return GetColumnValue<string>(Columns.Noiketthucthainghen); }
			set { SetColumnValue(Columns.Noiketthucthainghen, value); }
		}
		  
		[XmlAttribute("Dienbienthai")]
		[Bindable(true)]
		public string Dienbienthai 
		{
			get { return GetColumnValue<string>(Columns.Dienbienthai); }
			set { SetColumnValue(Columns.Dienbienthai, value); }
		}
		  
		[XmlAttribute("TthaiXoa")]
		[Bindable(true)]
		public bool? TthaiXoa 
		{
			get { return GetColumnValue<bool?>(Columns.TthaiXoa); }
			set { SetColumnValue(Columns.TthaiXoa, value); }
		}
		  
		[XmlAttribute("TthaiAn")]
		[Bindable(true)]
		public bool? TthaiAn 
		{
			get { return GetColumnValue<bool?>(Columns.TthaiAn); }
			set { SetColumnValue(Columns.TthaiAn, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime NgaySua 
		{
			get { return GetColumnValue<DateTime>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaLuotkham,long varIdBenhnhan,byte? varSolanCothai,int? varNam,bool? varDeduthang,bool? varDethieuthang,bool? varSay,bool? varHut,bool? varNao,bool? varCovac,bool? varChuangoaitucung,bool? varThaichetluu,bool? varConhiensong,string varThongtintreCannangBenhtat,string varPhuongphapde,bool? varTaibienHausan,string varTuoithai,string varNoiketthucthainghen,string varDienbienthai,bool? varTthaiXoa,bool? varTthaiAn,DateTime? varNgayTao,string varNguoiTao,DateTime varNgaySua,string varNguoiSua)
		{
			EmrTiensuSankhoa item = new EmrTiensuSankhoa();
			
			item.MaLuotkham = varMaLuotkham;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.SolanCothai = varSolanCothai;
			
			item.Nam = varNam;
			
			item.Deduthang = varDeduthang;
			
			item.Dethieuthang = varDethieuthang;
			
			item.Say = varSay;
			
			item.Hut = varHut;
			
			item.Nao = varNao;
			
			item.Covac = varCovac;
			
			item.Chuangoaitucung = varChuangoaitucung;
			
			item.Thaichetluu = varThaichetluu;
			
			item.Conhiensong = varConhiensong;
			
			item.ThongtintreCannangBenhtat = varThongtintreCannangBenhtat;
			
			item.Phuongphapde = varPhuongphapde;
			
			item.TaibienHausan = varTaibienHausan;
			
			item.Tuoithai = varTuoithai;
			
			item.Noiketthucthainghen = varNoiketthucthainghen;
			
			item.Dienbienthai = varDienbienthai;
			
			item.TthaiXoa = varTthaiXoa;
			
			item.TthaiAn = varTthaiAn;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,string varMaLuotkham,long varIdBenhnhan,byte? varSolanCothai,int? varNam,bool? varDeduthang,bool? varDethieuthang,bool? varSay,bool? varHut,bool? varNao,bool? varCovac,bool? varChuangoaitucung,bool? varThaichetluu,bool? varConhiensong,string varThongtintreCannangBenhtat,string varPhuongphapde,bool? varTaibienHausan,string varTuoithai,string varNoiketthucthainghen,string varDienbienthai,bool? varTthaiXoa,bool? varTthaiAn,DateTime? varNgayTao,string varNguoiTao,DateTime varNgaySua,string varNguoiSua)
		{
			EmrTiensuSankhoa item = new EmrTiensuSankhoa();
			
				item.Id = varId;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.SolanCothai = varSolanCothai;
			
				item.Nam = varNam;
			
				item.Deduthang = varDeduthang;
			
				item.Dethieuthang = varDethieuthang;
			
				item.Say = varSay;
			
				item.Hut = varHut;
			
				item.Nao = varNao;
			
				item.Covac = varCovac;
			
				item.Chuangoaitucung = varChuangoaitucung;
			
				item.Thaichetluu = varThaichetluu;
			
				item.Conhiensong = varConhiensong;
			
				item.ThongtintreCannangBenhtat = varThongtintreCannangBenhtat;
			
				item.Phuongphapde = varPhuongphapde;
			
				item.TaibienHausan = varTaibienHausan;
			
				item.Tuoithai = varTuoithai;
			
				item.Noiketthucthainghen = varNoiketthucthainghen;
			
				item.Dienbienthai = varDienbienthai;
			
				item.TthaiXoa = varTthaiXoa;
			
				item.TthaiAn = varTthaiAn;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn SolanCothaiColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn NamColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn DeduthangColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn DethieuthangColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn SayColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn HutColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn CovacColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn ChuangoaitucungColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn ThaichetluuColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn ConhiensongColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn ThongtintreCannangBenhtatColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn PhuongphapdeColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn TaibienHausanColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn TuoithaiColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NoiketthucthainghenColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn DienbienthaiColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn TthaiXoaColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn TthaiAnColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string SolanCothai = @"solan_cothai";
			 public static string Nam = @"nam";
			 public static string Deduthang = @"deduthang";
			 public static string Dethieuthang = @"dethieuthang";
			 public static string Say = @"say";
			 public static string Hut = @"hut";
			 public static string Nao = @"nao";
			 public static string Covac = @"covac";
			 public static string Chuangoaitucung = @"chuangoaitucung";
			 public static string Thaichetluu = @"thaichetluu";
			 public static string Conhiensong = @"conhiensong";
			 public static string ThongtintreCannangBenhtat = @"thongtintre_cannang_benhtat";
			 public static string Phuongphapde = @"phuongphapde";
			 public static string TaibienHausan = @"taibien_hausan";
			 public static string Tuoithai = @"tuoithai";
			 public static string Noiketthucthainghen = @"noiketthucthainghen";
			 public static string Dienbienthai = @"dienbienthai";
			 public static string TthaiXoa = @"tthai_xoa";
			 public static string TthaiAn = @"tthai_an";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgaySua = @"ngay_sua";
			 public static string NguoiSua = @"nguoi_sua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
