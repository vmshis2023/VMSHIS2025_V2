using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the NoitruPhieuchamsoc class.
	/// </summary>
    [Serializable]
	public partial class NoitruPhieuchamsocCollection : ActiveList<NoitruPhieuchamsoc, NoitruPhieuchamsocCollection>
	{	   
		public NoitruPhieuchamsocCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>NoitruPhieuchamsocCollection</returns>
		public NoitruPhieuchamsocCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                NoitruPhieuchamsoc o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the noitru_phieuchamsoc table.
	/// </summary>
	[Serializable]
	public partial class NoitruPhieuchamsoc : ActiveRecord<NoitruPhieuchamsoc>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public NoitruPhieuchamsoc()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public NoitruPhieuchamsoc(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public NoitruPhieuchamsoc(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public NoitruPhieuchamsoc(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("noitru_phieuchamsoc", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 10;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarIdKhoa = new TableSchema.TableColumn(schema);
				colvarIdKhoa.ColumnName = "id_khoa";
				colvarIdKhoa.DataType = DbType.Int16;
				colvarIdKhoa.MaxLength = 0;
				colvarIdKhoa.AutoIncrement = false;
				colvarIdKhoa.IsNullable = true;
				colvarIdKhoa.IsPrimaryKey = false;
				colvarIdKhoa.IsForeignKey = false;
				colvarIdKhoa.IsReadOnly = false;
				colvarIdKhoa.DefaultSetting = @"";
				colvarIdKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoa);
				
				TableSchema.TableColumn colvarIdNvien = new TableSchema.TableColumn(schema);
				colvarIdNvien.ColumnName = "id_nvien";
				colvarIdNvien.DataType = DbType.Int32;
				colvarIdNvien.MaxLength = 0;
				colvarIdNvien.AutoIncrement = false;
				colvarIdNvien.IsNullable = true;
				colvarIdNvien.IsPrimaryKey = false;
				colvarIdNvien.IsForeignKey = false;
				colvarIdNvien.IsReadOnly = false;
				colvarIdNvien.DefaultSetting = @"";
				colvarIdNvien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNvien);
				
				TableSchema.TableColumn colvarNgayThuchien = new TableSchema.TableColumn(schema);
				colvarNgayThuchien.ColumnName = "ngay_thuchien";
				colvarNgayThuchien.DataType = DbType.DateTime;
				colvarNgayThuchien.MaxLength = 0;
				colvarNgayThuchien.AutoIncrement = false;
				colvarNgayThuchien.IsNullable = true;
				colvarNgayThuchien.IsPrimaryKey = false;
				colvarNgayThuchien.IsForeignKey = false;
				colvarNgayThuchien.IsReadOnly = false;
				colvarNgayThuchien.DefaultSetting = @"";
				colvarNgayThuchien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayThuchien);
				
				TableSchema.TableColumn colvarGioThuchien = new TableSchema.TableColumn(schema);
				colvarGioThuchien.ColumnName = "gio_thuchien";
				colvarGioThuchien.DataType = DbType.AnsiString;
				colvarGioThuchien.MaxLength = 10;
				colvarGioThuchien.AutoIncrement = false;
				colvarGioThuchien.IsNullable = true;
				colvarGioThuchien.IsPrimaryKey = false;
				colvarGioThuchien.IsForeignKey = false;
				colvarGioThuchien.IsReadOnly = false;
				colvarGioThuchien.DefaultSetting = @"";
				colvarGioThuchien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGioThuchien);
				
				TableSchema.TableColumn colvarDienBien = new TableSchema.TableColumn(schema);
				colvarDienBien.ColumnName = "dien_bien";
				colvarDienBien.DataType = DbType.String;
				colvarDienBien.MaxLength = 4000;
				colvarDienBien.AutoIncrement = false;
				colvarDienBien.IsNullable = true;
				colvarDienBien.IsPrimaryKey = false;
				colvarDienBien.IsForeignKey = false;
				colvarDienBien.IsReadOnly = false;
				
						colvarDienBien.DefaultSetting = @"(N'')";
				colvarDienBien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDienBien);
				
				TableSchema.TableColumn colvarXuTri = new TableSchema.TableColumn(schema);
				colvarXuTri.ColumnName = "xu_tri";
				colvarXuTri.DataType = DbType.String;
				colvarXuTri.MaxLength = 4000;
				colvarXuTri.AutoIncrement = false;
				colvarXuTri.IsNullable = true;
				colvarXuTri.IsPrimaryKey = false;
				colvarXuTri.IsForeignKey = false;
				colvarXuTri.IsReadOnly = false;
				
						colvarXuTri.DefaultSetting = @"(N'')";
				colvarXuTri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXuTri);
				
				TableSchema.TableColumn colvarDanhGia = new TableSchema.TableColumn(schema);
				colvarDanhGia.ColumnName = "danh_gia";
				colvarDanhGia.DataType = DbType.String;
				colvarDanhGia.MaxLength = 4000;
				colvarDanhGia.AutoIncrement = false;
				colvarDanhGia.IsNullable = true;
				colvarDanhGia.IsPrimaryKey = false;
				colvarDanhGia.IsForeignKey = false;
				colvarDanhGia.IsReadOnly = false;
				
						colvarDanhGia.DefaultSetting = @"(N'')";
				colvarDanhGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDanhGia);
				
				TableSchema.TableColumn colvarTthaiIn = new TableSchema.TableColumn(schema);
				colvarTthaiIn.ColumnName = "tthai_in";
				colvarTthaiIn.DataType = DbType.Boolean;
				colvarTthaiIn.MaxLength = 0;
				colvarTthaiIn.AutoIncrement = false;
				colvarTthaiIn.IsNullable = true;
				colvarTthaiIn.IsPrimaryKey = false;
				colvarTthaiIn.IsForeignKey = false;
				colvarTthaiIn.IsReadOnly = false;
				
						colvarTthaiIn.DefaultSetting = @"((0))";
				colvarTthaiIn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTthaiIn);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = false;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 20;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("noitru_phieuchamsoc",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("IdKhoa")]
		[Bindable(true)]
		public short? IdKhoa 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoa); }
			set { SetColumnValue(Columns.IdKhoa, value); }
		}
		  
		[XmlAttribute("IdNvien")]
		[Bindable(true)]
		public int? IdNvien 
		{
			get { return GetColumnValue<int?>(Columns.IdNvien); }
			set { SetColumnValue(Columns.IdNvien, value); }
		}
		  
		[XmlAttribute("NgayThuchien")]
		[Bindable(true)]
		public DateTime? NgayThuchien 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayThuchien); }
			set { SetColumnValue(Columns.NgayThuchien, value); }
		}
		  
		[XmlAttribute("GioThuchien")]
		[Bindable(true)]
		public string GioThuchien 
		{
			get { return GetColumnValue<string>(Columns.GioThuchien); }
			set { SetColumnValue(Columns.GioThuchien, value); }
		}
		  
		[XmlAttribute("DienBien")]
		[Bindable(true)]
		public string DienBien 
		{
			get { return GetColumnValue<string>(Columns.DienBien); }
			set { SetColumnValue(Columns.DienBien, value); }
		}
		  
		[XmlAttribute("XuTri")]
		[Bindable(true)]
		public string XuTri 
		{
			get { return GetColumnValue<string>(Columns.XuTri); }
			set { SetColumnValue(Columns.XuTri, value); }
		}
		  
		[XmlAttribute("DanhGia")]
		[Bindable(true)]
		public string DanhGia 
		{
			get { return GetColumnValue<string>(Columns.DanhGia); }
			set { SetColumnValue(Columns.DanhGia, value); }
		}
		  
		[XmlAttribute("TthaiIn")]
		[Bindable(true)]
		public bool? TthaiIn 
		{
			get { return GetColumnValue<bool?>(Columns.TthaiIn); }
			set { SetColumnValue(Columns.TthaiIn, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime NgayTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaLuotkham,long varIdBenhnhan,short? varIdKhoa,int? varIdNvien,DateTime? varNgayThuchien,string varGioThuchien,string varDienBien,string varXuTri,string varDanhGia,bool? varTthaiIn,DateTime varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua)
		{
			NoitruPhieuchamsoc item = new NoitruPhieuchamsoc();
			
			item.MaLuotkham = varMaLuotkham;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.IdKhoa = varIdKhoa;
			
			item.IdNvien = varIdNvien;
			
			item.NgayThuchien = varNgayThuchien;
			
			item.GioThuchien = varGioThuchien;
			
			item.DienBien = varDienBien;
			
			item.XuTri = varXuTri;
			
			item.DanhGia = varDanhGia;
			
			item.TthaiIn = varTthaiIn;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,string varMaLuotkham,long varIdBenhnhan,short? varIdKhoa,int? varIdNvien,DateTime? varNgayThuchien,string varGioThuchien,string varDienBien,string varXuTri,string varDanhGia,bool? varTthaiIn,DateTime varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua)
		{
			NoitruPhieuchamsoc item = new NoitruPhieuchamsoc();
			
				item.Id = varId;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.IdKhoa = varIdKhoa;
			
				item.IdNvien = varIdNvien;
			
				item.NgayThuchien = varNgayThuchien;
			
				item.GioThuchien = varGioThuchien;
			
				item.DienBien = varDienBien;
			
				item.XuTri = varXuTri;
			
				item.DanhGia = varDanhGia;
			
				item.TthaiIn = varTthaiIn;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNvienColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayThuchienColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn GioThuchienColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn DienBienColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn XuTriColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn DanhGiaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn TthaiInColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string IdKhoa = @"id_khoa";
			 public static string IdNvien = @"id_nvien";
			 public static string NgayThuchien = @"ngay_thuchien";
			 public static string GioThuchien = @"gio_thuchien";
			 public static string DienBien = @"dien_bien";
			 public static string XuTri = @"xu_tri";
			 public static string DanhGia = @"danh_gia";
			 public static string TthaiIn = @"tthai_in";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgaySua = @"ngay_sua";
			 public static string NguoiSua = @"nguoi_sua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
