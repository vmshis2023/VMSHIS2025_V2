using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the KcbPhieukhamthaiTiensusankhoa class.
	/// </summary>
    [Serializable]
	public partial class KcbPhieukhamthaiTiensusankhoaCollection : ActiveList<KcbPhieukhamthaiTiensusankhoa, KcbPhieukhamthaiTiensusankhoaCollection>
	{	   
		public KcbPhieukhamthaiTiensusankhoaCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KcbPhieukhamthaiTiensusankhoaCollection</returns>
		public KcbPhieukhamthaiTiensusankhoaCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KcbPhieukhamthaiTiensusankhoa o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the kcb_phieukhamthai_tiensusankhoa table.
	/// </summary>
	[Serializable]
	public partial class KcbPhieukhamthaiTiensusankhoa : ActiveRecord<KcbPhieukhamthaiTiensusankhoa>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KcbPhieukhamthaiTiensusankhoa()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KcbPhieukhamthaiTiensusankhoa(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KcbPhieukhamthaiTiensusankhoa(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KcbPhieukhamthaiTiensusankhoa(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("kcb_phieukhamthai_tiensusankhoa", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdTiensuSankhoa = new TableSchema.TableColumn(schema);
				colvarIdTiensuSankhoa.ColumnName = "id_tiensu_sankhoa";
				colvarIdTiensuSankhoa.DataType = DbType.Int64;
				colvarIdTiensuSankhoa.MaxLength = 0;
				colvarIdTiensuSankhoa.AutoIncrement = true;
				colvarIdTiensuSankhoa.IsNullable = false;
				colvarIdTiensuSankhoa.IsPrimaryKey = true;
				colvarIdTiensuSankhoa.IsForeignKey = false;
				colvarIdTiensuSankhoa.IsReadOnly = false;
				colvarIdTiensuSankhoa.DefaultSetting = @"";
				colvarIdTiensuSankhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdTiensuSankhoa);
				
				TableSchema.TableColumn colvarIdPhieukhamthai = new TableSchema.TableColumn(schema);
				colvarIdPhieukhamthai.ColumnName = "id_phieukhamthai";
				colvarIdPhieukhamthai.DataType = DbType.Int64;
				colvarIdPhieukhamthai.MaxLength = 0;
				colvarIdPhieukhamthai.AutoIncrement = false;
				colvarIdPhieukhamthai.IsNullable = false;
				colvarIdPhieukhamthai.IsPrimaryKey = false;
				colvarIdPhieukhamthai.IsForeignKey = false;
				colvarIdPhieukhamthai.IsReadOnly = false;
				colvarIdPhieukhamthai.DefaultSetting = @"";
				colvarIdPhieukhamthai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieukhamthai);
				
				TableSchema.TableColumn colvarThoigianNoiKetthuc = new TableSchema.TableColumn(schema);
				colvarThoigianNoiKetthuc.ColumnName = "thoigian_noi_ketthuc";
				colvarThoigianNoiKetthuc.DataType = DbType.String;
				colvarThoigianNoiKetthuc.MaxLength = 255;
				colvarThoigianNoiKetthuc.AutoIncrement = false;
				colvarThoigianNoiKetthuc.IsNullable = true;
				colvarThoigianNoiKetthuc.IsPrimaryKey = false;
				colvarThoigianNoiKetthuc.IsForeignKey = false;
				colvarThoigianNoiKetthuc.IsReadOnly = false;
				colvarThoigianNoiKetthuc.DefaultSetting = @"";
				colvarThoigianNoiKetthuc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThoigianNoiKetthuc);
				
				TableSchema.TableColumn colvarTuoiThai = new TableSchema.TableColumn(schema);
				colvarTuoiThai.ColumnName = "tuoi_thai";
				colvarTuoiThai.DataType = DbType.String;
				colvarTuoiThai.MaxLength = 100;
				colvarTuoiThai.AutoIncrement = false;
				colvarTuoiThai.IsNullable = true;
				colvarTuoiThai.IsPrimaryKey = false;
				colvarTuoiThai.IsForeignKey = false;
				colvarTuoiThai.IsReadOnly = false;
				colvarTuoiThai.DefaultSetting = @"";
				colvarTuoiThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuoiThai);
				
				TableSchema.TableColumn colvarDienBien = new TableSchema.TableColumn(schema);
				colvarDienBien.ColumnName = "dien_bien";
				colvarDienBien.DataType = DbType.String;
				colvarDienBien.MaxLength = 255;
				colvarDienBien.AutoIncrement = false;
				colvarDienBien.IsNullable = true;
				colvarDienBien.IsPrimaryKey = false;
				colvarDienBien.IsForeignKey = false;
				colvarDienBien.IsReadOnly = false;
				colvarDienBien.DefaultSetting = @"";
				colvarDienBien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDienBien);
				
				TableSchema.TableColumn colvarCachSinh = new TableSchema.TableColumn(schema);
				colvarCachSinh.ColumnName = "cach_sinh";
				colvarCachSinh.DataType = DbType.String;
				colvarCachSinh.MaxLength = 255;
				colvarCachSinh.AutoIncrement = false;
				colvarCachSinh.IsNullable = true;
				colvarCachSinh.IsPrimaryKey = false;
				colvarCachSinh.IsForeignKey = false;
				colvarCachSinh.IsReadOnly = false;
				colvarCachSinh.DefaultSetting = @"";
				colvarCachSinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCachSinh);
				
				TableSchema.TableColumn colvarMotaTresosinh = new TableSchema.TableColumn(schema);
				colvarMotaTresosinh.ColumnName = "mota_tresosinh";
				colvarMotaTresosinh.DataType = DbType.String;
				colvarMotaTresosinh.MaxLength = 255;
				colvarMotaTresosinh.AutoIncrement = false;
				colvarMotaTresosinh.IsNullable = true;
				colvarMotaTresosinh.IsPrimaryKey = false;
				colvarMotaTresosinh.IsForeignKey = false;
				colvarMotaTresosinh.IsReadOnly = false;
				colvarMotaTresosinh.DefaultSetting = @"";
				colvarMotaTresosinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaTresosinh);
				
				TableSchema.TableColumn colvarHauSan = new TableSchema.TableColumn(schema);
				colvarHauSan.ColumnName = "hau_san";
				colvarHauSan.DataType = DbType.String;
				colvarHauSan.MaxLength = 255;
				colvarHauSan.AutoIncrement = false;
				colvarHauSan.IsNullable = true;
				colvarHauSan.IsPrimaryKey = false;
				colvarHauSan.IsForeignKey = false;
				colvarHauSan.IsReadOnly = false;
				colvarHauSan.DefaultSetting = @"";
				colvarHauSan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHauSan);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("kcb_phieukhamthai_tiensusankhoa",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdTiensuSankhoa")]
		[Bindable(true)]
		public long IdTiensuSankhoa 
		{
			get { return GetColumnValue<long>(Columns.IdTiensuSankhoa); }
			set { SetColumnValue(Columns.IdTiensuSankhoa, value); }
		}
		  
		[XmlAttribute("IdPhieukhamthai")]
		[Bindable(true)]
		public long IdPhieukhamthai 
		{
			get { return GetColumnValue<long>(Columns.IdPhieukhamthai); }
			set { SetColumnValue(Columns.IdPhieukhamthai, value); }
		}
		  
		[XmlAttribute("ThoigianNoiKetthuc")]
		[Bindable(true)]
		public string ThoigianNoiKetthuc 
		{
			get { return GetColumnValue<string>(Columns.ThoigianNoiKetthuc); }
			set { SetColumnValue(Columns.ThoigianNoiKetthuc, value); }
		}
		  
		[XmlAttribute("TuoiThai")]
		[Bindable(true)]
		public string TuoiThai 
		{
			get { return GetColumnValue<string>(Columns.TuoiThai); }
			set { SetColumnValue(Columns.TuoiThai, value); }
		}
		  
		[XmlAttribute("DienBien")]
		[Bindable(true)]
		public string DienBien 
		{
			get { return GetColumnValue<string>(Columns.DienBien); }
			set { SetColumnValue(Columns.DienBien, value); }
		}
		  
		[XmlAttribute("CachSinh")]
		[Bindable(true)]
		public string CachSinh 
		{
			get { return GetColumnValue<string>(Columns.CachSinh); }
			set { SetColumnValue(Columns.CachSinh, value); }
		}
		  
		[XmlAttribute("MotaTresosinh")]
		[Bindable(true)]
		public string MotaTresosinh 
		{
			get { return GetColumnValue<string>(Columns.MotaTresosinh); }
			set { SetColumnValue(Columns.MotaTresosinh, value); }
		}
		  
		[XmlAttribute("HauSan")]
		[Bindable(true)]
		public string HauSan 
		{
			get { return GetColumnValue<string>(Columns.HauSan); }
			set { SetColumnValue(Columns.HauSan, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long varIdPhieukhamthai,string varThoigianNoiKetthuc,string varTuoiThai,string varDienBien,string varCachSinh,string varMotaTresosinh,string varHauSan)
		{
			KcbPhieukhamthaiTiensusankhoa item = new KcbPhieukhamthaiTiensusankhoa();
			
			item.IdPhieukhamthai = varIdPhieukhamthai;
			
			item.ThoigianNoiKetthuc = varThoigianNoiKetthuc;
			
			item.TuoiThai = varTuoiThai;
			
			item.DienBien = varDienBien;
			
			item.CachSinh = varCachSinh;
			
			item.MotaTresosinh = varMotaTresosinh;
			
			item.HauSan = varHauSan;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varIdTiensuSankhoa,long varIdPhieukhamthai,string varThoigianNoiKetthuc,string varTuoiThai,string varDienBien,string varCachSinh,string varMotaTresosinh,string varHauSan)
		{
			KcbPhieukhamthaiTiensusankhoa item = new KcbPhieukhamthaiTiensusankhoa();
			
				item.IdTiensuSankhoa = varIdTiensuSankhoa;
			
				item.IdPhieukhamthai = varIdPhieukhamthai;
			
				item.ThoigianNoiKetthuc = varThoigianNoiKetthuc;
			
				item.TuoiThai = varTuoiThai;
			
				item.DienBien = varDienBien;
			
				item.CachSinh = varCachSinh;
			
				item.MotaTresosinh = varMotaTresosinh;
			
				item.HauSan = varHauSan;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdTiensuSankhoaColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieukhamthaiColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn ThoigianNoiKetthucColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TuoiThaiColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn DienBienColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn CachSinhColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaTresosinhColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn HauSanColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdTiensuSankhoa = @"id_tiensu_sankhoa";
			 public static string IdPhieukhamthai = @"id_phieukhamthai";
			 public static string ThoigianNoiKetthuc = @"thoigian_noi_ketthuc";
			 public static string TuoiThai = @"tuoi_thai";
			 public static string DienBien = @"dien_bien";
			 public static string CachSinh = @"cach_sinh";
			 public static string MotaTresosinh = @"mota_tresosinh";
			 public static string HauSan = @"hau_san";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
