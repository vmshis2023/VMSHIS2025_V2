using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
    /// <summary>
    /// Controller class for data_ketqua
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class DataKetquaController
    {
        // Preload our schema..
        DataKetqua thisSchemaLoad = new DataKetqua();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public DataKetquaCollection FetchAll()
        {
            DataKetquaCollection coll = new DataKetquaCollection();
            Query qry = new Query(DataKetqua.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public DataKetquaCollection FetchByID(object InvInvoiceAuthId)
        {
            DataKetquaCollection coll = new DataKetquaCollection().Where("inv_InvoiceAuth_id", InvInvoiceAuthId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public DataKetquaCollection FetchByQuery(Query qry)
        {
            DataKetquaCollection coll = new DataKetquaCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object InvInvoiceAuthId)
        {
            return (DataKetqua.Delete(InvInvoiceAuthId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object InvInvoiceAuthId)
        {
            return (DataKetqua.Destroy(InvInvoiceAuthId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string InvInvoiceAuthId,string PaymentId,string InvInvoiceType,string InvInvoiceCodeId,string InvInvoiceSeries,string InvInvoiceNumber,string InvInvoiceName,string InvInvoiceIssuedDate,string InvSubmittedDate,string InvContractNumber,string InvContractDate,string InvCurrencyCode,string InvExchangeRate,string InvInvoiceNote,string InvAdjustmentType,string InvOriginalInvoiceId,string InvAdditionalReferenceDes,string InvAdditionalReferenceDate,string InvBuyerDisplayName,string MaDt,string InvBuyerLegalName,string InvBuyerTaxCode,string InvBuyerAddressLine,string InvBuyerEmail,string InvBuyerBankAccount,string InvBuyerBankName,string InvPaymentMethodName,string InvSellerBankAccount,string InvSellerBankName,string InvDiscountAmount,string TrangThai,string UserNew,string DateNew,string UserEdit,string MaDvcs,string DatabaseCode,string MaCt,string SignedDate,string SubmittedDate,string MauHd,string SoBenhAn,string Sovb,string Ngayvb,string GhiChu,string SoHdDc,string InvOriginalId,string Signature,string DieuTri,string Ma1,string InvItemCode,string InvItemName,string InvUnitCode,string InvUnitName,string InvUnitPrice,string InvQuantity,string InvTotalAmountWithoutVat,string InvVatPercentage,string InvVatAmount,string InvTotalAmount,string NguoiKy,string Sobaomat,string TrangThaiHd,string InChuyenDoi,string NgayKy,string NguoiInCdoi,string NgayInCdoi,string InvDeliveryOrderNumber,string InvDeliveryOrderDate,string InvDeliveryBy,string InvTransportationMethod,string InvFromWarehouseName,string InvToWarehouseName,string InvSobangke,string InvNgaybangke,string KeyApi,string Id,string RefID,string TransactionID)
	    {
		    DataKetqua item = new DataKetqua();
		    
            item.InvInvoiceAuthId = InvInvoiceAuthId;
            
            item.PaymentId = PaymentId;
            
            item.InvInvoiceType = InvInvoiceType;
            
            item.InvInvoiceCodeId = InvInvoiceCodeId;
            
            item.InvInvoiceSeries = InvInvoiceSeries;
            
            item.InvInvoiceNumber = InvInvoiceNumber;
            
            item.InvInvoiceName = InvInvoiceName;
            
            item.InvInvoiceIssuedDate = InvInvoiceIssuedDate;
            
            item.InvSubmittedDate = InvSubmittedDate;
            
            item.InvContractNumber = InvContractNumber;
            
            item.InvContractDate = InvContractDate;
            
            item.InvCurrencyCode = InvCurrencyCode;
            
            item.InvExchangeRate = InvExchangeRate;
            
            item.InvInvoiceNote = InvInvoiceNote;
            
            item.InvAdjustmentType = InvAdjustmentType;
            
            item.InvOriginalInvoiceId = InvOriginalInvoiceId;
            
            item.InvAdditionalReferenceDes = InvAdditionalReferenceDes;
            
            item.InvAdditionalReferenceDate = InvAdditionalReferenceDate;
            
            item.InvBuyerDisplayName = InvBuyerDisplayName;
            
            item.MaDt = MaDt;
            
            item.InvBuyerLegalName = InvBuyerLegalName;
            
            item.InvBuyerTaxCode = InvBuyerTaxCode;
            
            item.InvBuyerAddressLine = InvBuyerAddressLine;
            
            item.InvBuyerEmail = InvBuyerEmail;
            
            item.InvBuyerBankAccount = InvBuyerBankAccount;
            
            item.InvBuyerBankName = InvBuyerBankName;
            
            item.InvPaymentMethodName = InvPaymentMethodName;
            
            item.InvSellerBankAccount = InvSellerBankAccount;
            
            item.InvSellerBankName = InvSellerBankName;
            
            item.InvDiscountAmount = InvDiscountAmount;
            
            item.TrangThai = TrangThai;
            
            item.UserNew = UserNew;
            
            item.DateNew = DateNew;
            
            item.UserEdit = UserEdit;
            
            item.MaDvcs = MaDvcs;
            
            item.DatabaseCode = DatabaseCode;
            
            item.MaCt = MaCt;
            
            item.SignedDate = SignedDate;
            
            item.SubmittedDate = SubmittedDate;
            
            item.MauHd = MauHd;
            
            item.SoBenhAn = SoBenhAn;
            
            item.Sovb = Sovb;
            
            item.Ngayvb = Ngayvb;
            
            item.GhiChu = GhiChu;
            
            item.SoHdDc = SoHdDc;
            
            item.InvOriginalId = InvOriginalId;
            
            item.Signature = Signature;
            
            item.DieuTri = DieuTri;
            
            item.Ma1 = Ma1;
            
            item.InvItemCode = InvItemCode;
            
            item.InvItemName = InvItemName;
            
            item.InvUnitCode = InvUnitCode;
            
            item.InvUnitName = InvUnitName;
            
            item.InvUnitPrice = InvUnitPrice;
            
            item.InvQuantity = InvQuantity;
            
            item.InvTotalAmountWithoutVat = InvTotalAmountWithoutVat;
            
            item.InvVatPercentage = InvVatPercentage;
            
            item.InvVatAmount = InvVatAmount;
            
            item.InvTotalAmount = InvTotalAmount;
            
            item.NguoiKy = NguoiKy;
            
            item.Sobaomat = Sobaomat;
            
            item.TrangThaiHd = TrangThaiHd;
            
            item.InChuyenDoi = InChuyenDoi;
            
            item.NgayKy = NgayKy;
            
            item.NguoiInCdoi = NguoiInCdoi;
            
            item.NgayInCdoi = NgayInCdoi;
            
            item.InvDeliveryOrderNumber = InvDeliveryOrderNumber;
            
            item.InvDeliveryOrderDate = InvDeliveryOrderDate;
            
            item.InvDeliveryBy = InvDeliveryBy;
            
            item.InvTransportationMethod = InvTransportationMethod;
            
            item.InvFromWarehouseName = InvFromWarehouseName;
            
            item.InvToWarehouseName = InvToWarehouseName;
            
            item.InvSobangke = InvSobangke;
            
            item.InvNgaybangke = InvNgaybangke;
            
            item.KeyApi = KeyApi;
            
            item.Id = Id;
            
            item.RefID = RefID;
            
            item.TransactionID = TransactionID;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(string InvInvoiceAuthId,string PaymentId,string InvInvoiceType,string InvInvoiceCodeId,string InvInvoiceSeries,string InvInvoiceNumber,string InvInvoiceName,string InvInvoiceIssuedDate,string InvSubmittedDate,string InvContractNumber,string InvContractDate,string InvCurrencyCode,string InvExchangeRate,string InvInvoiceNote,string InvAdjustmentType,string InvOriginalInvoiceId,string InvAdditionalReferenceDes,string InvAdditionalReferenceDate,string InvBuyerDisplayName,string MaDt,string InvBuyerLegalName,string InvBuyerTaxCode,string InvBuyerAddressLine,string InvBuyerEmail,string InvBuyerBankAccount,string InvBuyerBankName,string InvPaymentMethodName,string InvSellerBankAccount,string InvSellerBankName,string InvDiscountAmount,string TrangThai,string UserNew,string DateNew,string UserEdit,string MaDvcs,string DatabaseCode,string MaCt,string SignedDate,string SubmittedDate,string MauHd,string SoBenhAn,string Sovb,string Ngayvb,string GhiChu,string SoHdDc,string InvOriginalId,string Signature,string DieuTri,string Ma1,string InvItemCode,string InvItemName,string InvUnitCode,string InvUnitName,string InvUnitPrice,string InvQuantity,string InvTotalAmountWithoutVat,string InvVatPercentage,string InvVatAmount,string InvTotalAmount,string NguoiKy,string Sobaomat,string TrangThaiHd,string InChuyenDoi,string NgayKy,string NguoiInCdoi,string NgayInCdoi,string InvDeliveryOrderNumber,string InvDeliveryOrderDate,string InvDeliveryBy,string InvTransportationMethod,string InvFromWarehouseName,string InvToWarehouseName,string InvSobangke,string InvNgaybangke,string KeyApi,string Id,string RefID,string TransactionID)
	    {
		    DataKetqua item = new DataKetqua();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.InvInvoiceAuthId = InvInvoiceAuthId;
				
			item.PaymentId = PaymentId;
				
			item.InvInvoiceType = InvInvoiceType;
				
			item.InvInvoiceCodeId = InvInvoiceCodeId;
				
			item.InvInvoiceSeries = InvInvoiceSeries;
				
			item.InvInvoiceNumber = InvInvoiceNumber;
				
			item.InvInvoiceName = InvInvoiceName;
				
			item.InvInvoiceIssuedDate = InvInvoiceIssuedDate;
				
			item.InvSubmittedDate = InvSubmittedDate;
				
			item.InvContractNumber = InvContractNumber;
				
			item.InvContractDate = InvContractDate;
				
			item.InvCurrencyCode = InvCurrencyCode;
				
			item.InvExchangeRate = InvExchangeRate;
				
			item.InvInvoiceNote = InvInvoiceNote;
				
			item.InvAdjustmentType = InvAdjustmentType;
				
			item.InvOriginalInvoiceId = InvOriginalInvoiceId;
				
			item.InvAdditionalReferenceDes = InvAdditionalReferenceDes;
				
			item.InvAdditionalReferenceDate = InvAdditionalReferenceDate;
				
			item.InvBuyerDisplayName = InvBuyerDisplayName;
				
			item.MaDt = MaDt;
				
			item.InvBuyerLegalName = InvBuyerLegalName;
				
			item.InvBuyerTaxCode = InvBuyerTaxCode;
				
			item.InvBuyerAddressLine = InvBuyerAddressLine;
				
			item.InvBuyerEmail = InvBuyerEmail;
				
			item.InvBuyerBankAccount = InvBuyerBankAccount;
				
			item.InvBuyerBankName = InvBuyerBankName;
				
			item.InvPaymentMethodName = InvPaymentMethodName;
				
			item.InvSellerBankAccount = InvSellerBankAccount;
				
			item.InvSellerBankName = InvSellerBankName;
				
			item.InvDiscountAmount = InvDiscountAmount;
				
			item.TrangThai = TrangThai;
				
			item.UserNew = UserNew;
				
			item.DateNew = DateNew;
				
			item.UserEdit = UserEdit;
				
			item.MaDvcs = MaDvcs;
				
			item.DatabaseCode = DatabaseCode;
				
			item.MaCt = MaCt;
				
			item.SignedDate = SignedDate;
				
			item.SubmittedDate = SubmittedDate;
				
			item.MauHd = MauHd;
				
			item.SoBenhAn = SoBenhAn;
				
			item.Sovb = Sovb;
				
			item.Ngayvb = Ngayvb;
				
			item.GhiChu = GhiChu;
				
			item.SoHdDc = SoHdDc;
				
			item.InvOriginalId = InvOriginalId;
				
			item.Signature = Signature;
				
			item.DieuTri = DieuTri;
				
			item.Ma1 = Ma1;
				
			item.InvItemCode = InvItemCode;
				
			item.InvItemName = InvItemName;
				
			item.InvUnitCode = InvUnitCode;
				
			item.InvUnitName = InvUnitName;
				
			item.InvUnitPrice = InvUnitPrice;
				
			item.InvQuantity = InvQuantity;
				
			item.InvTotalAmountWithoutVat = InvTotalAmountWithoutVat;
				
			item.InvVatPercentage = InvVatPercentage;
				
			item.InvVatAmount = InvVatAmount;
				
			item.InvTotalAmount = InvTotalAmount;
				
			item.NguoiKy = NguoiKy;
				
			item.Sobaomat = Sobaomat;
				
			item.TrangThaiHd = TrangThaiHd;
				
			item.InChuyenDoi = InChuyenDoi;
				
			item.NgayKy = NgayKy;
				
			item.NguoiInCdoi = NguoiInCdoi;
				
			item.NgayInCdoi = NgayInCdoi;
				
			item.InvDeliveryOrderNumber = InvDeliveryOrderNumber;
				
			item.InvDeliveryOrderDate = InvDeliveryOrderDate;
				
			item.InvDeliveryBy = InvDeliveryBy;
				
			item.InvTransportationMethod = InvTransportationMethod;
				
			item.InvFromWarehouseName = InvFromWarehouseName;
				
			item.InvToWarehouseName = InvToWarehouseName;
				
			item.InvSobangke = InvSobangke;
				
			item.InvNgaybangke = InvNgaybangke;
				
			item.KeyApi = KeyApi;
				
			item.Id = Id;
				
			item.RefID = RefID;
				
			item.TransactionID = TransactionID;
				
	        item.Save(UserName);
	    }
    }
}
