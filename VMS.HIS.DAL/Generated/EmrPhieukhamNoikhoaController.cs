using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
    /// <summary>
    /// Controller class for emr_phieukham_noikhoa
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class EmrPhieukhamNoikhoaController
    {
        // Preload our schema..
        EmrPhieukhamNoikhoa thisSchemaLoad = new EmrPhieukhamNoikhoa();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public EmrPhieukhamNoikhoaCollection FetchAll()
        {
            EmrPhieukhamNoikhoaCollection coll = new EmrPhieukhamNoikhoaCollection();
            Query qry = new Query(EmrPhieukhamNoikhoa.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public EmrPhieukhamNoikhoaCollection FetchByID(object Id)
        {
            EmrPhieukhamNoikhoaCollection coll = new EmrPhieukhamNoikhoaCollection().Where("id", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public EmrPhieukhamNoikhoaCollection FetchByQuery(Query qry)
        {
            EmrPhieukhamNoikhoaCollection coll = new EmrPhieukhamNoikhoaCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (EmrPhieukhamNoikhoa.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (EmrPhieukhamNoikhoa.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string MaLuotkham,long IdBenhnhan,DateTime NgayKham,string Mach,string NhietDo,string HuyetAp,string NhịpTho,string ChieuCao,string CanNang,string NhomMau,string Bmi,string MotaThem,short? IdBacsi,string NguoiTao,DateTime? NgayTao,string NguoiSua,DateTime? NgaySua)
	    {
		    EmrPhieukhamNoikhoa item = new EmrPhieukhamNoikhoa();
		    
            item.MaLuotkham = MaLuotkham;
            
            item.IdBenhnhan = IdBenhnhan;
            
            item.NgayKham = NgayKham;
            
            item.Mach = Mach;
            
            item.NhietDo = NhietDo;
            
            item.HuyetAp = HuyetAp;
            
            item.NhịpTho = NhịpTho;
            
            item.ChieuCao = ChieuCao;
            
            item.CanNang = CanNang;
            
            item.NhomMau = NhomMau;
            
            item.Bmi = Bmi;
            
            item.MotaThem = MotaThem;
            
            item.IdBacsi = IdBacsi;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NgaySua = NgaySua;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long Id,string MaLuotkham,long IdBenhnhan,DateTime NgayKham,string Mach,string NhietDo,string HuyetAp,string NhịpTho,string ChieuCao,string CanNang,string NhomMau,string Bmi,string MotaThem,short? IdBacsi,string NguoiTao,DateTime? NgayTao,string NguoiSua,DateTime? NgaySua)
	    {
		    EmrPhieukhamNoikhoa item = new EmrPhieukhamNoikhoa();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.MaLuotkham = MaLuotkham;
				
			item.IdBenhnhan = IdBenhnhan;
				
			item.NgayKham = NgayKham;
				
			item.Mach = Mach;
				
			item.NhietDo = NhietDo;
				
			item.HuyetAp = HuyetAp;
				
			item.NhịpTho = NhịpTho;
				
			item.ChieuCao = ChieuCao;
				
			item.CanNang = CanNang;
				
			item.NhomMau = NhomMau;
				
			item.Bmi = Bmi;
				
			item.MotaThem = MotaThem;
				
			item.IdBacsi = IdBacsi;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NgaySua = NgaySua;
				
	        item.Save(UserName);
	    }
    }
}
