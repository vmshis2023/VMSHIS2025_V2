using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
    /// <summary>
    /// Controller class for emr_hosoluutru
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class EmrHosoluutruController
    {
        // Preload our schema..
        EmrHosoluutru thisSchemaLoad = new EmrHosoluutru();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public EmrHosoluutruCollection FetchAll()
        {
            EmrHosoluutruCollection coll = new EmrHosoluutruCollection();
            Query qry = new Query(EmrHosoluutru.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public EmrHosoluutruCollection FetchByID(object IdHoso)
        {
            EmrHosoluutruCollection coll = new EmrHosoluutruCollection().Where("id_hoso", IdHoso).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public EmrHosoluutruCollection FetchByQuery(Query qry)
        {
            EmrHosoluutruCollection coll = new EmrHosoluutruCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdHoso)
        {
            return (EmrHosoluutru.Delete(IdHoso) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdHoso)
        {
            return (EmrHosoluutru.Destroy(IdHoso) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string MaBa,long IdBenhnhan,string MaLuotkham,string MaCoso,string LoaiBa,int Nam,string SoLuutru,byte TrangThai,string NguoiTao,DateTime NgayTao,long? IdBa,string NguoiDong,DateTime? NgayDong)
	    {
		    EmrHosoluutru item = new EmrHosoluutru();
		    
            item.MaBa = MaBa;
            
            item.IdBenhnhan = IdBenhnhan;
            
            item.MaLuotkham = MaLuotkham;
            
            item.MaCoso = MaCoso;
            
            item.LoaiBa = LoaiBa;
            
            item.Nam = Nam;
            
            item.SoLuutru = SoLuutru;
            
            item.TrangThai = TrangThai;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.IdBa = IdBa;
            
            item.NguoiDong = NguoiDong;
            
            item.NgayDong = NgayDong;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long IdHoso,string MaBa,long IdBenhnhan,string MaLuotkham,string MaCoso,string LoaiBa,int Nam,string SoLuutru,byte TrangThai,string NguoiTao,DateTime NgayTao,long? IdBa,string NguoiDong,DateTime? NgayDong)
	    {
		    EmrHosoluutru item = new EmrHosoluutru();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdHoso = IdHoso;
				
			item.MaBa = MaBa;
				
			item.IdBenhnhan = IdBenhnhan;
				
			item.MaLuotkham = MaLuotkham;
				
			item.MaCoso = MaCoso;
				
			item.LoaiBa = LoaiBa;
				
			item.Nam = Nam;
				
			item.SoLuutru = SoLuutru;
				
			item.TrangThai = TrangThai;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.IdBa = IdBa;
				
			item.NguoiDong = NguoiDong;
				
			item.NgayDong = NgayDong;
				
	        item.Save(UserName);
	    }
    }
}
