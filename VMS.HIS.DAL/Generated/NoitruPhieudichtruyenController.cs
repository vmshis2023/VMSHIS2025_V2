using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
    /// <summary>
    /// Controller class for noitru_phieudichtruyen
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class NoitruPhieudichtruyenController
    {
        // Preload our schema..
        NoitruPhieudichtruyen thisSchemaLoad = new NoitruPhieudichtruyen();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public NoitruPhieudichtruyenCollection FetchAll()
        {
            NoitruPhieudichtruyenCollection coll = new NoitruPhieudichtruyenCollection();
            Query qry = new Query(NoitruPhieudichtruyen.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public NoitruPhieudichtruyenCollection FetchByID(object IdPhieu)
        {
            NoitruPhieudichtruyenCollection coll = new NoitruPhieudichtruyenCollection().Where("id_phieu", IdPhieu).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public NoitruPhieudichtruyenCollection FetchByQuery(Query qry)
        {
            NoitruPhieudichtruyenCollection coll = new NoitruPhieudichtruyenCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdPhieu)
        {
            return (NoitruPhieudichtruyen.Delete(IdPhieu) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdPhieu)
        {
            return (NoitruPhieudichtruyen.Destroy(IdPhieu) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long IdBenhnhan,string MaLuotkham,long? IdBuonggiuong,int IdKhoadieutri,int IdBacsichidinh,int IdYtathuchien,int SoLuong,int IdThuoc,int TocDo,DateTime ThoigianBatdau,DateTime ThoigianKetthuc,string NguoiThuchien,DateTime NgayThuchien,DateTime NgayTao,string NguoiTao,DateTime? NgaySua,string NguoiSua,long IdChitietdonthuoc,byte TrangthaiIn,string IdThuocKethop,long IdDonthuoc)
	    {
		    NoitruPhieudichtruyen item = new NoitruPhieudichtruyen();
		    
            item.IdBenhnhan = IdBenhnhan;
            
            item.MaLuotkham = MaLuotkham;
            
            item.IdBuonggiuong = IdBuonggiuong;
            
            item.IdKhoadieutri = IdKhoadieutri;
            
            item.IdBacsichidinh = IdBacsichidinh;
            
            item.IdYtathuchien = IdYtathuchien;
            
            item.SoLuong = SoLuong;
            
            item.IdThuoc = IdThuoc;
            
            item.TocDo = TocDo;
            
            item.ThoigianBatdau = ThoigianBatdau;
            
            item.ThoigianKetthuc = ThoigianKetthuc;
            
            item.NguoiThuchien = NguoiThuchien;
            
            item.NgayThuchien = NgayThuchien;
            
            item.NgayTao = NgayTao;
            
            item.NguoiTao = NguoiTao;
            
            item.NgaySua = NgaySua;
            
            item.NguoiSua = NguoiSua;
            
            item.IdChitietdonthuoc = IdChitietdonthuoc;
            
            item.TrangthaiIn = TrangthaiIn;
            
            item.IdThuocKethop = IdThuocKethop;
            
            item.IdDonthuoc = IdDonthuoc;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long IdPhieu,long IdBenhnhan,string MaLuotkham,long? IdBuonggiuong,int IdKhoadieutri,int IdBacsichidinh,int IdYtathuchien,int SoLuong,int IdThuoc,int TocDo,DateTime ThoigianBatdau,DateTime ThoigianKetthuc,string NguoiThuchien,DateTime NgayThuchien,DateTime NgayTao,string NguoiTao,DateTime? NgaySua,string NguoiSua,long IdChitietdonthuoc,byte TrangthaiIn,string IdThuocKethop,long IdDonthuoc)
	    {
		    NoitruPhieudichtruyen item = new NoitruPhieudichtruyen();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdPhieu = IdPhieu;
				
			item.IdBenhnhan = IdBenhnhan;
				
			item.MaLuotkham = MaLuotkham;
				
			item.IdBuonggiuong = IdBuonggiuong;
				
			item.IdKhoadieutri = IdKhoadieutri;
				
			item.IdBacsichidinh = IdBacsichidinh;
				
			item.IdYtathuchien = IdYtathuchien;
				
			item.SoLuong = SoLuong;
				
			item.IdThuoc = IdThuoc;
				
			item.TocDo = TocDo;
				
			item.ThoigianBatdau = ThoigianBatdau;
				
			item.ThoigianKetthuc = ThoigianKetthuc;
				
			item.NguoiThuchien = NguoiThuchien;
				
			item.NgayThuchien = NgayThuchien;
				
			item.NgayTao = NgayTao;
				
			item.NguoiTao = NguoiTao;
				
			item.NgaySua = NgaySua;
				
			item.NguoiSua = NguoiSua;
				
			item.IdChitietdonthuoc = IdChitietdonthuoc;
				
			item.TrangthaiIn = TrangthaiIn;
				
			item.IdThuocKethop = IdThuocKethop;
				
			item.IdDonthuoc = IdDonthuoc;
				
	        item.Save(UserName);
	    }
    }
}
