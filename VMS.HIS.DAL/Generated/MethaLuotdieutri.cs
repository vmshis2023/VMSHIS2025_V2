using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the MethaLuotdieutri class.
	/// </summary>
    [Serializable]
	public partial class MethaLuotdieutriCollection : ActiveList<MethaLuotdieutri, MethaLuotdieutriCollection>
	{	   
		public MethaLuotdieutriCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>MethaLuotdieutriCollection</returns>
		public MethaLuotdieutriCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                MethaLuotdieutri o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the metha_luotdieutri table.
	/// </summary>
	[Serializable]
	public partial class MethaLuotdieutri : ActiveRecord<MethaLuotdieutri>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public MethaLuotdieutri()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public MethaLuotdieutri(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public MethaLuotdieutri(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public MethaLuotdieutri(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("metha_luotdieutri", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarMaDieutri = new TableSchema.TableColumn(schema);
				colvarMaDieutri.ColumnName = "ma_dieutri";
				colvarMaDieutri.DataType = DbType.String;
				colvarMaDieutri.MaxLength = 20;
				colvarMaDieutri.AutoIncrement = false;
				colvarMaDieutri.IsNullable = false;
				colvarMaDieutri.IsPrimaryKey = true;
				colvarMaDieutri.IsForeignKey = false;
				colvarMaDieutri.IsReadOnly = false;
				colvarMaDieutri.DefaultSetting = @"";
				colvarMaDieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDieutri);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = true;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarNgayDieutri = new TableSchema.TableColumn(schema);
				colvarNgayDieutri.ColumnName = "ngay_dieutri";
				colvarNgayDieutri.DataType = DbType.DateTime;
				colvarNgayDieutri.MaxLength = 0;
				colvarNgayDieutri.AutoIncrement = false;
				colvarNgayDieutri.IsNullable = false;
				colvarNgayDieutri.IsPrimaryKey = false;
				colvarNgayDieutri.IsForeignKey = false;
				colvarNgayDieutri.IsReadOnly = false;
				colvarNgayDieutri.DefaultSetting = @"";
				colvarNgayDieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayDieutri);
				
				TableSchema.TableColumn colvarTuoi = new TableSchema.TableColumn(schema);
				colvarTuoi.ColumnName = "tuoi";
				colvarTuoi.DataType = DbType.Int32;
				colvarTuoi.MaxLength = 0;
				colvarTuoi.AutoIncrement = false;
				colvarTuoi.IsNullable = true;
				colvarTuoi.IsPrimaryKey = false;
				colvarTuoi.IsForeignKey = false;
				colvarTuoi.IsReadOnly = false;
				colvarTuoi.DefaultSetting = @"";
				colvarTuoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuoi);
				
				TableSchema.TableColumn colvarLoaiTuoi = new TableSchema.TableColumn(schema);
				colvarLoaiTuoi.ColumnName = "loai_tuoi";
				colvarLoaiTuoi.DataType = DbType.Byte;
				colvarLoaiTuoi.MaxLength = 0;
				colvarLoaiTuoi.AutoIncrement = false;
				colvarLoaiTuoi.IsNullable = true;
				colvarLoaiTuoi.IsPrimaryKey = false;
				colvarLoaiTuoi.IsForeignKey = false;
				colvarLoaiTuoi.IsReadOnly = false;
				colvarLoaiTuoi.DefaultSetting = @"";
				colvarLoaiTuoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiTuoi);
				
				TableSchema.TableColumn colvarIdDoituong = new TableSchema.TableColumn(schema);
				colvarIdDoituong.ColumnName = "id_doituong";
				colvarIdDoituong.DataType = DbType.Byte;
				colvarIdDoituong.MaxLength = 0;
				colvarIdDoituong.AutoIncrement = false;
				colvarIdDoituong.IsNullable = true;
				colvarIdDoituong.IsPrimaryKey = false;
				colvarIdDoituong.IsForeignKey = false;
				colvarIdDoituong.IsReadOnly = false;
				colvarIdDoituong.DefaultSetting = @"";
				colvarIdDoituong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDoituong);
				
				TableSchema.TableColumn colvarMaDoituong = new TableSchema.TableColumn(schema);
				colvarMaDoituong.ColumnName = "ma_doituong";
				colvarMaDoituong.DataType = DbType.String;
				colvarMaDoituong.MaxLength = 50;
				colvarMaDoituong.AutoIncrement = false;
				colvarMaDoituong.IsNullable = false;
				colvarMaDoituong.IsPrimaryKey = false;
				colvarMaDoituong.IsForeignKey = false;
				colvarMaDoituong.IsReadOnly = false;
				colvarMaDoituong.DefaultSetting = @"";
				colvarMaDoituong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDoituong);
				
				TableSchema.TableColumn colvarIdLoaidoituong = new TableSchema.TableColumn(schema);
				colvarIdLoaidoituong.ColumnName = "id_loaidoituong";
				colvarIdLoaidoituong.DataType = DbType.Byte;
				colvarIdLoaidoituong.MaxLength = 0;
				colvarIdLoaidoituong.AutoIncrement = false;
				colvarIdLoaidoituong.IsNullable = true;
				colvarIdLoaidoituong.IsPrimaryKey = false;
				colvarIdLoaidoituong.IsForeignKey = false;
				colvarIdLoaidoituong.IsReadOnly = false;
				colvarIdLoaidoituong.DefaultSetting = @"";
				colvarIdLoaidoituong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdLoaidoituong);
				
				TableSchema.TableColumn colvarMatheBhyt = new TableSchema.TableColumn(schema);
				colvarMatheBhyt.ColumnName = "mathe_bhyt";
				colvarMatheBhyt.DataType = DbType.String;
				colvarMatheBhyt.MaxLength = 20;
				colvarMatheBhyt.AutoIncrement = false;
				colvarMatheBhyt.IsNullable = true;
				colvarMatheBhyt.IsPrimaryKey = false;
				colvarMatheBhyt.IsForeignKey = false;
				colvarMatheBhyt.IsReadOnly = false;
				colvarMatheBhyt.DefaultSetting = @"";
				colvarMatheBhyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMatheBhyt);
				
				TableSchema.TableColumn colvarPtramGoc = new TableSchema.TableColumn(schema);
				colvarPtramGoc.ColumnName = "ptram_goc";
				colvarPtramGoc.DataType = DbType.Decimal;
				colvarPtramGoc.MaxLength = 0;
				colvarPtramGoc.AutoIncrement = false;
				colvarPtramGoc.IsNullable = true;
				colvarPtramGoc.IsPrimaryKey = false;
				colvarPtramGoc.IsForeignKey = false;
				colvarPtramGoc.IsReadOnly = false;
				colvarPtramGoc.DefaultSetting = @"";
				colvarPtramGoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPtramGoc);
				
				TableSchema.TableColumn colvarPtramHuong = new TableSchema.TableColumn(schema);
				colvarPtramHuong.ColumnName = "ptram_huong";
				colvarPtramHuong.DataType = DbType.Decimal;
				colvarPtramHuong.MaxLength = 0;
				colvarPtramHuong.AutoIncrement = false;
				colvarPtramHuong.IsNullable = true;
				colvarPtramHuong.IsPrimaryKey = false;
				colvarPtramHuong.IsForeignKey = false;
				colvarPtramHuong.IsReadOnly = false;
				colvarPtramHuong.DefaultSetting = @"";
				colvarPtramHuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPtramHuong);
				
				TableSchema.TableColumn colvarIdThe = new TableSchema.TableColumn(schema);
				colvarIdThe.ColumnName = "id_the";
				colvarIdThe.DataType = DbType.Int64;
				colvarIdThe.MaxLength = 0;
				colvarIdThe.AutoIncrement = false;
				colvarIdThe.IsNullable = true;
				colvarIdThe.IsPrimaryKey = false;
				colvarIdThe.IsForeignKey = false;
				colvarIdThe.IsReadOnly = false;
				colvarIdThe.DefaultSetting = @"";
				colvarIdThe.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdThe);
				
				TableSchema.TableColumn colvarDungTuyen = new TableSchema.TableColumn(schema);
				colvarDungTuyen.ColumnName = "dung_tuyen";
				colvarDungTuyen.DataType = DbType.Byte;
				colvarDungTuyen.MaxLength = 0;
				colvarDungTuyen.AutoIncrement = false;
				colvarDungTuyen.IsNullable = true;
				colvarDungTuyen.IsPrimaryKey = false;
				colvarDungTuyen.IsForeignKey = false;
				colvarDungTuyen.IsReadOnly = false;
				colvarDungTuyen.DefaultSetting = @"";
				colvarDungTuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDungTuyen);
				
				TableSchema.TableColumn colvarNgayThanhtoan = new TableSchema.TableColumn(schema);
				colvarNgayThanhtoan.ColumnName = "ngay_thanhtoan";
				colvarNgayThanhtoan.DataType = DbType.DateTime;
				colvarNgayThanhtoan.MaxLength = 0;
				colvarNgayThanhtoan.AutoIncrement = false;
				colvarNgayThanhtoan.IsNullable = true;
				colvarNgayThanhtoan.IsPrimaryKey = false;
				colvarNgayThanhtoan.IsForeignKey = false;
				colvarNgayThanhtoan.IsReadOnly = false;
				colvarNgayThanhtoan.DefaultSetting = @"";
				colvarNgayThanhtoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayThanhtoan);
				
				TableSchema.TableColumn colvarLuongCoban = new TableSchema.TableColumn(schema);
				colvarLuongCoban.ColumnName = "luong_coban";
				colvarLuongCoban.DataType = DbType.Decimal;
				colvarLuongCoban.MaxLength = 0;
				colvarLuongCoban.AutoIncrement = false;
				colvarLuongCoban.IsNullable = true;
				colvarLuongCoban.IsPrimaryKey = false;
				colvarLuongCoban.IsForeignKey = false;
				colvarLuongCoban.IsReadOnly = false;
				colvarLuongCoban.DefaultSetting = @"";
				colvarLuongCoban.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLuongCoban);
				
				TableSchema.TableColumn colvarTrieuChung = new TableSchema.TableColumn(schema);
				colvarTrieuChung.ColumnName = "trieu_chung";
				colvarTrieuChung.DataType = DbType.String;
				colvarTrieuChung.MaxLength = 255;
				colvarTrieuChung.AutoIncrement = false;
				colvarTrieuChung.IsNullable = true;
				colvarTrieuChung.IsPrimaryKey = false;
				colvarTrieuChung.IsForeignKey = false;
				colvarTrieuChung.IsReadOnly = false;
				colvarTrieuChung.DefaultSetting = @"";
				colvarTrieuChung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrieuChung);
				
				TableSchema.TableColumn colvarChanDoan = new TableSchema.TableColumn(schema);
				colvarChanDoan.ColumnName = "chan_doan";
				colvarChanDoan.DataType = DbType.String;
				colvarChanDoan.MaxLength = 255;
				colvarChanDoan.AutoIncrement = false;
				colvarChanDoan.IsNullable = true;
				colvarChanDoan.IsPrimaryKey = false;
				colvarChanDoan.IsForeignKey = false;
				colvarChanDoan.IsReadOnly = false;
				colvarChanDoan.DefaultSetting = @"";
				colvarChanDoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChanDoan);
				
				TableSchema.TableColumn colvarHuongDtri = new TableSchema.TableColumn(schema);
				colvarHuongDtri.ColumnName = "huong_dtri";
				colvarHuongDtri.DataType = DbType.String;
				colvarHuongDtri.MaxLength = 20;
				colvarHuongDtri.AutoIncrement = false;
				colvarHuongDtri.IsNullable = true;
				colvarHuongDtri.IsPrimaryKey = false;
				colvarHuongDtri.IsForeignKey = false;
				colvarHuongDtri.IsReadOnly = false;
				colvarHuongDtri.DefaultSetting = @"";
				colvarHuongDtri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHuongDtri);
				
				TableSchema.TableColumn colvarSongayDtri = new TableSchema.TableColumn(schema);
				colvarSongayDtri.ColumnName = "songay_dtri";
				colvarSongayDtri.DataType = DbType.Int32;
				colvarSongayDtri.MaxLength = 0;
				colvarSongayDtri.AutoIncrement = false;
				colvarSongayDtri.IsNullable = true;
				colvarSongayDtri.IsPrimaryKey = false;
				colvarSongayDtri.IsForeignKey = false;
				colvarSongayDtri.IsReadOnly = false;
				
						colvarSongayDtri.DefaultSetting = @"((0))";
				colvarSongayDtri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSongayDtri);
				
				TableSchema.TableColumn colvarDaKedon = new TableSchema.TableColumn(schema);
				colvarDaKedon.ColumnName = "da_kedon";
				colvarDaKedon.DataType = DbType.Byte;
				colvarDaKedon.MaxLength = 0;
				colvarDaKedon.AutoIncrement = false;
				colvarDaKedon.IsNullable = true;
				colvarDaKedon.IsPrimaryKey = false;
				colvarDaKedon.IsForeignKey = false;
				colvarDaKedon.IsReadOnly = false;
				
						colvarDaKedon.DefaultSetting = @"((0))";
				colvarDaKedon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaKedon);
				
				TableSchema.TableColumn colvarSongayKedon = new TableSchema.TableColumn(schema);
				colvarSongayKedon.ColumnName = "songay_kedon";
				colvarSongayKedon.DataType = DbType.Int32;
				colvarSongayKedon.MaxLength = 0;
				colvarSongayKedon.AutoIncrement = false;
				colvarSongayKedon.IsNullable = true;
				colvarSongayKedon.IsPrimaryKey = false;
				colvarSongayKedon.IsForeignKey = false;
				colvarSongayKedon.IsReadOnly = false;
				
						colvarSongayKedon.DefaultSetting = @"((0))";
				colvarSongayKedon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSongayKedon);
				
				TableSchema.TableColumn colvarNgayBatdaudon = new TableSchema.TableColumn(schema);
				colvarNgayBatdaudon.ColumnName = "ngay_batdaudon";
				colvarNgayBatdaudon.DataType = DbType.DateTime;
				colvarNgayBatdaudon.MaxLength = 0;
				colvarNgayBatdaudon.AutoIncrement = false;
				colvarNgayBatdaudon.IsNullable = true;
				colvarNgayBatdaudon.IsPrimaryKey = false;
				colvarNgayBatdaudon.IsForeignKey = false;
				colvarNgayBatdaudon.IsReadOnly = false;
				colvarNgayBatdaudon.DefaultSetting = @"";
				colvarNgayBatdaudon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayBatdaudon);
				
				TableSchema.TableColumn colvarSoBenhan = new TableSchema.TableColumn(schema);
				colvarSoBenhan.ColumnName = "so_benhan";
				colvarSoBenhan.DataType = DbType.String;
				colvarSoBenhan.MaxLength = 20;
				colvarSoBenhan.AutoIncrement = false;
				colvarSoBenhan.IsNullable = true;
				colvarSoBenhan.IsPrimaryKey = false;
				colvarSoBenhan.IsForeignKey = false;
				colvarSoBenhan.IsReadOnly = false;
				colvarSoBenhan.DefaultSetting = @"";
				colvarSoBenhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoBenhan);
				
				TableSchema.TableColumn colvarSolanDtri = new TableSchema.TableColumn(schema);
				colvarSolanDtri.ColumnName = "solan_dtri";
				colvarSolanDtri.DataType = DbType.Byte;
				colvarSolanDtri.MaxLength = 0;
				colvarSolanDtri.AutoIncrement = false;
				colvarSolanDtri.IsNullable = true;
				colvarSolanDtri.IsPrimaryKey = false;
				colvarSolanDtri.IsForeignKey = false;
				colvarSolanDtri.IsReadOnly = false;
				colvarSolanDtri.DefaultSetting = @"";
				colvarSolanDtri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSolanDtri);
				
				TableSchema.TableColumn colvarIdBacsyDtri = new TableSchema.TableColumn(schema);
				colvarIdBacsyDtri.ColumnName = "id_bacsy_dtri";
				colvarIdBacsyDtri.DataType = DbType.Int32;
				colvarIdBacsyDtri.MaxLength = 0;
				colvarIdBacsyDtri.AutoIncrement = false;
				colvarIdBacsyDtri.IsNullable = true;
				colvarIdBacsyDtri.IsPrimaryKey = false;
				colvarIdBacsyDtri.IsForeignKey = false;
				colvarIdBacsyDtri.IsReadOnly = false;
				colvarIdBacsyDtri.DefaultSetting = @"";
				colvarIdBacsyDtri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBacsyDtri);
				
				TableSchema.TableColumn colvarNguoiTiepdon = new TableSchema.TableColumn(schema);
				colvarNguoiTiepdon.ColumnName = "nguoi_tiepdon";
				colvarNguoiTiepdon.DataType = DbType.String;
				colvarNguoiTiepdon.MaxLength = 20;
				colvarNguoiTiepdon.AutoIncrement = false;
				colvarNguoiTiepdon.IsNullable = true;
				colvarNguoiTiepdon.IsPrimaryKey = false;
				colvarNguoiTiepdon.IsForeignKey = false;
				colvarNguoiTiepdon.IsReadOnly = false;
				colvarNguoiTiepdon.DefaultSetting = @"";
				colvarNguoiTiepdon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTiepdon);
				
				TableSchema.TableColumn colvarCosoDtri = new TableSchema.TableColumn(schema);
				colvarCosoDtri.ColumnName = "coso_dtri";
				colvarCosoDtri.DataType = DbType.Int32;
				colvarCosoDtri.MaxLength = 0;
				colvarCosoDtri.AutoIncrement = false;
				colvarCosoDtri.IsNullable = true;
				colvarCosoDtri.IsPrimaryKey = false;
				colvarCosoDtri.IsForeignKey = false;
				colvarCosoDtri.IsReadOnly = false;
				colvarCosoDtri.DefaultSetting = @"";
				colvarCosoDtri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCosoDtri);
				
				TableSchema.TableColumn colvarCosoChuyen = new TableSchema.TableColumn(schema);
				colvarCosoChuyen.ColumnName = "coso_chuyen";
				colvarCosoChuyen.DataType = DbType.Int32;
				colvarCosoChuyen.MaxLength = 0;
				colvarCosoChuyen.AutoIncrement = false;
				colvarCosoChuyen.IsNullable = true;
				colvarCosoChuyen.IsPrimaryKey = false;
				colvarCosoChuyen.IsForeignKey = false;
				colvarCosoChuyen.IsReadOnly = false;
				colvarCosoChuyen.DefaultSetting = @"";
				colvarCosoChuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCosoChuyen);
				
				TableSchema.TableColumn colvarTrangthaiDieutri = new TableSchema.TableColumn(schema);
				colvarTrangthaiDieutri.ColumnName = "trangthai_dieutri";
				colvarTrangthaiDieutri.DataType = DbType.Byte;
				colvarTrangthaiDieutri.MaxLength = 0;
				colvarTrangthaiDieutri.AutoIncrement = false;
				colvarTrangthaiDieutri.IsNullable = true;
				colvarTrangthaiDieutri.IsPrimaryKey = false;
				colvarTrangthaiDieutri.IsForeignKey = false;
				colvarTrangthaiDieutri.IsReadOnly = false;
				colvarTrangthaiDieutri.DefaultSetting = @"";
				colvarTrangthaiDieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangthaiDieutri);
				
				TableSchema.TableColumn colvarNgayKetthuc = new TableSchema.TableColumn(schema);
				colvarNgayKetthuc.ColumnName = "ngay_ketthuc";
				colvarNgayKetthuc.DataType = DbType.DateTime;
				colvarNgayKetthuc.MaxLength = 0;
				colvarNgayKetthuc.AutoIncrement = false;
				colvarNgayKetthuc.IsNullable = true;
				colvarNgayKetthuc.IsPrimaryKey = false;
				colvarNgayKetthuc.IsForeignKey = false;
				colvarNgayKetthuc.IsReadOnly = false;
				colvarNgayKetthuc.DefaultSetting = @"";
				colvarNgayKetthuc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayKetthuc);
				
				TableSchema.TableColumn colvarNgayBatdau = new TableSchema.TableColumn(schema);
				colvarNgayBatdau.ColumnName = "ngay_batdau";
				colvarNgayBatdau.DataType = DbType.DateTime;
				colvarNgayBatdau.MaxLength = 0;
				colvarNgayBatdau.AutoIncrement = false;
				colvarNgayBatdau.IsNullable = true;
				colvarNgayBatdau.IsPrimaryKey = false;
				colvarNgayBatdau.IsForeignKey = false;
				colvarNgayBatdau.IsReadOnly = false;
				colvarNgayBatdau.DefaultSetting = @"";
				colvarNgayBatdau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayBatdau);
				
				TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
				colvarMotaThem.ColumnName = "mota_them";
				colvarMotaThem.DataType = DbType.String;
				colvarMotaThem.MaxLength = 255;
				colvarMotaThem.AutoIncrement = false;
				colvarMotaThem.IsNullable = true;
				colvarMotaThem.IsPrimaryKey = false;
				colvarMotaThem.IsForeignKey = false;
				colvarMotaThem.IsReadOnly = false;
				colvarMotaThem.DefaultSetting = @"";
				colvarMotaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaThem);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 20;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarIpMaytao = new TableSchema.TableColumn(schema);
				colvarIpMaytao.ColumnName = "ip_maytao";
				colvarIpMaytao.DataType = DbType.String;
				colvarIpMaytao.MaxLength = 20;
				colvarIpMaytao.AutoIncrement = false;
				colvarIpMaytao.IsNullable = true;
				colvarIpMaytao.IsPrimaryKey = false;
				colvarIpMaytao.IsForeignKey = false;
				colvarIpMaytao.IsReadOnly = false;
				colvarIpMaytao.DefaultSetting = @"";
				colvarIpMaytao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaytao);
				
				TableSchema.TableColumn colvarIpMaysua = new TableSchema.TableColumn(schema);
				colvarIpMaysua.ColumnName = "ip_maysua";
				colvarIpMaysua.DataType = DbType.String;
				colvarIpMaysua.MaxLength = 20;
				colvarIpMaysua.AutoIncrement = false;
				colvarIpMaysua.IsNullable = true;
				colvarIpMaysua.IsPrimaryKey = false;
				colvarIpMaysua.IsForeignKey = false;
				colvarIpMaysua.IsReadOnly = false;
				colvarIpMaysua.DefaultSetting = @"";
				colvarIpMaysua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaysua);
				
				TableSchema.TableColumn colvarIpMacTao = new TableSchema.TableColumn(schema);
				colvarIpMacTao.ColumnName = "ip_mac_tao";
				colvarIpMacTao.DataType = DbType.String;
				colvarIpMacTao.MaxLength = 20;
				colvarIpMacTao.AutoIncrement = false;
				colvarIpMacTao.IsNullable = true;
				colvarIpMacTao.IsPrimaryKey = false;
				colvarIpMacTao.IsForeignKey = false;
				colvarIpMacTao.IsReadOnly = false;
				colvarIpMacTao.DefaultSetting = @"";
				colvarIpMacTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMacTao);
				
				TableSchema.TableColumn colvarIpMacSua = new TableSchema.TableColumn(schema);
				colvarIpMacSua.ColumnName = "ip_mac_sua";
				colvarIpMacSua.DataType = DbType.String;
				colvarIpMacSua.MaxLength = 20;
				colvarIpMacSua.AutoIncrement = false;
				colvarIpMacSua.IsNullable = true;
				colvarIpMacSua.IsPrimaryKey = false;
				colvarIpMacSua.IsForeignKey = false;
				colvarIpMacSua.IsReadOnly = false;
				colvarIpMacSua.DefaultSetting = @"";
				colvarIpMacSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMacSua);
				
				TableSchema.TableColumn colvarLastAction = new TableSchema.TableColumn(schema);
				colvarLastAction.ColumnName = "last_Action";
				colvarLastAction.DataType = DbType.String;
				colvarLastAction.MaxLength = 20;
				colvarLastAction.AutoIncrement = false;
				colvarLastAction.IsNullable = true;
				colvarLastAction.IsPrimaryKey = false;
				colvarLastAction.IsForeignKey = false;
				colvarLastAction.IsReadOnly = false;
				colvarLastAction.DefaultSetting = @"";
				colvarLastAction.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLastAction);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("metha_luotdieutri",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("MaDieutri")]
		[Bindable(true)]
		public string MaDieutri 
		{
			get { return GetColumnValue<string>(Columns.MaDieutri); }
			set { SetColumnValue(Columns.MaDieutri, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("NgayDieutri")]
		[Bindable(true)]
		public DateTime NgayDieutri 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayDieutri); }
			set { SetColumnValue(Columns.NgayDieutri, value); }
		}
		  
		[XmlAttribute("Tuoi")]
		[Bindable(true)]
		public int? Tuoi 
		{
			get { return GetColumnValue<int?>(Columns.Tuoi); }
			set { SetColumnValue(Columns.Tuoi, value); }
		}
		  
		[XmlAttribute("LoaiTuoi")]
		[Bindable(true)]
		public byte? LoaiTuoi 
		{
			get { return GetColumnValue<byte?>(Columns.LoaiTuoi); }
			set { SetColumnValue(Columns.LoaiTuoi, value); }
		}
		  
		[XmlAttribute("IdDoituong")]
		[Bindable(true)]
		public byte? IdDoituong 
		{
			get { return GetColumnValue<byte?>(Columns.IdDoituong); }
			set { SetColumnValue(Columns.IdDoituong, value); }
		}
		  
		[XmlAttribute("MaDoituong")]
		[Bindable(true)]
		public string MaDoituong 
		{
			get { return GetColumnValue<string>(Columns.MaDoituong); }
			set { SetColumnValue(Columns.MaDoituong, value); }
		}
		  
		[XmlAttribute("IdLoaidoituong")]
		[Bindable(true)]
		public byte? IdLoaidoituong 
		{
			get { return GetColumnValue<byte?>(Columns.IdLoaidoituong); }
			set { SetColumnValue(Columns.IdLoaidoituong, value); }
		}
		  
		[XmlAttribute("MatheBhyt")]
		[Bindable(true)]
		public string MatheBhyt 
		{
			get { return GetColumnValue<string>(Columns.MatheBhyt); }
			set { SetColumnValue(Columns.MatheBhyt, value); }
		}
		  
		[XmlAttribute("PtramGoc")]
		[Bindable(true)]
		public decimal? PtramGoc 
		{
			get { return GetColumnValue<decimal?>(Columns.PtramGoc); }
			set { SetColumnValue(Columns.PtramGoc, value); }
		}
		  
		[XmlAttribute("PtramHuong")]
		[Bindable(true)]
		public decimal? PtramHuong 
		{
			get { return GetColumnValue<decimal?>(Columns.PtramHuong); }
			set { SetColumnValue(Columns.PtramHuong, value); }
		}
		  
		[XmlAttribute("IdThe")]
		[Bindable(true)]
		public long? IdThe 
		{
			get { return GetColumnValue<long?>(Columns.IdThe); }
			set { SetColumnValue(Columns.IdThe, value); }
		}
		  
		[XmlAttribute("DungTuyen")]
		[Bindable(true)]
		public byte? DungTuyen 
		{
			get { return GetColumnValue<byte?>(Columns.DungTuyen); }
			set { SetColumnValue(Columns.DungTuyen, value); }
		}
		  
		[XmlAttribute("NgayThanhtoan")]
		[Bindable(true)]
		public DateTime? NgayThanhtoan 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayThanhtoan); }
			set { SetColumnValue(Columns.NgayThanhtoan, value); }
		}
		  
		[XmlAttribute("LuongCoban")]
		[Bindable(true)]
		public decimal? LuongCoban 
		{
			get { return GetColumnValue<decimal?>(Columns.LuongCoban); }
			set { SetColumnValue(Columns.LuongCoban, value); }
		}
		  
		[XmlAttribute("TrieuChung")]
		[Bindable(true)]
		public string TrieuChung 
		{
			get { return GetColumnValue<string>(Columns.TrieuChung); }
			set { SetColumnValue(Columns.TrieuChung, value); }
		}
		  
		[XmlAttribute("ChanDoan")]
		[Bindable(true)]
		public string ChanDoan 
		{
			get { return GetColumnValue<string>(Columns.ChanDoan); }
			set { SetColumnValue(Columns.ChanDoan, value); }
		}
		  
		[XmlAttribute("HuongDtri")]
		[Bindable(true)]
		public string HuongDtri 
		{
			get { return GetColumnValue<string>(Columns.HuongDtri); }
			set { SetColumnValue(Columns.HuongDtri, value); }
		}
		  
		[XmlAttribute("SongayDtri")]
		[Bindable(true)]
		public int? SongayDtri 
		{
			get { return GetColumnValue<int?>(Columns.SongayDtri); }
			set { SetColumnValue(Columns.SongayDtri, value); }
		}
		  
		[XmlAttribute("DaKedon")]
		[Bindable(true)]
		public byte? DaKedon 
		{
			get { return GetColumnValue<byte?>(Columns.DaKedon); }
			set { SetColumnValue(Columns.DaKedon, value); }
		}
		  
		[XmlAttribute("SongayKedon")]
		[Bindable(true)]
		public int? SongayKedon 
		{
			get { return GetColumnValue<int?>(Columns.SongayKedon); }
			set { SetColumnValue(Columns.SongayKedon, value); }
		}
		  
		[XmlAttribute("NgayBatdaudon")]
		[Bindable(true)]
		public DateTime? NgayBatdaudon 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayBatdaudon); }
			set { SetColumnValue(Columns.NgayBatdaudon, value); }
		}
		  
		[XmlAttribute("SoBenhan")]
		[Bindable(true)]
		public string SoBenhan 
		{
			get { return GetColumnValue<string>(Columns.SoBenhan); }
			set { SetColumnValue(Columns.SoBenhan, value); }
		}
		  
		[XmlAttribute("SolanDtri")]
		[Bindable(true)]
		public byte? SolanDtri 
		{
			get { return GetColumnValue<byte?>(Columns.SolanDtri); }
			set { SetColumnValue(Columns.SolanDtri, value); }
		}
		  
		[XmlAttribute("IdBacsyDtri")]
		[Bindable(true)]
		public int? IdBacsyDtri 
		{
			get { return GetColumnValue<int?>(Columns.IdBacsyDtri); }
			set { SetColumnValue(Columns.IdBacsyDtri, value); }
		}
		  
		[XmlAttribute("NguoiTiepdon")]
		[Bindable(true)]
		public string NguoiTiepdon 
		{
			get { return GetColumnValue<string>(Columns.NguoiTiepdon); }
			set { SetColumnValue(Columns.NguoiTiepdon, value); }
		}
		  
		[XmlAttribute("CosoDtri")]
		[Bindable(true)]
		public int? CosoDtri 
		{
			get { return GetColumnValue<int?>(Columns.CosoDtri); }
			set { SetColumnValue(Columns.CosoDtri, value); }
		}
		  
		[XmlAttribute("CosoChuyen")]
		[Bindable(true)]
		public int? CosoChuyen 
		{
			get { return GetColumnValue<int?>(Columns.CosoChuyen); }
			set { SetColumnValue(Columns.CosoChuyen, value); }
		}
		  
		[XmlAttribute("TrangthaiDieutri")]
		[Bindable(true)]
		public byte? TrangthaiDieutri 
		{
			get { return GetColumnValue<byte?>(Columns.TrangthaiDieutri); }
			set { SetColumnValue(Columns.TrangthaiDieutri, value); }
		}
		  
		[XmlAttribute("NgayKetthuc")]
		[Bindable(true)]
		public DateTime? NgayKetthuc 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayKetthuc); }
			set { SetColumnValue(Columns.NgayKetthuc, value); }
		}
		  
		[XmlAttribute("NgayBatdau")]
		[Bindable(true)]
		public DateTime? NgayBatdau 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayBatdau); }
			set { SetColumnValue(Columns.NgayBatdau, value); }
		}
		  
		[XmlAttribute("MotaThem")]
		[Bindable(true)]
		public string MotaThem 
		{
			get { return GetColumnValue<string>(Columns.MotaThem); }
			set { SetColumnValue(Columns.MotaThem, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("IpMaytao")]
		[Bindable(true)]
		public string IpMaytao 
		{
			get { return GetColumnValue<string>(Columns.IpMaytao); }
			set { SetColumnValue(Columns.IpMaytao, value); }
		}
		  
		[XmlAttribute("IpMaysua")]
		[Bindable(true)]
		public string IpMaysua 
		{
			get { return GetColumnValue<string>(Columns.IpMaysua); }
			set { SetColumnValue(Columns.IpMaysua, value); }
		}
		  
		[XmlAttribute("IpMacTao")]
		[Bindable(true)]
		public string IpMacTao 
		{
			get { return GetColumnValue<string>(Columns.IpMacTao); }
			set { SetColumnValue(Columns.IpMacTao, value); }
		}
		  
		[XmlAttribute("IpMacSua")]
		[Bindable(true)]
		public string IpMacSua 
		{
			get { return GetColumnValue<string>(Columns.IpMacSua); }
			set { SetColumnValue(Columns.IpMacSua, value); }
		}
		  
		[XmlAttribute("LastAction")]
		[Bindable(true)]
		public string LastAction 
		{
			get { return GetColumnValue<string>(Columns.LastAction); }
			set { SetColumnValue(Columns.LastAction, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaDieutri,long varIdBenhnhan,DateTime varNgayDieutri,int? varTuoi,byte? varLoaiTuoi,byte? varIdDoituong,string varMaDoituong,byte? varIdLoaidoituong,string varMatheBhyt,decimal? varPtramGoc,decimal? varPtramHuong,long? varIdThe,byte? varDungTuyen,DateTime? varNgayThanhtoan,decimal? varLuongCoban,string varTrieuChung,string varChanDoan,string varHuongDtri,int? varSongayDtri,byte? varDaKedon,int? varSongayKedon,DateTime? varNgayBatdaudon,string varSoBenhan,byte? varSolanDtri,int? varIdBacsyDtri,string varNguoiTiepdon,int? varCosoDtri,int? varCosoChuyen,byte? varTrangthaiDieutri,DateTime? varNgayKetthuc,DateTime? varNgayBatdau,string varMotaThem,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,string varIpMaytao,string varIpMaysua,string varIpMacTao,string varIpMacSua,string varLastAction)
		{
			MethaLuotdieutri item = new MethaLuotdieutri();
			
			item.MaDieutri = varMaDieutri;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.NgayDieutri = varNgayDieutri;
			
			item.Tuoi = varTuoi;
			
			item.LoaiTuoi = varLoaiTuoi;
			
			item.IdDoituong = varIdDoituong;
			
			item.MaDoituong = varMaDoituong;
			
			item.IdLoaidoituong = varIdLoaidoituong;
			
			item.MatheBhyt = varMatheBhyt;
			
			item.PtramGoc = varPtramGoc;
			
			item.PtramHuong = varPtramHuong;
			
			item.IdThe = varIdThe;
			
			item.DungTuyen = varDungTuyen;
			
			item.NgayThanhtoan = varNgayThanhtoan;
			
			item.LuongCoban = varLuongCoban;
			
			item.TrieuChung = varTrieuChung;
			
			item.ChanDoan = varChanDoan;
			
			item.HuongDtri = varHuongDtri;
			
			item.SongayDtri = varSongayDtri;
			
			item.DaKedon = varDaKedon;
			
			item.SongayKedon = varSongayKedon;
			
			item.NgayBatdaudon = varNgayBatdaudon;
			
			item.SoBenhan = varSoBenhan;
			
			item.SolanDtri = varSolanDtri;
			
			item.IdBacsyDtri = varIdBacsyDtri;
			
			item.NguoiTiepdon = varNguoiTiepdon;
			
			item.CosoDtri = varCosoDtri;
			
			item.CosoChuyen = varCosoChuyen;
			
			item.TrangthaiDieutri = varTrangthaiDieutri;
			
			item.NgayKetthuc = varNgayKetthuc;
			
			item.NgayBatdau = varNgayBatdau;
			
			item.MotaThem = varMotaThem;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.IpMaytao = varIpMaytao;
			
			item.IpMaysua = varIpMaysua;
			
			item.IpMacTao = varIpMacTao;
			
			item.IpMacSua = varIpMacSua;
			
			item.LastAction = varLastAction;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(string varMaDieutri,long varIdBenhnhan,DateTime varNgayDieutri,int? varTuoi,byte? varLoaiTuoi,byte? varIdDoituong,string varMaDoituong,byte? varIdLoaidoituong,string varMatheBhyt,decimal? varPtramGoc,decimal? varPtramHuong,long? varIdThe,byte? varDungTuyen,DateTime? varNgayThanhtoan,decimal? varLuongCoban,string varTrieuChung,string varChanDoan,string varHuongDtri,int? varSongayDtri,byte? varDaKedon,int? varSongayKedon,DateTime? varNgayBatdaudon,string varSoBenhan,byte? varSolanDtri,int? varIdBacsyDtri,string varNguoiTiepdon,int? varCosoDtri,int? varCosoChuyen,byte? varTrangthaiDieutri,DateTime? varNgayKetthuc,DateTime? varNgayBatdau,string varMotaThem,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,string varIpMaytao,string varIpMaysua,string varIpMacTao,string varIpMacSua,string varLastAction)
		{
			MethaLuotdieutri item = new MethaLuotdieutri();
			
				item.MaDieutri = varMaDieutri;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.NgayDieutri = varNgayDieutri;
			
				item.Tuoi = varTuoi;
			
				item.LoaiTuoi = varLoaiTuoi;
			
				item.IdDoituong = varIdDoituong;
			
				item.MaDoituong = varMaDoituong;
			
				item.IdLoaidoituong = varIdLoaidoituong;
			
				item.MatheBhyt = varMatheBhyt;
			
				item.PtramGoc = varPtramGoc;
			
				item.PtramHuong = varPtramHuong;
			
				item.IdThe = varIdThe;
			
				item.DungTuyen = varDungTuyen;
			
				item.NgayThanhtoan = varNgayThanhtoan;
			
				item.LuongCoban = varLuongCoban;
			
				item.TrieuChung = varTrieuChung;
			
				item.ChanDoan = varChanDoan;
			
				item.HuongDtri = varHuongDtri;
			
				item.SongayDtri = varSongayDtri;
			
				item.DaKedon = varDaKedon;
			
				item.SongayKedon = varSongayKedon;
			
				item.NgayBatdaudon = varNgayBatdaudon;
			
				item.SoBenhan = varSoBenhan;
			
				item.SolanDtri = varSolanDtri;
			
				item.IdBacsyDtri = varIdBacsyDtri;
			
				item.NguoiTiepdon = varNguoiTiepdon;
			
				item.CosoDtri = varCosoDtri;
			
				item.CosoChuyen = varCosoChuyen;
			
				item.TrangthaiDieutri = varTrangthaiDieutri;
			
				item.NgayKetthuc = varNgayKetthuc;
			
				item.NgayBatdau = varNgayBatdau;
			
				item.MotaThem = varMotaThem;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.IpMaytao = varIpMaytao;
			
				item.IpMaysua = varIpMaysua;
			
				item.IpMacTao = varIpMacTao;
			
				item.IpMacSua = varIpMacSua;
			
				item.LastAction = varLastAction;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn MaDieutriColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayDieutriColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TuoiColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiTuoiColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDoituongColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDoituongColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn IdLoaidoituongColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn MatheBhytColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn PtramGocColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn PtramHuongColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn IdTheColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn DungTuyenColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayThanhtoanColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn LuongCobanColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn TrieuChungColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn ChanDoanColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn HuongDtriColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn SongayDtriColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn DaKedonColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn SongayKedonColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayBatdaudonColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn SoBenhanColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn SolanDtriColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBacsyDtriColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTiepdonColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn CosoDtriColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn CosoChuyenColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangthaiDieutriColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayKetthucColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayBatdauColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaThemColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaytaoColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaysuaColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMacTaoColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMacSuaColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        public static TableSchema.TableColumn LastActionColumn
        {
            get { return Schema.Columns[40]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string MaDieutri = @"ma_dieutri";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string NgayDieutri = @"ngay_dieutri";
			 public static string Tuoi = @"tuoi";
			 public static string LoaiTuoi = @"loai_tuoi";
			 public static string IdDoituong = @"id_doituong";
			 public static string MaDoituong = @"ma_doituong";
			 public static string IdLoaidoituong = @"id_loaidoituong";
			 public static string MatheBhyt = @"mathe_bhyt";
			 public static string PtramGoc = @"ptram_goc";
			 public static string PtramHuong = @"ptram_huong";
			 public static string IdThe = @"id_the";
			 public static string DungTuyen = @"dung_tuyen";
			 public static string NgayThanhtoan = @"ngay_thanhtoan";
			 public static string LuongCoban = @"luong_coban";
			 public static string TrieuChung = @"trieu_chung";
			 public static string ChanDoan = @"chan_doan";
			 public static string HuongDtri = @"huong_dtri";
			 public static string SongayDtri = @"songay_dtri";
			 public static string DaKedon = @"da_kedon";
			 public static string SongayKedon = @"songay_kedon";
			 public static string NgayBatdaudon = @"ngay_batdaudon";
			 public static string SoBenhan = @"so_benhan";
			 public static string SolanDtri = @"solan_dtri";
			 public static string IdBacsyDtri = @"id_bacsy_dtri";
			 public static string NguoiTiepdon = @"nguoi_tiepdon";
			 public static string CosoDtri = @"coso_dtri";
			 public static string CosoChuyen = @"coso_chuyen";
			 public static string TrangthaiDieutri = @"trangthai_dieutri";
			 public static string NgayKetthuc = @"ngay_ketthuc";
			 public static string NgayBatdau = @"ngay_batdau";
			 public static string MotaThem = @"mota_them";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string NgaySua = @"ngay_sua";
			 public static string IpMaytao = @"ip_maytao";
			 public static string IpMaysua = @"ip_maysua";
			 public static string IpMacTao = @"ip_mac_tao";
			 public static string IpMacSua = @"ip_mac_sua";
			 public static string LastAction = @"last_Action";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
