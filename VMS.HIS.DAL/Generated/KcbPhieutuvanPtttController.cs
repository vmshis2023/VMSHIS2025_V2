using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
    /// <summary>
    /// Controller class for kcb_phieutuvan_pttt
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class KcbPhieutuvanPtttController
    {
        // Preload our schema..
        KcbPhieutuvanPttt thisSchemaLoad = new KcbPhieutuvanPttt();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public KcbPhieutuvanPtttCollection FetchAll()
        {
            KcbPhieutuvanPtttCollection coll = new KcbPhieutuvanPtttCollection();
            Query qry = new Query(KcbPhieutuvanPttt.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public KcbPhieutuvanPtttCollection FetchByID(object IdPhieu)
        {
            KcbPhieutuvanPtttCollection coll = new KcbPhieutuvanPtttCollection().Where("id_phieu", IdPhieu).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public KcbPhieutuvanPtttCollection FetchByQuery(Query qry)
        {
            KcbPhieutuvanPtttCollection coll = new KcbPhieutuvanPtttCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdPhieu)
        {
            return (KcbPhieutuvanPttt.Delete(IdPhieu) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdPhieu)
        {
            return (KcbPhieutuvanPttt.Destroy(IdPhieu) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string MaPhieu,long IdBenhnhan,string MaLuotkham,short IdKhoadieutri,DateTime NgayTuvan,int IdBacsiChinh,string IdBacsikhac,string DaidienGiadinh,string ChanDoan,string PhuongphapVocam,string PhuongphapGiamdau,string ThuocVt,string ThuthuatGiamdau,string RuiroGhinhan,string GhichuThem,DateTime NgayTao,string NguoiTao,DateTime? NgaySua,string NguoiSua,DateTime? NgayXoa,string NguoiXoa)
	    {
		    KcbPhieutuvanPttt item = new KcbPhieutuvanPttt();
		    
            item.MaPhieu = MaPhieu;
            
            item.IdBenhnhan = IdBenhnhan;
            
            item.MaLuotkham = MaLuotkham;
            
            item.IdKhoadieutri = IdKhoadieutri;
            
            item.NgayTuvan = NgayTuvan;
            
            item.IdBacsiChinh = IdBacsiChinh;
            
            item.IdBacsikhac = IdBacsikhac;
            
            item.DaidienGiadinh = DaidienGiadinh;
            
            item.ChanDoan = ChanDoan;
            
            item.PhuongphapVocam = PhuongphapVocam;
            
            item.PhuongphapGiamdau = PhuongphapGiamdau;
            
            item.ThuocVt = ThuocVt;
            
            item.ThuthuatGiamdau = ThuthuatGiamdau;
            
            item.RuiroGhinhan = RuiroGhinhan;
            
            item.GhichuThem = GhichuThem;
            
            item.NgayTao = NgayTao;
            
            item.NguoiTao = NguoiTao;
            
            item.NgaySua = NgaySua;
            
            item.NguoiSua = NguoiSua;
            
            item.NgayXoa = NgayXoa;
            
            item.NguoiXoa = NguoiXoa;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long IdPhieu,string MaPhieu,long IdBenhnhan,string MaLuotkham,short IdKhoadieutri,DateTime NgayTuvan,int IdBacsiChinh,string IdBacsikhac,string DaidienGiadinh,string ChanDoan,string PhuongphapVocam,string PhuongphapGiamdau,string ThuocVt,string ThuthuatGiamdau,string RuiroGhinhan,string GhichuThem,DateTime NgayTao,string NguoiTao,DateTime? NgaySua,string NguoiSua,DateTime? NgayXoa,string NguoiXoa)
	    {
		    KcbPhieutuvanPttt item = new KcbPhieutuvanPttt();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdPhieu = IdPhieu;
				
			item.MaPhieu = MaPhieu;
				
			item.IdBenhnhan = IdBenhnhan;
				
			item.MaLuotkham = MaLuotkham;
				
			item.IdKhoadieutri = IdKhoadieutri;
				
			item.NgayTuvan = NgayTuvan;
				
			item.IdBacsiChinh = IdBacsiChinh;
				
			item.IdBacsikhac = IdBacsikhac;
				
			item.DaidienGiadinh = DaidienGiadinh;
				
			item.ChanDoan = ChanDoan;
				
			item.PhuongphapVocam = PhuongphapVocam;
				
			item.PhuongphapGiamdau = PhuongphapGiamdau;
				
			item.ThuocVt = ThuocVt;
				
			item.ThuthuatGiamdau = ThuthuatGiamdau;
				
			item.RuiroGhinhan = RuiroGhinhan;
				
			item.GhichuThem = GhichuThem;
				
			item.NgayTao = NgayTao;
				
			item.NguoiTao = NguoiTao;
				
			item.NgaySua = NgaySua;
				
			item.NguoiSua = NguoiSua;
				
			item.NgayXoa = NgayXoa;
				
			item.NguoiXoa = NguoiXoa;
				
	        item.Save(UserName);
	    }
    }
}
