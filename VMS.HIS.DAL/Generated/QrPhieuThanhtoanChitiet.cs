using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the QrPhieuThanhtoanChitiet class.
	/// </summary>
    [Serializable]
	public partial class QrPhieuThanhtoanChitietCollection : ActiveList<QrPhieuThanhtoanChitiet, QrPhieuThanhtoanChitietCollection>
	{	   
		public QrPhieuThanhtoanChitietCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>QrPhieuThanhtoanChitietCollection</returns>
		public QrPhieuThanhtoanChitietCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                QrPhieuThanhtoanChitiet o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the qr_phieu_thanhtoan_chitiet table.
	/// </summary>
	[Serializable]
	public partial class QrPhieuThanhtoanChitiet : ActiveRecord<QrPhieuThanhtoanChitiet>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public QrPhieuThanhtoanChitiet()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public QrPhieuThanhtoanChitiet(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public QrPhieuThanhtoanChitiet(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public QrPhieuThanhtoanChitiet(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("qr_phieu_thanhtoan_chitiet", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdChitiet = new TableSchema.TableColumn(schema);
				colvarIdChitiet.ColumnName = "id_chitiet";
				colvarIdChitiet.DataType = DbType.Int64;
				colvarIdChitiet.MaxLength = 0;
				colvarIdChitiet.AutoIncrement = true;
				colvarIdChitiet.IsNullable = false;
				colvarIdChitiet.IsPrimaryKey = true;
				colvarIdChitiet.IsForeignKey = false;
				colvarIdChitiet.IsReadOnly = false;
				colvarIdChitiet.DefaultSetting = @"";
				colvarIdChitiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdChitiet);
				
				TableSchema.TableColumn colvarIdQrcode = new TableSchema.TableColumn(schema);
				colvarIdQrcode.ColumnName = "id_qrcode";
				colvarIdQrcode.DataType = DbType.String;
				colvarIdQrcode.MaxLength = 50;
				colvarIdQrcode.AutoIncrement = false;
				colvarIdQrcode.IsNullable = false;
				colvarIdQrcode.IsPrimaryKey = false;
				colvarIdQrcode.IsForeignKey = false;
				colvarIdQrcode.IsReadOnly = false;
				colvarIdQrcode.DefaultSetting = @"";
				colvarIdQrcode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdQrcode);
				
				TableSchema.TableColumn colvarIdPhieu = new TableSchema.TableColumn(schema);
				colvarIdPhieu.ColumnName = "id_phieu";
				colvarIdPhieu.DataType = DbType.Int64;
				colvarIdPhieu.MaxLength = 0;
				colvarIdPhieu.AutoIncrement = false;
				colvarIdPhieu.IsNullable = true;
				colvarIdPhieu.IsPrimaryKey = false;
				colvarIdPhieu.IsForeignKey = false;
				colvarIdPhieu.IsReadOnly = false;
				colvarIdPhieu.DefaultSetting = @"";
				colvarIdPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieu);
				
				TableSchema.TableColumn colvarIdPhieuChitiet = new TableSchema.TableColumn(schema);
				colvarIdPhieuChitiet.ColumnName = "id_phieu_chitiet";
				colvarIdPhieuChitiet.DataType = DbType.Int64;
				colvarIdPhieuChitiet.MaxLength = 0;
				colvarIdPhieuChitiet.AutoIncrement = false;
				colvarIdPhieuChitiet.IsNullable = true;
				colvarIdPhieuChitiet.IsPrimaryKey = false;
				colvarIdPhieuChitiet.IsForeignKey = false;
				colvarIdPhieuChitiet.IsReadOnly = false;
				colvarIdPhieuChitiet.DefaultSetting = @"";
				colvarIdPhieuChitiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuChitiet);
				
				TableSchema.TableColumn colvarIdDichvu = new TableSchema.TableColumn(schema);
				colvarIdDichvu.ColumnName = "id_dichvu";
				colvarIdDichvu.DataType = DbType.Int32;
				colvarIdDichvu.MaxLength = 0;
				colvarIdDichvu.AutoIncrement = false;
				colvarIdDichvu.IsNullable = true;
				colvarIdDichvu.IsPrimaryKey = false;
				colvarIdDichvu.IsForeignKey = false;
				colvarIdDichvu.IsReadOnly = false;
				colvarIdDichvu.DefaultSetting = @"";
				colvarIdDichvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDichvu);
				
				TableSchema.TableColumn colvarIdChitietDichvu = new TableSchema.TableColumn(schema);
				colvarIdChitietDichvu.ColumnName = "id_chitiet_dichvu";
				colvarIdChitietDichvu.DataType = DbType.Int32;
				colvarIdChitietDichvu.MaxLength = 0;
				colvarIdChitietDichvu.AutoIncrement = false;
				colvarIdChitietDichvu.IsNullable = true;
				colvarIdChitietDichvu.IsPrimaryKey = false;
				colvarIdChitietDichvu.IsForeignKey = false;
				colvarIdChitietDichvu.IsReadOnly = false;
				colvarIdChitietDichvu.DefaultSetting = @"";
				colvarIdChitietDichvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdChitietDichvu);
				
				TableSchema.TableColumn colvarTenChitietDichvu = new TableSchema.TableColumn(schema);
				colvarTenChitietDichvu.ColumnName = "ten_chitiet_dichvu";
				colvarTenChitietDichvu.DataType = DbType.String;
				colvarTenChitietDichvu.MaxLength = 256;
				colvarTenChitietDichvu.AutoIncrement = false;
				colvarTenChitietDichvu.IsNullable = true;
				colvarTenChitietDichvu.IsPrimaryKey = false;
				colvarTenChitietDichvu.IsForeignKey = false;
				colvarTenChitietDichvu.IsReadOnly = false;
				colvarTenChitietDichvu.DefaultSetting = @"";
				colvarTenChitietDichvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenChitietDichvu);
				
				TableSchema.TableColumn colvarIdLoaithanhtoan = new TableSchema.TableColumn(schema);
				colvarIdLoaithanhtoan.ColumnName = "id_loaithanhtoan";
				colvarIdLoaithanhtoan.DataType = DbType.Byte;
				colvarIdLoaithanhtoan.MaxLength = 0;
				colvarIdLoaithanhtoan.AutoIncrement = false;
				colvarIdLoaithanhtoan.IsNullable = true;
				colvarIdLoaithanhtoan.IsPrimaryKey = false;
				colvarIdLoaithanhtoan.IsForeignKey = false;
				colvarIdLoaithanhtoan.IsReadOnly = false;
				colvarIdLoaithanhtoan.DefaultSetting = @"";
				colvarIdLoaithanhtoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdLoaithanhtoan);
				
				TableSchema.TableColumn colvarSoLuong = new TableSchema.TableColumn(schema);
				colvarSoLuong.ColumnName = "so_luong";
				colvarSoLuong.DataType = DbType.Decimal;
				colvarSoLuong.MaxLength = 0;
				colvarSoLuong.AutoIncrement = false;
				colvarSoLuong.IsNullable = true;
				colvarSoLuong.IsPrimaryKey = false;
				colvarSoLuong.IsForeignKey = false;
				colvarSoLuong.IsReadOnly = false;
				colvarSoLuong.DefaultSetting = @"";
				colvarSoLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuong);
				
				TableSchema.TableColumn colvarDonGia = new TableSchema.TableColumn(schema);
				colvarDonGia.ColumnName = "don_gia";
				colvarDonGia.DataType = DbType.Decimal;
				colvarDonGia.MaxLength = 0;
				colvarDonGia.AutoIncrement = false;
				colvarDonGia.IsNullable = true;
				colvarDonGia.IsPrimaryKey = false;
				colvarDonGia.IsForeignKey = false;
				colvarDonGia.IsReadOnly = false;
				colvarDonGia.DefaultSetting = @"";
				colvarDonGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGia);
				
				TableSchema.TableColumn colvarSoTien = new TableSchema.TableColumn(schema);
				colvarSoTien.ColumnName = "so_tien";
				colvarSoTien.DataType = DbType.Decimal;
				colvarSoTien.MaxLength = 0;
				colvarSoTien.AutoIncrement = false;
				colvarSoTien.IsNullable = true;
				colvarSoTien.IsPrimaryKey = false;
				colvarSoTien.IsForeignKey = false;
				colvarSoTien.IsReadOnly = false;
				colvarSoTien.DefaultSetting = @"";
				colvarSoTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoTien);
				
				TableSchema.TableColumn colvarNguonGoc = new TableSchema.TableColumn(schema);
				colvarNguonGoc.ColumnName = "nguon_goc";
				colvarNguonGoc.DataType = DbType.Byte;
				colvarNguonGoc.MaxLength = 0;
				colvarNguonGoc.AutoIncrement = false;
				colvarNguonGoc.IsNullable = true;
				colvarNguonGoc.IsPrimaryKey = false;
				colvarNguonGoc.IsForeignKey = false;
				colvarNguonGoc.IsReadOnly = false;
				colvarNguonGoc.DefaultSetting = @"";
				colvarNguonGoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguonGoc);
				
				TableSchema.TableColumn colvarIdKham = new TableSchema.TableColumn(schema);
				colvarIdKham.ColumnName = "id_kham";
				colvarIdKham.DataType = DbType.Int64;
				colvarIdKham.MaxLength = 0;
				colvarIdKham.AutoIncrement = false;
				colvarIdKham.IsNullable = true;
				colvarIdKham.IsPrimaryKey = false;
				colvarIdKham.IsForeignKey = false;
				colvarIdKham.IsReadOnly = false;
				colvarIdKham.DefaultSetting = @"";
				colvarIdKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKham);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("qr_phieu_thanhtoan_chitiet",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdChitiet")]
		[Bindable(true)]
		public long IdChitiet 
		{
			get { return GetColumnValue<long>(Columns.IdChitiet); }
			set { SetColumnValue(Columns.IdChitiet, value); }
		}
		  
		[XmlAttribute("IdQrcode")]
		[Bindable(true)]
		public string IdQrcode 
		{
			get { return GetColumnValue<string>(Columns.IdQrcode); }
			set { SetColumnValue(Columns.IdQrcode, value); }
		}
		  
		[XmlAttribute("IdPhieu")]
		[Bindable(true)]
		public long? IdPhieu 
		{
			get { return GetColumnValue<long?>(Columns.IdPhieu); }
			set { SetColumnValue(Columns.IdPhieu, value); }
		}
		  
		[XmlAttribute("IdPhieuChitiet")]
		[Bindable(true)]
		public long? IdPhieuChitiet 
		{
			get { return GetColumnValue<long?>(Columns.IdPhieuChitiet); }
			set { SetColumnValue(Columns.IdPhieuChitiet, value); }
		}
		  
		[XmlAttribute("IdDichvu")]
		[Bindable(true)]
		public int? IdDichvu 
		{
			get { return GetColumnValue<int?>(Columns.IdDichvu); }
			set { SetColumnValue(Columns.IdDichvu, value); }
		}
		  
		[XmlAttribute("IdChitietDichvu")]
		[Bindable(true)]
		public int? IdChitietDichvu 
		{
			get { return GetColumnValue<int?>(Columns.IdChitietDichvu); }
			set { SetColumnValue(Columns.IdChitietDichvu, value); }
		}
		  
		[XmlAttribute("TenChitietDichvu")]
		[Bindable(true)]
		public string TenChitietDichvu 
		{
			get { return GetColumnValue<string>(Columns.TenChitietDichvu); }
			set { SetColumnValue(Columns.TenChitietDichvu, value); }
		}
		  
		[XmlAttribute("IdLoaithanhtoan")]
		[Bindable(true)]
		public byte? IdLoaithanhtoan 
		{
			get { return GetColumnValue<byte?>(Columns.IdLoaithanhtoan); }
			set { SetColumnValue(Columns.IdLoaithanhtoan, value); }
		}
		  
		[XmlAttribute("SoLuong")]
		[Bindable(true)]
		public decimal? SoLuong 
		{
			get { return GetColumnValue<decimal?>(Columns.SoLuong); }
			set { SetColumnValue(Columns.SoLuong, value); }
		}
		  
		[XmlAttribute("DonGia")]
		[Bindable(true)]
		public decimal? DonGia 
		{
			get { return GetColumnValue<decimal?>(Columns.DonGia); }
			set { SetColumnValue(Columns.DonGia, value); }
		}
		  
		[XmlAttribute("SoTien")]
		[Bindable(true)]
		public decimal? SoTien 
		{
			get { return GetColumnValue<decimal?>(Columns.SoTien); }
			set { SetColumnValue(Columns.SoTien, value); }
		}
		  
		[XmlAttribute("NguonGoc")]
		[Bindable(true)]
		public byte? NguonGoc 
		{
			get { return GetColumnValue<byte?>(Columns.NguonGoc); }
			set { SetColumnValue(Columns.NguonGoc, value); }
		}
		  
		[XmlAttribute("IdKham")]
		[Bindable(true)]
		public long? IdKham 
		{
			get { return GetColumnValue<long?>(Columns.IdKham); }
			set { SetColumnValue(Columns.IdKham, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varIdQrcode,long? varIdPhieu,long? varIdPhieuChitiet,int? varIdDichvu,int? varIdChitietDichvu,string varTenChitietDichvu,byte? varIdLoaithanhtoan,decimal? varSoLuong,decimal? varDonGia,decimal? varSoTien,byte? varNguonGoc,long? varIdKham)
		{
			QrPhieuThanhtoanChitiet item = new QrPhieuThanhtoanChitiet();
			
			item.IdQrcode = varIdQrcode;
			
			item.IdPhieu = varIdPhieu;
			
			item.IdPhieuChitiet = varIdPhieuChitiet;
			
			item.IdDichvu = varIdDichvu;
			
			item.IdChitietDichvu = varIdChitietDichvu;
			
			item.TenChitietDichvu = varTenChitietDichvu;
			
			item.IdLoaithanhtoan = varIdLoaithanhtoan;
			
			item.SoLuong = varSoLuong;
			
			item.DonGia = varDonGia;
			
			item.SoTien = varSoTien;
			
			item.NguonGoc = varNguonGoc;
			
			item.IdKham = varIdKham;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varIdChitiet,string varIdQrcode,long? varIdPhieu,long? varIdPhieuChitiet,int? varIdDichvu,int? varIdChitietDichvu,string varTenChitietDichvu,byte? varIdLoaithanhtoan,decimal? varSoLuong,decimal? varDonGia,decimal? varSoTien,byte? varNguonGoc,long? varIdKham)
		{
			QrPhieuThanhtoanChitiet item = new QrPhieuThanhtoanChitiet();
			
				item.IdChitiet = varIdChitiet;
			
				item.IdQrcode = varIdQrcode;
			
				item.IdPhieu = varIdPhieu;
			
				item.IdPhieuChitiet = varIdPhieuChitiet;
			
				item.IdDichvu = varIdDichvu;
			
				item.IdChitietDichvu = varIdChitietDichvu;
			
				item.TenChitietDichvu = varTenChitietDichvu;
			
				item.IdLoaithanhtoan = varIdLoaithanhtoan;
			
				item.SoLuong = varSoLuong;
			
				item.DonGia = varDonGia;
			
				item.SoTien = varSoTien;
			
				item.NguonGoc = varNguonGoc;
			
				item.IdKham = varIdKham;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdChitietColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdQrcodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuChitietColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDichvuColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn IdChitietDichvuColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn TenChitietDichvuColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn IdLoaithanhtoanColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn SoTienColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NguonGocColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhamColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdChitiet = @"id_chitiet";
			 public static string IdQrcode = @"id_qrcode";
			 public static string IdPhieu = @"id_phieu";
			 public static string IdPhieuChitiet = @"id_phieu_chitiet";
			 public static string IdDichvu = @"id_dichvu";
			 public static string IdChitietDichvu = @"id_chitiet_dichvu";
			 public static string TenChitietDichvu = @"ten_chitiet_dichvu";
			 public static string IdLoaithanhtoan = @"id_loaithanhtoan";
			 public static string SoLuong = @"so_luong";
			 public static string DonGia = @"don_gia";
			 public static string SoTien = @"so_tien";
			 public static string NguonGoc = @"nguon_goc";
			 public static string IdKham = @"id_kham";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
