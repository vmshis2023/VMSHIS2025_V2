using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the EmrQuatrinhThaiky class.
	/// </summary>
    [Serializable]
	public partial class EmrQuatrinhThaikyCollection : ActiveList<EmrQuatrinhThaiky, EmrQuatrinhThaikyCollection>
	{	   
		public EmrQuatrinhThaikyCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>EmrQuatrinhThaikyCollection</returns>
		public EmrQuatrinhThaikyCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                EmrQuatrinhThaiky o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the emr_quatrinh_thaiky table.
	/// </summary>
	[Serializable]
	public partial class EmrQuatrinhThaiky : ActiveRecord<EmrQuatrinhThaiky>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public EmrQuatrinhThaiky()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public EmrQuatrinhThaiky(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public EmrQuatrinhThaiky(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public EmrQuatrinhThaiky(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("emr_quatrinh_thaiky", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 10;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarKinhcuoitungay = new TableSchema.TableColumn(schema);
				colvarKinhcuoitungay.ColumnName = "kinhcuoitungay";
				colvarKinhcuoitungay.DataType = DbType.DateTime;
				colvarKinhcuoitungay.MaxLength = 0;
				colvarKinhcuoitungay.AutoIncrement = false;
				colvarKinhcuoitungay.IsNullable = true;
				colvarKinhcuoitungay.IsPrimaryKey = false;
				colvarKinhcuoitungay.IsForeignKey = false;
				colvarKinhcuoitungay.IsReadOnly = false;
				colvarKinhcuoitungay.DefaultSetting = @"";
				colvarKinhcuoitungay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKinhcuoitungay);
				
				TableSchema.TableColumn colvarKinhcuoidenngay = new TableSchema.TableColumn(schema);
				colvarKinhcuoidenngay.ColumnName = "kinhcuoidenngay";
				colvarKinhcuoidenngay.DataType = DbType.DateTime;
				colvarKinhcuoidenngay.MaxLength = 0;
				colvarKinhcuoidenngay.AutoIncrement = false;
				colvarKinhcuoidenngay.IsNullable = true;
				colvarKinhcuoidenngay.IsPrimaryKey = false;
				colvarKinhcuoidenngay.IsForeignKey = false;
				colvarKinhcuoidenngay.IsReadOnly = false;
				colvarKinhcuoidenngay.DefaultSetting = @"";
				colvarKinhcuoidenngay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKinhcuoidenngay);
				
				TableSchema.TableColumn colvarTuoithai = new TableSchema.TableColumn(schema);
				colvarTuoithai.ColumnName = "tuoithai";
				colvarTuoithai.DataType = DbType.Byte;
				colvarTuoithai.MaxLength = 0;
				colvarTuoithai.AutoIncrement = false;
				colvarTuoithai.IsNullable = true;
				colvarTuoithai.IsPrimaryKey = false;
				colvarTuoithai.IsForeignKey = false;
				colvarTuoithai.IsReadOnly = false;
				colvarTuoithai.DefaultSetting = @"";
				colvarTuoithai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuoithai);
				
				TableSchema.TableColumn colvarKhamthaitai = new TableSchema.TableColumn(schema);
				colvarKhamthaitai.ColumnName = "khamthaitai";
				colvarKhamthaitai.DataType = DbType.String;
				colvarKhamthaitai.MaxLength = 255;
				colvarKhamthaitai.AutoIncrement = false;
				colvarKhamthaitai.IsNullable = true;
				colvarKhamthaitai.IsPrimaryKey = false;
				colvarKhamthaitai.IsForeignKey = false;
				colvarKhamthaitai.IsReadOnly = false;
				colvarKhamthaitai.DefaultSetting = @"";
				colvarKhamthaitai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamthaitai);
				
				TableSchema.TableColumn colvarTiemphongUonvan = new TableSchema.TableColumn(schema);
				colvarTiemphongUonvan.ColumnName = "tiemphong_uonvan";
				colvarTiemphongUonvan.DataType = DbType.Boolean;
				colvarTiemphongUonvan.MaxLength = 0;
				colvarTiemphongUonvan.AutoIncrement = false;
				colvarTiemphongUonvan.IsNullable = true;
				colvarTiemphongUonvan.IsPrimaryKey = false;
				colvarTiemphongUonvan.IsForeignKey = false;
				colvarTiemphongUonvan.IsReadOnly = false;
				colvarTiemphongUonvan.DefaultSetting = @"";
				colvarTiemphongUonvan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTiemphongUonvan);
				
				TableSchema.TableColumn colvarTiemphongUonvanSolan = new TableSchema.TableColumn(schema);
				colvarTiemphongUonvanSolan.ColumnName = "tiemphong_uonvan_solan";
				colvarTiemphongUonvanSolan.DataType = DbType.Byte;
				colvarTiemphongUonvanSolan.MaxLength = 0;
				colvarTiemphongUonvanSolan.AutoIncrement = false;
				colvarTiemphongUonvanSolan.IsNullable = true;
				colvarTiemphongUonvanSolan.IsPrimaryKey = false;
				colvarTiemphongUonvanSolan.IsForeignKey = false;
				colvarTiemphongUonvanSolan.IsReadOnly = false;
				colvarTiemphongUonvanSolan.DefaultSetting = @"";
				colvarTiemphongUonvanSolan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTiemphongUonvanSolan);
				
				TableSchema.TableColumn colvarBatdauchuyenda = new TableSchema.TableColumn(schema);
				colvarBatdauchuyenda.ColumnName = "batdauchuyenda";
				colvarBatdauchuyenda.DataType = DbType.DateTime;
				colvarBatdauchuyenda.MaxLength = 0;
				colvarBatdauchuyenda.AutoIncrement = false;
				colvarBatdauchuyenda.IsNullable = true;
				colvarBatdauchuyenda.IsPrimaryKey = false;
				colvarBatdauchuyenda.IsForeignKey = false;
				colvarBatdauchuyenda.IsReadOnly = false;
				colvarBatdauchuyenda.DefaultSetting = @"";
				colvarBatdauchuyenda.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBatdauchuyenda);
				
				TableSchema.TableColumn colvarDauhieulucdau = new TableSchema.TableColumn(schema);
				colvarDauhieulucdau.ColumnName = "dauhieulucdau";
				colvarDauhieulucdau.DataType = DbType.String;
				colvarDauhieulucdau.MaxLength = 255;
				colvarDauhieulucdau.AutoIncrement = false;
				colvarDauhieulucdau.IsNullable = true;
				colvarDauhieulucdau.IsPrimaryKey = false;
				colvarDauhieulucdau.IsForeignKey = false;
				colvarDauhieulucdau.IsReadOnly = false;
				colvarDauhieulucdau.DefaultSetting = @"";
				colvarDauhieulucdau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDauhieulucdau);
				
				TableSchema.TableColumn colvarBienchuyen = new TableSchema.TableColumn(schema);
				colvarBienchuyen.ColumnName = "bienchuyen";
				colvarBienchuyen.DataType = DbType.String;
				colvarBienchuyen.MaxLength = 255;
				colvarBienchuyen.AutoIncrement = false;
				colvarBienchuyen.IsNullable = true;
				colvarBienchuyen.IsPrimaryKey = false;
				colvarBienchuyen.IsForeignKey = false;
				colvarBienchuyen.IsReadOnly = false;
				colvarBienchuyen.DefaultSetting = @"";
				colvarBienchuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBienchuyen);
				
				TableSchema.TableColumn colvarTthaiXoa = new TableSchema.TableColumn(schema);
				colvarTthaiXoa.ColumnName = "tthai_xoa";
				colvarTthaiXoa.DataType = DbType.Boolean;
				colvarTthaiXoa.MaxLength = 0;
				colvarTthaiXoa.AutoIncrement = false;
				colvarTthaiXoa.IsNullable = true;
				colvarTthaiXoa.IsPrimaryKey = false;
				colvarTthaiXoa.IsForeignKey = false;
				colvarTthaiXoa.IsReadOnly = false;
				
						colvarTthaiXoa.DefaultSetting = @"((0))";
				colvarTthaiXoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTthaiXoa);
				
				TableSchema.TableColumn colvarTthaiAn = new TableSchema.TableColumn(schema);
				colvarTthaiAn.ColumnName = "tthai_an";
				colvarTthaiAn.DataType = DbType.Boolean;
				colvarTthaiAn.MaxLength = 0;
				colvarTthaiAn.AutoIncrement = false;
				colvarTthaiAn.IsNullable = true;
				colvarTthaiAn.IsPrimaryKey = false;
				colvarTthaiAn.IsForeignKey = false;
				colvarTthaiAn.IsReadOnly = false;
				
						colvarTthaiAn.DefaultSetting = @"((0))";
				colvarTthaiAn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTthaiAn);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = false;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 30;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("emr_quatrinh_thaiky",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("Kinhcuoitungay")]
		[Bindable(true)]
		public DateTime? Kinhcuoitungay 
		{
			get { return GetColumnValue<DateTime?>(Columns.Kinhcuoitungay); }
			set { SetColumnValue(Columns.Kinhcuoitungay, value); }
		}
		  
		[XmlAttribute("Kinhcuoidenngay")]
		[Bindable(true)]
		public DateTime? Kinhcuoidenngay 
		{
			get { return GetColumnValue<DateTime?>(Columns.Kinhcuoidenngay); }
			set { SetColumnValue(Columns.Kinhcuoidenngay, value); }
		}
		  
		[XmlAttribute("Tuoithai")]
		[Bindable(true)]
		public byte? Tuoithai 
		{
			get { return GetColumnValue<byte?>(Columns.Tuoithai); }
			set { SetColumnValue(Columns.Tuoithai, value); }
		}
		  
		[XmlAttribute("Khamthaitai")]
		[Bindable(true)]
		public string Khamthaitai 
		{
			get { return GetColumnValue<string>(Columns.Khamthaitai); }
			set { SetColumnValue(Columns.Khamthaitai, value); }
		}
		  
		[XmlAttribute("TiemphongUonvan")]
		[Bindable(true)]
		public bool? TiemphongUonvan 
		{
			get { return GetColumnValue<bool?>(Columns.TiemphongUonvan); }
			set { SetColumnValue(Columns.TiemphongUonvan, value); }
		}
		  
		[XmlAttribute("TiemphongUonvanSolan")]
		[Bindable(true)]
		public byte? TiemphongUonvanSolan 
		{
			get { return GetColumnValue<byte?>(Columns.TiemphongUonvanSolan); }
			set { SetColumnValue(Columns.TiemphongUonvanSolan, value); }
		}
		  
		[XmlAttribute("Batdauchuyenda")]
		[Bindable(true)]
		public DateTime? Batdauchuyenda 
		{
			get { return GetColumnValue<DateTime?>(Columns.Batdauchuyenda); }
			set { SetColumnValue(Columns.Batdauchuyenda, value); }
		}
		  
		[XmlAttribute("Dauhieulucdau")]
		[Bindable(true)]
		public string Dauhieulucdau 
		{
			get { return GetColumnValue<string>(Columns.Dauhieulucdau); }
			set { SetColumnValue(Columns.Dauhieulucdau, value); }
		}
		  
		[XmlAttribute("Bienchuyen")]
		[Bindable(true)]
		public string Bienchuyen 
		{
			get { return GetColumnValue<string>(Columns.Bienchuyen); }
			set { SetColumnValue(Columns.Bienchuyen, value); }
		}
		  
		[XmlAttribute("TthaiXoa")]
		[Bindable(true)]
		public bool? TthaiXoa 
		{
			get { return GetColumnValue<bool?>(Columns.TthaiXoa); }
			set { SetColumnValue(Columns.TthaiXoa, value); }
		}
		  
		[XmlAttribute("TthaiAn")]
		[Bindable(true)]
		public bool? TthaiAn 
		{
			get { return GetColumnValue<bool?>(Columns.TthaiAn); }
			set { SetColumnValue(Columns.TthaiAn, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime NgaySua 
		{
			get { return GetColumnValue<DateTime>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long varIdBenhnhan,string varMaLuotkham,DateTime? varKinhcuoitungay,DateTime? varKinhcuoidenngay,byte? varTuoithai,string varKhamthaitai,bool? varTiemphongUonvan,byte? varTiemphongUonvanSolan,DateTime? varBatdauchuyenda,string varDauhieulucdau,string varBienchuyen,bool? varTthaiXoa,bool? varTthaiAn,DateTime? varNgayTao,string varNguoiTao,DateTime varNgaySua,string varNguoiSua)
		{
			EmrQuatrinhThaiky item = new EmrQuatrinhThaiky();
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.MaLuotkham = varMaLuotkham;
			
			item.Kinhcuoitungay = varKinhcuoitungay;
			
			item.Kinhcuoidenngay = varKinhcuoidenngay;
			
			item.Tuoithai = varTuoithai;
			
			item.Khamthaitai = varKhamthaitai;
			
			item.TiemphongUonvan = varTiemphongUonvan;
			
			item.TiemphongUonvanSolan = varTiemphongUonvanSolan;
			
			item.Batdauchuyenda = varBatdauchuyenda;
			
			item.Dauhieulucdau = varDauhieulucdau;
			
			item.Bienchuyen = varBienchuyen;
			
			item.TthaiXoa = varTthaiXoa;
			
			item.TthaiAn = varTthaiAn;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,long varIdBenhnhan,string varMaLuotkham,DateTime? varKinhcuoitungay,DateTime? varKinhcuoidenngay,byte? varTuoithai,string varKhamthaitai,bool? varTiemphongUonvan,byte? varTiemphongUonvanSolan,DateTime? varBatdauchuyenda,string varDauhieulucdau,string varBienchuyen,bool? varTthaiXoa,bool? varTthaiAn,DateTime? varNgayTao,string varNguoiTao,DateTime varNgaySua,string varNguoiSua)
		{
			EmrQuatrinhThaiky item = new EmrQuatrinhThaiky();
			
				item.Id = varId;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.Kinhcuoitungay = varKinhcuoitungay;
			
				item.Kinhcuoidenngay = varKinhcuoidenngay;
			
				item.Tuoithai = varTuoithai;
			
				item.Khamthaitai = varKhamthaitai;
			
				item.TiemphongUonvan = varTiemphongUonvan;
			
				item.TiemphongUonvanSolan = varTiemphongUonvanSolan;
			
				item.Batdauchuyenda = varBatdauchuyenda;
			
				item.Dauhieulucdau = varDauhieulucdau;
			
				item.Bienchuyen = varBienchuyen;
			
				item.TthaiXoa = varTthaiXoa;
			
				item.TthaiAn = varTthaiAn;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn KinhcuoitungayColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn KinhcuoidenngayColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TuoithaiColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamthaitaiColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn TiemphongUonvanColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn TiemphongUonvanSolanColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn BatdauchuyendaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn DauhieulucdauColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn BienchuyenColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn TthaiXoaColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn TthaiAnColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string Kinhcuoitungay = @"kinhcuoitungay";
			 public static string Kinhcuoidenngay = @"kinhcuoidenngay";
			 public static string Tuoithai = @"tuoithai";
			 public static string Khamthaitai = @"khamthaitai";
			 public static string TiemphongUonvan = @"tiemphong_uonvan";
			 public static string TiemphongUonvanSolan = @"tiemphong_uonvan_solan";
			 public static string Batdauchuyenda = @"batdauchuyenda";
			 public static string Dauhieulucdau = @"dauhieulucdau";
			 public static string Bienchuyen = @"bienchuyen";
			 public static string TthaiXoa = @"tthai_xoa";
			 public static string TthaiAn = @"tthai_an";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgaySua = @"ngay_sua";
			 public static string NguoiSua = @"nguoi_sua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
