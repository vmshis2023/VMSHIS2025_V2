using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the NoitruTamung class.
	/// </summary>
    [Serializable]
	public partial class NoitruTamungCollection : ActiveList<NoitruTamung, NoitruTamungCollection>
	{	   
		public NoitruTamungCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>NoitruTamungCollection</returns>
		public NoitruTamungCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                NoitruTamung o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the noitru_tamung table.
	/// </summary>
	[Serializable]
	public partial class NoitruTamung : ActiveRecord<NoitruTamung>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public NoitruTamung()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public NoitruTamung(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public NoitruTamung(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public NoitruTamung(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("noitru_tamung", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 10;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarSoTien = new TableSchema.TableColumn(schema);
				colvarSoTien.ColumnName = "so_tien";
				colvarSoTien.DataType = DbType.Decimal;
				colvarSoTien.MaxLength = 0;
				colvarSoTien.AutoIncrement = false;
				colvarSoTien.IsNullable = true;
				colvarSoTien.IsPrimaryKey = false;
				colvarSoTien.IsForeignKey = false;
				colvarSoTien.IsReadOnly = false;
				colvarSoTien.DefaultSetting = @"";
				colvarSoTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoTien);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.Byte;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = false;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				
						colvarTrangThai.DefaultSetting = @"((0))";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarNgayTamung = new TableSchema.TableColumn(schema);
				colvarNgayTamung.ColumnName = "ngay_tamung";
				colvarNgayTamung.DataType = DbType.DateTime;
				colvarNgayTamung.MaxLength = 0;
				colvarNgayTamung.AutoIncrement = false;
				colvarNgayTamung.IsNullable = true;
				colvarNgayTamung.IsPrimaryKey = false;
				colvarNgayTamung.IsForeignKey = false;
				colvarNgayTamung.IsReadOnly = false;
				colvarNgayTamung.DefaultSetting = @"";
				colvarNgayTamung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTamung);
				
				TableSchema.TableColumn colvarKieuTamung = new TableSchema.TableColumn(schema);
				colvarKieuTamung.ColumnName = "kieu_tamung";
				colvarKieuTamung.DataType = DbType.Byte;
				colvarKieuTamung.MaxLength = 0;
				colvarKieuTamung.AutoIncrement = false;
				colvarKieuTamung.IsNullable = true;
				colvarKieuTamung.IsPrimaryKey = false;
				colvarKieuTamung.IsForeignKey = false;
				colvarKieuTamung.IsReadOnly = false;
				
						colvarKieuTamung.DefaultSetting = @"((0))";
				colvarKieuTamung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuTamung);
				
				TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
				colvarMotaThem.ColumnName = "mota_them";
				colvarMotaThem.DataType = DbType.String;
				colvarMotaThem.MaxLength = 255;
				colvarMotaThem.AutoIncrement = false;
				colvarMotaThem.IsNullable = true;
				colvarMotaThem.IsPrimaryKey = false;
				colvarMotaThem.IsForeignKey = false;
				colvarMotaThem.IsReadOnly = false;
				colvarMotaThem.DefaultSetting = @"";
				colvarMotaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaThem);
				
				TableSchema.TableColumn colvarIdTnv = new TableSchema.TableColumn(schema);
				colvarIdTnv.ColumnName = "id_tnv";
				colvarIdTnv.DataType = DbType.Int32;
				colvarIdTnv.MaxLength = 0;
				colvarIdTnv.AutoIncrement = false;
				colvarIdTnv.IsNullable = true;
				colvarIdTnv.IsPrimaryKey = false;
				colvarIdTnv.IsForeignKey = false;
				colvarIdTnv.IsReadOnly = false;
				colvarIdTnv.DefaultSetting = @"";
				colvarIdTnv.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdTnv);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 20;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = false;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				
						colvarNgayTao.DefaultSetting = @"(getdate())";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarIdKhoanoitru = new TableSchema.TableColumn(schema);
				colvarIdKhoanoitru.ColumnName = "id_khoanoitru";
				colvarIdKhoanoitru.DataType = DbType.Int16;
				colvarIdKhoanoitru.MaxLength = 0;
				colvarIdKhoanoitru.AutoIncrement = false;
				colvarIdKhoanoitru.IsNullable = true;
				colvarIdKhoanoitru.IsPrimaryKey = false;
				colvarIdKhoanoitru.IsForeignKey = false;
				colvarIdKhoanoitru.IsReadOnly = false;
				colvarIdKhoanoitru.DefaultSetting = @"";
				colvarIdKhoanoitru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoanoitru);
				
				TableSchema.TableColumn colvarIdBuonggiuong = new TableSchema.TableColumn(schema);
				colvarIdBuonggiuong.ColumnName = "id_buonggiuong";
				colvarIdBuonggiuong.DataType = DbType.Int64;
				colvarIdBuonggiuong.MaxLength = 0;
				colvarIdBuonggiuong.AutoIncrement = false;
				colvarIdBuonggiuong.IsNullable = true;
				colvarIdBuonggiuong.IsPrimaryKey = false;
				colvarIdBuonggiuong.IsForeignKey = false;
				colvarIdBuonggiuong.IsReadOnly = false;
				colvarIdBuonggiuong.DefaultSetting = @"";
				colvarIdBuonggiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBuonggiuong);
				
				TableSchema.TableColumn colvarIdBuong = new TableSchema.TableColumn(schema);
				colvarIdBuong.ColumnName = "id_buong";
				colvarIdBuong.DataType = DbType.Int32;
				colvarIdBuong.MaxLength = 0;
				colvarIdBuong.AutoIncrement = false;
				colvarIdBuong.IsNullable = true;
				colvarIdBuong.IsPrimaryKey = false;
				colvarIdBuong.IsForeignKey = false;
				colvarIdBuong.IsReadOnly = false;
				colvarIdBuong.DefaultSetting = @"";
				colvarIdBuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBuong);
				
				TableSchema.TableColumn colvarIdGiuong = new TableSchema.TableColumn(schema);
				colvarIdGiuong.ColumnName = "id_giuong";
				colvarIdGiuong.DataType = DbType.Int32;
				colvarIdGiuong.MaxLength = 0;
				colvarIdGiuong.AutoIncrement = false;
				colvarIdGiuong.IsNullable = true;
				colvarIdGiuong.IsPrimaryKey = false;
				colvarIdGiuong.IsForeignKey = false;
				colvarIdGiuong.IsReadOnly = false;
				colvarIdGiuong.DefaultSetting = @"";
				colvarIdGiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGiuong);
				
				TableSchema.TableColumn colvarNoitru = new TableSchema.TableColumn(schema);
				colvarNoitru.ColumnName = "noitru";
				colvarNoitru.DataType = DbType.Byte;
				colvarNoitru.MaxLength = 0;
				colvarNoitru.AutoIncrement = false;
				colvarNoitru.IsNullable = true;
				colvarNoitru.IsPrimaryKey = false;
				colvarNoitru.IsForeignKey = false;
				colvarNoitru.IsReadOnly = false;
				colvarNoitru.DefaultSetting = @"";
				colvarNoitru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoitru);
				
				TableSchema.TableColumn colvarIdTamung = new TableSchema.TableColumn(schema);
				colvarIdTamung.ColumnName = "id_tamung";
				colvarIdTamung.DataType = DbType.Int64;
				colvarIdTamung.MaxLength = 0;
				colvarIdTamung.AutoIncrement = false;
				colvarIdTamung.IsNullable = true;
				colvarIdTamung.IsPrimaryKey = false;
				colvarIdTamung.IsForeignKey = false;
				colvarIdTamung.IsReadOnly = false;
				
						colvarIdTamung.DefaultSetting = @"((-1))";
				colvarIdTamung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdTamung);
				
				TableSchema.TableColumn colvarMaPttt = new TableSchema.TableColumn(schema);
				colvarMaPttt.ColumnName = "ma_pttt";
				colvarMaPttt.DataType = DbType.String;
				colvarMaPttt.MaxLength = 30;
				colvarMaPttt.AutoIncrement = false;
				colvarMaPttt.IsNullable = true;
				colvarMaPttt.IsPrimaryKey = false;
				colvarMaPttt.IsForeignKey = false;
				colvarMaPttt.IsReadOnly = false;
				colvarMaPttt.DefaultSetting = @"";
				colvarMaPttt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaPttt);
				
				TableSchema.TableColumn colvarMaNguonTamung = new TableSchema.TableColumn(schema);
				colvarMaNguonTamung.ColumnName = "ma_nguon_tamung";
				colvarMaNguonTamung.DataType = DbType.String;
				colvarMaNguonTamung.MaxLength = 30;
				colvarMaNguonTamung.AutoIncrement = false;
				colvarMaNguonTamung.IsNullable = true;
				colvarMaNguonTamung.IsPrimaryKey = false;
				colvarMaNguonTamung.IsForeignKey = false;
				colvarMaNguonTamung.IsReadOnly = false;
				colvarMaNguonTamung.DefaultSetting = @"";
				colvarMaNguonTamung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNguonTamung);
				
				TableSchema.TableColumn colvarMaNganhang = new TableSchema.TableColumn(schema);
				colvarMaNganhang.ColumnName = "ma_nganhang";
				colvarMaNganhang.DataType = DbType.String;
				colvarMaNganhang.MaxLength = 30;
				colvarMaNganhang.AutoIncrement = false;
				colvarMaNganhang.IsNullable = true;
				colvarMaNganhang.IsPrimaryKey = false;
				colvarMaNganhang.IsForeignKey = false;
				colvarMaNganhang.IsReadOnly = false;
				colvarMaNganhang.DefaultSetting = @"";
				colvarMaNganhang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNganhang);
				
				TableSchema.TableColumn colvarIdThanhtoan = new TableSchema.TableColumn(schema);
				colvarIdThanhtoan.ColumnName = "id_thanhtoan";
				colvarIdThanhtoan.DataType = DbType.Int64;
				colvarIdThanhtoan.MaxLength = 0;
				colvarIdThanhtoan.AutoIncrement = false;
				colvarIdThanhtoan.IsNullable = true;
				colvarIdThanhtoan.IsPrimaryKey = false;
				colvarIdThanhtoan.IsForeignKey = false;
				colvarIdThanhtoan.IsReadOnly = false;
				colvarIdThanhtoan.DefaultSetting = @"";
				colvarIdThanhtoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdThanhtoan);
				
				TableSchema.TableColumn colvarCode = new TableSchema.TableColumn(schema);
				colvarCode.ColumnName = "code";
				colvarCode.DataType = DbType.String;
				colvarCode.MaxLength = 10;
				colvarCode.AutoIncrement = false;
				colvarCode.IsNullable = true;
				colvarCode.IsPrimaryKey = false;
				colvarCode.IsForeignKey = false;
				colvarCode.IsReadOnly = false;
				
						colvarCode.DefaultSetting = @"(N'')";
				colvarCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCode);
				
				TableSchema.TableColumn colvarIdKkb = new TableSchema.TableColumn(schema);
				colvarIdKkb.ColumnName = "id_kkb";
				colvarIdKkb.DataType = DbType.Int16;
				colvarIdKkb.MaxLength = 0;
				colvarIdKkb.AutoIncrement = false;
				colvarIdKkb.IsNullable = true;
				colvarIdKkb.IsPrimaryKey = false;
				colvarIdKkb.IsForeignKey = false;
				colvarIdKkb.IsReadOnly = false;
				colvarIdKkb.DefaultSetting = @"";
				colvarIdKkb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKkb);
				
				TableSchema.TableColumn colvarTthaiHuy = new TableSchema.TableColumn(schema);
				colvarTthaiHuy.ColumnName = "tthai_huy";
				colvarTthaiHuy.DataType = DbType.Byte;
				colvarTthaiHuy.MaxLength = 0;
				colvarTthaiHuy.AutoIncrement = false;
				colvarTthaiHuy.IsNullable = true;
				colvarTthaiHuy.IsPrimaryKey = false;
				colvarTthaiHuy.IsForeignKey = false;
				colvarTthaiHuy.IsReadOnly = false;
				
						colvarTthaiHuy.DefaultSetting = @"((0))";
				colvarTthaiHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTthaiHuy);
				
				TableSchema.TableColumn colvarNgayHuy = new TableSchema.TableColumn(schema);
				colvarNgayHuy.ColumnName = "ngay_huy";
				colvarNgayHuy.DataType = DbType.DateTime;
				colvarNgayHuy.MaxLength = 0;
				colvarNgayHuy.AutoIncrement = false;
				colvarNgayHuy.IsNullable = true;
				colvarNgayHuy.IsPrimaryKey = false;
				colvarNgayHuy.IsForeignKey = false;
				colvarNgayHuy.IsReadOnly = false;
				colvarNgayHuy.DefaultSetting = @"";
				colvarNgayHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayHuy);
				
				TableSchema.TableColumn colvarNguoiHuy = new TableSchema.TableColumn(schema);
				colvarNguoiHuy.ColumnName = "nguoi_huy";
				colvarNguoiHuy.DataType = DbType.String;
				colvarNguoiHuy.MaxLength = 30;
				colvarNguoiHuy.AutoIncrement = false;
				colvarNguoiHuy.IsNullable = true;
				colvarNguoiHuy.IsPrimaryKey = false;
				colvarNguoiHuy.IsForeignKey = false;
				colvarNguoiHuy.IsReadOnly = false;
				colvarNguoiHuy.DefaultSetting = @"";
				colvarNguoiHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiHuy);
				
				TableSchema.TableColumn colvarLydoHuy = new TableSchema.TableColumn(schema);
				colvarLydoHuy.ColumnName = "lydo_huy";
				colvarLydoHuy.DataType = DbType.String;
				colvarLydoHuy.MaxLength = 30;
				colvarLydoHuy.AutoIncrement = false;
				colvarLydoHuy.IsNullable = true;
				colvarLydoHuy.IsPrimaryKey = false;
				colvarLydoHuy.IsForeignKey = false;
				colvarLydoHuy.IsReadOnly = false;
				colvarLydoHuy.DefaultSetting = @"";
				colvarLydoHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLydoHuy);
				
				TableSchema.TableColumn colvarMaHtttHuy = new TableSchema.TableColumn(schema);
				colvarMaHtttHuy.ColumnName = "ma_httt_huy";
				colvarMaHtttHuy.DataType = DbType.String;
				colvarMaHtttHuy.MaxLength = 30;
				colvarMaHtttHuy.AutoIncrement = false;
				colvarMaHtttHuy.IsNullable = true;
				colvarMaHtttHuy.IsPrimaryKey = false;
				colvarMaHtttHuy.IsForeignKey = false;
				colvarMaHtttHuy.IsReadOnly = false;
				colvarMaHtttHuy.DefaultSetting = @"";
				colvarMaHtttHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaHtttHuy);
				
				TableSchema.TableColumn colvarMaNganhangHuy = new TableSchema.TableColumn(schema);
				colvarMaNganhangHuy.ColumnName = "ma_nganhang_huy";
				colvarMaNganhangHuy.DataType = DbType.String;
				colvarMaNganhangHuy.MaxLength = 30;
				colvarMaNganhangHuy.AutoIncrement = false;
				colvarMaNganhangHuy.IsNullable = true;
				colvarMaNganhangHuy.IsPrimaryKey = false;
				colvarMaNganhangHuy.IsForeignKey = false;
				colvarMaNganhangHuy.IsReadOnly = false;
				colvarMaNganhangHuy.DefaultSetting = @"";
				colvarMaNganhangHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNganhangHuy);
				
				TableSchema.TableColumn colvarTuTrului = new TableSchema.TableColumn(schema);
				colvarTuTrului.ColumnName = "tu_trului";
				colvarTuTrului.DataType = DbType.Boolean;
				colvarTuTrului.MaxLength = 0;
				colvarTuTrului.AutoIncrement = false;
				colvarTuTrului.IsNullable = true;
				colvarTuTrului.IsPrimaryKey = false;
				colvarTuTrului.IsForeignKey = false;
				colvarTuTrului.IsReadOnly = false;
				
						colvarTuTrului.DefaultSetting = @"((0))";
				colvarTuTrului.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuTrului);
				
				TableSchema.TableColumn colvarIdGoi = new TableSchema.TableColumn(schema);
				colvarIdGoi.ColumnName = "id_goi";
				colvarIdGoi.DataType = DbType.Int16;
				colvarIdGoi.MaxLength = 0;
				colvarIdGoi.AutoIncrement = false;
				colvarIdGoi.IsNullable = true;
				colvarIdGoi.IsPrimaryKey = false;
				colvarIdGoi.IsForeignKey = false;
				colvarIdGoi.IsReadOnly = false;
				
						colvarIdGoi.DefaultSetting = @"((-1))";
				colvarIdGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGoi);
				
				TableSchema.TableColumn colvarMaCoso = new TableSchema.TableColumn(schema);
				colvarMaCoso.ColumnName = "ma_coso";
				colvarMaCoso.DataType = DbType.String;
				colvarMaCoso.MaxLength = 30;
				colvarMaCoso.AutoIncrement = false;
				colvarMaCoso.IsNullable = true;
				colvarMaCoso.IsPrimaryKey = false;
				colvarMaCoso.IsForeignKey = false;
				colvarMaCoso.IsReadOnly = false;
				colvarMaCoso.DefaultSetting = @"";
				colvarMaCoso.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaCoso);
				
				TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
				colvarGhiChu.ColumnName = "ghi_chu";
				colvarGhiChu.DataType = DbType.String;
				colvarGhiChu.MaxLength = 100;
				colvarGhiChu.AutoIncrement = false;
				colvarGhiChu.IsNullable = true;
				colvarGhiChu.IsPrimaryKey = false;
				colvarGhiChu.IsForeignKey = false;
				colvarGhiChu.IsReadOnly = false;
				colvarGhiChu.DefaultSetting = @"";
				colvarGhiChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChu);
				
				TableSchema.TableColumn colvarLaTamthu = new TableSchema.TableColumn(schema);
				colvarLaTamthu.ColumnName = "la_tamthu";
				colvarLaTamthu.DataType = DbType.Boolean;
				colvarLaTamthu.MaxLength = 0;
				colvarLaTamthu.AutoIncrement = false;
				colvarLaTamthu.IsNullable = true;
				colvarLaTamthu.IsPrimaryKey = false;
				colvarLaTamthu.IsForeignKey = false;
				colvarLaTamthu.IsReadOnly = false;
				
						colvarLaTamthu.DefaultSetting = @"((0))";
				colvarLaTamthu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLaTamthu);
				
				TableSchema.TableColumn colvarTthaiXuatHddt = new TableSchema.TableColumn(schema);
				colvarTthaiXuatHddt.ColumnName = "tthai_xuat_hddt";
				colvarTthaiXuatHddt.DataType = DbType.Boolean;
				colvarTthaiXuatHddt.MaxLength = 0;
				colvarTthaiXuatHddt.AutoIncrement = false;
				colvarTthaiXuatHddt.IsNullable = true;
				colvarTthaiXuatHddt.IsPrimaryKey = false;
				colvarTthaiXuatHddt.IsForeignKey = false;
				colvarTthaiXuatHddt.IsReadOnly = false;
				colvarTthaiXuatHddt.DefaultSetting = @"";
				colvarTthaiXuatHddt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTthaiXuatHddt);
				
				TableSchema.TableColumn colvarRefId = new TableSchema.TableColumn(schema);
				colvarRefId.ColumnName = "RefId";
				colvarRefId.DataType = DbType.String;
				colvarRefId.MaxLength = 255;
				colvarRefId.AutoIncrement = false;
				colvarRefId.IsNullable = true;
				colvarRefId.IsPrimaryKey = false;
				colvarRefId.IsForeignKey = false;
				colvarRefId.IsReadOnly = false;
				colvarRefId.DefaultSetting = @"";
				colvarRefId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRefId);
				
				TableSchema.TableColumn colvarTransactionId = new TableSchema.TableColumn(schema);
				colvarTransactionId.ColumnName = "transaction_id";
				colvarTransactionId.DataType = DbType.String;
				colvarTransactionId.MaxLength = 255;
				colvarTransactionId.AutoIncrement = false;
				colvarTransactionId.IsNullable = true;
				colvarTransactionId.IsPrimaryKey = false;
				colvarTransactionId.IsForeignKey = false;
				colvarTransactionId.IsReadOnly = false;
				colvarTransactionId.DefaultSetting = @"";
				colvarTransactionId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTransactionId);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("noitru_tamung",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("SoTien")]
		[Bindable(true)]
		public decimal? SoTien 
		{
			get { return GetColumnValue<decimal?>(Columns.SoTien); }
			set { SetColumnValue(Columns.SoTien, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public byte TrangThai 
		{
			get { return GetColumnValue<byte>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("NgayTamung")]
		[Bindable(true)]
		public DateTime? NgayTamung 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTamung); }
			set { SetColumnValue(Columns.NgayTamung, value); }
		}
		  
		[XmlAttribute("KieuTamung")]
		[Bindable(true)]
		public byte? KieuTamung 
		{
			get { return GetColumnValue<byte?>(Columns.KieuTamung); }
			set { SetColumnValue(Columns.KieuTamung, value); }
		}
		  
		[XmlAttribute("MotaThem")]
		[Bindable(true)]
		public string MotaThem 
		{
			get { return GetColumnValue<string>(Columns.MotaThem); }
			set { SetColumnValue(Columns.MotaThem, value); }
		}
		  
		[XmlAttribute("IdTnv")]
		[Bindable(true)]
		public int? IdTnv 
		{
			get { return GetColumnValue<int?>(Columns.IdTnv); }
			set { SetColumnValue(Columns.IdTnv, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime NgayTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("IdKhoanoitru")]
		[Bindable(true)]
		public short? IdKhoanoitru 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoanoitru); }
			set { SetColumnValue(Columns.IdKhoanoitru, value); }
		}
		  
		[XmlAttribute("IdBuonggiuong")]
		[Bindable(true)]
		public long? IdBuonggiuong 
		{
			get { return GetColumnValue<long?>(Columns.IdBuonggiuong); }
			set { SetColumnValue(Columns.IdBuonggiuong, value); }
		}
		  
		[XmlAttribute("IdBuong")]
		[Bindable(true)]
		public int? IdBuong 
		{
			get { return GetColumnValue<int?>(Columns.IdBuong); }
			set { SetColumnValue(Columns.IdBuong, value); }
		}
		  
		[XmlAttribute("IdGiuong")]
		[Bindable(true)]
		public int? IdGiuong 
		{
			get { return GetColumnValue<int?>(Columns.IdGiuong); }
			set { SetColumnValue(Columns.IdGiuong, value); }
		}
		  
		[XmlAttribute("Noitru")]
		[Bindable(true)]
		public byte? Noitru 
		{
			get { return GetColumnValue<byte?>(Columns.Noitru); }
			set { SetColumnValue(Columns.Noitru, value); }
		}
		  
		[XmlAttribute("IdTamung")]
		[Bindable(true)]
		public long? IdTamung 
		{
			get { return GetColumnValue<long?>(Columns.IdTamung); }
			set { SetColumnValue(Columns.IdTamung, value); }
		}
		  
		[XmlAttribute("MaPttt")]
		[Bindable(true)]
		public string MaPttt 
		{
			get { return GetColumnValue<string>(Columns.MaPttt); }
			set { SetColumnValue(Columns.MaPttt, value); }
		}
		  
		[XmlAttribute("MaNguonTamung")]
		[Bindable(true)]
		public string MaNguonTamung 
		{
			get { return GetColumnValue<string>(Columns.MaNguonTamung); }
			set { SetColumnValue(Columns.MaNguonTamung, value); }
		}
		  
		[XmlAttribute("MaNganhang")]
		[Bindable(true)]
		public string MaNganhang 
		{
			get { return GetColumnValue<string>(Columns.MaNganhang); }
			set { SetColumnValue(Columns.MaNganhang, value); }
		}
		  
		[XmlAttribute("IdThanhtoan")]
		[Bindable(true)]
		public long? IdThanhtoan 
		{
			get { return GetColumnValue<long?>(Columns.IdThanhtoan); }
			set { SetColumnValue(Columns.IdThanhtoan, value); }
		}
		  
		[XmlAttribute("Code")]
		[Bindable(true)]
		public string Code 
		{
			get { return GetColumnValue<string>(Columns.Code); }
			set { SetColumnValue(Columns.Code, value); }
		}
		  
		[XmlAttribute("IdKkb")]
		[Bindable(true)]
		public short? IdKkb 
		{
			get { return GetColumnValue<short?>(Columns.IdKkb); }
			set { SetColumnValue(Columns.IdKkb, value); }
		}
		  
		[XmlAttribute("TthaiHuy")]
		[Bindable(true)]
		public byte? TthaiHuy 
		{
			get { return GetColumnValue<byte?>(Columns.TthaiHuy); }
			set { SetColumnValue(Columns.TthaiHuy, value); }
		}
		  
		[XmlAttribute("NgayHuy")]
		[Bindable(true)]
		public DateTime? NgayHuy 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayHuy); }
			set { SetColumnValue(Columns.NgayHuy, value); }
		}
		  
		[XmlAttribute("NguoiHuy")]
		[Bindable(true)]
		public string NguoiHuy 
		{
			get { return GetColumnValue<string>(Columns.NguoiHuy); }
			set { SetColumnValue(Columns.NguoiHuy, value); }
		}
		  
		[XmlAttribute("LydoHuy")]
		[Bindable(true)]
		public string LydoHuy 
		{
			get { return GetColumnValue<string>(Columns.LydoHuy); }
			set { SetColumnValue(Columns.LydoHuy, value); }
		}
		  
		[XmlAttribute("MaHtttHuy")]
		[Bindable(true)]
		public string MaHtttHuy 
		{
			get { return GetColumnValue<string>(Columns.MaHtttHuy); }
			set { SetColumnValue(Columns.MaHtttHuy, value); }
		}
		  
		[XmlAttribute("MaNganhangHuy")]
		[Bindable(true)]
		public string MaNganhangHuy 
		{
			get { return GetColumnValue<string>(Columns.MaNganhangHuy); }
			set { SetColumnValue(Columns.MaNganhangHuy, value); }
		}
		  
		[XmlAttribute("TuTrului")]
		[Bindable(true)]
		public bool? TuTrului 
		{
			get { return GetColumnValue<bool?>(Columns.TuTrului); }
			set { SetColumnValue(Columns.TuTrului, value); }
		}
		  
		[XmlAttribute("IdGoi")]
		[Bindable(true)]
		public short? IdGoi 
		{
			get { return GetColumnValue<short?>(Columns.IdGoi); }
			set { SetColumnValue(Columns.IdGoi, value); }
		}
		  
		[XmlAttribute("MaCoso")]
		[Bindable(true)]
		public string MaCoso 
		{
			get { return GetColumnValue<string>(Columns.MaCoso); }
			set { SetColumnValue(Columns.MaCoso, value); }
		}
		  
		[XmlAttribute("GhiChu")]
		[Bindable(true)]
		public string GhiChu 
		{
			get { return GetColumnValue<string>(Columns.GhiChu); }
			set { SetColumnValue(Columns.GhiChu, value); }
		}
		  
		[XmlAttribute("LaTamthu")]
		[Bindable(true)]
		public bool? LaTamthu 
		{
			get { return GetColumnValue<bool?>(Columns.LaTamthu); }
			set { SetColumnValue(Columns.LaTamthu, value); }
		}
		  
		[XmlAttribute("TthaiXuatHddt")]
		[Bindable(true)]
		public bool? TthaiXuatHddt 
		{
			get { return GetColumnValue<bool?>(Columns.TthaiXuatHddt); }
			set { SetColumnValue(Columns.TthaiXuatHddt, value); }
		}
		  
		[XmlAttribute("RefId")]
		[Bindable(true)]
		public string RefId 
		{
			get { return GetColumnValue<string>(Columns.RefId); }
			set { SetColumnValue(Columns.RefId, value); }
		}
		  
		[XmlAttribute("TransactionId")]
		[Bindable(true)]
		public string TransactionId 
		{
			get { return GetColumnValue<string>(Columns.TransactionId); }
			set { SetColumnValue(Columns.TransactionId, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long varIdBenhnhan,string varMaLuotkham,decimal? varSoTien,byte varTrangThai,DateTime? varNgayTamung,byte? varKieuTamung,string varMotaThem,int? varIdTnv,string varNguoiSua,DateTime? varNgaySua,string varNguoiTao,DateTime varNgayTao,short? varIdKhoanoitru,long? varIdBuonggiuong,int? varIdBuong,int? varIdGiuong,byte? varNoitru,long? varIdTamung,string varMaPttt,string varMaNguonTamung,string varMaNganhang,long? varIdThanhtoan,string varCode,short? varIdKkb,byte? varTthaiHuy,DateTime? varNgayHuy,string varNguoiHuy,string varLydoHuy,string varMaHtttHuy,string varMaNganhangHuy,bool? varTuTrului,short? varIdGoi,string varMaCoso,string varGhiChu,bool? varLaTamthu,bool? varTthaiXuatHddt,string varRefId,string varTransactionId)
		{
			NoitruTamung item = new NoitruTamung();
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.MaLuotkham = varMaLuotkham;
			
			item.SoTien = varSoTien;
			
			item.TrangThai = varTrangThai;
			
			item.NgayTamung = varNgayTamung;
			
			item.KieuTamung = varKieuTamung;
			
			item.MotaThem = varMotaThem;
			
			item.IdTnv = varIdTnv;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.IdKhoanoitru = varIdKhoanoitru;
			
			item.IdBuonggiuong = varIdBuonggiuong;
			
			item.IdBuong = varIdBuong;
			
			item.IdGiuong = varIdGiuong;
			
			item.Noitru = varNoitru;
			
			item.IdTamung = varIdTamung;
			
			item.MaPttt = varMaPttt;
			
			item.MaNguonTamung = varMaNguonTamung;
			
			item.MaNganhang = varMaNganhang;
			
			item.IdThanhtoan = varIdThanhtoan;
			
			item.Code = varCode;
			
			item.IdKkb = varIdKkb;
			
			item.TthaiHuy = varTthaiHuy;
			
			item.NgayHuy = varNgayHuy;
			
			item.NguoiHuy = varNguoiHuy;
			
			item.LydoHuy = varLydoHuy;
			
			item.MaHtttHuy = varMaHtttHuy;
			
			item.MaNganhangHuy = varMaNganhangHuy;
			
			item.TuTrului = varTuTrului;
			
			item.IdGoi = varIdGoi;
			
			item.MaCoso = varMaCoso;
			
			item.GhiChu = varGhiChu;
			
			item.LaTamthu = varLaTamthu;
			
			item.TthaiXuatHddt = varTthaiXuatHddt;
			
			item.RefId = varRefId;
			
			item.TransactionId = varTransactionId;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,long varIdBenhnhan,string varMaLuotkham,decimal? varSoTien,byte varTrangThai,DateTime? varNgayTamung,byte? varKieuTamung,string varMotaThem,int? varIdTnv,string varNguoiSua,DateTime? varNgaySua,string varNguoiTao,DateTime varNgayTao,short? varIdKhoanoitru,long? varIdBuonggiuong,int? varIdBuong,int? varIdGiuong,byte? varNoitru,long? varIdTamung,string varMaPttt,string varMaNguonTamung,string varMaNganhang,long? varIdThanhtoan,string varCode,short? varIdKkb,byte? varTthaiHuy,DateTime? varNgayHuy,string varNguoiHuy,string varLydoHuy,string varMaHtttHuy,string varMaNganhangHuy,bool? varTuTrului,short? varIdGoi,string varMaCoso,string varGhiChu,bool? varLaTamthu,bool? varTthaiXuatHddt,string varRefId,string varTransactionId)
		{
			NoitruTamung item = new NoitruTamung();
			
				item.Id = varId;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.SoTien = varSoTien;
			
				item.TrangThai = varTrangThai;
			
				item.NgayTamung = varNgayTamung;
			
				item.KieuTamung = varKieuTamung;
			
				item.MotaThem = varMotaThem;
			
				item.IdTnv = varIdTnv;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.IdKhoanoitru = varIdKhoanoitru;
			
				item.IdBuonggiuong = varIdBuonggiuong;
			
				item.IdBuong = varIdBuong;
			
				item.IdGiuong = varIdGiuong;
			
				item.Noitru = varNoitru;
			
				item.IdTamung = varIdTamung;
			
				item.MaPttt = varMaPttt;
			
				item.MaNguonTamung = varMaNguonTamung;
			
				item.MaNganhang = varMaNganhang;
			
				item.IdThanhtoan = varIdThanhtoan;
			
				item.Code = varCode;
			
				item.IdKkb = varIdKkb;
			
				item.TthaiHuy = varTthaiHuy;
			
				item.NgayHuy = varNgayHuy;
			
				item.NguoiHuy = varNguoiHuy;
			
				item.LydoHuy = varLydoHuy;
			
				item.MaHtttHuy = varMaHtttHuy;
			
				item.MaNganhangHuy = varMaNganhangHuy;
			
				item.TuTrului = varTuTrului;
			
				item.IdGoi = varIdGoi;
			
				item.MaCoso = varMaCoso;
			
				item.GhiChu = varGhiChu;
			
				item.LaTamthu = varLaTamthu;
			
				item.TthaiXuatHddt = varTthaiXuatHddt;
			
				item.RefId = varRefId;
			
				item.TransactionId = varTransactionId;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn SoTienColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTamungColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuTamungColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaThemColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn IdTnvColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoanoitruColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBuonggiuongColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBuongColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGiuongColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn NoitruColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn IdTamungColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn MaPtttColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNguonTamungColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNganhangColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn IdThanhtoanColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn CodeColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKkbColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn TthaiHuyColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayHuyColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiHuyColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn LydoHuyColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn MaHtttHuyColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNganhangHuyColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn TuTruluiColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGoiColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn MaCosoColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn LaTamthuColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn TthaiXuatHddtColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn RefIdColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn TransactionIdColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string SoTien = @"so_tien";
			 public static string TrangThai = @"trang_thai";
			 public static string NgayTamung = @"ngay_tamung";
			 public static string KieuTamung = @"kieu_tamung";
			 public static string MotaThem = @"mota_them";
			 public static string IdTnv = @"id_tnv";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string NgaySua = @"ngay_sua";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgayTao = @"ngay_tao";
			 public static string IdKhoanoitru = @"id_khoanoitru";
			 public static string IdBuonggiuong = @"id_buonggiuong";
			 public static string IdBuong = @"id_buong";
			 public static string IdGiuong = @"id_giuong";
			 public static string Noitru = @"noitru";
			 public static string IdTamung = @"id_tamung";
			 public static string MaPttt = @"ma_pttt";
			 public static string MaNguonTamung = @"ma_nguon_tamung";
			 public static string MaNganhang = @"ma_nganhang";
			 public static string IdThanhtoan = @"id_thanhtoan";
			 public static string Code = @"code";
			 public static string IdKkb = @"id_kkb";
			 public static string TthaiHuy = @"tthai_huy";
			 public static string NgayHuy = @"ngay_huy";
			 public static string NguoiHuy = @"nguoi_huy";
			 public static string LydoHuy = @"lydo_huy";
			 public static string MaHtttHuy = @"ma_httt_huy";
			 public static string MaNganhangHuy = @"ma_nganhang_huy";
			 public static string TuTrului = @"tu_trului";
			 public static string IdGoi = @"id_goi";
			 public static string MaCoso = @"ma_coso";
			 public static string GhiChu = @"ghi_chu";
			 public static string LaTamthu = @"la_tamthu";
			 public static string TthaiXuatHddt = @"tthai_xuat_hddt";
			 public static string RefId = @"RefId";
			 public static string TransactionId = @"transaction_id";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
