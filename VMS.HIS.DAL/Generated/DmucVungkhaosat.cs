using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the DmucVungkhaosat class.
	/// </summary>
    [Serializable]
	public partial class DmucVungkhaosatCollection : ActiveList<DmucVungkhaosat, DmucVungkhaosatCollection>
	{	   
		public DmucVungkhaosatCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DmucVungkhaosatCollection</returns>
		public DmucVungkhaosatCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DmucVungkhaosat o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the dmuc_vungkhaosat table.
	/// </summary>
	[Serializable]
	public partial class DmucVungkhaosat : ActiveRecord<DmucVungkhaosat>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DmucVungkhaosat()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DmucVungkhaosat(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DmucVungkhaosat(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DmucVungkhaosat(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("dmuc_vungkhaosat", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "Id";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarMaLoaidvu = new TableSchema.TableColumn(schema);
				colvarMaLoaidvu.ColumnName = "ma_loaidvu";
				colvarMaLoaidvu.DataType = DbType.String;
				colvarMaLoaidvu.MaxLength = 30;
				colvarMaLoaidvu.AutoIncrement = false;
				colvarMaLoaidvu.IsNullable = true;
				colvarMaLoaidvu.IsPrimaryKey = false;
				colvarMaLoaidvu.IsForeignKey = false;
				colvarMaLoaidvu.IsReadOnly = false;
				colvarMaLoaidvu.DefaultSetting = @"";
				colvarMaLoaidvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLoaidvu);
				
				TableSchema.TableColumn colvarMaKhaosat = new TableSchema.TableColumn(schema);
				colvarMaKhaosat.ColumnName = "ma_khaosat";
				colvarMaKhaosat.DataType = DbType.String;
				colvarMaKhaosat.MaxLength = 30;
				colvarMaKhaosat.AutoIncrement = false;
				colvarMaKhaosat.IsNullable = false;
				colvarMaKhaosat.IsPrimaryKey = false;
				colvarMaKhaosat.IsForeignKey = false;
				colvarMaKhaosat.IsReadOnly = false;
				colvarMaKhaosat.DefaultSetting = @"";
				colvarMaKhaosat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKhaosat);
				
				TableSchema.TableColumn colvarTenVungkhaosat = new TableSchema.TableColumn(schema);
				colvarTenVungkhaosat.ColumnName = "ten_vungkhaosat";
				colvarTenVungkhaosat.DataType = DbType.String;
				colvarTenVungkhaosat.MaxLength = 200;
				colvarTenVungkhaosat.AutoIncrement = false;
				colvarTenVungkhaosat.IsNullable = false;
				colvarTenVungkhaosat.IsPrimaryKey = false;
				colvarTenVungkhaosat.IsForeignKey = false;
				colvarTenVungkhaosat.IsReadOnly = false;
				colvarTenVungkhaosat.DefaultSetting = @"";
				colvarTenVungkhaosat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenVungkhaosat);
				
				TableSchema.TableColumn colvarTenfileKq = new TableSchema.TableColumn(schema);
				colvarTenfileKq.ColumnName = "tenfile_KQ";
				colvarTenfileKq.DataType = DbType.String;
				colvarTenfileKq.MaxLength = 200;
				colvarTenfileKq.AutoIncrement = false;
				colvarTenfileKq.IsNullable = false;
				colvarTenfileKq.IsPrimaryKey = false;
				colvarTenfileKq.IsForeignKey = false;
				colvarTenfileKq.IsReadOnly = false;
				colvarTenfileKq.DefaultSetting = @"";
				colvarTenfileKq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenfileKq);
				
				TableSchema.TableColumn colvarMota = new TableSchema.TableColumn(schema);
				colvarMota.ColumnName = "mota";
				colvarMota.DataType = DbType.String;
				colvarMota.MaxLength = 1073741823;
				colvarMota.AutoIncrement = false;
				colvarMota.IsNullable = false;
				colvarMota.IsPrimaryKey = false;
				colvarMota.IsForeignKey = false;
				colvarMota.IsReadOnly = false;
				colvarMota.DefaultSetting = @"";
				colvarMota.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMota);
				
				TableSchema.TableColumn colvarMotaHtml = new TableSchema.TableColumn(schema);
				colvarMotaHtml.ColumnName = "mota_Html";
				colvarMotaHtml.DataType = DbType.String;
				colvarMotaHtml.MaxLength = 1073741823;
				colvarMotaHtml.AutoIncrement = false;
				colvarMotaHtml.IsNullable = true;
				colvarMotaHtml.IsPrimaryKey = false;
				colvarMotaHtml.IsForeignKey = false;
				colvarMotaHtml.IsReadOnly = false;
				colvarMotaHtml.DefaultSetting = @"";
				colvarMotaHtml.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaHtml);
				
				TableSchema.TableColumn colvarKetLuan = new TableSchema.TableColumn(schema);
				colvarKetLuan.ColumnName = "ket_luan";
				colvarKetLuan.DataType = DbType.String;
				colvarKetLuan.MaxLength = 255;
				colvarKetLuan.AutoIncrement = false;
				colvarKetLuan.IsNullable = true;
				colvarKetLuan.IsPrimaryKey = false;
				colvarKetLuan.IsForeignKey = false;
				colvarKetLuan.IsReadOnly = false;
				colvarKetLuan.DefaultSetting = @"";
				colvarKetLuan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKetLuan);
				
				TableSchema.TableColumn colvarDeNghi = new TableSchema.TableColumn(schema);
				colvarDeNghi.ColumnName = "de_nghi";
				colvarDeNghi.DataType = DbType.String;
				colvarDeNghi.MaxLength = 255;
				colvarDeNghi.AutoIncrement = false;
				colvarDeNghi.IsNullable = true;
				colvarDeNghi.IsPrimaryKey = false;
				colvarDeNghi.IsForeignKey = false;
				colvarDeNghi.IsReadOnly = false;
				colvarDeNghi.DefaultSetting = @"";
				colvarDeNghi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDeNghi);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.Boolean;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = false;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				
						colvarTrangThai.DefaultSetting = @"((1))";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarKichthuocanh = new TableSchema.TableColumn(schema);
				colvarKichthuocanh.ColumnName = "Kichthuocanh";
				colvarKichthuocanh.DataType = DbType.String;
				colvarKichthuocanh.MaxLength = 500;
				colvarKichthuocanh.AutoIncrement = false;
				colvarKichthuocanh.IsNullable = true;
				colvarKichthuocanh.IsPrimaryKey = false;
				colvarKichthuocanh.IsForeignKey = false;
				colvarKichthuocanh.IsReadOnly = false;
				colvarKichthuocanh.DefaultSetting = @"";
				colvarKichthuocanh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKichthuocanh);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = false;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("dmuc_vungkhaosat",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("MaLoaidvu")]
		[Bindable(true)]
		public string MaLoaidvu 
		{
			get { return GetColumnValue<string>(Columns.MaLoaidvu); }
			set { SetColumnValue(Columns.MaLoaidvu, value); }
		}
		  
		[XmlAttribute("MaKhaosat")]
		[Bindable(true)]
		public string MaKhaosat 
		{
			get { return GetColumnValue<string>(Columns.MaKhaosat); }
			set { SetColumnValue(Columns.MaKhaosat, value); }
		}
		  
		[XmlAttribute("TenVungkhaosat")]
		[Bindable(true)]
		public string TenVungkhaosat 
		{
			get { return GetColumnValue<string>(Columns.TenVungkhaosat); }
			set { SetColumnValue(Columns.TenVungkhaosat, value); }
		}
		  
		[XmlAttribute("TenfileKq")]
		[Bindable(true)]
		public string TenfileKq 
		{
			get { return GetColumnValue<string>(Columns.TenfileKq); }
			set { SetColumnValue(Columns.TenfileKq, value); }
		}
		  
		[XmlAttribute("Mota")]
		[Bindable(true)]
		public string Mota 
		{
			get { return GetColumnValue<string>(Columns.Mota); }
			set { SetColumnValue(Columns.Mota, value); }
		}
		  
		[XmlAttribute("MotaHtml")]
		[Bindable(true)]
		public string MotaHtml 
		{
			get { return GetColumnValue<string>(Columns.MotaHtml); }
			set { SetColumnValue(Columns.MotaHtml, value); }
		}
		  
		[XmlAttribute("KetLuan")]
		[Bindable(true)]
		public string KetLuan 
		{
			get { return GetColumnValue<string>(Columns.KetLuan); }
			set { SetColumnValue(Columns.KetLuan, value); }
		}
		  
		[XmlAttribute("DeNghi")]
		[Bindable(true)]
		public string DeNghi 
		{
			get { return GetColumnValue<string>(Columns.DeNghi); }
			set { SetColumnValue(Columns.DeNghi, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public bool TrangThai 
		{
			get { return GetColumnValue<bool>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("Kichthuocanh")]
		[Bindable(true)]
		public string Kichthuocanh 
		{
			get { return GetColumnValue<string>(Columns.Kichthuocanh); }
			set { SetColumnValue(Columns.Kichthuocanh, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime NgayTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaLoaidvu,string varMaKhaosat,string varTenVungkhaosat,string varTenfileKq,string varMota,string varMotaHtml,string varKetLuan,string varDeNghi,bool varTrangThai,string varKichthuocanh,string varNguoiTao,DateTime varNgayTao,DateTime? varNgaySua,string varNguoiSua)
		{
			DmucVungkhaosat item = new DmucVungkhaosat();
			
			item.MaLoaidvu = varMaLoaidvu;
			
			item.MaKhaosat = varMaKhaosat;
			
			item.TenVungkhaosat = varTenVungkhaosat;
			
			item.TenfileKq = varTenfileKq;
			
			item.Mota = varMota;
			
			item.MotaHtml = varMotaHtml;
			
			item.KetLuan = varKetLuan;
			
			item.DeNghi = varDeNghi;
			
			item.TrangThai = varTrangThai;
			
			item.Kichthuocanh = varKichthuocanh;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,string varMaLoaidvu,string varMaKhaosat,string varTenVungkhaosat,string varTenfileKq,string varMota,string varMotaHtml,string varKetLuan,string varDeNghi,bool varTrangThai,string varKichthuocanh,string varNguoiTao,DateTime varNgayTao,DateTime? varNgaySua,string varNguoiSua)
		{
			DmucVungkhaosat item = new DmucVungkhaosat();
			
				item.Id = varId;
			
				item.MaLoaidvu = varMaLoaidvu;
			
				item.MaKhaosat = varMaKhaosat;
			
				item.TenVungkhaosat = varTenVungkhaosat;
			
				item.TenfileKq = varTenfileKq;
			
				item.Mota = varMota;
			
				item.MotaHtml = varMotaHtml;
			
				item.KetLuan = varKetLuan;
			
				item.DeNghi = varDeNghi;
			
				item.TrangThai = varTrangThai;
			
				item.Kichthuocanh = varKichthuocanh;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLoaidvuColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhaosatColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TenVungkhaosatColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn TenfileKqColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaHtmlColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn KetLuanColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn DeNghiColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn KichthuocanhColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"Id";
			 public static string MaLoaidvu = @"ma_loaidvu";
			 public static string MaKhaosat = @"ma_khaosat";
			 public static string TenVungkhaosat = @"ten_vungkhaosat";
			 public static string TenfileKq = @"tenfile_KQ";
			 public static string Mota = @"mota";
			 public static string MotaHtml = @"mota_Html";
			 public static string KetLuan = @"ket_luan";
			 public static string DeNghi = @"de_nghi";
			 public static string TrangThai = @"trang_thai";
			 public static string Kichthuocanh = @"Kichthuocanh";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgayTao = @"ngay_tao";
			 public static string NgaySua = @"ngay_sua";
			 public static string NguoiSua = @"nguoi_sua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
