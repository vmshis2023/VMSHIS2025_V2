using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the MethaKhamDtri class.
	/// </summary>
    [Serializable]
	public partial class MethaKhamDtriCollection : ActiveList<MethaKhamDtri, MethaKhamDtriCollection>
	{	   
		public MethaKhamDtriCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>MethaKhamDtriCollection</returns>
		public MethaKhamDtriCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                MethaKhamDtri o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the metha_kham_dtri table.
	/// </summary>
	[Serializable]
	public partial class MethaKhamDtri : ActiveRecord<MethaKhamDtri>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public MethaKhamDtri()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public MethaKhamDtri(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public MethaKhamDtri(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public MethaKhamDtri(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("metha_kham_dtri", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdKham = new TableSchema.TableColumn(schema);
				colvarIdKham.ColumnName = "id_kham";
				colvarIdKham.DataType = DbType.Int64;
				colvarIdKham.MaxLength = 0;
				colvarIdKham.AutoIncrement = true;
				colvarIdKham.IsNullable = false;
				colvarIdKham.IsPrimaryKey = true;
				colvarIdKham.IsForeignKey = false;
				colvarIdKham.IsReadOnly = false;
				colvarIdKham.DefaultSetting = @"";
				colvarIdKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKham);
				
				TableSchema.TableColumn colvarMaDieutri = new TableSchema.TableColumn(schema);
				colvarMaDieutri.ColumnName = "ma_dieutri";
				colvarMaDieutri.DataType = DbType.String;
				colvarMaDieutri.MaxLength = 20;
				colvarMaDieutri.AutoIncrement = false;
				colvarMaDieutri.IsNullable = false;
				colvarMaDieutri.IsPrimaryKey = false;
				colvarMaDieutri.IsForeignKey = false;
				colvarMaDieutri.IsReadOnly = false;
				colvarMaDieutri.DefaultSetting = @"";
				colvarMaDieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDieutri);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarMaLoaikham = new TableSchema.TableColumn(schema);
				colvarMaLoaikham.ColumnName = "ma_loaikham";
				colvarMaLoaikham.DataType = DbType.String;
				colvarMaLoaikham.MaxLength = 10;
				colvarMaLoaikham.AutoIncrement = false;
				colvarMaLoaikham.IsNullable = false;
				colvarMaLoaikham.IsPrimaryKey = false;
				colvarMaLoaikham.IsForeignKey = false;
				colvarMaLoaikham.IsReadOnly = false;
				colvarMaLoaikham.DefaultSetting = @"";
				colvarMaLoaikham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLoaikham);
				
				TableSchema.TableColumn colvarHuongDexuat = new TableSchema.TableColumn(schema);
				colvarHuongDexuat.ColumnName = "huong_dexuat";
				colvarHuongDexuat.DataType = DbType.String;
				colvarHuongDexuat.MaxLength = 10;
				colvarHuongDexuat.AutoIncrement = false;
				colvarHuongDexuat.IsNullable = true;
				colvarHuongDexuat.IsPrimaryKey = false;
				colvarHuongDexuat.IsForeignKey = false;
				colvarHuongDexuat.IsReadOnly = false;
				colvarHuongDexuat.DefaultSetting = @"";
				colvarHuongDexuat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHuongDexuat);
				
				TableSchema.TableColumn colvarSongayKham = new TableSchema.TableColumn(schema);
				colvarSongayKham.ColumnName = "songay_kham";
				colvarSongayKham.DataType = DbType.Int16;
				colvarSongayKham.MaxLength = 0;
				colvarSongayKham.AutoIncrement = false;
				colvarSongayKham.IsNullable = true;
				colvarSongayKham.IsPrimaryKey = false;
				colvarSongayKham.IsForeignKey = false;
				colvarSongayKham.IsReadOnly = false;
				colvarSongayKham.DefaultSetting = @"";
				colvarSongayKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSongayKham);
				
				TableSchema.TableColumn colvarNgayBatdau = new TableSchema.TableColumn(schema);
				colvarNgayBatdau.ColumnName = "ngay_batdau";
				colvarNgayBatdau.DataType = DbType.DateTime;
				colvarNgayBatdau.MaxLength = 0;
				colvarNgayBatdau.AutoIncrement = false;
				colvarNgayBatdau.IsNullable = true;
				colvarNgayBatdau.IsPrimaryKey = false;
				colvarNgayBatdau.IsForeignKey = false;
				colvarNgayBatdau.IsReadOnly = false;
				colvarNgayBatdau.DefaultSetting = @"";
				colvarNgayBatdau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayBatdau);
				
				TableSchema.TableColumn colvarNgayKetthuc = new TableSchema.TableColumn(schema);
				colvarNgayKetthuc.ColumnName = "ngay_ketthuc";
				colvarNgayKetthuc.DataType = DbType.DateTime;
				colvarNgayKetthuc.MaxLength = 0;
				colvarNgayKetthuc.AutoIncrement = false;
				colvarNgayKetthuc.IsNullable = true;
				colvarNgayKetthuc.IsPrimaryKey = false;
				colvarNgayKetthuc.IsForeignKey = false;
				colvarNgayKetthuc.IsReadOnly = false;
				colvarNgayKetthuc.DefaultSetting = @"";
				colvarNgayKetthuc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayKetthuc);
				
				TableSchema.TableColumn colvarIdBacsyKham = new TableSchema.TableColumn(schema);
				colvarIdBacsyKham.ColumnName = "id_bacsy_kham";
				colvarIdBacsyKham.DataType = DbType.Int16;
				colvarIdBacsyKham.MaxLength = 0;
				colvarIdBacsyKham.AutoIncrement = false;
				colvarIdBacsyKham.IsNullable = false;
				colvarIdBacsyKham.IsPrimaryKey = false;
				colvarIdBacsyKham.IsForeignKey = false;
				colvarIdBacsyKham.IsReadOnly = false;
				colvarIdBacsyKham.DefaultSetting = @"";
				colvarIdBacsyKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBacsyKham);
				
				TableSchema.TableColumn colvarNgaykhamGannhat = new TableSchema.TableColumn(schema);
				colvarNgaykhamGannhat.ColumnName = "ngaykham_gannhat";
				colvarNgaykhamGannhat.DataType = DbType.DateTime;
				colvarNgaykhamGannhat.MaxLength = 0;
				colvarNgaykhamGannhat.AutoIncrement = false;
				colvarNgaykhamGannhat.IsNullable = true;
				colvarNgaykhamGannhat.IsPrimaryKey = false;
				colvarNgaykhamGannhat.IsForeignKey = false;
				colvarNgaykhamGannhat.IsReadOnly = false;
				colvarNgaykhamGannhat.DefaultSetting = @"";
				colvarNgaykhamGannhat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaykhamGannhat);
				
				TableSchema.TableColumn colvarKThemmatuy = new TableSchema.TableColumn(schema);
				colvarKThemmatuy.ColumnName = "k_themmatuy";
				colvarKThemmatuy.DataType = DbType.Byte;
				colvarKThemmatuy.MaxLength = 0;
				colvarKThemmatuy.AutoIncrement = false;
				colvarKThemmatuy.IsNullable = true;
				colvarKThemmatuy.IsPrimaryKey = false;
				colvarKThemmatuy.IsForeignKey = false;
				colvarKThemmatuy.IsReadOnly = false;
				colvarKThemmatuy.DefaultSetting = @"";
				colvarKThemmatuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKThemmatuy);
				
				TableSchema.TableColumn colvarKNgatmuiorhathoi = new TableSchema.TableColumn(schema);
				colvarKNgatmuiorhathoi.ColumnName = "k_ngatmuiorhathoi";
				colvarKNgatmuiorhathoi.DataType = DbType.Byte;
				colvarKNgatmuiorhathoi.MaxLength = 0;
				colvarKNgatmuiorhathoi.AutoIncrement = false;
				colvarKNgatmuiorhathoi.IsNullable = true;
				colvarKNgatmuiorhathoi.IsPrimaryKey = false;
				colvarKNgatmuiorhathoi.IsForeignKey = false;
				colvarKNgatmuiorhathoi.IsReadOnly = false;
				colvarKNgatmuiorhathoi.DefaultSetting = @"";
				colvarKNgatmuiorhathoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKNgatmuiorhathoi);
				
				TableSchema.TableColumn colvarKChaynuocmat = new TableSchema.TableColumn(schema);
				colvarKChaynuocmat.ColumnName = "k_chaynuocmat";
				colvarKChaynuocmat.DataType = DbType.Byte;
				colvarKChaynuocmat.MaxLength = 0;
				colvarKChaynuocmat.AutoIncrement = false;
				colvarKChaynuocmat.IsNullable = true;
				colvarKChaynuocmat.IsPrimaryKey = false;
				colvarKChaynuocmat.IsForeignKey = false;
				colvarKChaynuocmat.IsReadOnly = false;
				colvarKChaynuocmat.DefaultSetting = @"";
				colvarKChaynuocmat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKChaynuocmat);
				
				TableSchema.TableColumn colvarKDaucoorchuotrut = new TableSchema.TableColumn(schema);
				colvarKDaucoorchuotrut.ColumnName = "k_daucoorchuotrut";
				colvarKDaucoorchuotrut.DataType = DbType.Byte;
				colvarKDaucoorchuotrut.MaxLength = 0;
				colvarKDaucoorchuotrut.AutoIncrement = false;
				colvarKDaucoorchuotrut.IsNullable = true;
				colvarKDaucoorchuotrut.IsPrimaryKey = false;
				colvarKDaucoorchuotrut.IsForeignKey = false;
				colvarKDaucoorchuotrut.IsReadOnly = false;
				colvarKDaucoorchuotrut.DefaultSetting = @"";
				colvarKDaucoorchuotrut.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKDaucoorchuotrut);
				
				TableSchema.TableColumn colvarKCocungbung = new TableSchema.TableColumn(schema);
				colvarKCocungbung.ColumnName = "k_cocungbung";
				colvarKCocungbung.DataType = DbType.Byte;
				colvarKCocungbung.MaxLength = 0;
				colvarKCocungbung.AutoIncrement = false;
				colvarKCocungbung.IsNullable = true;
				colvarKCocungbung.IsPrimaryKey = false;
				colvarKCocungbung.IsForeignKey = false;
				colvarKCocungbung.IsReadOnly = false;
				colvarKCocungbung.DefaultSetting = @"";
				colvarKCocungbung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKCocungbung);
				
				TableSchema.TableColumn colvarKBuonnonornon = new TableSchema.TableColumn(schema);
				colvarKBuonnonornon.ColumnName = "k_buonnonornon";
				colvarKBuonnonornon.DataType = DbType.Byte;
				colvarKBuonnonornon.MaxLength = 0;
				colvarKBuonnonornon.AutoIncrement = false;
				colvarKBuonnonornon.IsNullable = true;
				colvarKBuonnonornon.IsPrimaryKey = false;
				colvarKBuonnonornon.IsForeignKey = false;
				colvarKBuonnonornon.IsReadOnly = false;
				colvarKBuonnonornon.DefaultSetting = @"";
				colvarKBuonnonornon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKBuonnonornon);
				
				TableSchema.TableColumn colvarKTieuchay = new TableSchema.TableColumn(schema);
				colvarKTieuchay.ColumnName = "k_tieuchay";
				colvarKTieuchay.DataType = DbType.Byte;
				colvarKTieuchay.MaxLength = 0;
				colvarKTieuchay.AutoIncrement = false;
				colvarKTieuchay.IsNullable = true;
				colvarKTieuchay.IsPrimaryKey = false;
				colvarKTieuchay.IsForeignKey = false;
				colvarKTieuchay.IsReadOnly = false;
				colvarKTieuchay.DefaultSetting = @"";
				colvarKTieuchay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKTieuchay);
				
				TableSchema.TableColumn colvarKKichthuocdongtu = new TableSchema.TableColumn(schema);
				colvarKKichthuocdongtu.ColumnName = "k_kichthuocdongtu";
				colvarKKichthuocdongtu.DataType = DbType.String;
				colvarKKichthuocdongtu.MaxLength = 50;
				colvarKKichthuocdongtu.AutoIncrement = false;
				colvarKKichthuocdongtu.IsNullable = true;
				colvarKKichthuocdongtu.IsPrimaryKey = false;
				colvarKKichthuocdongtu.IsForeignKey = false;
				colvarKKichthuocdongtu.IsReadOnly = false;
				colvarKKichthuocdongtu.DefaultSetting = @"";
				colvarKKichthuocdongtu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKKichthuocdongtu);
				
				TableSchema.TableColumn colvarKNoidagaoronlanh = new TableSchema.TableColumn(schema);
				colvarKNoidagaoronlanh.ColumnName = "k_noidagaoronlanh";
				colvarKNoidagaoronlanh.DataType = DbType.Byte;
				colvarKNoidagaoronlanh.MaxLength = 0;
				colvarKNoidagaoronlanh.AutoIncrement = false;
				colvarKNoidagaoronlanh.IsNullable = true;
				colvarKNoidagaoronlanh.IsPrimaryKey = false;
				colvarKNoidagaoronlanh.IsForeignKey = false;
				colvarKNoidagaoronlanh.IsReadOnly = false;
				colvarKNoidagaoronlanh.DefaultSetting = @"";
				colvarKNoidagaoronlanh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKNoidagaoronlanh);
				
				TableSchema.TableColumn colvarKNhiptim = new TableSchema.TableColumn(schema);
				colvarKNhiptim.ColumnName = "k_nhiptim";
				colvarKNhiptim.DataType = DbType.String;
				colvarKNhiptim.MaxLength = 30;
				colvarKNhiptim.AutoIncrement = false;
				colvarKNhiptim.IsNullable = true;
				colvarKNhiptim.IsPrimaryKey = false;
				colvarKNhiptim.IsForeignKey = false;
				colvarKNhiptim.IsReadOnly = false;
				colvarKNhiptim.DefaultSetting = @"";
				colvarKNhiptim.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKNhiptim);
				
				TableSchema.TableColumn colvarKHuyetap = new TableSchema.TableColumn(schema);
				colvarKHuyetap.ColumnName = "k_huyetap";
				colvarKHuyetap.DataType = DbType.String;
				colvarKHuyetap.MaxLength = 30;
				colvarKHuyetap.AutoIncrement = false;
				colvarKHuyetap.IsNullable = true;
				colvarKHuyetap.IsPrimaryKey = false;
				colvarKHuyetap.IsForeignKey = false;
				colvarKHuyetap.IsReadOnly = false;
				colvarKHuyetap.DefaultSetting = @"";
				colvarKHuyetap.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKHuyetap);
				
				TableSchema.TableColumn colvarKCannang = new TableSchema.TableColumn(schema);
				colvarKCannang.ColumnName = "k_cannang";
				colvarKCannang.DataType = DbType.String;
				colvarKCannang.MaxLength = 30;
				colvarKCannang.AutoIncrement = false;
				colvarKCannang.IsNullable = true;
				colvarKCannang.IsPrimaryKey = false;
				colvarKCannang.IsForeignKey = false;
				colvarKCannang.IsReadOnly = false;
				colvarKCannang.DefaultSetting = @"";
				colvarKCannang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKCannang);
				
				TableSchema.TableColumn colvarKNgap = new TableSchema.TableColumn(schema);
				colvarKNgap.ColumnName = "k_ngap";
				colvarKNgap.DataType = DbType.Byte;
				colvarKNgap.MaxLength = 0;
				colvarKNgap.AutoIncrement = false;
				colvarKNgap.IsNullable = true;
				colvarKNgap.IsPrimaryKey = false;
				colvarKNgap.IsForeignKey = false;
				colvarKNgap.IsReadOnly = false;
				colvarKNgap.DefaultSetting = @"";
				colvarKNgap.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKNgap);
				
				TableSchema.TableColumn colvarKNgukhongyen = new TableSchema.TableColumn(schema);
				colvarKNgukhongyen.ColumnName = "k_ngukhongyen";
				colvarKNgukhongyen.DataType = DbType.String;
				colvarKNgukhongyen.MaxLength = 30;
				colvarKNgukhongyen.AutoIncrement = false;
				colvarKNgukhongyen.IsNullable = true;
				colvarKNgukhongyen.IsPrimaryKey = false;
				colvarKNgukhongyen.IsForeignKey = false;
				colvarKNgukhongyen.IsReadOnly = false;
				colvarKNgukhongyen.DefaultSetting = @"";
				colvarKNgukhongyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKNgukhongyen);
				
				TableSchema.TableColumn colvarKGiouongthuoc = new TableSchema.TableColumn(schema);
				colvarKGiouongthuoc.ColumnName = "k_giouongthuoc";
				colvarKGiouongthuoc.DataType = DbType.AnsiString;
				colvarKGiouongthuoc.MaxLength = 0;
				colvarKGiouongthuoc.AutoIncrement = false;
				colvarKGiouongthuoc.IsNullable = true;
				colvarKGiouongthuoc.IsPrimaryKey = false;
				colvarKGiouongthuoc.IsForeignKey = false;
				colvarKGiouongthuoc.IsReadOnly = false;
				colvarKGiouongthuoc.DefaultSetting = @"";
				colvarKGiouongthuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKGiouongthuoc);
				
				TableSchema.TableColumn colvarKLuonguong = new TableSchema.TableColumn(schema);
				colvarKLuonguong.ColumnName = "k_luonguong";
				colvarKLuonguong.DataType = DbType.Decimal;
				colvarKLuonguong.MaxLength = 0;
				colvarKLuonguong.AutoIncrement = false;
				colvarKLuonguong.IsNullable = true;
				colvarKLuonguong.IsPrimaryKey = false;
				colvarKLuonguong.IsForeignKey = false;
				colvarKLuonguong.IsReadOnly = false;
				colvarKLuonguong.DefaultSetting = @"";
				colvarKLuonguong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKLuonguong);
				
				TableSchema.TableColumn colvarKGhichepkhac = new TableSchema.TableColumn(schema);
				colvarKGhichepkhac.ColumnName = "k_ghichepkhac";
				colvarKGhichepkhac.DataType = DbType.String;
				colvarKGhichepkhac.MaxLength = 255;
				colvarKGhichepkhac.AutoIncrement = false;
				colvarKGhichepkhac.IsNullable = true;
				colvarKGhichepkhac.IsPrimaryKey = false;
				colvarKGhichepkhac.IsForeignKey = false;
				colvarKGhichepkhac.IsReadOnly = false;
				colvarKGhichepkhac.DefaultSetting = @"";
				colvarKGhichepkhac.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKGhichepkhac);
				
				TableSchema.TableColumn colvarBHiv = new TableSchema.TableColumn(schema);
				colvarBHiv.ColumnName = "b_hiv";
				colvarBHiv.DataType = DbType.Byte;
				colvarBHiv.MaxLength = 0;
				colvarBHiv.AutoIncrement = false;
				colvarBHiv.IsNullable = true;
				colvarBHiv.IsPrimaryKey = false;
				colvarBHiv.IsForeignKey = false;
				colvarBHiv.IsReadOnly = false;
				colvarBHiv.DefaultSetting = @"";
				colvarBHiv.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBHiv);
				
				TableSchema.TableColumn colvarBNam = new TableSchema.TableColumn(schema);
				colvarBNam.ColumnName = "b_nam";
				colvarBNam.DataType = DbType.Byte;
				colvarBNam.MaxLength = 0;
				colvarBNam.AutoIncrement = false;
				colvarBNam.IsNullable = true;
				colvarBNam.IsPrimaryKey = false;
				colvarBNam.IsForeignKey = false;
				colvarBNam.IsReadOnly = false;
				colvarBNam.DefaultSetting = @"";
				colvarBNam.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBNam);
				
				TableSchema.TableColumn colvarBLao = new TableSchema.TableColumn(schema);
				colvarBLao.ColumnName = "b_lao";
				colvarBLao.DataType = DbType.Byte;
				colvarBLao.MaxLength = 0;
				colvarBLao.AutoIncrement = false;
				colvarBLao.IsNullable = true;
				colvarBLao.IsPrimaryKey = false;
				colvarBLao.IsForeignKey = false;
				colvarBLao.IsReadOnly = false;
				colvarBLao.DefaultSetting = @"";
				colvarBLao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBLao);
				
				TableSchema.TableColumn colvarBTamthan = new TableSchema.TableColumn(schema);
				colvarBTamthan.ColumnName = "b_tamthan";
				colvarBTamthan.DataType = DbType.Byte;
				colvarBTamthan.MaxLength = 0;
				colvarBTamthan.AutoIncrement = false;
				colvarBTamthan.IsNullable = true;
				colvarBTamthan.IsPrimaryKey = false;
				colvarBTamthan.IsForeignKey = false;
				colvarBTamthan.IsReadOnly = false;
				colvarBTamthan.DefaultSetting = @"";
				colvarBTamthan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBTamthan);
				
				TableSchema.TableColumn colvarBKhac = new TableSchema.TableColumn(schema);
				colvarBKhac.ColumnName = "b_khac";
				colvarBKhac.DataType = DbType.String;
				colvarBKhac.MaxLength = 255;
				colvarBKhac.AutoIncrement = false;
				colvarBKhac.IsNullable = true;
				colvarBKhac.IsPrimaryKey = false;
				colvarBKhac.IsForeignKey = false;
				colvarBKhac.IsReadOnly = false;
				colvarBKhac.DefaultSetting = @"";
				colvarBKhac.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBKhac);
				
				TableSchema.TableColumn colvarCosoDtri = new TableSchema.TableColumn(schema);
				colvarCosoDtri.ColumnName = "coso_dtri";
				colvarCosoDtri.DataType = DbType.Int32;
				colvarCosoDtri.MaxLength = 0;
				colvarCosoDtri.AutoIncrement = false;
				colvarCosoDtri.IsNullable = true;
				colvarCosoDtri.IsPrimaryKey = false;
				colvarCosoDtri.IsForeignKey = false;
				colvarCosoDtri.IsReadOnly = false;
				colvarCosoDtri.DefaultSetting = @"";
				colvarCosoDtri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCosoDtri);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 20;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarIpMacSua = new TableSchema.TableColumn(schema);
				colvarIpMacSua.ColumnName = "ip_mac_sua";
				colvarIpMacSua.DataType = DbType.String;
				colvarIpMacSua.MaxLength = 20;
				colvarIpMacSua.AutoIncrement = false;
				colvarIpMacSua.IsNullable = true;
				colvarIpMacSua.IsPrimaryKey = false;
				colvarIpMacSua.IsForeignKey = false;
				colvarIpMacSua.IsReadOnly = false;
				colvarIpMacSua.DefaultSetting = @"";
				colvarIpMacSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMacSua);
				
				TableSchema.TableColumn colvarIpMacTao = new TableSchema.TableColumn(schema);
				colvarIpMacTao.ColumnName = "ip_mac_tao";
				colvarIpMacTao.DataType = DbType.String;
				colvarIpMacTao.MaxLength = 20;
				colvarIpMacTao.AutoIncrement = false;
				colvarIpMacTao.IsNullable = true;
				colvarIpMacTao.IsPrimaryKey = false;
				colvarIpMacTao.IsForeignKey = false;
				colvarIpMacTao.IsReadOnly = false;
				colvarIpMacTao.DefaultSetting = @"";
				colvarIpMacTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMacTao);
				
				TableSchema.TableColumn colvarLastAction = new TableSchema.TableColumn(schema);
				colvarLastAction.ColumnName = "last_action";
				colvarLastAction.DataType = DbType.String;
				colvarLastAction.MaxLength = 20;
				colvarLastAction.AutoIncrement = false;
				colvarLastAction.IsNullable = true;
				colvarLastAction.IsPrimaryKey = false;
				colvarLastAction.IsForeignKey = false;
				colvarLastAction.IsReadOnly = false;
				colvarLastAction.DefaultSetting = @"";
				colvarLastAction.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLastAction);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("metha_kham_dtri",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdKham")]
		[Bindable(true)]
		public long IdKham 
		{
			get { return GetColumnValue<long>(Columns.IdKham); }
			set { SetColumnValue(Columns.IdKham, value); }
		}
		  
		[XmlAttribute("MaDieutri")]
		[Bindable(true)]
		public string MaDieutri 
		{
			get { return GetColumnValue<string>(Columns.MaDieutri); }
			set { SetColumnValue(Columns.MaDieutri, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("MaLoaikham")]
		[Bindable(true)]
		public string MaLoaikham 
		{
			get { return GetColumnValue<string>(Columns.MaLoaikham); }
			set { SetColumnValue(Columns.MaLoaikham, value); }
		}
		  
		[XmlAttribute("HuongDexuat")]
		[Bindable(true)]
		public string HuongDexuat 
		{
			get { return GetColumnValue<string>(Columns.HuongDexuat); }
			set { SetColumnValue(Columns.HuongDexuat, value); }
		}
		  
		[XmlAttribute("SongayKham")]
		[Bindable(true)]
		public short? SongayKham 
		{
			get { return GetColumnValue<short?>(Columns.SongayKham); }
			set { SetColumnValue(Columns.SongayKham, value); }
		}
		  
		[XmlAttribute("NgayBatdau")]
		[Bindable(true)]
		public DateTime? NgayBatdau 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayBatdau); }
			set { SetColumnValue(Columns.NgayBatdau, value); }
		}
		  
		[XmlAttribute("NgayKetthuc")]
		[Bindable(true)]
		public DateTime? NgayKetthuc 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayKetthuc); }
			set { SetColumnValue(Columns.NgayKetthuc, value); }
		}
		  
		[XmlAttribute("IdBacsyKham")]
		[Bindable(true)]
		public short IdBacsyKham 
		{
			get { return GetColumnValue<short>(Columns.IdBacsyKham); }
			set { SetColumnValue(Columns.IdBacsyKham, value); }
		}
		  
		[XmlAttribute("NgaykhamGannhat")]
		[Bindable(true)]
		public DateTime? NgaykhamGannhat 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaykhamGannhat); }
			set { SetColumnValue(Columns.NgaykhamGannhat, value); }
		}
		  
		[XmlAttribute("KThemmatuy")]
		[Bindable(true)]
		public byte? KThemmatuy 
		{
			get { return GetColumnValue<byte?>(Columns.KThemmatuy); }
			set { SetColumnValue(Columns.KThemmatuy, value); }
		}
		  
		[XmlAttribute("KNgatmuiorhathoi")]
		[Bindable(true)]
		public byte? KNgatmuiorhathoi 
		{
			get { return GetColumnValue<byte?>(Columns.KNgatmuiorhathoi); }
			set { SetColumnValue(Columns.KNgatmuiorhathoi, value); }
		}
		  
		[XmlAttribute("KChaynuocmat")]
		[Bindable(true)]
		public byte? KChaynuocmat 
		{
			get { return GetColumnValue<byte?>(Columns.KChaynuocmat); }
			set { SetColumnValue(Columns.KChaynuocmat, value); }
		}
		  
		[XmlAttribute("KDaucoorchuotrut")]
		[Bindable(true)]
		public byte? KDaucoorchuotrut 
		{
			get { return GetColumnValue<byte?>(Columns.KDaucoorchuotrut); }
			set { SetColumnValue(Columns.KDaucoorchuotrut, value); }
		}
		  
		[XmlAttribute("KCocungbung")]
		[Bindable(true)]
		public byte? KCocungbung 
		{
			get { return GetColumnValue<byte?>(Columns.KCocungbung); }
			set { SetColumnValue(Columns.KCocungbung, value); }
		}
		  
		[XmlAttribute("KBuonnonornon")]
		[Bindable(true)]
		public byte? KBuonnonornon 
		{
			get { return GetColumnValue<byte?>(Columns.KBuonnonornon); }
			set { SetColumnValue(Columns.KBuonnonornon, value); }
		}
		  
		[XmlAttribute("KTieuchay")]
		[Bindable(true)]
		public byte? KTieuchay 
		{
			get { return GetColumnValue<byte?>(Columns.KTieuchay); }
			set { SetColumnValue(Columns.KTieuchay, value); }
		}
		  
		[XmlAttribute("KKichthuocdongtu")]
		[Bindable(true)]
		public string KKichthuocdongtu 
		{
			get { return GetColumnValue<string>(Columns.KKichthuocdongtu); }
			set { SetColumnValue(Columns.KKichthuocdongtu, value); }
		}
		  
		[XmlAttribute("KNoidagaoronlanh")]
		[Bindable(true)]
		public byte? KNoidagaoronlanh 
		{
			get { return GetColumnValue<byte?>(Columns.KNoidagaoronlanh); }
			set { SetColumnValue(Columns.KNoidagaoronlanh, value); }
		}
		  
		[XmlAttribute("KNhiptim")]
		[Bindable(true)]
		public string KNhiptim 
		{
			get { return GetColumnValue<string>(Columns.KNhiptim); }
			set { SetColumnValue(Columns.KNhiptim, value); }
		}
		  
		[XmlAttribute("KHuyetap")]
		[Bindable(true)]
		public string KHuyetap 
		{
			get { return GetColumnValue<string>(Columns.KHuyetap); }
			set { SetColumnValue(Columns.KHuyetap, value); }
		}
		  
		[XmlAttribute("KCannang")]
		[Bindable(true)]
		public string KCannang 
		{
			get { return GetColumnValue<string>(Columns.KCannang); }
			set { SetColumnValue(Columns.KCannang, value); }
		}
		  
		[XmlAttribute("KNgap")]
		[Bindable(true)]
		public byte? KNgap 
		{
			get { return GetColumnValue<byte?>(Columns.KNgap); }
			set { SetColumnValue(Columns.KNgap, value); }
		}
		  
		[XmlAttribute("KNgukhongyen")]
		[Bindable(true)]
		public string KNgukhongyen 
		{
			get { return GetColumnValue<string>(Columns.KNgukhongyen); }
			set { SetColumnValue(Columns.KNgukhongyen, value); }
		}
		  
		[XmlAttribute("KGiouongthuoc")]
		[Bindable(true)]
		public string KGiouongthuoc 
		{
			get { return GetColumnValue<string>(Columns.KGiouongthuoc); }
			set { SetColumnValue(Columns.KGiouongthuoc, value); }
		}
		  
		[XmlAttribute("KLuonguong")]
		[Bindable(true)]
		public decimal? KLuonguong 
		{
			get { return GetColumnValue<decimal?>(Columns.KLuonguong); }
			set { SetColumnValue(Columns.KLuonguong, value); }
		}
		  
		[XmlAttribute("KGhichepkhac")]
		[Bindable(true)]
		public string KGhichepkhac 
		{
			get { return GetColumnValue<string>(Columns.KGhichepkhac); }
			set { SetColumnValue(Columns.KGhichepkhac, value); }
		}
		  
		[XmlAttribute("BHiv")]
		[Bindable(true)]
		public byte? BHiv 
		{
			get { return GetColumnValue<byte?>(Columns.BHiv); }
			set { SetColumnValue(Columns.BHiv, value); }
		}
		  
		[XmlAttribute("BNam")]
		[Bindable(true)]
		public byte? BNam 
		{
			get { return GetColumnValue<byte?>(Columns.BNam); }
			set { SetColumnValue(Columns.BNam, value); }
		}
		  
		[XmlAttribute("BLao")]
		[Bindable(true)]
		public byte? BLao 
		{
			get { return GetColumnValue<byte?>(Columns.BLao); }
			set { SetColumnValue(Columns.BLao, value); }
		}
		  
		[XmlAttribute("BTamthan")]
		[Bindable(true)]
		public byte? BTamthan 
		{
			get { return GetColumnValue<byte?>(Columns.BTamthan); }
			set { SetColumnValue(Columns.BTamthan, value); }
		}
		  
		[XmlAttribute("BKhac")]
		[Bindable(true)]
		public string BKhac 
		{
			get { return GetColumnValue<string>(Columns.BKhac); }
			set { SetColumnValue(Columns.BKhac, value); }
		}
		  
		[XmlAttribute("CosoDtri")]
		[Bindable(true)]
		public int? CosoDtri 
		{
			get { return GetColumnValue<int?>(Columns.CosoDtri); }
			set { SetColumnValue(Columns.CosoDtri, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("IpMacSua")]
		[Bindable(true)]
		public string IpMacSua 
		{
			get { return GetColumnValue<string>(Columns.IpMacSua); }
			set { SetColumnValue(Columns.IpMacSua, value); }
		}
		  
		[XmlAttribute("IpMacTao")]
		[Bindable(true)]
		public string IpMacTao 
		{
			get { return GetColumnValue<string>(Columns.IpMacTao); }
			set { SetColumnValue(Columns.IpMacTao, value); }
		}
		  
		[XmlAttribute("LastAction")]
		[Bindable(true)]
		public string LastAction 
		{
			get { return GetColumnValue<string>(Columns.LastAction); }
			set { SetColumnValue(Columns.LastAction, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaDieutri,long varIdBenhnhan,string varMaLoaikham,string varHuongDexuat,short? varSongayKham,DateTime? varNgayBatdau,DateTime? varNgayKetthuc,short varIdBacsyKham,DateTime? varNgaykhamGannhat,byte? varKThemmatuy,byte? varKNgatmuiorhathoi,byte? varKChaynuocmat,byte? varKDaucoorchuotrut,byte? varKCocungbung,byte? varKBuonnonornon,byte? varKTieuchay,string varKKichthuocdongtu,byte? varKNoidagaoronlanh,string varKNhiptim,string varKHuyetap,string varKCannang,byte? varKNgap,string varKNgukhongyen,string varKGiouongthuoc,decimal? varKLuonguong,string varKGhichepkhac,byte? varBHiv,byte? varBNam,byte? varBLao,byte? varBTamthan,string varBKhac,int? varCosoDtri,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,string varIpMacSua,string varIpMacTao,string varLastAction)
		{
			MethaKhamDtri item = new MethaKhamDtri();
			
			item.MaDieutri = varMaDieutri;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.MaLoaikham = varMaLoaikham;
			
			item.HuongDexuat = varHuongDexuat;
			
			item.SongayKham = varSongayKham;
			
			item.NgayBatdau = varNgayBatdau;
			
			item.NgayKetthuc = varNgayKetthuc;
			
			item.IdBacsyKham = varIdBacsyKham;
			
			item.NgaykhamGannhat = varNgaykhamGannhat;
			
			item.KThemmatuy = varKThemmatuy;
			
			item.KNgatmuiorhathoi = varKNgatmuiorhathoi;
			
			item.KChaynuocmat = varKChaynuocmat;
			
			item.KDaucoorchuotrut = varKDaucoorchuotrut;
			
			item.KCocungbung = varKCocungbung;
			
			item.KBuonnonornon = varKBuonnonornon;
			
			item.KTieuchay = varKTieuchay;
			
			item.KKichthuocdongtu = varKKichthuocdongtu;
			
			item.KNoidagaoronlanh = varKNoidagaoronlanh;
			
			item.KNhiptim = varKNhiptim;
			
			item.KHuyetap = varKHuyetap;
			
			item.KCannang = varKCannang;
			
			item.KNgap = varKNgap;
			
			item.KNgukhongyen = varKNgukhongyen;
			
			item.KGiouongthuoc = varKGiouongthuoc;
			
			item.KLuonguong = varKLuonguong;
			
			item.KGhichepkhac = varKGhichepkhac;
			
			item.BHiv = varBHiv;
			
			item.BNam = varBNam;
			
			item.BLao = varBLao;
			
			item.BTamthan = varBTamthan;
			
			item.BKhac = varBKhac;
			
			item.CosoDtri = varCosoDtri;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.IpMacSua = varIpMacSua;
			
			item.IpMacTao = varIpMacTao;
			
			item.LastAction = varLastAction;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varIdKham,string varMaDieutri,long varIdBenhnhan,string varMaLoaikham,string varHuongDexuat,short? varSongayKham,DateTime? varNgayBatdau,DateTime? varNgayKetthuc,short varIdBacsyKham,DateTime? varNgaykhamGannhat,byte? varKThemmatuy,byte? varKNgatmuiorhathoi,byte? varKChaynuocmat,byte? varKDaucoorchuotrut,byte? varKCocungbung,byte? varKBuonnonornon,byte? varKTieuchay,string varKKichthuocdongtu,byte? varKNoidagaoronlanh,string varKNhiptim,string varKHuyetap,string varKCannang,byte? varKNgap,string varKNgukhongyen,string varKGiouongthuoc,decimal? varKLuonguong,string varKGhichepkhac,byte? varBHiv,byte? varBNam,byte? varBLao,byte? varBTamthan,string varBKhac,int? varCosoDtri,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,string varIpMacSua,string varIpMacTao,string varLastAction)
		{
			MethaKhamDtri item = new MethaKhamDtri();
			
				item.IdKham = varIdKham;
			
				item.MaDieutri = varMaDieutri;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.MaLoaikham = varMaLoaikham;
			
				item.HuongDexuat = varHuongDexuat;
			
				item.SongayKham = varSongayKham;
			
				item.NgayBatdau = varNgayBatdau;
			
				item.NgayKetthuc = varNgayKetthuc;
			
				item.IdBacsyKham = varIdBacsyKham;
			
				item.NgaykhamGannhat = varNgaykhamGannhat;
			
				item.KThemmatuy = varKThemmatuy;
			
				item.KNgatmuiorhathoi = varKNgatmuiorhathoi;
			
				item.KChaynuocmat = varKChaynuocmat;
			
				item.KDaucoorchuotrut = varKDaucoorchuotrut;
			
				item.KCocungbung = varKCocungbung;
			
				item.KBuonnonornon = varKBuonnonornon;
			
				item.KTieuchay = varKTieuchay;
			
				item.KKichthuocdongtu = varKKichthuocdongtu;
			
				item.KNoidagaoronlanh = varKNoidagaoronlanh;
			
				item.KNhiptim = varKNhiptim;
			
				item.KHuyetap = varKHuyetap;
			
				item.KCannang = varKCannang;
			
				item.KNgap = varKNgap;
			
				item.KNgukhongyen = varKNgukhongyen;
			
				item.KGiouongthuoc = varKGiouongthuoc;
			
				item.KLuonguong = varKLuonguong;
			
				item.KGhichepkhac = varKGhichepkhac;
			
				item.BHiv = varBHiv;
			
				item.BNam = varBNam;
			
				item.BLao = varBLao;
			
				item.BTamthan = varBTamthan;
			
				item.BKhac = varBKhac;
			
				item.CosoDtri = varCosoDtri;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.IpMacSua = varIpMacSua;
			
				item.IpMacTao = varIpMacTao;
			
				item.LastAction = varLastAction;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdKhamColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDieutriColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLoaikhamColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn HuongDexuatColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn SongayKhamColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayBatdauColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayKetthucColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBacsyKhamColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaykhamGannhatColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn KThemmatuyColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn KNgatmuiorhathoiColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn KChaynuocmatColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn KDaucoorchuotrutColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn KCocungbungColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn KBuonnonornonColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn KTieuchayColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn KKichthuocdongtuColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn KNoidagaoronlanhColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn KNhiptimColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn KHuyetapColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn KCannangColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn KNgapColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn KNgukhongyenColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn KGiouongthuocColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn KLuonguongColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn KGhichepkhacColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn BHivColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn BNamColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn BLaoColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn BTamthanColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn BKhacColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn CosoDtriColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMacSuaColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMacTaoColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn LastActionColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdKham = @"id_kham";
			 public static string MaDieutri = @"ma_dieutri";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string MaLoaikham = @"ma_loaikham";
			 public static string HuongDexuat = @"huong_dexuat";
			 public static string SongayKham = @"songay_kham";
			 public static string NgayBatdau = @"ngay_batdau";
			 public static string NgayKetthuc = @"ngay_ketthuc";
			 public static string IdBacsyKham = @"id_bacsy_kham";
			 public static string NgaykhamGannhat = @"ngaykham_gannhat";
			 public static string KThemmatuy = @"k_themmatuy";
			 public static string KNgatmuiorhathoi = @"k_ngatmuiorhathoi";
			 public static string KChaynuocmat = @"k_chaynuocmat";
			 public static string KDaucoorchuotrut = @"k_daucoorchuotrut";
			 public static string KCocungbung = @"k_cocungbung";
			 public static string KBuonnonornon = @"k_buonnonornon";
			 public static string KTieuchay = @"k_tieuchay";
			 public static string KKichthuocdongtu = @"k_kichthuocdongtu";
			 public static string KNoidagaoronlanh = @"k_noidagaoronlanh";
			 public static string KNhiptim = @"k_nhiptim";
			 public static string KHuyetap = @"k_huyetap";
			 public static string KCannang = @"k_cannang";
			 public static string KNgap = @"k_ngap";
			 public static string KNgukhongyen = @"k_ngukhongyen";
			 public static string KGiouongthuoc = @"k_giouongthuoc";
			 public static string KLuonguong = @"k_luonguong";
			 public static string KGhichepkhac = @"k_ghichepkhac";
			 public static string BHiv = @"b_hiv";
			 public static string BNam = @"b_nam";
			 public static string BLao = @"b_lao";
			 public static string BTamthan = @"b_tamthan";
			 public static string BKhac = @"b_khac";
			 public static string CosoDtri = @"coso_dtri";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string NgaySua = @"ngay_sua";
			 public static string IpMacSua = @"ip_mac_sua";
			 public static string IpMacTao = @"ip_mac_tao";
			 public static string LastAction = @"last_action";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
