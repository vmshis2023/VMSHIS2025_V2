using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the EmrChandoanSankhoa class.
	/// </summary>
    [Serializable]
	public partial class EmrChandoanSankhoaCollection : ActiveList<EmrChandoanSankhoa, EmrChandoanSankhoaCollection>
	{	   
		public EmrChandoanSankhoaCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>EmrChandoanSankhoaCollection</returns>
		public EmrChandoanSankhoaCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                EmrChandoanSankhoa o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the emr_chandoan_sankhoa table.
	/// </summary>
	[Serializable]
	public partial class EmrChandoanSankhoa : ActiveRecord<EmrChandoanSankhoa>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public EmrChandoanSankhoa()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public EmrChandoanSankhoa(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public EmrChandoanSankhoa(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public EmrChandoanSankhoa(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("emr_chandoan_sankhoa", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = true;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 20;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = true;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarCdLucvaode = new TableSchema.TableColumn(schema);
				colvarCdLucvaode.ColumnName = "cd_lucvaode";
				colvarCdLucvaode.DataType = DbType.String;
				colvarCdLucvaode.MaxLength = 255;
				colvarCdLucvaode.AutoIncrement = false;
				colvarCdLucvaode.IsNullable = true;
				colvarCdLucvaode.IsPrimaryKey = false;
				colvarCdLucvaode.IsForeignKey = false;
				colvarCdLucvaode.IsReadOnly = false;
				colvarCdLucvaode.DefaultSetting = @"";
				colvarCdLucvaode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdLucvaode);
				
				TableSchema.TableColumn colvarCdNgaymode = new TableSchema.TableColumn(schema);
				colvarCdNgaymode.ColumnName = "cd_ngaymode";
				colvarCdNgaymode.DataType = DbType.DateTime;
				colvarCdNgaymode.MaxLength = 0;
				colvarCdNgaymode.AutoIncrement = false;
				colvarCdNgaymode.IsNullable = true;
				colvarCdNgaymode.IsPrimaryKey = false;
				colvarCdNgaymode.IsForeignKey = false;
				colvarCdNgaymode.IsReadOnly = false;
				colvarCdNgaymode.DefaultSetting = @"";
				colvarCdNgaymode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdNgaymode);
				
				TableSchema.TableColumn colvarCdNgoithai = new TableSchema.TableColumn(schema);
				colvarCdNgoithai.ColumnName = "cd_ngoithai";
				colvarCdNgoithai.DataType = DbType.String;
				colvarCdNgoithai.MaxLength = 255;
				colvarCdNgoithai.AutoIncrement = false;
				colvarCdNgoithai.IsNullable = true;
				colvarCdNgoithai.IsPrimaryKey = false;
				colvarCdNgoithai.IsForeignKey = false;
				colvarCdNgoithai.IsReadOnly = false;
				colvarCdNgoithai.DefaultSetting = @"";
				colvarCdNgoithai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdNgoithai);
				
				TableSchema.TableColumn colvarCdCachthucde = new TableSchema.TableColumn(schema);
				colvarCdCachthucde.ColumnName = "cd_cachthucde";
				colvarCdCachthucde.DataType = DbType.String;
				colvarCdCachthucde.MaxLength = 255;
				colvarCdCachthucde.AutoIncrement = false;
				colvarCdCachthucde.IsNullable = true;
				colvarCdCachthucde.IsPrimaryKey = false;
				colvarCdCachthucde.IsForeignKey = false;
				colvarCdCachthucde.IsReadOnly = false;
				colvarCdCachthucde.DefaultSetting = @"";
				colvarCdCachthucde.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdCachthucde);
				
				TableSchema.TableColumn colvarCdKiemsoattucung = new TableSchema.TableColumn(schema);
				colvarCdKiemsoattucung.ColumnName = "cd_kiemsoattucung";
				colvarCdKiemsoattucung.DataType = DbType.String;
				colvarCdKiemsoattucung.MaxLength = 255;
				colvarCdKiemsoattucung.AutoIncrement = false;
				colvarCdKiemsoattucung.IsNullable = true;
				colvarCdKiemsoattucung.IsPrimaryKey = false;
				colvarCdKiemsoattucung.IsForeignKey = false;
				colvarCdKiemsoattucung.IsReadOnly = false;
				colvarCdKiemsoattucung.DefaultSetting = @"";
				colvarCdKiemsoattucung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdKiemsoattucung);
				
				TableSchema.TableColumn colvarCdDonthai = new TableSchema.TableColumn(schema);
				colvarCdDonthai.ColumnName = "cd_donthai";
				colvarCdDonthai.DataType = DbType.Boolean;
				colvarCdDonthai.MaxLength = 0;
				colvarCdDonthai.AutoIncrement = false;
				colvarCdDonthai.IsNullable = true;
				colvarCdDonthai.IsPrimaryKey = false;
				colvarCdDonthai.IsForeignKey = false;
				colvarCdDonthai.IsReadOnly = false;
				colvarCdDonthai.DefaultSetting = @"";
				colvarCdDonthai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdDonthai);
				
				TableSchema.TableColumn colvarCdDathai = new TableSchema.TableColumn(schema);
				colvarCdDathai.ColumnName = "cd_dathai";
				colvarCdDathai.DataType = DbType.Boolean;
				colvarCdDathai.MaxLength = 0;
				colvarCdDathai.AutoIncrement = false;
				colvarCdDathai.IsNullable = true;
				colvarCdDathai.IsPrimaryKey = false;
				colvarCdDathai.IsForeignKey = false;
				colvarCdDathai.IsReadOnly = false;
				colvarCdDathai.DefaultSetting = @"";
				colvarCdDathai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdDathai);
				
				TableSchema.TableColumn colvarCdTrai = new TableSchema.TableColumn(schema);
				colvarCdTrai.ColumnName = "cd_trai";
				colvarCdTrai.DataType = DbType.Boolean;
				colvarCdTrai.MaxLength = 0;
				colvarCdTrai.AutoIncrement = false;
				colvarCdTrai.IsNullable = true;
				colvarCdTrai.IsPrimaryKey = false;
				colvarCdTrai.IsForeignKey = false;
				colvarCdTrai.IsReadOnly = false;
				colvarCdTrai.DefaultSetting = @"";
				colvarCdTrai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdTrai);
				
				TableSchema.TableColumn colvarCdGai = new TableSchema.TableColumn(schema);
				colvarCdGai.ColumnName = "cd_gai";
				colvarCdGai.DataType = DbType.Boolean;
				colvarCdGai.MaxLength = 0;
				colvarCdGai.AutoIncrement = false;
				colvarCdGai.IsNullable = true;
				colvarCdGai.IsPrimaryKey = false;
				colvarCdGai.IsForeignKey = false;
				colvarCdGai.IsReadOnly = false;
				colvarCdGai.DefaultSetting = @"";
				colvarCdGai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdGai);
				
				TableSchema.TableColumn colvarCdSong = new TableSchema.TableColumn(schema);
				colvarCdSong.ColumnName = "cd_song";
				colvarCdSong.DataType = DbType.Boolean;
				colvarCdSong.MaxLength = 0;
				colvarCdSong.AutoIncrement = false;
				colvarCdSong.IsNullable = true;
				colvarCdSong.IsPrimaryKey = false;
				colvarCdSong.IsForeignKey = false;
				colvarCdSong.IsReadOnly = false;
				colvarCdSong.DefaultSetting = @"";
				colvarCdSong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdSong);
				
				TableSchema.TableColumn colvarCdChet = new TableSchema.TableColumn(schema);
				colvarCdChet.ColumnName = "cd_chet";
				colvarCdChet.DataType = DbType.Boolean;
				colvarCdChet.MaxLength = 0;
				colvarCdChet.AutoIncrement = false;
				colvarCdChet.IsNullable = true;
				colvarCdChet.IsPrimaryKey = false;
				colvarCdChet.IsForeignKey = false;
				colvarCdChet.IsReadOnly = false;
				colvarCdChet.DefaultSetting = @"";
				colvarCdChet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdChet);
				
				TableSchema.TableColumn colvarCdDitatThainhi = new TableSchema.TableColumn(schema);
				colvarCdDitatThainhi.ColumnName = "cd_ditat_thainhi";
				colvarCdDitatThainhi.DataType = DbType.String;
				colvarCdDitatThainhi.MaxLength = 255;
				colvarCdDitatThainhi.AutoIncrement = false;
				colvarCdDitatThainhi.IsNullable = true;
				colvarCdDitatThainhi.IsPrimaryKey = false;
				colvarCdDitatThainhi.IsForeignKey = false;
				colvarCdDitatThainhi.IsReadOnly = false;
				colvarCdDitatThainhi.DefaultSetting = @"";
				colvarCdDitatThainhi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdDitatThainhi);
				
				TableSchema.TableColumn colvarCdCannangThainhi = new TableSchema.TableColumn(schema);
				colvarCdCannangThainhi.ColumnName = "cd_cannang_thainhi";
				colvarCdCannangThainhi.DataType = DbType.String;
				colvarCdCannangThainhi.MaxLength = 10;
				colvarCdCannangThainhi.AutoIncrement = false;
				colvarCdCannangThainhi.IsNullable = true;
				colvarCdCannangThainhi.IsPrimaryKey = false;
				colvarCdCannangThainhi.IsForeignKey = false;
				colvarCdCannangThainhi.IsReadOnly = false;
				colvarCdCannangThainhi.DefaultSetting = @"";
				colvarCdCannangThainhi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdCannangThainhi);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 20;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("emr_chandoan_sankhoa",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long? IdBenhnhan 
		{
			get { return GetColumnValue<long?>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("CdLucvaode")]
		[Bindable(true)]
		public string CdLucvaode 
		{
			get { return GetColumnValue<string>(Columns.CdLucvaode); }
			set { SetColumnValue(Columns.CdLucvaode, value); }
		}
		  
		[XmlAttribute("CdNgaymode")]
		[Bindable(true)]
		public DateTime? CdNgaymode 
		{
			get { return GetColumnValue<DateTime?>(Columns.CdNgaymode); }
			set { SetColumnValue(Columns.CdNgaymode, value); }
		}
		  
		[XmlAttribute("CdNgoithai")]
		[Bindable(true)]
		public string CdNgoithai 
		{
			get { return GetColumnValue<string>(Columns.CdNgoithai); }
			set { SetColumnValue(Columns.CdNgoithai, value); }
		}
		  
		[XmlAttribute("CdCachthucde")]
		[Bindable(true)]
		public string CdCachthucde 
		{
			get { return GetColumnValue<string>(Columns.CdCachthucde); }
			set { SetColumnValue(Columns.CdCachthucde, value); }
		}
		  
		[XmlAttribute("CdKiemsoattucung")]
		[Bindable(true)]
		public string CdKiemsoattucung 
		{
			get { return GetColumnValue<string>(Columns.CdKiemsoattucung); }
			set { SetColumnValue(Columns.CdKiemsoattucung, value); }
		}
		  
		[XmlAttribute("CdDonthai")]
		[Bindable(true)]
		public bool? CdDonthai 
		{
			get { return GetColumnValue<bool?>(Columns.CdDonthai); }
			set { SetColumnValue(Columns.CdDonthai, value); }
		}
		  
		[XmlAttribute("CdDathai")]
		[Bindable(true)]
		public bool? CdDathai 
		{
			get { return GetColumnValue<bool?>(Columns.CdDathai); }
			set { SetColumnValue(Columns.CdDathai, value); }
		}
		  
		[XmlAttribute("CdTrai")]
		[Bindable(true)]
		public bool? CdTrai 
		{
			get { return GetColumnValue<bool?>(Columns.CdTrai); }
			set { SetColumnValue(Columns.CdTrai, value); }
		}
		  
		[XmlAttribute("CdGai")]
		[Bindable(true)]
		public bool? CdGai 
		{
			get { return GetColumnValue<bool?>(Columns.CdGai); }
			set { SetColumnValue(Columns.CdGai, value); }
		}
		  
		[XmlAttribute("CdSong")]
		[Bindable(true)]
		public bool? CdSong 
		{
			get { return GetColumnValue<bool?>(Columns.CdSong); }
			set { SetColumnValue(Columns.CdSong, value); }
		}
		  
		[XmlAttribute("CdChet")]
		[Bindable(true)]
		public bool? CdChet 
		{
			get { return GetColumnValue<bool?>(Columns.CdChet); }
			set { SetColumnValue(Columns.CdChet, value); }
		}
		  
		[XmlAttribute("CdDitatThainhi")]
		[Bindable(true)]
		public string CdDitatThainhi 
		{
			get { return GetColumnValue<string>(Columns.CdDitatThainhi); }
			set { SetColumnValue(Columns.CdDitatThainhi, value); }
		}
		  
		[XmlAttribute("CdCannangThainhi")]
		[Bindable(true)]
		public string CdCannangThainhi 
		{
			get { return GetColumnValue<string>(Columns.CdCannangThainhi); }
			set { SetColumnValue(Columns.CdCannangThainhi, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long? varIdBenhnhan,string varMaLuotkham,string varCdLucvaode,DateTime? varCdNgaymode,string varCdNgoithai,string varCdCachthucde,string varCdKiemsoattucung,bool? varCdDonthai,bool? varCdDathai,bool? varCdTrai,bool? varCdGai,bool? varCdSong,bool? varCdChet,string varCdDitatThainhi,string varCdCannangThainhi,DateTime? varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua)
		{
			EmrChandoanSankhoa item = new EmrChandoanSankhoa();
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.MaLuotkham = varMaLuotkham;
			
			item.CdLucvaode = varCdLucvaode;
			
			item.CdNgaymode = varCdNgaymode;
			
			item.CdNgoithai = varCdNgoithai;
			
			item.CdCachthucde = varCdCachthucde;
			
			item.CdKiemsoattucung = varCdKiemsoattucung;
			
			item.CdDonthai = varCdDonthai;
			
			item.CdDathai = varCdDathai;
			
			item.CdTrai = varCdTrai;
			
			item.CdGai = varCdGai;
			
			item.CdSong = varCdSong;
			
			item.CdChet = varCdChet;
			
			item.CdDitatThainhi = varCdDitatThainhi;
			
			item.CdCannangThainhi = varCdCannangThainhi;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,long? varIdBenhnhan,string varMaLuotkham,string varCdLucvaode,DateTime? varCdNgaymode,string varCdNgoithai,string varCdCachthucde,string varCdKiemsoattucung,bool? varCdDonthai,bool? varCdDathai,bool? varCdTrai,bool? varCdGai,bool? varCdSong,bool? varCdChet,string varCdDitatThainhi,string varCdCannangThainhi,DateTime? varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua)
		{
			EmrChandoanSankhoa item = new EmrChandoanSankhoa();
			
				item.Id = varId;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.CdLucvaode = varCdLucvaode;
			
				item.CdNgaymode = varCdNgaymode;
			
				item.CdNgoithai = varCdNgoithai;
			
				item.CdCachthucde = varCdCachthucde;
			
				item.CdKiemsoattucung = varCdKiemsoattucung;
			
				item.CdDonthai = varCdDonthai;
			
				item.CdDathai = varCdDathai;
			
				item.CdTrai = varCdTrai;
			
				item.CdGai = varCdGai;
			
				item.CdSong = varCdSong;
			
				item.CdChet = varCdChet;
			
				item.CdDitatThainhi = varCdDitatThainhi;
			
				item.CdCannangThainhi = varCdCannangThainhi;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn CdLucvaodeColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn CdNgaymodeColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn CdNgoithaiColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn CdCachthucdeColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn CdKiemsoattucungColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn CdDonthaiColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn CdDathaiColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn CdTraiColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn CdGaiColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn CdSongColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn CdChetColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn CdDitatThainhiColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn CdCannangThainhiColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string CdLucvaode = @"cd_lucvaode";
			 public static string CdNgaymode = @"cd_ngaymode";
			 public static string CdNgoithai = @"cd_ngoithai";
			 public static string CdCachthucde = @"cd_cachthucde";
			 public static string CdKiemsoattucung = @"cd_kiemsoattucung";
			 public static string CdDonthai = @"cd_donthai";
			 public static string CdDathai = @"cd_dathai";
			 public static string CdTrai = @"cd_trai";
			 public static string CdGai = @"cd_gai";
			 public static string CdSong = @"cd_song";
			 public static string CdChet = @"cd_chet";
			 public static string CdDitatThainhi = @"cd_ditat_thainhi";
			 public static string CdCannangThainhi = @"cd_cannang_thainhi";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgaySua = @"ngay_sua";
			 public static string NguoiSua = @"nguoi_sua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
