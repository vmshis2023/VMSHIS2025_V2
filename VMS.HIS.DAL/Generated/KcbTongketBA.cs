using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the KcbTongketBA class.
	/// </summary>
    [Serializable]
	public partial class KcbTongketBACollection : ActiveList<KcbTongketBA, KcbTongketBACollection>
	{	   
		public KcbTongketBACollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KcbTongketBACollection</returns>
		public KcbTongketBACollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KcbTongketBA o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the kcb_tongketBA table.
	/// </summary>
	[Serializable]
	public partial class KcbTongketBA : ActiveRecord<KcbTongketBA>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KcbTongketBA()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KcbTongketBA(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KcbTongketBA(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KcbTongketBA(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("kcb_tongketBA", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "ID";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 20;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarLdvv = new TableSchema.TableColumn(schema);
				colvarLdvv.ColumnName = "Ldvv";
				colvarLdvv.DataType = DbType.String;
				colvarLdvv.MaxLength = 500;
				colvarLdvv.AutoIncrement = false;
				colvarLdvv.IsNullable = true;
				colvarLdvv.IsPrimaryKey = false;
				colvarLdvv.IsForeignKey = false;
				colvarLdvv.IsReadOnly = false;
				colvarLdvv.DefaultSetting = @"";
				colvarLdvv.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLdvv);
				
				TableSchema.TableColumn colvarChanDoan = new TableSchema.TableColumn(schema);
				colvarChanDoan.ColumnName = "ChanDoan";
				colvarChanDoan.DataType = DbType.String;
				colvarChanDoan.MaxLength = 500;
				colvarChanDoan.AutoIncrement = false;
				colvarChanDoan.IsNullable = true;
				colvarChanDoan.IsPrimaryKey = false;
				colvarChanDoan.IsForeignKey = false;
				colvarChanDoan.IsReadOnly = false;
				colvarChanDoan.DefaultSetting = @"";
				colvarChanDoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChanDoan);
				
				TableSchema.TableColumn colvarIdKhoadieutri = new TableSchema.TableColumn(schema);
				colvarIdKhoadieutri.ColumnName = "id_khoadieutri";
				colvarIdKhoadieutri.DataType = DbType.Int16;
				colvarIdKhoadieutri.MaxLength = 0;
				colvarIdKhoadieutri.AutoIncrement = false;
				colvarIdKhoadieutri.IsNullable = false;
				colvarIdKhoadieutri.IsPrimaryKey = false;
				colvarIdKhoadieutri.IsForeignKey = false;
				colvarIdKhoadieutri.IsReadOnly = false;
				colvarIdKhoadieutri.DefaultSetting = @"";
				colvarIdKhoadieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoadieutri);
				
				TableSchema.TableColumn colvarTuNgay = new TableSchema.TableColumn(schema);
				colvarTuNgay.ColumnName = "TuNgay";
				colvarTuNgay.DataType = DbType.DateTime;
				colvarTuNgay.MaxLength = 0;
				colvarTuNgay.AutoIncrement = false;
				colvarTuNgay.IsNullable = true;
				colvarTuNgay.IsPrimaryKey = false;
				colvarTuNgay.IsForeignKey = false;
				colvarTuNgay.IsReadOnly = false;
				colvarTuNgay.DefaultSetting = @"";
				colvarTuNgay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuNgay);
				
				TableSchema.TableColumn colvarDenNgay = new TableSchema.TableColumn(schema);
				colvarDenNgay.ColumnName = "DenNgay";
				colvarDenNgay.DataType = DbType.DateTime;
				colvarDenNgay.MaxLength = 0;
				colvarDenNgay.AutoIncrement = false;
				colvarDenNgay.IsNullable = true;
				colvarDenNgay.IsPrimaryKey = false;
				colvarDenNgay.IsForeignKey = false;
				colvarDenNgay.IsReadOnly = false;
				colvarDenNgay.DefaultSetting = @"";
				colvarDenNgay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDenNgay);
				
				TableSchema.TableColumn colvarNgayRv = new TableSchema.TableColumn(schema);
				colvarNgayRv.ColumnName = "NgayRv";
				colvarNgayRv.DataType = DbType.DateTime;
				colvarNgayRv.MaxLength = 0;
				colvarNgayRv.AutoIncrement = false;
				colvarNgayRv.IsNullable = true;
				colvarNgayRv.IsPrimaryKey = false;
				colvarNgayRv.IsForeignKey = false;
				colvarNgayRv.IsReadOnly = false;
				colvarNgayRv.DefaultSetting = @"";
				colvarNgayRv.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayRv);
				
				TableSchema.TableColumn colvarSoNgayDtri = new TableSchema.TableColumn(schema);
				colvarSoNgayDtri.ColumnName = "SoNgayDtri";
				colvarSoNgayDtri.DataType = DbType.Int32;
				colvarSoNgayDtri.MaxLength = 0;
				colvarSoNgayDtri.AutoIncrement = false;
				colvarSoNgayDtri.IsNullable = true;
				colvarSoNgayDtri.IsPrimaryKey = false;
				colvarSoNgayDtri.IsForeignKey = false;
				colvarSoNgayDtri.IsReadOnly = false;
				colvarSoNgayDtri.DefaultSetting = @"";
				colvarSoNgayDtri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoNgayDtri);
				
				TableSchema.TableColumn colvarHuongDtri = new TableSchema.TableColumn(schema);
				colvarHuongDtri.ColumnName = "HuongDtri";
				colvarHuongDtri.DataType = DbType.String;
				colvarHuongDtri.MaxLength = 500;
				colvarHuongDtri.AutoIncrement = false;
				colvarHuongDtri.IsNullable = true;
				colvarHuongDtri.IsPrimaryKey = false;
				colvarHuongDtri.IsForeignKey = false;
				colvarHuongDtri.IsReadOnly = false;
				colvarHuongDtri.DefaultSetting = @"";
				colvarHuongDtri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHuongDtri);
				
				TableSchema.TableColumn colvarTTrangHienTai = new TableSchema.TableColumn(schema);
				colvarTTrangHienTai.ColumnName = "TTrangHienTai";
				colvarTTrangHienTai.DataType = DbType.String;
				colvarTTrangHienTai.MaxLength = 500;
				colvarTTrangHienTai.AutoIncrement = false;
				colvarTTrangHienTai.IsNullable = true;
				colvarTTrangHienTai.IsPrimaryKey = false;
				colvarTTrangHienTai.IsForeignKey = false;
				colvarTTrangHienTai.IsReadOnly = false;
				colvarTTrangHienTai.DefaultSetting = @"";
				colvarTTrangHienTai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTTrangHienTai);
				
				TableSchema.TableColumn colvarLamSang = new TableSchema.TableColumn(schema);
				colvarLamSang.ColumnName = "LamSang";
				colvarLamSang.DataType = DbType.String;
				colvarLamSang.MaxLength = 1000;
				colvarLamSang.AutoIncrement = false;
				colvarLamSang.IsNullable = true;
				colvarLamSang.IsPrimaryKey = false;
				colvarLamSang.IsForeignKey = false;
				colvarLamSang.IsReadOnly = false;
				colvarLamSang.DefaultSetting = @"";
				colvarLamSang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLamSang);
				
				TableSchema.TableColumn colvarCanLamSang = new TableSchema.TableColumn(schema);
				colvarCanLamSang.ColumnName = "CanLamSang";
				colvarCanLamSang.DataType = DbType.String;
				colvarCanLamSang.MaxLength = 1000;
				colvarCanLamSang.AutoIncrement = false;
				colvarCanLamSang.IsNullable = true;
				colvarCanLamSang.IsPrimaryKey = false;
				colvarCanLamSang.IsForeignKey = false;
				colvarCanLamSang.IsReadOnly = false;
				colvarCanLamSang.DefaultSetting = @"";
				colvarCanLamSang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCanLamSang);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NgayTao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NguoiTao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 100;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NgaySua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = false;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NguoiSua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 100;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = false;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.Int32;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = true;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				colvarTrangThai.DefaultSetting = @"";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarNgaySinhcon = new TableSchema.TableColumn(schema);
				colvarNgaySinhcon.ColumnName = "ngay_sinhcon";
				colvarNgaySinhcon.DataType = DbType.DateTime;
				colvarNgaySinhcon.MaxLength = 0;
				colvarNgaySinhcon.AutoIncrement = false;
				colvarNgaySinhcon.IsNullable = true;
				colvarNgaySinhcon.IsPrimaryKey = false;
				colvarNgaySinhcon.IsForeignKey = false;
				colvarNgaySinhcon.IsReadOnly = false;
				colvarNgaySinhcon.DefaultSetting = @"";
				colvarNgaySinhcon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySinhcon);
				
				TableSchema.TableColumn colvarNgayChetcon = new TableSchema.TableColumn(schema);
				colvarNgayChetcon.ColumnName = "ngay_chetcon";
				colvarNgayChetcon.DataType = DbType.DateTime;
				colvarNgayChetcon.MaxLength = 0;
				colvarNgayChetcon.AutoIncrement = false;
				colvarNgayChetcon.IsNullable = true;
				colvarNgayChetcon.IsPrimaryKey = false;
				colvarNgayChetcon.IsForeignKey = false;
				colvarNgayChetcon.IsReadOnly = false;
				colvarNgayChetcon.DefaultSetting = @"";
				colvarNgayChetcon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayChetcon);
				
				TableSchema.TableColumn colvarTtRavien = new TableSchema.TableColumn(schema);
				colvarTtRavien.ColumnName = "tt_ravien";
				colvarTtRavien.DataType = DbType.Int32;
				colvarTtRavien.MaxLength = 0;
				colvarTtRavien.AutoIncrement = false;
				colvarTtRavien.IsNullable = true;
				colvarTtRavien.IsPrimaryKey = false;
				colvarTtRavien.IsForeignKey = false;
				colvarTtRavien.IsReadOnly = false;
				colvarTtRavien.DefaultSetting = @"";
				colvarTtRavien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTtRavien);
				
				TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
				colvarGhiChu.ColumnName = "ghi_chu";
				colvarGhiChu.DataType = DbType.String;
				colvarGhiChu.MaxLength = 500;
				colvarGhiChu.AutoIncrement = false;
				colvarGhiChu.IsNullable = true;
				colvarGhiChu.IsPrimaryKey = false;
				colvarGhiChu.IsForeignKey = false;
				colvarGhiChu.IsReadOnly = false;
				colvarGhiChu.DefaultSetting = @"";
				colvarGhiChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChu);
				
				TableSchema.TableColumn colvarPpDieutri = new TableSchema.TableColumn(schema);
				colvarPpDieutri.ColumnName = "pp_dieutri";
				colvarPpDieutri.DataType = DbType.String;
				colvarPpDieutri.MaxLength = 500;
				colvarPpDieutri.AutoIncrement = false;
				colvarPpDieutri.IsNullable = true;
				colvarPpDieutri.IsPrimaryKey = false;
				colvarPpDieutri.IsForeignKey = false;
				colvarPpDieutri.IsReadOnly = false;
				colvarPpDieutri.DefaultSetting = @"";
				colvarPpDieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPpDieutri);
				
				TableSchema.TableColumn colvarNgayCt = new TableSchema.TableColumn(schema);
				colvarNgayCt.ColumnName = "ngay_ct";
				colvarNgayCt.DataType = DbType.DateTime;
				colvarNgayCt.MaxLength = 0;
				colvarNgayCt.AutoIncrement = false;
				colvarNgayCt.IsNullable = true;
				colvarNgayCt.IsPrimaryKey = false;
				colvarNgayCt.IsForeignKey = false;
				colvarNgayCt.IsReadOnly = false;
				colvarNgayCt.DefaultSetting = @"";
				colvarNgayCt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayCt);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("kcb_tongketBA",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("Ldvv")]
		[Bindable(true)]
		public string Ldvv 
		{
			get { return GetColumnValue<string>(Columns.Ldvv); }
			set { SetColumnValue(Columns.Ldvv, value); }
		}
		  
		[XmlAttribute("ChanDoan")]
		[Bindable(true)]
		public string ChanDoan 
		{
			get { return GetColumnValue<string>(Columns.ChanDoan); }
			set { SetColumnValue(Columns.ChanDoan, value); }
		}
		  
		[XmlAttribute("IdKhoadieutri")]
		[Bindable(true)]
		public short IdKhoadieutri 
		{
			get { return GetColumnValue<short>(Columns.IdKhoadieutri); }
			set { SetColumnValue(Columns.IdKhoadieutri, value); }
		}
		  
		[XmlAttribute("TuNgay")]
		[Bindable(true)]
		public DateTime? TuNgay 
		{
			get { return GetColumnValue<DateTime?>(Columns.TuNgay); }
			set { SetColumnValue(Columns.TuNgay, value); }
		}
		  
		[XmlAttribute("DenNgay")]
		[Bindable(true)]
		public DateTime? DenNgay 
		{
			get { return GetColumnValue<DateTime?>(Columns.DenNgay); }
			set { SetColumnValue(Columns.DenNgay, value); }
		}
		  
		[XmlAttribute("NgayRv")]
		[Bindable(true)]
		public DateTime? NgayRv 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayRv); }
			set { SetColumnValue(Columns.NgayRv, value); }
		}
		  
		[XmlAttribute("SoNgayDtri")]
		[Bindable(true)]
		public int? SoNgayDtri 
		{
			get { return GetColumnValue<int?>(Columns.SoNgayDtri); }
			set { SetColumnValue(Columns.SoNgayDtri, value); }
		}
		  
		[XmlAttribute("HuongDtri")]
		[Bindable(true)]
		public string HuongDtri 
		{
			get { return GetColumnValue<string>(Columns.HuongDtri); }
			set { SetColumnValue(Columns.HuongDtri, value); }
		}
		  
		[XmlAttribute("TTrangHienTai")]
		[Bindable(true)]
		public string TTrangHienTai 
		{
			get { return GetColumnValue<string>(Columns.TTrangHienTai); }
			set { SetColumnValue(Columns.TTrangHienTai, value); }
		}
		  
		[XmlAttribute("LamSang")]
		[Bindable(true)]
		public string LamSang 
		{
			get { return GetColumnValue<string>(Columns.LamSang); }
			set { SetColumnValue(Columns.LamSang, value); }
		}
		  
		[XmlAttribute("CanLamSang")]
		[Bindable(true)]
		public string CanLamSang 
		{
			get { return GetColumnValue<string>(Columns.CanLamSang); }
			set { SetColumnValue(Columns.CanLamSang, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime NgaySua 
		{
			get { return GetColumnValue<DateTime>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public int? TrangThai 
		{
			get { return GetColumnValue<int?>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("NgaySinhcon")]
		[Bindable(true)]
		public DateTime? NgaySinhcon 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySinhcon); }
			set { SetColumnValue(Columns.NgaySinhcon, value); }
		}
		  
		[XmlAttribute("NgayChetcon")]
		[Bindable(true)]
		public DateTime? NgayChetcon 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayChetcon); }
			set { SetColumnValue(Columns.NgayChetcon, value); }
		}
		  
		[XmlAttribute("TtRavien")]
		[Bindable(true)]
		public int? TtRavien 
		{
			get { return GetColumnValue<int?>(Columns.TtRavien); }
			set { SetColumnValue(Columns.TtRavien, value); }
		}
		  
		[XmlAttribute("GhiChu")]
		[Bindable(true)]
		public string GhiChu 
		{
			get { return GetColumnValue<string>(Columns.GhiChu); }
			set { SetColumnValue(Columns.GhiChu, value); }
		}
		  
		[XmlAttribute("PpDieutri")]
		[Bindable(true)]
		public string PpDieutri 
		{
			get { return GetColumnValue<string>(Columns.PpDieutri); }
			set { SetColumnValue(Columns.PpDieutri, value); }
		}
		  
		[XmlAttribute("NgayCt")]
		[Bindable(true)]
		public DateTime? NgayCt 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayCt); }
			set { SetColumnValue(Columns.NgayCt, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long varIdBenhnhan,string varMaLuotkham,string varLdvv,string varChanDoan,short varIdKhoadieutri,DateTime? varTuNgay,DateTime? varDenNgay,DateTime? varNgayRv,int? varSoNgayDtri,string varHuongDtri,string varTTrangHienTai,string varLamSang,string varCanLamSang,DateTime? varNgayTao,string varNguoiTao,DateTime varNgaySua,string varNguoiSua,int? varTrangThai,DateTime? varNgaySinhcon,DateTime? varNgayChetcon,int? varTtRavien,string varGhiChu,string varPpDieutri,DateTime? varNgayCt)
		{
			KcbTongketBA item = new KcbTongketBA();
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.MaLuotkham = varMaLuotkham;
			
			item.Ldvv = varLdvv;
			
			item.ChanDoan = varChanDoan;
			
			item.IdKhoadieutri = varIdKhoadieutri;
			
			item.TuNgay = varTuNgay;
			
			item.DenNgay = varDenNgay;
			
			item.NgayRv = varNgayRv;
			
			item.SoNgayDtri = varSoNgayDtri;
			
			item.HuongDtri = varHuongDtri;
			
			item.TTrangHienTai = varTTrangHienTai;
			
			item.LamSang = varLamSang;
			
			item.CanLamSang = varCanLamSang;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
			item.TrangThai = varTrangThai;
			
			item.NgaySinhcon = varNgaySinhcon;
			
			item.NgayChetcon = varNgayChetcon;
			
			item.TtRavien = varTtRavien;
			
			item.GhiChu = varGhiChu;
			
			item.PpDieutri = varPpDieutri;
			
			item.NgayCt = varNgayCt;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,long varIdBenhnhan,string varMaLuotkham,string varLdvv,string varChanDoan,short varIdKhoadieutri,DateTime? varTuNgay,DateTime? varDenNgay,DateTime? varNgayRv,int? varSoNgayDtri,string varHuongDtri,string varTTrangHienTai,string varLamSang,string varCanLamSang,DateTime? varNgayTao,string varNguoiTao,DateTime varNgaySua,string varNguoiSua,int? varTrangThai,DateTime? varNgaySinhcon,DateTime? varNgayChetcon,int? varTtRavien,string varGhiChu,string varPpDieutri,DateTime? varNgayCt)
		{
			KcbTongketBA item = new KcbTongketBA();
			
				item.Id = varId;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.Ldvv = varLdvv;
			
				item.ChanDoan = varChanDoan;
			
				item.IdKhoadieutri = varIdKhoadieutri;
			
				item.TuNgay = varTuNgay;
			
				item.DenNgay = varDenNgay;
			
				item.NgayRv = varNgayRv;
			
				item.SoNgayDtri = varSoNgayDtri;
			
				item.HuongDtri = varHuongDtri;
			
				item.TTrangHienTai = varTTrangHienTai;
			
				item.LamSang = varLamSang;
			
				item.CanLamSang = varCanLamSang;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
				item.TrangThai = varTrangThai;
			
				item.NgaySinhcon = varNgaySinhcon;
			
				item.NgayChetcon = varNgayChetcon;
			
				item.TtRavien = varTtRavien;
			
				item.GhiChu = varGhiChu;
			
				item.PpDieutri = varPpDieutri;
			
				item.NgayCt = varNgayCt;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn LdvvColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn ChanDoanColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoadieutriColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn TuNgayColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn DenNgayColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayRvColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn SoNgayDtriColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn HuongDtriColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn TTrangHienTaiColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn LamSangColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn CanLamSangColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySinhconColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayChetconColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn TtRavienColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn PpDieutriColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayCtColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"ID";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string Ldvv = @"Ldvv";
			 public static string ChanDoan = @"ChanDoan";
			 public static string IdKhoadieutri = @"id_khoadieutri";
			 public static string TuNgay = @"TuNgay";
			 public static string DenNgay = @"DenNgay";
			 public static string NgayRv = @"NgayRv";
			 public static string SoNgayDtri = @"SoNgayDtri";
			 public static string HuongDtri = @"HuongDtri";
			 public static string TTrangHienTai = @"TTrangHienTai";
			 public static string LamSang = @"LamSang";
			 public static string CanLamSang = @"CanLamSang";
			 public static string NgayTao = @"NgayTao";
			 public static string NguoiTao = @"NguoiTao";
			 public static string NgaySua = @"NgaySua";
			 public static string NguoiSua = @"NguoiSua";
			 public static string TrangThai = @"trang_thai";
			 public static string NgaySinhcon = @"ngay_sinhcon";
			 public static string NgayChetcon = @"ngay_chetcon";
			 public static string TtRavien = @"tt_ravien";
			 public static string GhiChu = @"ghi_chu";
			 public static string PpDieutri = @"pp_dieutri";
			 public static string NgayCt = @"ngay_ct";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
