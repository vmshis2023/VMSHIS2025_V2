using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
    /// <summary>
    /// Controller class for metha_kham_dtri
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class MethaKhamDtriController
    {
        // Preload our schema..
        MethaKhamDtri thisSchemaLoad = new MethaKhamDtri();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public MethaKhamDtriCollection FetchAll()
        {
            MethaKhamDtriCollection coll = new MethaKhamDtriCollection();
            Query qry = new Query(MethaKhamDtri.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public MethaKhamDtriCollection FetchByID(object IdKham)
        {
            MethaKhamDtriCollection coll = new MethaKhamDtriCollection().Where("id_kham", IdKham).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public MethaKhamDtriCollection FetchByQuery(Query qry)
        {
            MethaKhamDtriCollection coll = new MethaKhamDtriCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdKham)
        {
            return (MethaKhamDtri.Delete(IdKham) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdKham)
        {
            return (MethaKhamDtri.Destroy(IdKham) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string MaDieutri,long IdBenhnhan,string MaLoaikham,string HuongDexuat,short? SongayKham,DateTime? NgayBatdau,DateTime? NgayKetthuc,short IdBacsyKham,DateTime? NgaykhamGannhat,byte? KThemmatuy,byte? KNgatmuiorhathoi,byte? KChaynuocmat,byte? KDaucoorchuotrut,byte? KCocungbung,byte? KBuonnonornon,byte? KTieuchay,string KKichthuocdongtu,byte? KNoidagaoronlanh,string KNhiptim,string KHuyetap,string KCannang,byte? KNgap,string KNgukhongyen,string KGiouongthuoc,decimal? KLuonguong,string KGhichepkhac,byte? BHiv,byte? BNam,byte? BLao,byte? BTamthan,string BKhac,int? CosoDtri,string NguoiTao,DateTime? NgayTao,string NguoiSua,DateTime? NgaySua,string IpMacSua,string IpMacTao,string LastAction)
	    {
		    MethaKhamDtri item = new MethaKhamDtri();
		    
            item.MaDieutri = MaDieutri;
            
            item.IdBenhnhan = IdBenhnhan;
            
            item.MaLoaikham = MaLoaikham;
            
            item.HuongDexuat = HuongDexuat;
            
            item.SongayKham = SongayKham;
            
            item.NgayBatdau = NgayBatdau;
            
            item.NgayKetthuc = NgayKetthuc;
            
            item.IdBacsyKham = IdBacsyKham;
            
            item.NgaykhamGannhat = NgaykhamGannhat;
            
            item.KThemmatuy = KThemmatuy;
            
            item.KNgatmuiorhathoi = KNgatmuiorhathoi;
            
            item.KChaynuocmat = KChaynuocmat;
            
            item.KDaucoorchuotrut = KDaucoorchuotrut;
            
            item.KCocungbung = KCocungbung;
            
            item.KBuonnonornon = KBuonnonornon;
            
            item.KTieuchay = KTieuchay;
            
            item.KKichthuocdongtu = KKichthuocdongtu;
            
            item.KNoidagaoronlanh = KNoidagaoronlanh;
            
            item.KNhiptim = KNhiptim;
            
            item.KHuyetap = KHuyetap;
            
            item.KCannang = KCannang;
            
            item.KNgap = KNgap;
            
            item.KNgukhongyen = KNgukhongyen;
            
            item.KGiouongthuoc = KGiouongthuoc;
            
            item.KLuonguong = KLuonguong;
            
            item.KGhichepkhac = KGhichepkhac;
            
            item.BHiv = BHiv;
            
            item.BNam = BNam;
            
            item.BLao = BLao;
            
            item.BTamthan = BTamthan;
            
            item.BKhac = BKhac;
            
            item.CosoDtri = CosoDtri;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NgaySua = NgaySua;
            
            item.IpMacSua = IpMacSua;
            
            item.IpMacTao = IpMacTao;
            
            item.LastAction = LastAction;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long IdKham,string MaDieutri,long IdBenhnhan,string MaLoaikham,string HuongDexuat,short? SongayKham,DateTime? NgayBatdau,DateTime? NgayKetthuc,short IdBacsyKham,DateTime? NgaykhamGannhat,byte? KThemmatuy,byte? KNgatmuiorhathoi,byte? KChaynuocmat,byte? KDaucoorchuotrut,byte? KCocungbung,byte? KBuonnonornon,byte? KTieuchay,string KKichthuocdongtu,byte? KNoidagaoronlanh,string KNhiptim,string KHuyetap,string KCannang,byte? KNgap,string KNgukhongyen,string KGiouongthuoc,decimal? KLuonguong,string KGhichepkhac,byte? BHiv,byte? BNam,byte? BLao,byte? BTamthan,string BKhac,int? CosoDtri,string NguoiTao,DateTime? NgayTao,string NguoiSua,DateTime? NgaySua,string IpMacSua,string IpMacTao,string LastAction)
	    {
		    MethaKhamDtri item = new MethaKhamDtri();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdKham = IdKham;
				
			item.MaDieutri = MaDieutri;
				
			item.IdBenhnhan = IdBenhnhan;
				
			item.MaLoaikham = MaLoaikham;
				
			item.HuongDexuat = HuongDexuat;
				
			item.SongayKham = SongayKham;
				
			item.NgayBatdau = NgayBatdau;
				
			item.NgayKetthuc = NgayKetthuc;
				
			item.IdBacsyKham = IdBacsyKham;
				
			item.NgaykhamGannhat = NgaykhamGannhat;
				
			item.KThemmatuy = KThemmatuy;
				
			item.KNgatmuiorhathoi = KNgatmuiorhathoi;
				
			item.KChaynuocmat = KChaynuocmat;
				
			item.KDaucoorchuotrut = KDaucoorchuotrut;
				
			item.KCocungbung = KCocungbung;
				
			item.KBuonnonornon = KBuonnonornon;
				
			item.KTieuchay = KTieuchay;
				
			item.KKichthuocdongtu = KKichthuocdongtu;
				
			item.KNoidagaoronlanh = KNoidagaoronlanh;
				
			item.KNhiptim = KNhiptim;
				
			item.KHuyetap = KHuyetap;
				
			item.KCannang = KCannang;
				
			item.KNgap = KNgap;
				
			item.KNgukhongyen = KNgukhongyen;
				
			item.KGiouongthuoc = KGiouongthuoc;
				
			item.KLuonguong = KLuonguong;
				
			item.KGhichepkhac = KGhichepkhac;
				
			item.BHiv = BHiv;
				
			item.BNam = BNam;
				
			item.BLao = BLao;
				
			item.BTamthan = BTamthan;
				
			item.BKhac = BKhac;
				
			item.CosoDtri = CosoDtri;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NgaySua = NgaySua;
				
			item.IpMacSua = IpMacSua;
				
			item.IpMacTao = IpMacTao;
				
			item.LastAction = LastAction;
				
	        item.Save(UserName);
	    }
    }
}
