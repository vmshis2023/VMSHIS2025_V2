using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the NoitruChuyenkhoasua class.
	/// </summary>
    [Serializable]
	public partial class NoitruChuyenkhoasuaCollection : ActiveList<NoitruChuyenkhoasua, NoitruChuyenkhoasuaCollection>
	{	   
		public NoitruChuyenkhoasuaCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>NoitruChuyenkhoasuaCollection</returns>
		public NoitruChuyenkhoasuaCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                NoitruChuyenkhoasua o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the noitru_chuyenkhoasua table.
	/// </summary>
	[Serializable]
	public partial class NoitruChuyenkhoasua : ActiveRecord<NoitruChuyenkhoasua>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public NoitruChuyenkhoasua()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public NoitruChuyenkhoasua(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public NoitruChuyenkhoasua(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public NoitruChuyenkhoasua(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("noitru_chuyenkhoasua", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 10;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarIdBuongGiuong = new TableSchema.TableColumn(schema);
				colvarIdBuongGiuong.ColumnName = "id_buong_giuong";
				colvarIdBuongGiuong.DataType = DbType.Int64;
				colvarIdBuongGiuong.MaxLength = 0;
				colvarIdBuongGiuong.AutoIncrement = false;
				colvarIdBuongGiuong.IsNullable = true;
				colvarIdBuongGiuong.IsPrimaryKey = false;
				colvarIdBuongGiuong.IsForeignKey = false;
				colvarIdBuongGiuong.IsReadOnly = false;
				colvarIdBuongGiuong.DefaultSetting = @"";
				colvarIdBuongGiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBuongGiuong);
				
				TableSchema.TableColumn colvarIdKhoasua = new TableSchema.TableColumn(schema);
				colvarIdKhoasua.ColumnName = "id_khoasua";
				colvarIdKhoasua.DataType = DbType.Int16;
				colvarIdKhoasua.MaxLength = 0;
				colvarIdKhoasua.AutoIncrement = false;
				colvarIdKhoasua.IsNullable = false;
				colvarIdKhoasua.IsPrimaryKey = false;
				colvarIdKhoasua.IsForeignKey = false;
				colvarIdKhoasua.IsReadOnly = false;
				colvarIdKhoasua.DefaultSetting = @"";
				colvarIdKhoasua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoasua);
				
				TableSchema.TableColumn colvarIdBuong = new TableSchema.TableColumn(schema);
				colvarIdBuong.ColumnName = "id_buong";
				colvarIdBuong.DataType = DbType.Int32;
				colvarIdBuong.MaxLength = 0;
				colvarIdBuong.AutoIncrement = false;
				colvarIdBuong.IsNullable = true;
				colvarIdBuong.IsPrimaryKey = false;
				colvarIdBuong.IsForeignKey = false;
				colvarIdBuong.IsReadOnly = false;
				colvarIdBuong.DefaultSetting = @"";
				colvarIdBuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBuong);
				
				TableSchema.TableColumn colvarIdGiuong = new TableSchema.TableColumn(schema);
				colvarIdGiuong.ColumnName = "id_giuong";
				colvarIdGiuong.DataType = DbType.Int32;
				colvarIdGiuong.MaxLength = 0;
				colvarIdGiuong.AutoIncrement = false;
				colvarIdGiuong.IsNullable = true;
				colvarIdGiuong.IsPrimaryKey = false;
				colvarIdGiuong.IsForeignKey = false;
				colvarIdGiuong.IsReadOnly = false;
				colvarIdGiuong.DefaultSetting = @"";
				colvarIdGiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGiuong);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgàyTao = new TableSchema.TableColumn(schema);
				colvarNgàyTao.ColumnName = "ngày_tao";
				colvarNgàyTao.DataType = DbType.DateTime;
				colvarNgàyTao.MaxLength = 0;
				colvarNgàyTao.AutoIncrement = false;
				colvarNgàyTao.IsNullable = false;
				colvarNgàyTao.IsPrimaryKey = false;
				colvarNgàyTao.IsForeignKey = false;
				colvarNgàyTao.IsReadOnly = false;
				colvarNgàyTao.DefaultSetting = @"";
				colvarNgàyTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgàyTao);
				
				TableSchema.TableColumn colvarNguoiHuy = new TableSchema.TableColumn(schema);
				colvarNguoiHuy.ColumnName = "nguoi_huy";
				colvarNguoiHuy.DataType = DbType.String;
				colvarNguoiHuy.MaxLength = 30;
				colvarNguoiHuy.AutoIncrement = false;
				colvarNguoiHuy.IsNullable = true;
				colvarNguoiHuy.IsPrimaryKey = false;
				colvarNguoiHuy.IsForeignKey = false;
				colvarNguoiHuy.IsReadOnly = false;
				colvarNguoiHuy.DefaultSetting = @"";
				colvarNguoiHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiHuy);
				
				TableSchema.TableColumn colvarNgàyHuy = new TableSchema.TableColumn(schema);
				colvarNgàyHuy.ColumnName = "ngày_huy";
				colvarNgàyHuy.DataType = DbType.DateTime;
				colvarNgàyHuy.MaxLength = 0;
				colvarNgàyHuy.AutoIncrement = false;
				colvarNgàyHuy.IsNullable = true;
				colvarNgàyHuy.IsPrimaryKey = false;
				colvarNgàyHuy.IsForeignKey = false;
				colvarNgàyHuy.IsReadOnly = false;
				colvarNgàyHuy.DefaultSetting = @"";
				colvarNgàyHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgàyHuy);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 30;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("noitru_chuyenkhoasua",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("IdBuongGiuong")]
		[Bindable(true)]
		public long? IdBuongGiuong 
		{
			get { return GetColumnValue<long?>(Columns.IdBuongGiuong); }
			set { SetColumnValue(Columns.IdBuongGiuong, value); }
		}
		  
		[XmlAttribute("IdKhoasua")]
		[Bindable(true)]
		public short IdKhoasua 
		{
			get { return GetColumnValue<short>(Columns.IdKhoasua); }
			set { SetColumnValue(Columns.IdKhoasua, value); }
		}
		  
		[XmlAttribute("IdBuong")]
		[Bindable(true)]
		public int? IdBuong 
		{
			get { return GetColumnValue<int?>(Columns.IdBuong); }
			set { SetColumnValue(Columns.IdBuong, value); }
		}
		  
		[XmlAttribute("IdGiuong")]
		[Bindable(true)]
		public int? IdGiuong 
		{
			get { return GetColumnValue<int?>(Columns.IdGiuong); }
			set { SetColumnValue(Columns.IdGiuong, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgàyTao")]
		[Bindable(true)]
		public DateTime NgàyTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgàyTao); }
			set { SetColumnValue(Columns.NgàyTao, value); }
		}
		  
		[XmlAttribute("NguoiHuy")]
		[Bindable(true)]
		public string NguoiHuy 
		{
			get { return GetColumnValue<string>(Columns.NguoiHuy); }
			set { SetColumnValue(Columns.NguoiHuy, value); }
		}
		  
		[XmlAttribute("NgàyHuy")]
		[Bindable(true)]
		public DateTime? NgàyHuy 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgàyHuy); }
			set { SetColumnValue(Columns.NgàyHuy, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long varIdBenhnhan,string varMaLuotkham,long? varIdBuongGiuong,short varIdKhoasua,int? varIdBuong,int? varIdGiuong,string varNguoiTao,DateTime varNgàyTao,string varNguoiHuy,DateTime? varNgàyHuy,string varNguoiSua,DateTime? varNgaySua)
		{
			NoitruChuyenkhoasua item = new NoitruChuyenkhoasua();
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.MaLuotkham = varMaLuotkham;
			
			item.IdBuongGiuong = varIdBuongGiuong;
			
			item.IdKhoasua = varIdKhoasua;
			
			item.IdBuong = varIdBuong;
			
			item.IdGiuong = varIdGiuong;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgàyTao = varNgàyTao;
			
			item.NguoiHuy = varNguoiHuy;
			
			item.NgàyHuy = varNgàyHuy;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,long varIdBenhnhan,string varMaLuotkham,long? varIdBuongGiuong,short varIdKhoasua,int? varIdBuong,int? varIdGiuong,string varNguoiTao,DateTime varNgàyTao,string varNguoiHuy,DateTime? varNgàyHuy,string varNguoiSua,DateTime? varNgaySua)
		{
			NoitruChuyenkhoasua item = new NoitruChuyenkhoasua();
			
				item.Id = varId;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.IdBuongGiuong = varIdBuongGiuong;
			
				item.IdKhoasua = varIdKhoasua;
			
				item.IdBuong = varIdBuong;
			
				item.IdGiuong = varIdGiuong;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgàyTao = varNgàyTao;
			
				item.NguoiHuy = varNguoiHuy;
			
				item.NgàyHuy = varNgàyHuy;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBuongGiuongColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoasuaColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBuongColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGiuongColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NgàyTaoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiHuyColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NgàyHuyColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string IdBuongGiuong = @"id_buong_giuong";
			 public static string IdKhoasua = @"id_khoasua";
			 public static string IdBuong = @"id_buong";
			 public static string IdGiuong = @"id_giuong";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgàyTao = @"ngày_tao";
			 public static string NguoiHuy = @"nguoi_huy";
			 public static string NgàyHuy = @"ngày_huy";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string NgaySua = @"ngay_sua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
