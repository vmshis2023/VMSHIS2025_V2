using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the KcbThanhtoanPhanbotheoPTTT class.
	/// </summary>
    [Serializable]
	public partial class KcbThanhtoanPhanbotheoPTTTCollection : ActiveList<KcbThanhtoanPhanbotheoPTTT, KcbThanhtoanPhanbotheoPTTTCollection>
	{	   
		public KcbThanhtoanPhanbotheoPTTTCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KcbThanhtoanPhanbotheoPTTTCollection</returns>
		public KcbThanhtoanPhanbotheoPTTTCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KcbThanhtoanPhanbotheoPTTT o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the kcb_thanhtoan_phanbotheoPTTT table.
	/// </summary>
	[Serializable]
	public partial class KcbThanhtoanPhanbotheoPTTT : ActiveRecord<KcbThanhtoanPhanbotheoPTTT>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KcbThanhtoanPhanbotheoPTTT()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KcbThanhtoanPhanbotheoPTTT(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KcbThanhtoanPhanbotheoPTTT(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KcbThanhtoanPhanbotheoPTTT(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("kcb_thanhtoan_phanbotheoPTTT", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdThanhtoan = new TableSchema.TableColumn(schema);
				colvarIdThanhtoan.ColumnName = "id_thanhtoan";
				colvarIdThanhtoan.DataType = DbType.Int64;
				colvarIdThanhtoan.MaxLength = 0;
				colvarIdThanhtoan.AutoIncrement = false;
				colvarIdThanhtoan.IsNullable = true;
				colvarIdThanhtoan.IsPrimaryKey = false;
				colvarIdThanhtoan.IsForeignKey = false;
				colvarIdThanhtoan.IsReadOnly = false;
				
						colvarIdThanhtoan.DefaultSetting = @"((-1))";
				colvarIdThanhtoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdThanhtoan);
				
				TableSchema.TableColumn colvarMaPttt = new TableSchema.TableColumn(schema);
				colvarMaPttt.ColumnName = "ma_pttt";
				colvarMaPttt.DataType = DbType.String;
				colvarMaPttt.MaxLength = 20;
				colvarMaPttt.AutoIncrement = false;
				colvarMaPttt.IsNullable = false;
				colvarMaPttt.IsPrimaryKey = false;
				colvarMaPttt.IsForeignKey = false;
				colvarMaPttt.IsReadOnly = false;
				colvarMaPttt.DefaultSetting = @"";
				colvarMaPttt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaPttt);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 10;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarNoiTru = new TableSchema.TableColumn(schema);
				colvarNoiTru.ColumnName = "noi_tru";
				colvarNoiTru.DataType = DbType.Byte;
				colvarNoiTru.MaxLength = 0;
				colvarNoiTru.AutoIncrement = false;
				colvarNoiTru.IsNullable = false;
				colvarNoiTru.IsPrimaryKey = false;
				colvarNoiTru.IsForeignKey = false;
				colvarNoiTru.IsReadOnly = false;
				colvarNoiTru.DefaultSetting = @"";
				colvarNoiTru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoiTru);
				
				TableSchema.TableColumn colvarTongTien = new TableSchema.TableColumn(schema);
				colvarTongTien.ColumnName = "tong_tien";
				colvarTongTien.DataType = DbType.Decimal;
				colvarTongTien.MaxLength = 0;
				colvarTongTien.AutoIncrement = false;
				colvarTongTien.IsNullable = false;
				colvarTongTien.IsPrimaryKey = false;
				colvarTongTien.IsForeignKey = false;
				colvarTongTien.IsReadOnly = false;
				colvarTongTien.DefaultSetting = @"";
				colvarTongTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongTien);
				
				TableSchema.TableColumn colvarSoTien = new TableSchema.TableColumn(schema);
				colvarSoTien.ColumnName = "so_tien";
				colvarSoTien.DataType = DbType.Decimal;
				colvarSoTien.MaxLength = 0;
				colvarSoTien.AutoIncrement = false;
				colvarSoTien.IsNullable = false;
				colvarSoTien.IsPrimaryKey = false;
				colvarSoTien.IsForeignKey = false;
				colvarSoTien.IsReadOnly = false;
				colvarSoTien.DefaultSetting = @"";
				colvarSoTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoTien);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = false;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 30;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarMaNganhang = new TableSchema.TableColumn(schema);
				colvarMaNganhang.ColumnName = "ma_nganhang";
				colvarMaNganhang.DataType = DbType.String;
				colvarMaNganhang.MaxLength = 30;
				colvarMaNganhang.AutoIncrement = false;
				colvarMaNganhang.IsNullable = true;
				colvarMaNganhang.IsPrimaryKey = false;
				colvarMaNganhang.IsForeignKey = false;
				colvarMaNganhang.IsReadOnly = false;
				
						colvarMaNganhang.DefaultSetting = @"(N'')";
				colvarMaNganhang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNganhang);
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarIdPhieuthu = new TableSchema.TableColumn(schema);
				colvarIdPhieuthu.ColumnName = "id_phieuthu";
				colvarIdPhieuthu.DataType = DbType.Int64;
				colvarIdPhieuthu.MaxLength = 0;
				colvarIdPhieuthu.AutoIncrement = false;
				colvarIdPhieuthu.IsNullable = true;
				colvarIdPhieuthu.IsPrimaryKey = false;
				colvarIdPhieuthu.IsForeignKey = false;
				colvarIdPhieuthu.IsReadOnly = false;
				colvarIdPhieuthu.DefaultSetting = @"";
				colvarIdPhieuthu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuthu);
				
				TableSchema.TableColumn colvarIdTamung = new TableSchema.TableColumn(schema);
				colvarIdTamung.ColumnName = "id_tamung";
				colvarIdTamung.DataType = DbType.Int64;
				colvarIdTamung.MaxLength = 0;
				colvarIdTamung.AutoIncrement = false;
				colvarIdTamung.IsNullable = true;
				colvarIdTamung.IsPrimaryKey = false;
				colvarIdTamung.IsForeignKey = false;
				colvarIdTamung.IsReadOnly = false;
				colvarIdTamung.DefaultSetting = @"";
				colvarIdTamung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdTamung);
				
				TableSchema.TableColumn colvarTthaiHuy = new TableSchema.TableColumn(schema);
				colvarTthaiHuy.ColumnName = "tthai_huy";
				colvarTthaiHuy.DataType = DbType.Byte;
				colvarTthaiHuy.MaxLength = 0;
				colvarTthaiHuy.AutoIncrement = false;
				colvarTthaiHuy.IsNullable = true;
				colvarTthaiHuy.IsPrimaryKey = false;
				colvarTthaiHuy.IsForeignKey = false;
				colvarTthaiHuy.IsReadOnly = false;
				
						colvarTthaiHuy.DefaultSetting = @"((0))";
				colvarTthaiHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTthaiHuy);
				
				TableSchema.TableColumn colvarLoaiPhanbo = new TableSchema.TableColumn(schema);
				colvarLoaiPhanbo.ColumnName = "loai_phanbo";
				colvarLoaiPhanbo.DataType = DbType.Byte;
				colvarLoaiPhanbo.MaxLength = 0;
				colvarLoaiPhanbo.AutoIncrement = false;
				colvarLoaiPhanbo.IsNullable = true;
				colvarLoaiPhanbo.IsPrimaryKey = false;
				colvarLoaiPhanbo.IsForeignKey = false;
				colvarLoaiPhanbo.IsReadOnly = false;
				colvarLoaiPhanbo.DefaultSetting = @"";
				colvarLoaiPhanbo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiPhanbo);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("kcb_thanhtoan_phanbotheoPTTT",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdThanhtoan")]
		[Bindable(true)]
		public long? IdThanhtoan 
		{
			get { return GetColumnValue<long?>(Columns.IdThanhtoan); }
			set { SetColumnValue(Columns.IdThanhtoan, value); }
		}
		  
		[XmlAttribute("MaPttt")]
		[Bindable(true)]
		public string MaPttt 
		{
			get { return GetColumnValue<string>(Columns.MaPttt); }
			set { SetColumnValue(Columns.MaPttt, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("NoiTru")]
		[Bindable(true)]
		public byte NoiTru 
		{
			get { return GetColumnValue<byte>(Columns.NoiTru); }
			set { SetColumnValue(Columns.NoiTru, value); }
		}
		  
		[XmlAttribute("TongTien")]
		[Bindable(true)]
		public decimal TongTien 
		{
			get { return GetColumnValue<decimal>(Columns.TongTien); }
			set { SetColumnValue(Columns.TongTien, value); }
		}
		  
		[XmlAttribute("SoTien")]
		[Bindable(true)]
		public decimal SoTien 
		{
			get { return GetColumnValue<decimal>(Columns.SoTien); }
			set { SetColumnValue(Columns.SoTien, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime NgayTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("MaNganhang")]
		[Bindable(true)]
		public string MaNganhang 
		{
			get { return GetColumnValue<string>(Columns.MaNganhang); }
			set { SetColumnValue(Columns.MaNganhang, value); }
		}
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("IdPhieuthu")]
		[Bindable(true)]
		public long? IdPhieuthu 
		{
			get { return GetColumnValue<long?>(Columns.IdPhieuthu); }
			set { SetColumnValue(Columns.IdPhieuthu, value); }
		}
		  
		[XmlAttribute("IdTamung")]
		[Bindable(true)]
		public long? IdTamung 
		{
			get { return GetColumnValue<long?>(Columns.IdTamung); }
			set { SetColumnValue(Columns.IdTamung, value); }
		}
		  
		[XmlAttribute("TthaiHuy")]
		[Bindable(true)]
		public byte? TthaiHuy 
		{
			get { return GetColumnValue<byte?>(Columns.TthaiHuy); }
			set { SetColumnValue(Columns.TthaiHuy, value); }
		}
		  
		[XmlAttribute("LoaiPhanbo")]
		[Bindable(true)]
		public byte? LoaiPhanbo 
		{
			get { return GetColumnValue<byte?>(Columns.LoaiPhanbo); }
			set { SetColumnValue(Columns.LoaiPhanbo, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long? varIdThanhtoan,string varMaPttt,long varIdBenhnhan,string varMaLuotkham,byte varNoiTru,decimal varTongTien,decimal varSoTien,string varNguoiTao,DateTime varNgayTao,string varNguoiSua,DateTime? varNgaySua,string varMaNganhang,long? varIdPhieuthu,long? varIdTamung,byte? varTthaiHuy,byte? varLoaiPhanbo)
		{
			KcbThanhtoanPhanbotheoPTTT item = new KcbThanhtoanPhanbotheoPTTT();
			
			item.IdThanhtoan = varIdThanhtoan;
			
			item.MaPttt = varMaPttt;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.MaLuotkham = varMaLuotkham;
			
			item.NoiTru = varNoiTru;
			
			item.TongTien = varTongTien;
			
			item.SoTien = varSoTien;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.MaNganhang = varMaNganhang;
			
			item.IdPhieuthu = varIdPhieuthu;
			
			item.IdTamung = varIdTamung;
			
			item.TthaiHuy = varTthaiHuy;
			
			item.LoaiPhanbo = varLoaiPhanbo;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long? varIdThanhtoan,string varMaPttt,long varIdBenhnhan,string varMaLuotkham,byte varNoiTru,decimal varTongTien,decimal varSoTien,string varNguoiTao,DateTime varNgayTao,string varNguoiSua,DateTime? varNgaySua,string varMaNganhang,long varId,long? varIdPhieuthu,long? varIdTamung,byte? varTthaiHuy,byte? varLoaiPhanbo)
		{
			KcbThanhtoanPhanbotheoPTTT item = new KcbThanhtoanPhanbotheoPTTT();
			
				item.IdThanhtoan = varIdThanhtoan;
			
				item.MaPttt = varMaPttt;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.NoiTru = varNoiTru;
			
				item.TongTien = varTongTien;
			
				item.SoTien = varSoTien;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.MaNganhang = varMaNganhang;
			
				item.Id = varId;
			
				item.IdPhieuthu = varIdPhieuthu;
			
				item.IdTamung = varIdTamung;
			
				item.TthaiHuy = varTthaiHuy;
			
				item.LoaiPhanbo = varLoaiPhanbo;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdThanhtoanColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaPtttColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn NoiTruColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TongTienColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn SoTienColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNganhangColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuthuColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn IdTamungColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn TthaiHuyColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiPhanboColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdThanhtoan = @"id_thanhtoan";
			 public static string MaPttt = @"ma_pttt";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string NoiTru = @"noi_tru";
			 public static string TongTien = @"tong_tien";
			 public static string SoTien = @"so_tien";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string NgaySua = @"ngay_sua";
			 public static string MaNganhang = @"ma_nganhang";
			 public static string Id = @"id";
			 public static string IdPhieuthu = @"id_phieuthu";
			 public static string IdTamung = @"id_tamung";
			 public static string TthaiHuy = @"tthai_huy";
			 public static string LoaiPhanbo = @"loai_phanbo";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
