using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the DmucTinhchatthuoc class.
	/// </summary>
    [Serializable]
	public partial class DmucTinhchatthuocCollection : ActiveList<DmucTinhchatthuoc, DmucTinhchatthuocCollection>
	{	   
		public DmucTinhchatthuocCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DmucTinhchatthuocCollection</returns>
		public DmucTinhchatthuocCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DmucTinhchatthuoc o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the dmuc_tinhchatthuoc table.
	/// </summary>
	[Serializable]
	public partial class DmucTinhchatthuoc : ActiveRecord<DmucTinhchatthuoc>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DmucTinhchatthuoc()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DmucTinhchatthuoc(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DmucTinhchatthuoc(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DmucTinhchatthuoc(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("dmuc_tinhchatthuoc", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdTinhchat = new TableSchema.TableColumn(schema);
				colvarIdTinhchat.ColumnName = "id_tinhchat";
				colvarIdTinhchat.DataType = DbType.Byte;
				colvarIdTinhchat.MaxLength = 0;
				colvarIdTinhchat.AutoIncrement = true;
				colvarIdTinhchat.IsNullable = false;
				colvarIdTinhchat.IsPrimaryKey = true;
				colvarIdTinhchat.IsForeignKey = false;
				colvarIdTinhchat.IsReadOnly = false;
				colvarIdTinhchat.DefaultSetting = @"";
				colvarIdTinhchat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdTinhchat);
				
				TableSchema.TableColumn colvarMaTinhchat = new TableSchema.TableColumn(schema);
				colvarMaTinhchat.ColumnName = "ma_tinhchat";
				colvarMaTinhchat.DataType = DbType.String;
				colvarMaTinhchat.MaxLength = 20;
				colvarMaTinhchat.AutoIncrement = false;
				colvarMaTinhchat.IsNullable = true;
				colvarMaTinhchat.IsPrimaryKey = false;
				colvarMaTinhchat.IsForeignKey = false;
				colvarMaTinhchat.IsReadOnly = false;
				colvarMaTinhchat.DefaultSetting = @"";
				colvarMaTinhchat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaTinhchat);
				
				TableSchema.TableColumn colvarTenTinhchat = new TableSchema.TableColumn(schema);
				colvarTenTinhchat.ColumnName = "ten_tinhchat";
				colvarTenTinhchat.DataType = DbType.String;
				colvarTenTinhchat.MaxLength = 100;
				colvarTenTinhchat.AutoIncrement = false;
				colvarTenTinhchat.IsNullable = true;
				colvarTenTinhchat.IsPrimaryKey = false;
				colvarTenTinhchat.IsForeignKey = false;
				colvarTenTinhchat.IsReadOnly = false;
				colvarTenTinhchat.DefaultSetting = @"";
				colvarTenTinhchat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenTinhchat);
				
				TableSchema.TableColumn colvarSttHthi = new TableSchema.TableColumn(schema);
				colvarSttHthi.ColumnName = "stt_hthi";
				colvarSttHthi.DataType = DbType.Int16;
				colvarSttHthi.MaxLength = 0;
				colvarSttHthi.AutoIncrement = false;
				colvarSttHthi.IsNullable = true;
				colvarSttHthi.IsPrimaryKey = false;
				colvarSttHthi.IsForeignKey = false;
				colvarSttHthi.IsReadOnly = false;
				colvarSttHthi.DefaultSetting = @"";
				colvarSttHthi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSttHthi);
				
				TableSchema.TableColumn colvarKieuThuocvt = new TableSchema.TableColumn(schema);
				colvarKieuThuocvt.ColumnName = "kieu_thuocvt";
				colvarKieuThuocvt.DataType = DbType.String;
				colvarKieuThuocvt.MaxLength = 10;
				colvarKieuThuocvt.AutoIncrement = false;
				colvarKieuThuocvt.IsNullable = true;
				colvarKieuThuocvt.IsPrimaryKey = false;
				colvarKieuThuocvt.IsForeignKey = false;
				colvarKieuThuocvt.IsReadOnly = false;
				
						colvarKieuThuocvt.DefaultSetting = @"('THUOC')";
				colvarKieuThuocvt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuThuocvt);
				
				TableSchema.TableColumn colvarInRieng = new TableSchema.TableColumn(schema);
				colvarInRieng.ColumnName = "in_rieng";
				colvarInRieng.DataType = DbType.Int16;
				colvarInRieng.MaxLength = 0;
				colvarInRieng.AutoIncrement = false;
				colvarInRieng.IsNullable = true;
				colvarInRieng.IsPrimaryKey = false;
				colvarInRieng.IsForeignKey = false;
				colvarInRieng.IsReadOnly = false;
				
						colvarInRieng.DefaultSetting = @"((0))";
				colvarInRieng.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInRieng);
				
				TableSchema.TableColumn colvarReportCode = new TableSchema.TableColumn(schema);
				colvarReportCode.ColumnName = "report_code";
				colvarReportCode.DataType = DbType.String;
				colvarReportCode.MaxLength = 100;
				colvarReportCode.AutoIncrement = false;
				colvarReportCode.IsNullable = true;
				colvarReportCode.IsPrimaryKey = false;
				colvarReportCode.IsForeignKey = false;
				colvarReportCode.IsReadOnly = false;
				colvarReportCode.DefaultSetting = @"";
				colvarReportCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarReportCode);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.Boolean;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = true;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				
						colvarTrangThai.DefaultSetting = @"((0))";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
				colvarMotaThem.ColumnName = "mota_them";
				colvarMotaThem.DataType = DbType.String;
				colvarMotaThem.MaxLength = 255;
				colvarMotaThem.AutoIncrement = false;
				colvarMotaThem.IsNullable = true;
				colvarMotaThem.IsPrimaryKey = false;
				colvarMotaThem.IsForeignKey = false;
				colvarMotaThem.IsReadOnly = false;
				colvarMotaThem.DefaultSetting = @"";
				colvarMotaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaThem);
				
				TableSchema.TableColumn colvarCanhbaoKhikedon = new TableSchema.TableColumn(schema);
				colvarCanhbaoKhikedon.ColumnName = "canhbao_khikedon";
				colvarCanhbaoKhikedon.DataType = DbType.Byte;
				colvarCanhbaoKhikedon.MaxLength = 0;
				colvarCanhbaoKhikedon.AutoIncrement = false;
				colvarCanhbaoKhikedon.IsNullable = true;
				colvarCanhbaoKhikedon.IsPrimaryKey = false;
				colvarCanhbaoKhikedon.IsForeignKey = false;
				colvarCanhbaoKhikedon.IsReadOnly = false;
				
						colvarCanhbaoKhikedon.DefaultSetting = @"((0))";
				colvarCanhbaoKhikedon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCanhbaoKhikedon);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("dmuc_tinhchatthuoc",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdTinhchat")]
		[Bindable(true)]
		public byte IdTinhchat 
		{
			get { return GetColumnValue<byte>(Columns.IdTinhchat); }
			set { SetColumnValue(Columns.IdTinhchat, value); }
		}
		  
		[XmlAttribute("MaTinhchat")]
		[Bindable(true)]
		public string MaTinhchat 
		{
			get { return GetColumnValue<string>(Columns.MaTinhchat); }
			set { SetColumnValue(Columns.MaTinhchat, value); }
		}
		  
		[XmlAttribute("TenTinhchat")]
		[Bindable(true)]
		public string TenTinhchat 
		{
			get { return GetColumnValue<string>(Columns.TenTinhchat); }
			set { SetColumnValue(Columns.TenTinhchat, value); }
		}
		  
		[XmlAttribute("SttHthi")]
		[Bindable(true)]
		public short? SttHthi 
		{
			get { return GetColumnValue<short?>(Columns.SttHthi); }
			set { SetColumnValue(Columns.SttHthi, value); }
		}
		  
		[XmlAttribute("KieuThuocvt")]
		[Bindable(true)]
		public string KieuThuocvt 
		{
			get { return GetColumnValue<string>(Columns.KieuThuocvt); }
			set { SetColumnValue(Columns.KieuThuocvt, value); }
		}
		  
		[XmlAttribute("InRieng")]
		[Bindable(true)]
		public short? InRieng 
		{
			get { return GetColumnValue<short?>(Columns.InRieng); }
			set { SetColumnValue(Columns.InRieng, value); }
		}
		  
		[XmlAttribute("ReportCode")]
		[Bindable(true)]
		public string ReportCode 
		{
			get { return GetColumnValue<string>(Columns.ReportCode); }
			set { SetColumnValue(Columns.ReportCode, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public bool? TrangThai 
		{
			get { return GetColumnValue<bool?>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("MotaThem")]
		[Bindable(true)]
		public string MotaThem 
		{
			get { return GetColumnValue<string>(Columns.MotaThem); }
			set { SetColumnValue(Columns.MotaThem, value); }
		}
		  
		[XmlAttribute("CanhbaoKhikedon")]
		[Bindable(true)]
		public byte? CanhbaoKhikedon 
		{
			get { return GetColumnValue<byte?>(Columns.CanhbaoKhikedon); }
			set { SetColumnValue(Columns.CanhbaoKhikedon, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaTinhchat,string varTenTinhchat,short? varSttHthi,string varKieuThuocvt,short? varInRieng,string varReportCode,bool? varTrangThai,string varMotaThem,byte? varCanhbaoKhikedon)
		{
			DmucTinhchatthuoc item = new DmucTinhchatthuoc();
			
			item.MaTinhchat = varMaTinhchat;
			
			item.TenTinhchat = varTenTinhchat;
			
			item.SttHthi = varSttHthi;
			
			item.KieuThuocvt = varKieuThuocvt;
			
			item.InRieng = varInRieng;
			
			item.ReportCode = varReportCode;
			
			item.TrangThai = varTrangThai;
			
			item.MotaThem = varMotaThem;
			
			item.CanhbaoKhikedon = varCanhbaoKhikedon;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(byte varIdTinhchat,string varMaTinhchat,string varTenTinhchat,short? varSttHthi,string varKieuThuocvt,short? varInRieng,string varReportCode,bool? varTrangThai,string varMotaThem,byte? varCanhbaoKhikedon)
		{
			DmucTinhchatthuoc item = new DmucTinhchatthuoc();
			
				item.IdTinhchat = varIdTinhchat;
			
				item.MaTinhchat = varMaTinhchat;
			
				item.TenTinhchat = varTenTinhchat;
			
				item.SttHthi = varSttHthi;
			
				item.KieuThuocvt = varKieuThuocvt;
			
				item.InRieng = varInRieng;
			
				item.ReportCode = varReportCode;
			
				item.TrangThai = varTrangThai;
			
				item.MotaThem = varMotaThem;
			
				item.CanhbaoKhikedon = varCanhbaoKhikedon;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdTinhchatColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaTinhchatColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TenTinhchatColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn SttHthiColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuThuocvtColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn InRiengColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn ReportCodeColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaThemColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn CanhbaoKhikedonColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdTinhchat = @"id_tinhchat";
			 public static string MaTinhchat = @"ma_tinhchat";
			 public static string TenTinhchat = @"ten_tinhchat";
			 public static string SttHthi = @"stt_hthi";
			 public static string KieuThuocvt = @"kieu_thuocvt";
			 public static string InRieng = @"in_rieng";
			 public static string ReportCode = @"report_code";
			 public static string TrangThai = @"trang_thai";
			 public static string MotaThem = @"mota_them";
			 public static string CanhbaoKhikedon = @"canhbao_khikedon";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
