using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the KcbPhieukhamtoanthan class.
	/// </summary>
    [Serializable]
	public partial class KcbPhieukhamtoanthanCollection : ActiveList<KcbPhieukhamtoanthan, KcbPhieukhamtoanthanCollection>
	{	   
		public KcbPhieukhamtoanthanCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KcbPhieukhamtoanthanCollection</returns>
		public KcbPhieukhamtoanthanCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KcbPhieukhamtoanthan o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the kcb_phieukhamtoanthan table.
	/// </summary>
	[Serializable]
	public partial class KcbPhieukhamtoanthan : ActiveRecord<KcbPhieukhamtoanthan>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KcbPhieukhamtoanthan()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KcbPhieukhamtoanthan(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KcbPhieukhamtoanthan(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KcbPhieukhamtoanthan(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("kcb_phieukhamtoanthan", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 10;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarNgayKham = new TableSchema.TableColumn(schema);
				colvarNgayKham.ColumnName = "ngay_kham";
				colvarNgayKham.DataType = DbType.DateTime;
				colvarNgayKham.MaxLength = 0;
				colvarNgayKham.AutoIncrement = false;
				colvarNgayKham.IsNullable = false;
				colvarNgayKham.IsPrimaryKey = false;
				colvarNgayKham.IsForeignKey = false;
				colvarNgayKham.IsReadOnly = false;
				colvarNgayKham.DefaultSetting = @"";
				colvarNgayKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayKham);
				
				TableSchema.TableColumn colvarNhomMau = new TableSchema.TableColumn(schema);
				colvarNhomMau.ColumnName = "nhom_mau";
				colvarNhomMau.DataType = DbType.String;
				colvarNhomMau.MaxLength = 25;
				colvarNhomMau.AutoIncrement = false;
				colvarNhomMau.IsNullable = true;
				colvarNhomMau.IsPrimaryKey = false;
				colvarNhomMau.IsForeignKey = false;
				colvarNhomMau.IsReadOnly = false;
				colvarNhomMau.DefaultSetting = @"";
				colvarNhomMau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhomMau);
				
				TableSchema.TableColumn colvarNhietDo = new TableSchema.TableColumn(schema);
				colvarNhietDo.ColumnName = "nhiet_do";
				colvarNhietDo.DataType = DbType.String;
				colvarNhietDo.MaxLength = 10;
				colvarNhietDo.AutoIncrement = false;
				colvarNhietDo.IsNullable = true;
				colvarNhietDo.IsPrimaryKey = false;
				colvarNhietDo.IsForeignKey = false;
				colvarNhietDo.IsReadOnly = false;
				colvarNhietDo.DefaultSetting = @"";
				colvarNhietDo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhietDo);
				
				TableSchema.TableColumn colvarHuyetAp = new TableSchema.TableColumn(schema);
				colvarHuyetAp.ColumnName = "huyet_ap";
				colvarHuyetAp.DataType = DbType.String;
				colvarHuyetAp.MaxLength = 20;
				colvarHuyetAp.AutoIncrement = false;
				colvarHuyetAp.IsNullable = true;
				colvarHuyetAp.IsPrimaryKey = false;
				colvarHuyetAp.IsForeignKey = false;
				colvarHuyetAp.IsReadOnly = false;
				colvarHuyetAp.DefaultSetting = @"";
				colvarHuyetAp.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHuyetAp);
				
				TableSchema.TableColumn colvarMach = new TableSchema.TableColumn(schema);
				colvarMach.ColumnName = "mach";
				colvarMach.DataType = DbType.String;
				colvarMach.MaxLength = 10;
				colvarMach.AutoIncrement = false;
				colvarMach.IsNullable = true;
				colvarMach.IsPrimaryKey = false;
				colvarMach.IsForeignKey = false;
				colvarMach.IsReadOnly = false;
				colvarMach.DefaultSetting = @"";
				colvarMach.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMach);
				
				TableSchema.TableColumn colvarNhịpTho = new TableSchema.TableColumn(schema);
				colvarNhịpTho.ColumnName = "nhịp_tho";
				colvarNhịpTho.DataType = DbType.String;
				colvarNhịpTho.MaxLength = 10;
				colvarNhịpTho.AutoIncrement = false;
				colvarNhịpTho.IsNullable = true;
				colvarNhịpTho.IsPrimaryKey = false;
				colvarNhịpTho.IsForeignKey = false;
				colvarNhịpTho.IsReadOnly = false;
				colvarNhịpTho.DefaultSetting = @"";
				colvarNhịpTho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhịpTho);
				
				TableSchema.TableColumn colvarChieuCao = new TableSchema.TableColumn(schema);
				colvarChieuCao.ColumnName = "chieu_cao";
				colvarChieuCao.DataType = DbType.String;
				colvarChieuCao.MaxLength = 5;
				colvarChieuCao.AutoIncrement = false;
				colvarChieuCao.IsNullable = true;
				colvarChieuCao.IsPrimaryKey = false;
				colvarChieuCao.IsForeignKey = false;
				colvarChieuCao.IsReadOnly = false;
				colvarChieuCao.DefaultSetting = @"";
				colvarChieuCao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChieuCao);
				
				TableSchema.TableColumn colvarCanNang = new TableSchema.TableColumn(schema);
				colvarCanNang.ColumnName = "can_nang";
				colvarCanNang.DataType = DbType.String;
				colvarCanNang.MaxLength = 5;
				colvarCanNang.AutoIncrement = false;
				colvarCanNang.IsNullable = true;
				colvarCanNang.IsPrimaryKey = false;
				colvarCanNang.IsForeignKey = false;
				colvarCanNang.IsReadOnly = false;
				colvarCanNang.DefaultSetting = @"";
				colvarCanNang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCanNang);
				
				TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
				colvarMotaThem.ColumnName = "mota_them";
				colvarMotaThem.DataType = DbType.String;
				colvarMotaThem.MaxLength = 255;
				colvarMotaThem.AutoIncrement = false;
				colvarMotaThem.IsNullable = true;
				colvarMotaThem.IsPrimaryKey = false;
				colvarMotaThem.IsForeignKey = false;
				colvarMotaThem.IsReadOnly = false;
				colvarMotaThem.DefaultSetting = @"";
				colvarMotaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaThem);
				
				TableSchema.TableColumn colvarBmi = new TableSchema.TableColumn(schema);
				colvarBmi.ColumnName = "bmi";
				colvarBmi.DataType = DbType.String;
				colvarBmi.MaxLength = 5;
				colvarBmi.AutoIncrement = false;
				colvarBmi.IsNullable = true;
				colvarBmi.IsPrimaryKey = false;
				colvarBmi.IsForeignKey = false;
				colvarBmi.IsReadOnly = false;
				colvarBmi.DefaultSetting = @"";
				colvarBmi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBmi);
				
				TableSchema.TableColumn colvarDangDi = new TableSchema.TableColumn(schema);
				colvarDangDi.ColumnName = "dang_di";
				colvarDangDi.DataType = DbType.String;
				colvarDangDi.MaxLength = -1;
				colvarDangDi.AutoIncrement = false;
				colvarDangDi.IsNullable = true;
				colvarDangDi.IsPrimaryKey = false;
				colvarDangDi.IsForeignKey = false;
				colvarDangDi.IsReadOnly = false;
				colvarDangDi.DefaultSetting = @"";
				colvarDangDi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDangDi);
				
				TableSchema.TableColumn colvarTinhThan = new TableSchema.TableColumn(schema);
				colvarTinhThan.ColumnName = "tinh_than";
				colvarTinhThan.DataType = DbType.String;
				colvarTinhThan.MaxLength = -1;
				colvarTinhThan.AutoIncrement = false;
				colvarTinhThan.IsNullable = true;
				colvarTinhThan.IsPrimaryKey = false;
				colvarTinhThan.IsForeignKey = false;
				colvarTinhThan.IsReadOnly = false;
				colvarTinhThan.DefaultSetting = @"";
				colvarTinhThan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTinhThan);
				
				TableSchema.TableColumn colvarHinhdangChung = new TableSchema.TableColumn(schema);
				colvarHinhdangChung.ColumnName = "hinhdang_chung";
				colvarHinhdangChung.DataType = DbType.String;
				colvarHinhdangChung.MaxLength = -1;
				colvarHinhdangChung.AutoIncrement = false;
				colvarHinhdangChung.IsNullable = true;
				colvarHinhdangChung.IsPrimaryKey = false;
				colvarHinhdangChung.IsForeignKey = false;
				colvarHinhdangChung.IsReadOnly = false;
				colvarHinhdangChung.DefaultSetting = @"";
				colvarHinhdangChung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHinhdangChung);
				
				TableSchema.TableColumn colvarMausacDa = new TableSchema.TableColumn(schema);
				colvarMausacDa.ColumnName = "mausac_da";
				colvarMausacDa.DataType = DbType.String;
				colvarMausacDa.MaxLength = -1;
				colvarMausacDa.AutoIncrement = false;
				colvarMausacDa.IsNullable = true;
				colvarMausacDa.IsPrimaryKey = false;
				colvarMausacDa.IsForeignKey = false;
				colvarMausacDa.IsReadOnly = false;
				colvarMausacDa.DefaultSetting = @"";
				colvarMausacDa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMausacDa);
				
				TableSchema.TableColumn colvarTinhtrangDa = new TableSchema.TableColumn(schema);
				colvarTinhtrangDa.ColumnName = "tinhtrang_da";
				colvarTinhtrangDa.DataType = DbType.String;
				colvarTinhtrangDa.MaxLength = -1;
				colvarTinhtrangDa.AutoIncrement = false;
				colvarTinhtrangDa.IsNullable = true;
				colvarTinhtrangDa.IsPrimaryKey = false;
				colvarTinhtrangDa.IsForeignKey = false;
				colvarTinhtrangDa.IsReadOnly = false;
				colvarTinhtrangDa.DefaultSetting = @"";
				colvarTinhtrangDa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTinhtrangDa);
				
				TableSchema.TableColumn colvarHethongLongtoc = new TableSchema.TableColumn(schema);
				colvarHethongLongtoc.ColumnName = "hethong_longtoc";
				colvarHethongLongtoc.DataType = DbType.String;
				colvarHethongLongtoc.MaxLength = -1;
				colvarHethongLongtoc.AutoIncrement = false;
				colvarHethongLongtoc.IsNullable = true;
				colvarHethongLongtoc.IsPrimaryKey = false;
				colvarHethongLongtoc.IsForeignKey = false;
				colvarHethongLongtoc.IsReadOnly = false;
				colvarHethongLongtoc.DefaultSetting = @"";
				colvarHethongLongtoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHethongLongtoc);
				
				TableSchema.TableColumn colvarNghiCobenh = new TableSchema.TableColumn(schema);
				colvarNghiCobenh.ColumnName = "nghi_cobenh";
				colvarNghiCobenh.DataType = DbType.String;
				colvarNghiCobenh.MaxLength = -1;
				colvarNghiCobenh.AutoIncrement = false;
				colvarNghiCobenh.IsNullable = true;
				colvarNghiCobenh.IsPrimaryKey = false;
				colvarNghiCobenh.IsForeignKey = false;
				colvarNghiCobenh.IsReadOnly = false;
				colvarNghiCobenh.DefaultSetting = @"";
				colvarNghiCobenh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNghiCobenh);
				
				TableSchema.TableColumn colvarBophanDau = new TableSchema.TableColumn(schema);
				colvarBophanDau.ColumnName = "bophan_dau";
				colvarBophanDau.DataType = DbType.String;
				colvarBophanDau.MaxLength = -1;
				colvarBophanDau.AutoIncrement = false;
				colvarBophanDau.IsNullable = true;
				colvarBophanDau.IsPrimaryKey = false;
				colvarBophanDau.IsForeignKey = false;
				colvarBophanDau.IsReadOnly = false;
				colvarBophanDau.DefaultSetting = @"";
				colvarBophanDau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBophanDau);
				
				TableSchema.TableColumn colvarBophanCo = new TableSchema.TableColumn(schema);
				colvarBophanCo.ColumnName = "bophan_co";
				colvarBophanCo.DataType = DbType.String;
				colvarBophanCo.MaxLength = -1;
				colvarBophanCo.AutoIncrement = false;
				colvarBophanCo.IsNullable = true;
				colvarBophanCo.IsPrimaryKey = false;
				colvarBophanCo.IsForeignKey = false;
				colvarBophanCo.IsReadOnly = false;
				colvarBophanCo.DefaultSetting = @"";
				colvarBophanCo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBophanCo);
				
				TableSchema.TableColumn colvarBophanNguc = new TableSchema.TableColumn(schema);
				colvarBophanNguc.ColumnName = "bophan_nguc";
				colvarBophanNguc.DataType = DbType.String;
				colvarBophanNguc.MaxLength = -1;
				colvarBophanNguc.AutoIncrement = false;
				colvarBophanNguc.IsNullable = true;
				colvarBophanNguc.IsPrimaryKey = false;
				colvarBophanNguc.IsForeignKey = false;
				colvarBophanNguc.IsReadOnly = false;
				colvarBophanNguc.DefaultSetting = @"";
				colvarBophanNguc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBophanNguc);
				
				TableSchema.TableColumn colvarBophanBung = new TableSchema.TableColumn(schema);
				colvarBophanBung.ColumnName = "bophan_bung";
				colvarBophanBung.DataType = DbType.String;
				colvarBophanBung.MaxLength = -1;
				colvarBophanBung.AutoIncrement = false;
				colvarBophanBung.IsNullable = true;
				colvarBophanBung.IsPrimaryKey = false;
				colvarBophanBung.IsForeignKey = false;
				colvarBophanBung.IsReadOnly = false;
				colvarBophanBung.DefaultSetting = @"";
				colvarBophanBung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBophanBung);
				
				TableSchema.TableColumn colvarBophanCotsong = new TableSchema.TableColumn(schema);
				colvarBophanCotsong.ColumnName = "bophan_cotsong";
				colvarBophanCotsong.DataType = DbType.String;
				colvarBophanCotsong.MaxLength = -1;
				colvarBophanCotsong.AutoIncrement = false;
				colvarBophanCotsong.IsNullable = true;
				colvarBophanCotsong.IsPrimaryKey = false;
				colvarBophanCotsong.IsForeignKey = false;
				colvarBophanCotsong.IsReadOnly = false;
				colvarBophanCotsong.DefaultSetting = @"";
				colvarBophanCotsong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBophanCotsong);
				
				TableSchema.TableColumn colvarBophanChatthai = new TableSchema.TableColumn(schema);
				colvarBophanChatthai.ColumnName = "bophan_chatthai";
				colvarBophanChatthai.DataType = DbType.String;
				colvarBophanChatthai.MaxLength = -1;
				colvarBophanChatthai.AutoIncrement = false;
				colvarBophanChatthai.IsNullable = true;
				colvarBophanChatthai.IsPrimaryKey = false;
				colvarBophanChatthai.IsForeignKey = false;
				colvarBophanChatthai.IsReadOnly = false;
				colvarBophanChatthai.DefaultSetting = @"";
				colvarBophanChatthai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBophanChatthai);
				
				TableSchema.TableColumn colvarIdBacsi = new TableSchema.TableColumn(schema);
				colvarIdBacsi.ColumnName = "id_bacsi";
				colvarIdBacsi.DataType = DbType.Int16;
				colvarIdBacsi.MaxLength = 0;
				colvarIdBacsi.AutoIncrement = false;
				colvarIdBacsi.IsNullable = true;
				colvarIdBacsi.IsPrimaryKey = false;
				colvarIdBacsi.IsForeignKey = false;
				colvarIdBacsi.IsReadOnly = false;
				colvarIdBacsi.DefaultSetting = @"";
				colvarIdBacsi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBacsi);
				
				TableSchema.TableColumn colvarToanThan = new TableSchema.TableColumn(schema);
				colvarToanThan.ColumnName = "toan_than";
				colvarToanThan.DataType = DbType.String;
				colvarToanThan.MaxLength = 2500;
				colvarToanThan.AutoIncrement = false;
				colvarToanThan.IsNullable = true;
				colvarToanThan.IsPrimaryKey = false;
				colvarToanThan.IsForeignKey = false;
				colvarToanThan.IsReadOnly = false;
				colvarToanThan.DefaultSetting = @"";
				colvarToanThan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarToanThan);
				
				TableSchema.TableColumn colvarBoPhan = new TableSchema.TableColumn(schema);
				colvarBoPhan.ColumnName = "bo_phan";
				colvarBoPhan.DataType = DbType.String;
				colvarBoPhan.MaxLength = 2500;
				colvarBoPhan.AutoIncrement = false;
				colvarBoPhan.IsNullable = true;
				colvarBoPhan.IsPrimaryKey = false;
				colvarBoPhan.IsForeignKey = false;
				colvarBoPhan.IsReadOnly = false;
				colvarBoPhan.DefaultSetting = @"";
				colvarBoPhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBoPhan);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				
						colvarNgayTao.DefaultSetting = @"(getdate())";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 30;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("kcb_phieukhamtoanthan",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("NgayKham")]
		[Bindable(true)]
		public DateTime NgayKham 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayKham); }
			set { SetColumnValue(Columns.NgayKham, value); }
		}
		  
		[XmlAttribute("NhomMau")]
		[Bindable(true)]
		public string NhomMau 
		{
			get { return GetColumnValue<string>(Columns.NhomMau); }
			set { SetColumnValue(Columns.NhomMau, value); }
		}
		  
		[XmlAttribute("NhietDo")]
		[Bindable(true)]
		public string NhietDo 
		{
			get { return GetColumnValue<string>(Columns.NhietDo); }
			set { SetColumnValue(Columns.NhietDo, value); }
		}
		  
		[XmlAttribute("HuyetAp")]
		[Bindable(true)]
		public string HuyetAp 
		{
			get { return GetColumnValue<string>(Columns.HuyetAp); }
			set { SetColumnValue(Columns.HuyetAp, value); }
		}
		  
		[XmlAttribute("Mach")]
		[Bindable(true)]
		public string Mach 
		{
			get { return GetColumnValue<string>(Columns.Mach); }
			set { SetColumnValue(Columns.Mach, value); }
		}
		  
		[XmlAttribute("NhịpTho")]
		[Bindable(true)]
		public string NhịpTho 
		{
			get { return GetColumnValue<string>(Columns.NhịpTho); }
			set { SetColumnValue(Columns.NhịpTho, value); }
		}
		  
		[XmlAttribute("ChieuCao")]
		[Bindable(true)]
		public string ChieuCao 
		{
			get { return GetColumnValue<string>(Columns.ChieuCao); }
			set { SetColumnValue(Columns.ChieuCao, value); }
		}
		  
		[XmlAttribute("CanNang")]
		[Bindable(true)]
		public string CanNang 
		{
			get { return GetColumnValue<string>(Columns.CanNang); }
			set { SetColumnValue(Columns.CanNang, value); }
		}
		  
		[XmlAttribute("MotaThem")]
		[Bindable(true)]
		public string MotaThem 
		{
			get { return GetColumnValue<string>(Columns.MotaThem); }
			set { SetColumnValue(Columns.MotaThem, value); }
		}
		  
		[XmlAttribute("Bmi")]
		[Bindable(true)]
		public string Bmi 
		{
			get { return GetColumnValue<string>(Columns.Bmi); }
			set { SetColumnValue(Columns.Bmi, value); }
		}
		  
		[XmlAttribute("DangDi")]
		[Bindable(true)]
		public string DangDi 
		{
			get { return GetColumnValue<string>(Columns.DangDi); }
			set { SetColumnValue(Columns.DangDi, value); }
		}
		  
		[XmlAttribute("TinhThan")]
		[Bindable(true)]
		public string TinhThan 
		{
			get { return GetColumnValue<string>(Columns.TinhThan); }
			set { SetColumnValue(Columns.TinhThan, value); }
		}
		  
		[XmlAttribute("HinhdangChung")]
		[Bindable(true)]
		public string HinhdangChung 
		{
			get { return GetColumnValue<string>(Columns.HinhdangChung); }
			set { SetColumnValue(Columns.HinhdangChung, value); }
		}
		  
		[XmlAttribute("MausacDa")]
		[Bindable(true)]
		public string MausacDa 
		{
			get { return GetColumnValue<string>(Columns.MausacDa); }
			set { SetColumnValue(Columns.MausacDa, value); }
		}
		  
		[XmlAttribute("TinhtrangDa")]
		[Bindable(true)]
		public string TinhtrangDa 
		{
			get { return GetColumnValue<string>(Columns.TinhtrangDa); }
			set { SetColumnValue(Columns.TinhtrangDa, value); }
		}
		  
		[XmlAttribute("HethongLongtoc")]
		[Bindable(true)]
		public string HethongLongtoc 
		{
			get { return GetColumnValue<string>(Columns.HethongLongtoc); }
			set { SetColumnValue(Columns.HethongLongtoc, value); }
		}
		  
		[XmlAttribute("NghiCobenh")]
		[Bindable(true)]
		public string NghiCobenh 
		{
			get { return GetColumnValue<string>(Columns.NghiCobenh); }
			set { SetColumnValue(Columns.NghiCobenh, value); }
		}
		  
		[XmlAttribute("BophanDau")]
		[Bindable(true)]
		public string BophanDau 
		{
			get { return GetColumnValue<string>(Columns.BophanDau); }
			set { SetColumnValue(Columns.BophanDau, value); }
		}
		  
		[XmlAttribute("BophanCo")]
		[Bindable(true)]
		public string BophanCo 
		{
			get { return GetColumnValue<string>(Columns.BophanCo); }
			set { SetColumnValue(Columns.BophanCo, value); }
		}
		  
		[XmlAttribute("BophanNguc")]
		[Bindable(true)]
		public string BophanNguc 
		{
			get { return GetColumnValue<string>(Columns.BophanNguc); }
			set { SetColumnValue(Columns.BophanNguc, value); }
		}
		  
		[XmlAttribute("BophanBung")]
		[Bindable(true)]
		public string BophanBung 
		{
			get { return GetColumnValue<string>(Columns.BophanBung); }
			set { SetColumnValue(Columns.BophanBung, value); }
		}
		  
		[XmlAttribute("BophanCotsong")]
		[Bindable(true)]
		public string BophanCotsong 
		{
			get { return GetColumnValue<string>(Columns.BophanCotsong); }
			set { SetColumnValue(Columns.BophanCotsong, value); }
		}
		  
		[XmlAttribute("BophanChatthai")]
		[Bindable(true)]
		public string BophanChatthai 
		{
			get { return GetColumnValue<string>(Columns.BophanChatthai); }
			set { SetColumnValue(Columns.BophanChatthai, value); }
		}
		  
		[XmlAttribute("IdBacsi")]
		[Bindable(true)]
		public short? IdBacsi 
		{
			get { return GetColumnValue<short?>(Columns.IdBacsi); }
			set { SetColumnValue(Columns.IdBacsi, value); }
		}
		  
		[XmlAttribute("ToanThan")]
		[Bindable(true)]
		public string ToanThan 
		{
			get { return GetColumnValue<string>(Columns.ToanThan); }
			set { SetColumnValue(Columns.ToanThan, value); }
		}
		  
		[XmlAttribute("BoPhan")]
		[Bindable(true)]
		public string BoPhan 
		{
			get { return GetColumnValue<string>(Columns.BoPhan); }
			set { SetColumnValue(Columns.BoPhan, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaLuotkham,long varIdBenhnhan,DateTime varNgayKham,string varNhomMau,string varNhietDo,string varHuyetAp,string varMach,string varNhịpTho,string varChieuCao,string varCanNang,string varMotaThem,string varBmi,string varDangDi,string varTinhThan,string varHinhdangChung,string varMausacDa,string varTinhtrangDa,string varHethongLongtoc,string varNghiCobenh,string varBophanDau,string varBophanCo,string varBophanNguc,string varBophanBung,string varBophanCotsong,string varBophanChatthai,short? varIdBacsi,string varToanThan,string varBoPhan,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua)
		{
			KcbPhieukhamtoanthan item = new KcbPhieukhamtoanthan();
			
			item.MaLuotkham = varMaLuotkham;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.NgayKham = varNgayKham;
			
			item.NhomMau = varNhomMau;
			
			item.NhietDo = varNhietDo;
			
			item.HuyetAp = varHuyetAp;
			
			item.Mach = varMach;
			
			item.NhịpTho = varNhịpTho;
			
			item.ChieuCao = varChieuCao;
			
			item.CanNang = varCanNang;
			
			item.MotaThem = varMotaThem;
			
			item.Bmi = varBmi;
			
			item.DangDi = varDangDi;
			
			item.TinhThan = varTinhThan;
			
			item.HinhdangChung = varHinhdangChung;
			
			item.MausacDa = varMausacDa;
			
			item.TinhtrangDa = varTinhtrangDa;
			
			item.HethongLongtoc = varHethongLongtoc;
			
			item.NghiCobenh = varNghiCobenh;
			
			item.BophanDau = varBophanDau;
			
			item.BophanCo = varBophanCo;
			
			item.BophanNguc = varBophanNguc;
			
			item.BophanBung = varBophanBung;
			
			item.BophanCotsong = varBophanCotsong;
			
			item.BophanChatthai = varBophanChatthai;
			
			item.IdBacsi = varIdBacsi;
			
			item.ToanThan = varToanThan;
			
			item.BoPhan = varBoPhan;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,string varMaLuotkham,long varIdBenhnhan,DateTime varNgayKham,string varNhomMau,string varNhietDo,string varHuyetAp,string varMach,string varNhịpTho,string varChieuCao,string varCanNang,string varMotaThem,string varBmi,string varDangDi,string varTinhThan,string varHinhdangChung,string varMausacDa,string varTinhtrangDa,string varHethongLongtoc,string varNghiCobenh,string varBophanDau,string varBophanCo,string varBophanNguc,string varBophanBung,string varBophanCotsong,string varBophanChatthai,short? varIdBacsi,string varToanThan,string varBoPhan,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua)
		{
			KcbPhieukhamtoanthan item = new KcbPhieukhamtoanthan();
			
				item.Id = varId;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.NgayKham = varNgayKham;
			
				item.NhomMau = varNhomMau;
			
				item.NhietDo = varNhietDo;
			
				item.HuyetAp = varHuyetAp;
			
				item.Mach = varMach;
			
				item.NhịpTho = varNhịpTho;
			
				item.ChieuCao = varChieuCao;
			
				item.CanNang = varCanNang;
			
				item.MotaThem = varMotaThem;
			
				item.Bmi = varBmi;
			
				item.DangDi = varDangDi;
			
				item.TinhThan = varTinhThan;
			
				item.HinhdangChung = varHinhdangChung;
			
				item.MausacDa = varMausacDa;
			
				item.TinhtrangDa = varTinhtrangDa;
			
				item.HethongLongtoc = varHethongLongtoc;
			
				item.NghiCobenh = varNghiCobenh;
			
				item.BophanDau = varBophanDau;
			
				item.BophanCo = varBophanCo;
			
				item.BophanNguc = varBophanNguc;
			
				item.BophanBung = varBophanBung;
			
				item.BophanCotsong = varBophanCotsong;
			
				item.BophanChatthai = varBophanChatthai;
			
				item.IdBacsi = varIdBacsi;
			
				item.ToanThan = varToanThan;
			
				item.BoPhan = varBoPhan;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayKhamColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn NhomMauColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn NhietDoColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn HuyetApColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn MachColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NhịpThoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn ChieuCaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn CanNangColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaThemColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn BmiColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn DangDiColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn TinhThanColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn HinhdangChungColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn MausacDaColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn TinhtrangDaColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn HethongLongtocColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn NghiCobenhColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn BophanDauColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn BophanCoColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn BophanNgucColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn BophanBungColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn BophanCotsongColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn BophanChatthaiColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBacsiColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn ToanThanColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn BoPhanColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string NgayKham = @"ngay_kham";
			 public static string NhomMau = @"nhom_mau";
			 public static string NhietDo = @"nhiet_do";
			 public static string HuyetAp = @"huyet_ap";
			 public static string Mach = @"mach";
			 public static string NhịpTho = @"nhịp_tho";
			 public static string ChieuCao = @"chieu_cao";
			 public static string CanNang = @"can_nang";
			 public static string MotaThem = @"mota_them";
			 public static string Bmi = @"bmi";
			 public static string DangDi = @"dang_di";
			 public static string TinhThan = @"tinh_than";
			 public static string HinhdangChung = @"hinhdang_chung";
			 public static string MausacDa = @"mausac_da";
			 public static string TinhtrangDa = @"tinhtrang_da";
			 public static string HethongLongtoc = @"hethong_longtoc";
			 public static string NghiCobenh = @"nghi_cobenh";
			 public static string BophanDau = @"bophan_dau";
			 public static string BophanCo = @"bophan_co";
			 public static string BophanNguc = @"bophan_nguc";
			 public static string BophanBung = @"bophan_bung";
			 public static string BophanCotsong = @"bophan_cotsong";
			 public static string BophanChatthai = @"bophan_chatthai";
			 public static string IdBacsi = @"id_bacsi";
			 public static string ToanThan = @"toan_than";
			 public static string BoPhan = @"bo_phan";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string NgaySua = @"ngay_sua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
