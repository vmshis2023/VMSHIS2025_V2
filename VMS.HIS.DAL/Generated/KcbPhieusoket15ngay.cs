using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the KcbPhieusoket15ngay class.
	/// </summary>
    [Serializable]
	public partial class KcbPhieusoket15ngayCollection : ActiveList<KcbPhieusoket15ngay, KcbPhieusoket15ngayCollection>
	{	   
		public KcbPhieusoket15ngayCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KcbPhieusoket15ngayCollection</returns>
		public KcbPhieusoket15ngayCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KcbPhieusoket15ngay o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the kcb_phieusoket15ngay table.
	/// </summary>
	[Serializable]
	public partial class KcbPhieusoket15ngay : ActiveRecord<KcbPhieusoket15ngay>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KcbPhieusoket15ngay()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KcbPhieusoket15ngay(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KcbPhieusoket15ngay(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KcbPhieusoket15ngay(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("kcb_phieusoket15ngay", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarMaPhieu = new TableSchema.TableColumn(schema);
				colvarMaPhieu.ColumnName = "ma_phieu";
				colvarMaPhieu.DataType = DbType.AnsiString;
				colvarMaPhieu.MaxLength = 50;
				colvarMaPhieu.AutoIncrement = false;
				colvarMaPhieu.IsNullable = false;
				colvarMaPhieu.IsPrimaryKey = false;
				colvarMaPhieu.IsForeignKey = false;
				colvarMaPhieu.IsReadOnly = false;
				colvarMaPhieu.DefaultSetting = @"";
				colvarMaPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaPhieu);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.AnsiString;
				colvarMaLuotkham.MaxLength = 50;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarGiuong = new TableSchema.TableColumn(schema);
				colvarGiuong.ColumnName = "Giuong";
				colvarGiuong.DataType = DbType.AnsiString;
				colvarGiuong.MaxLength = 50;
				colvarGiuong.AutoIncrement = false;
				colvarGiuong.IsNullable = false;
				colvarGiuong.IsPrimaryKey = false;
				colvarGiuong.IsForeignKey = false;
				colvarGiuong.IsReadOnly = false;
				colvarGiuong.DefaultSetting = @"";
				colvarGiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiuong);
				
				TableSchema.TableColumn colvarBuong = new TableSchema.TableColumn(schema);
				colvarBuong.ColumnName = "Buong";
				colvarBuong.DataType = DbType.AnsiString;
				colvarBuong.MaxLength = 50;
				colvarBuong.AutoIncrement = false;
				colvarBuong.IsNullable = false;
				colvarBuong.IsPrimaryKey = false;
				colvarBuong.IsForeignKey = false;
				colvarBuong.IsReadOnly = false;
				colvarBuong.DefaultSetting = @"";
				colvarBuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBuong);
				
				TableSchema.TableColumn colvarNgayLap = new TableSchema.TableColumn(schema);
				colvarNgayLap.ColumnName = "ngay_lap";
				colvarNgayLap.DataType = DbType.DateTime;
				colvarNgayLap.MaxLength = 0;
				colvarNgayLap.AutoIncrement = false;
				colvarNgayLap.IsNullable = false;
				colvarNgayLap.IsPrimaryKey = false;
				colvarNgayLap.IsForeignKey = false;
				colvarNgayLap.IsReadOnly = false;
				colvarNgayLap.DefaultSetting = @"";
				colvarNgayLap.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayLap);
				
				TableSchema.TableColumn colvarChanDoanBenh = new TableSchema.TableColumn(schema);
				colvarChanDoanBenh.ColumnName = "ChanDoanBenh";
				colvarChanDoanBenh.DataType = DbType.String;
				colvarChanDoanBenh.MaxLength = -1;
				colvarChanDoanBenh.AutoIncrement = false;
				colvarChanDoanBenh.IsNullable = false;
				colvarChanDoanBenh.IsPrimaryKey = false;
				colvarChanDoanBenh.IsForeignKey = false;
				colvarChanDoanBenh.IsReadOnly = false;
				colvarChanDoanBenh.DefaultSetting = @"";
				colvarChanDoanBenh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChanDoanBenh);
				
				TableSchema.TableColumn colvarDienBienLSTrongDotDieuTri = new TableSchema.TableColumn(schema);
				colvarDienBienLSTrongDotDieuTri.ColumnName = "DienBienLSTrongDotDieuTri";
				colvarDienBienLSTrongDotDieuTri.DataType = DbType.String;
				colvarDienBienLSTrongDotDieuTri.MaxLength = -1;
				colvarDienBienLSTrongDotDieuTri.AutoIncrement = false;
				colvarDienBienLSTrongDotDieuTri.IsNullable = false;
				colvarDienBienLSTrongDotDieuTri.IsPrimaryKey = false;
				colvarDienBienLSTrongDotDieuTri.IsForeignKey = false;
				colvarDienBienLSTrongDotDieuTri.IsReadOnly = false;
				colvarDienBienLSTrongDotDieuTri.DefaultSetting = @"";
				colvarDienBienLSTrongDotDieuTri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDienBienLSTrongDotDieuTri);
				
				TableSchema.TableColumn colvarXetNghiemCLS = new TableSchema.TableColumn(schema);
				colvarXetNghiemCLS.ColumnName = "XetNghiemCLS";
				colvarXetNghiemCLS.DataType = DbType.String;
				colvarXetNghiemCLS.MaxLength = -1;
				colvarXetNghiemCLS.AutoIncrement = false;
				colvarXetNghiemCLS.IsNullable = false;
				colvarXetNghiemCLS.IsPrimaryKey = false;
				colvarXetNghiemCLS.IsForeignKey = false;
				colvarXetNghiemCLS.IsReadOnly = false;
				colvarXetNghiemCLS.DefaultSetting = @"";
				colvarXetNghiemCLS.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXetNghiemCLS);
				
				TableSchema.TableColumn colvarQuaTrinhDieuTri = new TableSchema.TableColumn(schema);
				colvarQuaTrinhDieuTri.ColumnName = "QuaTrinhDieuTri";
				colvarQuaTrinhDieuTri.DataType = DbType.String;
				colvarQuaTrinhDieuTri.MaxLength = -1;
				colvarQuaTrinhDieuTri.AutoIncrement = false;
				colvarQuaTrinhDieuTri.IsNullable = false;
				colvarQuaTrinhDieuTri.IsPrimaryKey = false;
				colvarQuaTrinhDieuTri.IsForeignKey = false;
				colvarQuaTrinhDieuTri.IsReadOnly = false;
				colvarQuaTrinhDieuTri.DefaultSetting = @"";
				colvarQuaTrinhDieuTri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarQuaTrinhDieuTri);
				
				TableSchema.TableColumn colvarDanhGiaKetQua = new TableSchema.TableColumn(schema);
				colvarDanhGiaKetQua.ColumnName = "DanhGiaKetQua";
				colvarDanhGiaKetQua.DataType = DbType.String;
				colvarDanhGiaKetQua.MaxLength = -1;
				colvarDanhGiaKetQua.AutoIncrement = false;
				colvarDanhGiaKetQua.IsNullable = false;
				colvarDanhGiaKetQua.IsPrimaryKey = false;
				colvarDanhGiaKetQua.IsForeignKey = false;
				colvarDanhGiaKetQua.IsReadOnly = false;
				colvarDanhGiaKetQua.DefaultSetting = @"";
				colvarDanhGiaKetQua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDanhGiaKetQua);
				
				TableSchema.TableColumn colvarHuongDieuTriTiepVaTienLuong = new TableSchema.TableColumn(schema);
				colvarHuongDieuTriTiepVaTienLuong.ColumnName = "HuongDieuTriTiepVaTienLuong";
				colvarHuongDieuTriTiepVaTienLuong.DataType = DbType.String;
				colvarHuongDieuTriTiepVaTienLuong.MaxLength = -1;
				colvarHuongDieuTriTiepVaTienLuong.AutoIncrement = false;
				colvarHuongDieuTriTiepVaTienLuong.IsNullable = false;
				colvarHuongDieuTriTiepVaTienLuong.IsPrimaryKey = false;
				colvarHuongDieuTriTiepVaTienLuong.IsForeignKey = false;
				colvarHuongDieuTriTiepVaTienLuong.IsReadOnly = false;
				colvarHuongDieuTriTiepVaTienLuong.DefaultSetting = @"";
				colvarHuongDieuTriTiepVaTienLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHuongDieuTriTiepVaTienLuong);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = true;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarIdKhoadieutri = new TableSchema.TableColumn(schema);
				colvarIdKhoadieutri.ColumnName = "id_khoadieutri";
				colvarIdKhoadieutri.DataType = DbType.Int32;
				colvarIdKhoadieutri.MaxLength = 0;
				colvarIdKhoadieutri.AutoIncrement = false;
				colvarIdKhoadieutri.IsNullable = false;
				colvarIdKhoadieutri.IsPrimaryKey = false;
				colvarIdKhoadieutri.IsForeignKey = false;
				colvarIdKhoadieutri.IsReadOnly = false;
				colvarIdKhoadieutri.DefaultSetting = @"";
				colvarIdKhoadieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoadieutri);
				
				TableSchema.TableColumn colvarIdBacsidieutri = new TableSchema.TableColumn(schema);
				colvarIdBacsidieutri.ColumnName = "id_bacsidieutri";
				colvarIdBacsidieutri.DataType = DbType.Int32;
				colvarIdBacsidieutri.MaxLength = 0;
				colvarIdBacsidieutri.AutoIncrement = false;
				colvarIdBacsidieutri.IsNullable = false;
				colvarIdBacsidieutri.IsPrimaryKey = false;
				colvarIdBacsidieutri.IsForeignKey = false;
				colvarIdBacsidieutri.IsReadOnly = false;
				colvarIdBacsidieutri.DefaultSetting = @"";
				colvarIdBacsidieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBacsidieutri);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 30;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("kcb_phieusoket15ngay",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("MaPhieu")]
		[Bindable(true)]
		public string MaPhieu 
		{
			get { return GetColumnValue<string>(Columns.MaPhieu); }
			set { SetColumnValue(Columns.MaPhieu, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("Giuong")]
		[Bindable(true)]
		public string Giuong 
		{
			get { return GetColumnValue<string>(Columns.Giuong); }
			set { SetColumnValue(Columns.Giuong, value); }
		}
		  
		[XmlAttribute("Buong")]
		[Bindable(true)]
		public string Buong 
		{
			get { return GetColumnValue<string>(Columns.Buong); }
			set { SetColumnValue(Columns.Buong, value); }
		}
		  
		[XmlAttribute("NgayLap")]
		[Bindable(true)]
		public DateTime NgayLap 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayLap); }
			set { SetColumnValue(Columns.NgayLap, value); }
		}
		  
		[XmlAttribute("ChanDoanBenh")]
		[Bindable(true)]
		public string ChanDoanBenh 
		{
			get { return GetColumnValue<string>(Columns.ChanDoanBenh); }
			set { SetColumnValue(Columns.ChanDoanBenh, value); }
		}
		  
		[XmlAttribute("DienBienLSTrongDotDieuTri")]
		[Bindable(true)]
		public string DienBienLSTrongDotDieuTri 
		{
			get { return GetColumnValue<string>(Columns.DienBienLSTrongDotDieuTri); }
			set { SetColumnValue(Columns.DienBienLSTrongDotDieuTri, value); }
		}
		  
		[XmlAttribute("XetNghiemCLS")]
		[Bindable(true)]
		public string XetNghiemCLS 
		{
			get { return GetColumnValue<string>(Columns.XetNghiemCLS); }
			set { SetColumnValue(Columns.XetNghiemCLS, value); }
		}
		  
		[XmlAttribute("QuaTrinhDieuTri")]
		[Bindable(true)]
		public string QuaTrinhDieuTri 
		{
			get { return GetColumnValue<string>(Columns.QuaTrinhDieuTri); }
			set { SetColumnValue(Columns.QuaTrinhDieuTri, value); }
		}
		  
		[XmlAttribute("DanhGiaKetQua")]
		[Bindable(true)]
		public string DanhGiaKetQua 
		{
			get { return GetColumnValue<string>(Columns.DanhGiaKetQua); }
			set { SetColumnValue(Columns.DanhGiaKetQua, value); }
		}
		  
		[XmlAttribute("HuongDieuTriTiepVaTienLuong")]
		[Bindable(true)]
		public string HuongDieuTriTiepVaTienLuong 
		{
			get { return GetColumnValue<string>(Columns.HuongDieuTriTiepVaTienLuong); }
			set { SetColumnValue(Columns.HuongDieuTriTiepVaTienLuong, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long? IdBenhnhan 
		{
			get { return GetColumnValue<long?>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("IdKhoadieutri")]
		[Bindable(true)]
		public int IdKhoadieutri 
		{
			get { return GetColumnValue<int>(Columns.IdKhoadieutri); }
			set { SetColumnValue(Columns.IdKhoadieutri, value); }
		}
		  
		[XmlAttribute("IdBacsidieutri")]
		[Bindable(true)]
		public int IdBacsidieutri 
		{
			get { return GetColumnValue<int>(Columns.IdBacsidieutri); }
			set { SetColumnValue(Columns.IdBacsidieutri, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaPhieu,string varMaLuotkham,string varGiuong,string varBuong,DateTime varNgayLap,string varChanDoanBenh,string varDienBienLSTrongDotDieuTri,string varXetNghiemCLS,string varQuaTrinhDieuTri,string varDanhGiaKetQua,string varHuongDieuTriTiepVaTienLuong,long? varIdBenhnhan,int varIdKhoadieutri,int varIdBacsidieutri,DateTime? varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua)
		{
			KcbPhieusoket15ngay item = new KcbPhieusoket15ngay();
			
			item.MaPhieu = varMaPhieu;
			
			item.MaLuotkham = varMaLuotkham;
			
			item.Giuong = varGiuong;
			
			item.Buong = varBuong;
			
			item.NgayLap = varNgayLap;
			
			item.ChanDoanBenh = varChanDoanBenh;
			
			item.DienBienLSTrongDotDieuTri = varDienBienLSTrongDotDieuTri;
			
			item.XetNghiemCLS = varXetNghiemCLS;
			
			item.QuaTrinhDieuTri = varQuaTrinhDieuTri;
			
			item.DanhGiaKetQua = varDanhGiaKetQua;
			
			item.HuongDieuTriTiepVaTienLuong = varHuongDieuTriTiepVaTienLuong;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.IdKhoadieutri = varIdKhoadieutri;
			
			item.IdBacsidieutri = varIdBacsidieutri;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,string varMaPhieu,string varMaLuotkham,string varGiuong,string varBuong,DateTime varNgayLap,string varChanDoanBenh,string varDienBienLSTrongDotDieuTri,string varXetNghiemCLS,string varQuaTrinhDieuTri,string varDanhGiaKetQua,string varHuongDieuTriTiepVaTienLuong,long? varIdBenhnhan,int varIdKhoadieutri,int varIdBacsidieutri,DateTime? varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua)
		{
			KcbPhieusoket15ngay item = new KcbPhieusoket15ngay();
			
				item.Id = varId;
			
				item.MaPhieu = varMaPhieu;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.Giuong = varGiuong;
			
				item.Buong = varBuong;
			
				item.NgayLap = varNgayLap;
			
				item.ChanDoanBenh = varChanDoanBenh;
			
				item.DienBienLSTrongDotDieuTri = varDienBienLSTrongDotDieuTri;
			
				item.XetNghiemCLS = varXetNghiemCLS;
			
				item.QuaTrinhDieuTri = varQuaTrinhDieuTri;
			
				item.DanhGiaKetQua = varDanhGiaKetQua;
			
				item.HuongDieuTriTiepVaTienLuong = varHuongDieuTriTiepVaTienLuong;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.IdKhoadieutri = varIdKhoadieutri;
			
				item.IdBacsidieutri = varIdBacsidieutri;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaPhieuColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn GiuongColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn BuongColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayLapColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn ChanDoanBenhColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn DienBienLSTrongDotDieuTriColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn XetNghiemCLSColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn QuaTrinhDieuTriColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn DanhGiaKetQuaColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn HuongDieuTriTiepVaTienLuongColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoadieutriColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBacsidieutriColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string MaPhieu = @"ma_phieu";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string Giuong = @"Giuong";
			 public static string Buong = @"Buong";
			 public static string NgayLap = @"ngay_lap";
			 public static string ChanDoanBenh = @"ChanDoanBenh";
			 public static string DienBienLSTrongDotDieuTri = @"DienBienLSTrongDotDieuTri";
			 public static string XetNghiemCLS = @"XetNghiemCLS";
			 public static string QuaTrinhDieuTri = @"QuaTrinhDieuTri";
			 public static string DanhGiaKetQua = @"DanhGiaKetQua";
			 public static string HuongDieuTriTiepVaTienLuong = @"HuongDieuTriTiepVaTienLuong";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string IdKhoadieutri = @"id_khoadieutri";
			 public static string IdBacsidieutri = @"id_bacsidieutri";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgaySua = @"ngay_sua";
			 public static string NguoiSua = @"nguoi_sua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
