using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the EmrHosoluutru class.
	/// </summary>
    [Serializable]
	public partial class EmrHosoluutruCollection : ActiveList<EmrHosoluutru, EmrHosoluutruCollection>
	{	   
		public EmrHosoluutruCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>EmrHosoluutruCollection</returns>
		public EmrHosoluutruCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                EmrHosoluutru o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the emr_hosoluutru table.
	/// </summary>
	[Serializable]
	public partial class EmrHosoluutru : ActiveRecord<EmrHosoluutru>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public EmrHosoluutru()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public EmrHosoluutru(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public EmrHosoluutru(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public EmrHosoluutru(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("emr_hosoluutru", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdHoso = new TableSchema.TableColumn(schema);
				colvarIdHoso.ColumnName = "id_hoso";
				colvarIdHoso.DataType = DbType.Int64;
				colvarIdHoso.MaxLength = 0;
				colvarIdHoso.AutoIncrement = true;
				colvarIdHoso.IsNullable = false;
				colvarIdHoso.IsPrimaryKey = true;
				colvarIdHoso.IsForeignKey = false;
				colvarIdHoso.IsReadOnly = false;
				colvarIdHoso.DefaultSetting = @"";
				colvarIdHoso.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdHoso);
				
				TableSchema.TableColumn colvarMaBa = new TableSchema.TableColumn(schema);
				colvarMaBa.ColumnName = "ma_ba";
				colvarMaBa.DataType = DbType.String;
				colvarMaBa.MaxLength = 30;
				colvarMaBa.AutoIncrement = false;
				colvarMaBa.IsNullable = false;
				colvarMaBa.IsPrimaryKey = false;
				colvarMaBa.IsForeignKey = false;
				colvarMaBa.IsReadOnly = false;
				colvarMaBa.DefaultSetting = @"";
				colvarMaBa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaBa);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 10;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarMaCoso = new TableSchema.TableColumn(schema);
				colvarMaCoso.ColumnName = "ma_coso";
				colvarMaCoso.DataType = DbType.String;
				colvarMaCoso.MaxLength = 30;
				colvarMaCoso.AutoIncrement = false;
				colvarMaCoso.IsNullable = false;
				colvarMaCoso.IsPrimaryKey = false;
				colvarMaCoso.IsForeignKey = false;
				colvarMaCoso.IsReadOnly = false;
				colvarMaCoso.DefaultSetting = @"";
				colvarMaCoso.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaCoso);
				
				TableSchema.TableColumn colvarLoaiBa = new TableSchema.TableColumn(schema);
				colvarLoaiBa.ColumnName = "loai_ba";
				colvarLoaiBa.DataType = DbType.String;
				colvarLoaiBa.MaxLength = 30;
				colvarLoaiBa.AutoIncrement = false;
				colvarLoaiBa.IsNullable = false;
				colvarLoaiBa.IsPrimaryKey = false;
				colvarLoaiBa.IsForeignKey = false;
				colvarLoaiBa.IsReadOnly = false;
				colvarLoaiBa.DefaultSetting = @"";
				colvarLoaiBa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiBa);
				
				TableSchema.TableColumn colvarNam = new TableSchema.TableColumn(schema);
				colvarNam.ColumnName = "nam";
				colvarNam.DataType = DbType.Int32;
				colvarNam.MaxLength = 0;
				colvarNam.AutoIncrement = false;
				colvarNam.IsNullable = false;
				colvarNam.IsPrimaryKey = false;
				colvarNam.IsForeignKey = false;
				colvarNam.IsReadOnly = false;
				colvarNam.DefaultSetting = @"";
				colvarNam.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNam);
				
				TableSchema.TableColumn colvarSoLuutru = new TableSchema.TableColumn(schema);
				colvarSoLuutru.ColumnName = "so_luutru";
				colvarSoLuutru.DataType = DbType.String;
				colvarSoLuutru.MaxLength = 50;
				colvarSoLuutru.AutoIncrement = false;
				colvarSoLuutru.IsNullable = true;
				colvarSoLuutru.IsPrimaryKey = false;
				colvarSoLuutru.IsForeignKey = false;
				colvarSoLuutru.IsReadOnly = false;
				colvarSoLuutru.DefaultSetting = @"";
				colvarSoLuutru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuutru);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.Byte;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = false;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				colvarTrangThai.DefaultSetting = @"";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = false;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarIdBa = new TableSchema.TableColumn(schema);
				colvarIdBa.ColumnName = "id_ba";
				colvarIdBa.DataType = DbType.Int64;
				colvarIdBa.MaxLength = 0;
				colvarIdBa.AutoIncrement = false;
				colvarIdBa.IsNullable = true;
				colvarIdBa.IsPrimaryKey = false;
				colvarIdBa.IsForeignKey = false;
				colvarIdBa.IsReadOnly = false;
				colvarIdBa.DefaultSetting = @"";
				colvarIdBa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBa);
				
				TableSchema.TableColumn colvarNguoiDong = new TableSchema.TableColumn(schema);
				colvarNguoiDong.ColumnName = "nguoi_dong";
				colvarNguoiDong.DataType = DbType.String;
				colvarNguoiDong.MaxLength = 30;
				colvarNguoiDong.AutoIncrement = false;
				colvarNguoiDong.IsNullable = true;
				colvarNguoiDong.IsPrimaryKey = false;
				colvarNguoiDong.IsForeignKey = false;
				colvarNguoiDong.IsReadOnly = false;
				colvarNguoiDong.DefaultSetting = @"";
				colvarNguoiDong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiDong);
				
				TableSchema.TableColumn colvarNgayDong = new TableSchema.TableColumn(schema);
				colvarNgayDong.ColumnName = "ngay_dong";
				colvarNgayDong.DataType = DbType.DateTime;
				colvarNgayDong.MaxLength = 0;
				colvarNgayDong.AutoIncrement = false;
				colvarNgayDong.IsNullable = true;
				colvarNgayDong.IsPrimaryKey = false;
				colvarNgayDong.IsForeignKey = false;
				colvarNgayDong.IsReadOnly = false;
				colvarNgayDong.DefaultSetting = @"";
				colvarNgayDong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayDong);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("emr_hosoluutru",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdHoso")]
		[Bindable(true)]
		public long IdHoso 
		{
			get { return GetColumnValue<long>(Columns.IdHoso); }
			set { SetColumnValue(Columns.IdHoso, value); }
		}
		  
		[XmlAttribute("MaBa")]
		[Bindable(true)]
		public string MaBa 
		{
			get { return GetColumnValue<string>(Columns.MaBa); }
			set { SetColumnValue(Columns.MaBa, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("MaCoso")]
		[Bindable(true)]
		public string MaCoso 
		{
			get { return GetColumnValue<string>(Columns.MaCoso); }
			set { SetColumnValue(Columns.MaCoso, value); }
		}
		  
		[XmlAttribute("LoaiBa")]
		[Bindable(true)]
		public string LoaiBa 
		{
			get { return GetColumnValue<string>(Columns.LoaiBa); }
			set { SetColumnValue(Columns.LoaiBa, value); }
		}
		  
		[XmlAttribute("Nam")]
		[Bindable(true)]
		public int Nam 
		{
			get { return GetColumnValue<int>(Columns.Nam); }
			set { SetColumnValue(Columns.Nam, value); }
		}
		  
		[XmlAttribute("SoLuutru")]
		[Bindable(true)]
		public string SoLuutru 
		{
			get { return GetColumnValue<string>(Columns.SoLuutru); }
			set { SetColumnValue(Columns.SoLuutru, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public byte TrangThai 
		{
			get { return GetColumnValue<byte>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime NgayTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("IdBa")]
		[Bindable(true)]
		public long? IdBa 
		{
			get { return GetColumnValue<long?>(Columns.IdBa); }
			set { SetColumnValue(Columns.IdBa, value); }
		}
		  
		[XmlAttribute("NguoiDong")]
		[Bindable(true)]
		public string NguoiDong 
		{
			get { return GetColumnValue<string>(Columns.NguoiDong); }
			set { SetColumnValue(Columns.NguoiDong, value); }
		}
		  
		[XmlAttribute("NgayDong")]
		[Bindable(true)]
		public DateTime? NgayDong 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayDong); }
			set { SetColumnValue(Columns.NgayDong, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaBa,long varIdBenhnhan,string varMaLuotkham,string varMaCoso,string varLoaiBa,int varNam,string varSoLuutru,byte varTrangThai,string varNguoiTao,DateTime varNgayTao,long? varIdBa,string varNguoiDong,DateTime? varNgayDong)
		{
			EmrHosoluutru item = new EmrHosoluutru();
			
			item.MaBa = varMaBa;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.MaLuotkham = varMaLuotkham;
			
			item.MaCoso = varMaCoso;
			
			item.LoaiBa = varLoaiBa;
			
			item.Nam = varNam;
			
			item.SoLuutru = varSoLuutru;
			
			item.TrangThai = varTrangThai;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.IdBa = varIdBa;
			
			item.NguoiDong = varNguoiDong;
			
			item.NgayDong = varNgayDong;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varIdHoso,string varMaBa,long varIdBenhnhan,string varMaLuotkham,string varMaCoso,string varLoaiBa,int varNam,string varSoLuutru,byte varTrangThai,string varNguoiTao,DateTime varNgayTao,long? varIdBa,string varNguoiDong,DateTime? varNgayDong)
		{
			EmrHosoluutru item = new EmrHosoluutru();
			
				item.IdHoso = varIdHoso;
			
				item.MaBa = varMaBa;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.MaCoso = varMaCoso;
			
				item.LoaiBa = varLoaiBa;
			
				item.Nam = varNam;
			
				item.SoLuutru = varSoLuutru;
			
				item.TrangThai = varTrangThai;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.IdBa = varIdBa;
			
				item.NguoiDong = varNguoiDong;
			
				item.NgayDong = varNgayDong;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdHosoColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaBaColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn MaCosoColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiBaColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn NamColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuutruColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBaColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiDongColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayDongColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdHoso = @"id_hoso";
			 public static string MaBa = @"ma_ba";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string MaCoso = @"ma_coso";
			 public static string LoaiBa = @"loai_ba";
			 public static string Nam = @"nam";
			 public static string SoLuutru = @"so_luutru";
			 public static string TrangThai = @"trang_thai";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgayTao = @"ngay_tao";
			 public static string IdBa = @"id_ba";
			 public static string NguoiDong = @"nguoi_dong";
			 public static string NgayDong = @"ngay_dong";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
