using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the QheBacsiDichvucl class.
	/// </summary>
    [Serializable]
	public partial class QheBacsiDichvuclCollection : ActiveList<QheBacsiDichvucl, QheBacsiDichvuclCollection>
	{	   
		public QheBacsiDichvuclCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>QheBacsiDichvuclCollection</returns>
		public QheBacsiDichvuclCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                QheBacsiDichvucl o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the qhe_bacsi_dichvucls table.
	/// </summary>
	[Serializable]
	public partial class QheBacsiDichvucl : ActiveRecord<QheBacsiDichvucl>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public QheBacsiDichvucl()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public QheBacsiDichvucl(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public QheBacsiDichvucl(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public QheBacsiDichvucl(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("qhe_bacsi_dichvucls", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdQuanhe = new TableSchema.TableColumn(schema);
				colvarIdQuanhe.ColumnName = "id_quanhe";
				colvarIdQuanhe.DataType = DbType.Int16;
				colvarIdQuanhe.MaxLength = 0;
				colvarIdQuanhe.AutoIncrement = true;
				colvarIdQuanhe.IsNullable = false;
				colvarIdQuanhe.IsPrimaryKey = true;
				colvarIdQuanhe.IsForeignKey = false;
				colvarIdQuanhe.IsReadOnly = false;
				colvarIdQuanhe.DefaultSetting = @"";
				colvarIdQuanhe.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdQuanhe);
				
				TableSchema.TableColumn colvarIdNhanvien = new TableSchema.TableColumn(schema);
				colvarIdNhanvien.ColumnName = "id_nhanvien";
				colvarIdNhanvien.DataType = DbType.Int16;
				colvarIdNhanvien.MaxLength = 0;
				colvarIdNhanvien.AutoIncrement = false;
				colvarIdNhanvien.IsNullable = false;
				colvarIdNhanvien.IsPrimaryKey = false;
				colvarIdNhanvien.IsForeignKey = false;
				colvarIdNhanvien.IsReadOnly = false;
				colvarIdNhanvien.DefaultSetting = @"";
				colvarIdNhanvien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhanvien);
				
				TableSchema.TableColumn colvarIdDichvu = new TableSchema.TableColumn(schema);
				colvarIdDichvu.ColumnName = "id_dichvu";
				colvarIdDichvu.DataType = DbType.Int16;
				colvarIdDichvu.MaxLength = 0;
				colvarIdDichvu.AutoIncrement = false;
				colvarIdDichvu.IsNullable = false;
				colvarIdDichvu.IsPrimaryKey = false;
				colvarIdDichvu.IsForeignKey = false;
				colvarIdDichvu.IsReadOnly = false;
				colvarIdDichvu.DefaultSetting = @"";
				colvarIdDichvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDichvu);
				
				TableSchema.TableColumn colvarIdChitietdichvu = new TableSchema.TableColumn(schema);
				colvarIdChitietdichvu.ColumnName = "id_chitietdichvu";
				colvarIdChitietdichvu.DataType = DbType.Int32;
				colvarIdChitietdichvu.MaxLength = 0;
				colvarIdChitietdichvu.AutoIncrement = false;
				colvarIdChitietdichvu.IsNullable = true;
				colvarIdChitietdichvu.IsPrimaryKey = false;
				colvarIdChitietdichvu.IsForeignKey = false;
				colvarIdChitietdichvu.IsReadOnly = false;
				colvarIdChitietdichvu.DefaultSetting = @"";
				colvarIdChitietdichvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdChitietdichvu);
				
				TableSchema.TableColumn colvarPtramCkhau = new TableSchema.TableColumn(schema);
				colvarPtramCkhau.ColumnName = "ptram_ckhau";
				colvarPtramCkhau.DataType = DbType.Byte;
				colvarPtramCkhau.MaxLength = 0;
				colvarPtramCkhau.AutoIncrement = false;
				colvarPtramCkhau.IsNullable = true;
				colvarPtramCkhau.IsPrimaryKey = false;
				colvarPtramCkhau.IsForeignKey = false;
				colvarPtramCkhau.IsReadOnly = false;
				colvarPtramCkhau.DefaultSetting = @"";
				colvarPtramCkhau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPtramCkhau);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("qhe_bacsi_dichvucls",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdQuanhe")]
		[Bindable(true)]
		public short IdQuanhe 
		{
			get { return GetColumnValue<short>(Columns.IdQuanhe); }
			set { SetColumnValue(Columns.IdQuanhe, value); }
		}
		  
		[XmlAttribute("IdNhanvien")]
		[Bindable(true)]
		public short IdNhanvien 
		{
			get { return GetColumnValue<short>(Columns.IdNhanvien); }
			set { SetColumnValue(Columns.IdNhanvien, value); }
		}
		  
		[XmlAttribute("IdDichvu")]
		[Bindable(true)]
		public short IdDichvu 
		{
			get { return GetColumnValue<short>(Columns.IdDichvu); }
			set { SetColumnValue(Columns.IdDichvu, value); }
		}
		  
		[XmlAttribute("IdChitietdichvu")]
		[Bindable(true)]
		public int? IdChitietdichvu 
		{
			get { return GetColumnValue<int?>(Columns.IdChitietdichvu); }
			set { SetColumnValue(Columns.IdChitietdichvu, value); }
		}
		  
		[XmlAttribute("PtramCkhau")]
		[Bindable(true)]
		public byte? PtramCkhau 
		{
			get { return GetColumnValue<byte?>(Columns.PtramCkhau); }
			set { SetColumnValue(Columns.PtramCkhau, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(short varIdNhanvien,short varIdDichvu,int? varIdChitietdichvu,byte? varPtramCkhau)
		{
			QheBacsiDichvucl item = new QheBacsiDichvucl();
			
			item.IdNhanvien = varIdNhanvien;
			
			item.IdDichvu = varIdDichvu;
			
			item.IdChitietdichvu = varIdChitietdichvu;
			
			item.PtramCkhau = varPtramCkhau;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(short varIdQuanhe,short varIdNhanvien,short varIdDichvu,int? varIdChitietdichvu,byte? varPtramCkhau)
		{
			QheBacsiDichvucl item = new QheBacsiDichvucl();
			
				item.IdQuanhe = varIdQuanhe;
			
				item.IdNhanvien = varIdNhanvien;
			
				item.IdDichvu = varIdDichvu;
			
				item.IdChitietdichvu = varIdChitietdichvu;
			
				item.PtramCkhau = varPtramCkhau;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdQuanheColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhanvienColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDichvuColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdChitietdichvuColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn PtramCkhauColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdQuanhe = @"id_quanhe";
			 public static string IdNhanvien = @"id_nhanvien";
			 public static string IdDichvu = @"id_dichvu";
			 public static string IdChitietdichvu = @"id_chitietdichvu";
			 public static string PtramCkhau = @"ptram_ckhau";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
