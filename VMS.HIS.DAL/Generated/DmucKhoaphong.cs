using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the DmucKhoaphong class.
	/// </summary>
    [Serializable]
	public partial class DmucKhoaphongCollection : ActiveList<DmucKhoaphong, DmucKhoaphongCollection>
	{	   
		public DmucKhoaphongCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DmucKhoaphongCollection</returns>
		public DmucKhoaphongCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DmucKhoaphong o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the dmuc_khoaphong table.
	/// </summary>
	[Serializable]
	public partial class DmucKhoaphong : ActiveRecord<DmucKhoaphong>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DmucKhoaphong()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DmucKhoaphong(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DmucKhoaphong(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DmucKhoaphong(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("dmuc_khoaphong", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdKhoaphong = new TableSchema.TableColumn(schema);
				colvarIdKhoaphong.ColumnName = "id_khoaphong";
				colvarIdKhoaphong.DataType = DbType.Int16;
				colvarIdKhoaphong.MaxLength = 0;
				colvarIdKhoaphong.AutoIncrement = true;
				colvarIdKhoaphong.IsNullable = false;
				colvarIdKhoaphong.IsPrimaryKey = true;
				colvarIdKhoaphong.IsForeignKey = false;
				colvarIdKhoaphong.IsReadOnly = false;
				colvarIdKhoaphong.DefaultSetting = @"";
				colvarIdKhoaphong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoaphong);
				
				TableSchema.TableColumn colvarMaKhoaphong = new TableSchema.TableColumn(schema);
				colvarMaKhoaphong.ColumnName = "ma_khoaphong";
				colvarMaKhoaphong.DataType = DbType.String;
				colvarMaKhoaphong.MaxLength = 20;
				colvarMaKhoaphong.AutoIncrement = false;
				colvarMaKhoaphong.IsNullable = true;
				colvarMaKhoaphong.IsPrimaryKey = false;
				colvarMaKhoaphong.IsForeignKey = false;
				colvarMaKhoaphong.IsReadOnly = false;
				colvarMaKhoaphong.DefaultSetting = @"";
				colvarMaKhoaphong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKhoaphong);
				
				TableSchema.TableColumn colvarTenKhoaphong = new TableSchema.TableColumn(schema);
				colvarTenKhoaphong.ColumnName = "ten_khoaphong";
				colvarTenKhoaphong.DataType = DbType.String;
				colvarTenKhoaphong.MaxLength = 100;
				colvarTenKhoaphong.AutoIncrement = false;
				colvarTenKhoaphong.IsNullable = false;
				colvarTenKhoaphong.IsPrimaryKey = false;
				colvarTenKhoaphong.IsForeignKey = false;
				colvarTenKhoaphong.IsReadOnly = false;
				colvarTenKhoaphong.DefaultSetting = @"";
				colvarTenKhoaphong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenKhoaphong);
				
				TableSchema.TableColumn colvarMaCha = new TableSchema.TableColumn(schema);
				colvarMaCha.ColumnName = "ma_cha";
				colvarMaCha.DataType = DbType.Int16;
				colvarMaCha.MaxLength = 0;
				colvarMaCha.AutoIncrement = false;
				colvarMaCha.IsNullable = true;
				colvarMaCha.IsPrimaryKey = false;
				colvarMaCha.IsForeignKey = false;
				colvarMaCha.IsReadOnly = false;
				
						colvarMaCha.DefaultSetting = @"((0))";
				colvarMaCha.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaCha);
				
				TableSchema.TableColumn colvarSttHthi = new TableSchema.TableColumn(schema);
				colvarSttHthi.ColumnName = "stt_hthi";
				colvarSttHthi.DataType = DbType.Int16;
				colvarSttHthi.MaxLength = 0;
				colvarSttHthi.AutoIncrement = false;
				colvarSttHthi.IsNullable = false;
				colvarSttHthi.IsPrimaryKey = false;
				colvarSttHthi.IsForeignKey = false;
				colvarSttHthi.IsReadOnly = false;
				colvarSttHthi.DefaultSetting = @"";
				colvarSttHthi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSttHthi);
				
				TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
				colvarMotaThem.ColumnName = "mota_them";
				colvarMotaThem.DataType = DbType.String;
				colvarMotaThem.MaxLength = 255;
				colvarMotaThem.AutoIncrement = false;
				colvarMotaThem.IsNullable = true;
				colvarMotaThem.IsPrimaryKey = false;
				colvarMotaThem.IsForeignKey = false;
				colvarMotaThem.IsReadOnly = false;
				colvarMotaThem.DefaultSetting = @"";
				colvarMotaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaThem);
				
				TableSchema.TableColumn colvarDonGia = new TableSchema.TableColumn(schema);
				colvarDonGia.ColumnName = "don_gia";
				colvarDonGia.DataType = DbType.Currency;
				colvarDonGia.MaxLength = 0;
				colvarDonGia.AutoIncrement = false;
				colvarDonGia.IsNullable = true;
				colvarDonGia.IsPrimaryKey = false;
				colvarDonGia.IsForeignKey = false;
				colvarDonGia.IsReadOnly = false;
				colvarDonGia.DefaultSetting = @"";
				colvarDonGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGia);
				
				TableSchema.TableColumn colvarTamUng = new TableSchema.TableColumn(schema);
				colvarTamUng.ColumnName = "tam_ung";
				colvarTamUng.DataType = DbType.Currency;
				colvarTamUng.MaxLength = 0;
				colvarTamUng.AutoIncrement = false;
				colvarTamUng.IsNullable = true;
				colvarTamUng.IsPrimaryKey = false;
				colvarTamUng.IsForeignKey = false;
				colvarTamUng.IsReadOnly = false;
				colvarTamUng.DefaultSetting = @"";
				colvarTamUng.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTamUng);
				
				TableSchema.TableColumn colvarNoitruNgoaitru = new TableSchema.TableColumn(schema);
				colvarNoitruNgoaitru.ColumnName = "noitru_ngoaitru";
				colvarNoitruNgoaitru.DataType = DbType.String;
				colvarNoitruNgoaitru.MaxLength = 50;
				colvarNoitruNgoaitru.AutoIncrement = false;
				colvarNoitruNgoaitru.IsNullable = true;
				colvarNoitruNgoaitru.IsPrimaryKey = false;
				colvarNoitruNgoaitru.IsForeignKey = false;
				colvarNoitruNgoaitru.IsReadOnly = false;
				colvarNoitruNgoaitru.DefaultSetting = @"";
				colvarNoitruNgoaitru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoitruNgoaitru);
				
				TableSchema.TableColumn colvarLaKhoacapcuu = new TableSchema.TableColumn(schema);
				colvarLaKhoacapcuu.ColumnName = "la_khoacapcuu";
				colvarLaKhoacapcuu.DataType = DbType.Byte;
				colvarLaKhoacapcuu.MaxLength = 0;
				colvarLaKhoacapcuu.AutoIncrement = false;
				colvarLaKhoacapcuu.IsNullable = true;
				colvarLaKhoacapcuu.IsPrimaryKey = false;
				colvarLaKhoacapcuu.IsForeignKey = false;
				colvarLaKhoacapcuu.IsReadOnly = false;
				colvarLaKhoacapcuu.DefaultSetting = @"";
				colvarLaKhoacapcuu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLaKhoacapcuu);
				
				TableSchema.TableColumn colvarKieuKhoaphong = new TableSchema.TableColumn(schema);
				colvarKieuKhoaphong.ColumnName = "kieu_khoaphong";
				colvarKieuKhoaphong.DataType = DbType.String;
				colvarKieuKhoaphong.MaxLength = 50;
				colvarKieuKhoaphong.AutoIncrement = false;
				colvarKieuKhoaphong.IsNullable = true;
				colvarKieuKhoaphong.IsPrimaryKey = false;
				colvarKieuKhoaphong.IsForeignKey = false;
				colvarKieuKhoaphong.IsReadOnly = false;
				colvarKieuKhoaphong.DefaultSetting = @"";
				colvarKieuKhoaphong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuKhoaphong);
				
				TableSchema.TableColumn colvarPhongChucnang = new TableSchema.TableColumn(schema);
				colvarPhongChucnang.ColumnName = "phong_chucnang";
				colvarPhongChucnang.DataType = DbType.Byte;
				colvarPhongChucnang.MaxLength = 0;
				colvarPhongChucnang.AutoIncrement = false;
				colvarPhongChucnang.IsNullable = true;
				colvarPhongChucnang.IsPrimaryKey = false;
				colvarPhongChucnang.IsForeignKey = false;
				colvarPhongChucnang.IsReadOnly = false;
				colvarPhongChucnang.DefaultSetting = @"";
				colvarPhongChucnang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhongChucnang);
				
				TableSchema.TableColumn colvarMaDonvitinh = new TableSchema.TableColumn(schema);
				colvarMaDonvitinh.ColumnName = "ma_donvitinh";
				colvarMaDonvitinh.DataType = DbType.String;
				colvarMaDonvitinh.MaxLength = 20;
				colvarMaDonvitinh.AutoIncrement = false;
				colvarMaDonvitinh.IsNullable = true;
				colvarMaDonvitinh.IsPrimaryKey = false;
				colvarMaDonvitinh.IsForeignKey = false;
				colvarMaDonvitinh.IsReadOnly = false;
				colvarMaDonvitinh.DefaultSetting = @"";
				colvarMaDonvitinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDonvitinh);
				
				TableSchema.TableColumn colvarChiDan = new TableSchema.TableColumn(schema);
				colvarChiDan.ColumnName = "chi_dan";
				colvarChiDan.DataType = DbType.String;
				colvarChiDan.MaxLength = 255;
				colvarChiDan.AutoIncrement = false;
				colvarChiDan.IsNullable = true;
				colvarChiDan.IsPrimaryKey = false;
				colvarChiDan.IsForeignKey = false;
				colvarChiDan.IsReadOnly = false;
				colvarChiDan.DefaultSetting = @"";
				colvarChiDan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChiDan);
				
				TableSchema.TableColumn colvarMaPhongStt = new TableSchema.TableColumn(schema);
				colvarMaPhongStt.ColumnName = "ma_phong_stt";
				colvarMaPhongStt.DataType = DbType.String;
				colvarMaPhongStt.MaxLength = 50;
				colvarMaPhongStt.AutoIncrement = false;
				colvarMaPhongStt.IsNullable = true;
				colvarMaPhongStt.IsPrimaryKey = false;
				colvarMaPhongStt.IsForeignKey = false;
				colvarMaPhongStt.IsReadOnly = false;
				colvarMaPhongStt.DefaultSetting = @"";
				colvarMaPhongStt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaPhongStt);
				
				TableSchema.TableColumn colvarMaXml = new TableSchema.TableColumn(schema);
				colvarMaXml.ColumnName = "ma_xml";
				colvarMaXml.DataType = DbType.String;
				colvarMaXml.MaxLength = 20;
				colvarMaXml.AutoIncrement = false;
				colvarMaXml.IsNullable = true;
				colvarMaXml.IsPrimaryKey = false;
				colvarMaXml.IsForeignKey = false;
				colvarMaXml.IsReadOnly = false;
				colvarMaXml.DefaultSetting = @"";
				colvarMaXml.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaXml);
				
				TableSchema.TableColumn colvarSogiuongKehoach = new TableSchema.TableColumn(schema);
				colvarSogiuongKehoach.ColumnName = "sogiuong_kehoach";
				colvarSogiuongKehoach.DataType = DbType.Decimal;
				colvarSogiuongKehoach.MaxLength = 0;
				colvarSogiuongKehoach.AutoIncrement = false;
				colvarSogiuongKehoach.IsNullable = true;
				colvarSogiuongKehoach.IsPrimaryKey = false;
				colvarSogiuongKehoach.IsForeignKey = false;
				colvarSogiuongKehoach.IsReadOnly = false;
				
						colvarSogiuongKehoach.DefaultSetting = @"((0))";
				colvarSogiuongKehoach.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSogiuongKehoach);
				
				TableSchema.TableColumn colvarSogiuongThucte = new TableSchema.TableColumn(schema);
				colvarSogiuongThucte.ColumnName = "sogiuong_thucte";
				colvarSogiuongThucte.DataType = DbType.Decimal;
				colvarSogiuongThucte.MaxLength = 0;
				colvarSogiuongThucte.AutoIncrement = false;
				colvarSogiuongThucte.IsNullable = true;
				colvarSogiuongThucte.IsPrimaryKey = false;
				colvarSogiuongThucte.IsForeignKey = false;
				colvarSogiuongThucte.IsReadOnly = false;
				
						colvarSogiuongThucte.DefaultSetting = @"((0))";
				colvarSogiuongThucte.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSogiuongThucte);
				
				TableSchema.TableColumn colvarManTinh = new TableSchema.TableColumn(schema);
				colvarManTinh.ColumnName = "man_tinh";
				colvarManTinh.DataType = DbType.Int16;
				colvarManTinh.MaxLength = 0;
				colvarManTinh.AutoIncrement = false;
				colvarManTinh.IsNullable = true;
				colvarManTinh.IsPrimaryKey = false;
				colvarManTinh.IsForeignKey = false;
				colvarManTinh.IsReadOnly = false;
				colvarManTinh.DefaultSetting = @"";
				colvarManTinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarManTinh);
				
				TableSchema.TableColumn colvarMaLoaikcb = new TableSchema.TableColumn(schema);
				colvarMaLoaikcb.ColumnName = "ma_loaikcb";
				colvarMaLoaikcb.DataType = DbType.String;
				colvarMaLoaikcb.MaxLength = 2;
				colvarMaLoaikcb.AutoIncrement = false;
				colvarMaLoaikcb.IsNullable = true;
				colvarMaLoaikcb.IsPrimaryKey = false;
				colvarMaLoaikcb.IsForeignKey = false;
				colvarMaLoaikcb.IsReadOnly = false;
				
						colvarMaLoaikcb.DefaultSetting = @"(NULL)";
				colvarMaLoaikcb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLoaikcb);
				
				TableSchema.TableColumn colvarBanKham = new TableSchema.TableColumn(schema);
				colvarBanKham.ColumnName = "ban_kham";
				colvarBanKham.DataType = DbType.String;
				colvarBanKham.MaxLength = 3;
				colvarBanKham.AutoIncrement = false;
				colvarBanKham.IsNullable = true;
				colvarBanKham.IsPrimaryKey = false;
				colvarBanKham.IsForeignKey = false;
				colvarBanKham.IsReadOnly = false;
				
						colvarBanKham.DefaultSetting = @"(NULL)";
				colvarBanKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBanKham);
				
				TableSchema.TableColumn colvarGiuong2015 = new TableSchema.TableColumn(schema);
				colvarGiuong2015.ColumnName = "giuong_2015";
				colvarGiuong2015.DataType = DbType.Int32;
				colvarGiuong2015.MaxLength = 0;
				colvarGiuong2015.AutoIncrement = false;
				colvarGiuong2015.IsNullable = true;
				colvarGiuong2015.IsPrimaryKey = false;
				colvarGiuong2015.IsForeignKey = false;
				colvarGiuong2015.IsReadOnly = false;
				colvarGiuong2015.DefaultSetting = @"";
				colvarGiuong2015.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiuong2015);
				
				TableSchema.TableColumn colvarGiuongHstc = new TableSchema.TableColumn(schema);
				colvarGiuongHstc.ColumnName = "giuong_hstc";
				colvarGiuongHstc.DataType = DbType.Int32;
				colvarGiuongHstc.MaxLength = 0;
				colvarGiuongHstc.AutoIncrement = false;
				colvarGiuongHstc.IsNullable = true;
				colvarGiuongHstc.IsPrimaryKey = false;
				colvarGiuongHstc.IsForeignKey = false;
				colvarGiuongHstc.IsReadOnly = false;
				colvarGiuongHstc.DefaultSetting = @"";
				colvarGiuongHstc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiuongHstc);
				
				TableSchema.TableColumn colvarGiuongHscc = new TableSchema.TableColumn(schema);
				colvarGiuongHscc.ColumnName = "giuong_hscc";
				colvarGiuongHscc.DataType = DbType.Int32;
				colvarGiuongHscc.MaxLength = 0;
				colvarGiuongHscc.AutoIncrement = false;
				colvarGiuongHscc.IsNullable = true;
				colvarGiuongHscc.IsPrimaryKey = false;
				colvarGiuongHscc.IsForeignKey = false;
				colvarGiuongHscc.IsReadOnly = false;
				colvarGiuongHscc.DefaultSetting = @"";
				colvarGiuongHscc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiuongHscc);
				
				TableSchema.TableColumn colvarLdlk = new TableSchema.TableColumn(schema);
				colvarLdlk.ColumnName = "ldlk";
				colvarLdlk.DataType = DbType.Int32;
				colvarLdlk.MaxLength = 0;
				colvarLdlk.AutoIncrement = false;
				colvarLdlk.IsNullable = true;
				colvarLdlk.IsPrimaryKey = false;
				colvarLdlk.IsForeignKey = false;
				colvarLdlk.IsReadOnly = false;
				colvarLdlk.DefaultSetting = @"";
				colvarLdlk.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLdlk);
				
				TableSchema.TableColumn colvarLienKhoa = new TableSchema.TableColumn(schema);
				colvarLienKhoa.ColumnName = "lien_khoa";
				colvarLienKhoa.DataType = DbType.Int32;
				colvarLienKhoa.MaxLength = 0;
				colvarLienKhoa.AutoIncrement = false;
				colvarLienKhoa.IsNullable = true;
				colvarLienKhoa.IsPrimaryKey = false;
				colvarLienKhoa.IsForeignKey = false;
				colvarLienKhoa.IsReadOnly = false;
				colvarLienKhoa.DefaultSetting = @"";
				colvarLienKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLienKhoa);
				
				TableSchema.TableColumn colvarMaCoso = new TableSchema.TableColumn(schema);
				colvarMaCoso.ColumnName = "ma_coso";
				colvarMaCoso.DataType = DbType.String;
				colvarMaCoso.MaxLength = 10;
				colvarMaCoso.AutoIncrement = false;
				colvarMaCoso.IsNullable = true;
				colvarMaCoso.IsPrimaryKey = false;
				colvarMaCoso.IsForeignKey = false;
				colvarMaCoso.IsReadOnly = false;
				colvarMaCoso.DefaultSetting = @"";
				colvarMaCoso.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaCoso);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.Boolean;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = true;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				
						colvarTrangThai.DefaultSetting = @"((1))";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarIdTruongkhoa = new TableSchema.TableColumn(schema);
				colvarIdTruongkhoa.ColumnName = "id_truongkhoa";
				colvarIdTruongkhoa.DataType = DbType.Int32;
				colvarIdTruongkhoa.MaxLength = 0;
				colvarIdTruongkhoa.AutoIncrement = false;
				colvarIdTruongkhoa.IsNullable = true;
				colvarIdTruongkhoa.IsPrimaryKey = false;
				colvarIdTruongkhoa.IsForeignKey = false;
				colvarIdTruongkhoa.IsReadOnly = false;
				
						colvarIdTruongkhoa.DefaultSetting = @"((-1))";
				colvarIdTruongkhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdTruongkhoa);
				
				TableSchema.TableColumn colvarHoatdongTheotang = new TableSchema.TableColumn(schema);
				colvarHoatdongTheotang.ColumnName = "hoatdong_theotang";
				colvarHoatdongTheotang.DataType = DbType.Byte;
				colvarHoatdongTheotang.MaxLength = 0;
				colvarHoatdongTheotang.AutoIncrement = false;
				colvarHoatdongTheotang.IsNullable = true;
				colvarHoatdongTheotang.IsPrimaryKey = false;
				colvarHoatdongTheotang.IsForeignKey = false;
				colvarHoatdongTheotang.IsReadOnly = false;
				
						colvarHoatdongTheotang.DefaultSetting = @"((0))";
				colvarHoatdongTheotang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHoatdongTheotang);
				
				TableSchema.TableColumn colvarAnhxaBhyt = new TableSchema.TableColumn(schema);
				colvarAnhxaBhyt.ColumnName = "anhxa_BHYT";
				colvarAnhxaBhyt.DataType = DbType.Boolean;
				colvarAnhxaBhyt.MaxLength = 0;
				colvarAnhxaBhyt.AutoIncrement = false;
				colvarAnhxaBhyt.IsNullable = true;
				colvarAnhxaBhyt.IsPrimaryKey = false;
				colvarAnhxaBhyt.IsForeignKey = false;
				colvarAnhxaBhyt.IsReadOnly = false;
				
						colvarAnhxaBhyt.DefaultSetting = @"((0))";
				colvarAnhxaBhyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAnhxaBhyt);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("dmuc_khoaphong",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdKhoaphong")]
		[Bindable(true)]
		public short IdKhoaphong 
		{
			get { return GetColumnValue<short>(Columns.IdKhoaphong); }
			set { SetColumnValue(Columns.IdKhoaphong, value); }
		}
		  
		[XmlAttribute("MaKhoaphong")]
		[Bindable(true)]
		public string MaKhoaphong 
		{
			get { return GetColumnValue<string>(Columns.MaKhoaphong); }
			set { SetColumnValue(Columns.MaKhoaphong, value); }
		}
		  
		[XmlAttribute("TenKhoaphong")]
		[Bindable(true)]
		public string TenKhoaphong 
		{
			get { return GetColumnValue<string>(Columns.TenKhoaphong); }
			set { SetColumnValue(Columns.TenKhoaphong, value); }
		}
		  
		[XmlAttribute("MaCha")]
		[Bindable(true)]
		public short? MaCha 
		{
			get { return GetColumnValue<short?>(Columns.MaCha); }
			set { SetColumnValue(Columns.MaCha, value); }
		}
		  
		[XmlAttribute("SttHthi")]
		[Bindable(true)]
		public short SttHthi 
		{
			get { return GetColumnValue<short>(Columns.SttHthi); }
			set { SetColumnValue(Columns.SttHthi, value); }
		}
		  
		[XmlAttribute("MotaThem")]
		[Bindable(true)]
		public string MotaThem 
		{
			get { return GetColumnValue<string>(Columns.MotaThem); }
			set { SetColumnValue(Columns.MotaThem, value); }
		}
		  
		[XmlAttribute("DonGia")]
		[Bindable(true)]
		public decimal? DonGia 
		{
			get { return GetColumnValue<decimal?>(Columns.DonGia); }
			set { SetColumnValue(Columns.DonGia, value); }
		}
		  
		[XmlAttribute("TamUng")]
		[Bindable(true)]
		public decimal? TamUng 
		{
			get { return GetColumnValue<decimal?>(Columns.TamUng); }
			set { SetColumnValue(Columns.TamUng, value); }
		}
		  
		[XmlAttribute("NoitruNgoaitru")]
		[Bindable(true)]
		public string NoitruNgoaitru 
		{
			get { return GetColumnValue<string>(Columns.NoitruNgoaitru); }
			set { SetColumnValue(Columns.NoitruNgoaitru, value); }
		}
		  
		[XmlAttribute("LaKhoacapcuu")]
		[Bindable(true)]
		public byte? LaKhoacapcuu 
		{
			get { return GetColumnValue<byte?>(Columns.LaKhoacapcuu); }
			set { SetColumnValue(Columns.LaKhoacapcuu, value); }
		}
		  
		[XmlAttribute("KieuKhoaphong")]
		[Bindable(true)]
		public string KieuKhoaphong 
		{
			get { return GetColumnValue<string>(Columns.KieuKhoaphong); }
			set { SetColumnValue(Columns.KieuKhoaphong, value); }
		}
		  
		[XmlAttribute("PhongChucnang")]
		[Bindable(true)]
		public byte? PhongChucnang 
		{
			get { return GetColumnValue<byte?>(Columns.PhongChucnang); }
			set { SetColumnValue(Columns.PhongChucnang, value); }
		}
		  
		[XmlAttribute("MaDonvitinh")]
		[Bindable(true)]
		public string MaDonvitinh 
		{
			get { return GetColumnValue<string>(Columns.MaDonvitinh); }
			set { SetColumnValue(Columns.MaDonvitinh, value); }
		}
		  
		[XmlAttribute("ChiDan")]
		[Bindable(true)]
		public string ChiDan 
		{
			get { return GetColumnValue<string>(Columns.ChiDan); }
			set { SetColumnValue(Columns.ChiDan, value); }
		}
		  
		[XmlAttribute("MaPhongStt")]
		[Bindable(true)]
		public string MaPhongStt 
		{
			get { return GetColumnValue<string>(Columns.MaPhongStt); }
			set { SetColumnValue(Columns.MaPhongStt, value); }
		}
		  
		[XmlAttribute("MaXml")]
		[Bindable(true)]
		public string MaXml 
		{
			get { return GetColumnValue<string>(Columns.MaXml); }
			set { SetColumnValue(Columns.MaXml, value); }
		}
		  
		[XmlAttribute("SogiuongKehoach")]
		[Bindable(true)]
		public decimal? SogiuongKehoach 
		{
			get { return GetColumnValue<decimal?>(Columns.SogiuongKehoach); }
			set { SetColumnValue(Columns.SogiuongKehoach, value); }
		}
		  
		[XmlAttribute("SogiuongThucte")]
		[Bindable(true)]
		public decimal? SogiuongThucte 
		{
			get { return GetColumnValue<decimal?>(Columns.SogiuongThucte); }
			set { SetColumnValue(Columns.SogiuongThucte, value); }
		}
		  
		[XmlAttribute("ManTinh")]
		[Bindable(true)]
		public short? ManTinh 
		{
			get { return GetColumnValue<short?>(Columns.ManTinh); }
			set { SetColumnValue(Columns.ManTinh, value); }
		}
		  
		[XmlAttribute("MaLoaikcb")]
		[Bindable(true)]
		public string MaLoaikcb 
		{
			get { return GetColumnValue<string>(Columns.MaLoaikcb); }
			set { SetColumnValue(Columns.MaLoaikcb, value); }
		}
		  
		[XmlAttribute("BanKham")]
		[Bindable(true)]
		public string BanKham 
		{
			get { return GetColumnValue<string>(Columns.BanKham); }
			set { SetColumnValue(Columns.BanKham, value); }
		}
		  
		[XmlAttribute("Giuong2015")]
		[Bindable(true)]
		public int? Giuong2015 
		{
			get { return GetColumnValue<int?>(Columns.Giuong2015); }
			set { SetColumnValue(Columns.Giuong2015, value); }
		}
		  
		[XmlAttribute("GiuongHstc")]
		[Bindable(true)]
		public int? GiuongHstc 
		{
			get { return GetColumnValue<int?>(Columns.GiuongHstc); }
			set { SetColumnValue(Columns.GiuongHstc, value); }
		}
		  
		[XmlAttribute("GiuongHscc")]
		[Bindable(true)]
		public int? GiuongHscc 
		{
			get { return GetColumnValue<int?>(Columns.GiuongHscc); }
			set { SetColumnValue(Columns.GiuongHscc, value); }
		}
		  
		[XmlAttribute("Ldlk")]
		[Bindable(true)]
		public int? Ldlk 
		{
			get { return GetColumnValue<int?>(Columns.Ldlk); }
			set { SetColumnValue(Columns.Ldlk, value); }
		}
		  
		[XmlAttribute("LienKhoa")]
		[Bindable(true)]
		public int? LienKhoa 
		{
			get { return GetColumnValue<int?>(Columns.LienKhoa); }
			set { SetColumnValue(Columns.LienKhoa, value); }
		}
		  
		[XmlAttribute("MaCoso")]
		[Bindable(true)]
		public string MaCoso 
		{
			get { return GetColumnValue<string>(Columns.MaCoso); }
			set { SetColumnValue(Columns.MaCoso, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public bool? TrangThai 
		{
			get { return GetColumnValue<bool?>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("IdTruongkhoa")]
		[Bindable(true)]
		public int? IdTruongkhoa 
		{
			get { return GetColumnValue<int?>(Columns.IdTruongkhoa); }
			set { SetColumnValue(Columns.IdTruongkhoa, value); }
		}
		  
		[XmlAttribute("HoatdongTheotang")]
		[Bindable(true)]
		public byte? HoatdongTheotang 
		{
			get { return GetColumnValue<byte?>(Columns.HoatdongTheotang); }
			set { SetColumnValue(Columns.HoatdongTheotang, value); }
		}
		  
		[XmlAttribute("AnhxaBhyt")]
		[Bindable(true)]
		public bool? AnhxaBhyt 
		{
			get { return GetColumnValue<bool?>(Columns.AnhxaBhyt); }
			set { SetColumnValue(Columns.AnhxaBhyt, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaKhoaphong,string varTenKhoaphong,short? varMaCha,short varSttHthi,string varMotaThem,decimal? varDonGia,decimal? varTamUng,string varNoitruNgoaitru,byte? varLaKhoacapcuu,string varKieuKhoaphong,byte? varPhongChucnang,string varMaDonvitinh,string varChiDan,string varMaPhongStt,string varMaXml,decimal? varSogiuongKehoach,decimal? varSogiuongThucte,short? varManTinh,string varMaLoaikcb,string varBanKham,int? varGiuong2015,int? varGiuongHstc,int? varGiuongHscc,int? varLdlk,int? varLienKhoa,string varMaCoso,bool? varTrangThai,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,int? varIdTruongkhoa,byte? varHoatdongTheotang,bool? varAnhxaBhyt)
		{
			DmucKhoaphong item = new DmucKhoaphong();
			
			item.MaKhoaphong = varMaKhoaphong;
			
			item.TenKhoaphong = varTenKhoaphong;
			
			item.MaCha = varMaCha;
			
			item.SttHthi = varSttHthi;
			
			item.MotaThem = varMotaThem;
			
			item.DonGia = varDonGia;
			
			item.TamUng = varTamUng;
			
			item.NoitruNgoaitru = varNoitruNgoaitru;
			
			item.LaKhoacapcuu = varLaKhoacapcuu;
			
			item.KieuKhoaphong = varKieuKhoaphong;
			
			item.PhongChucnang = varPhongChucnang;
			
			item.MaDonvitinh = varMaDonvitinh;
			
			item.ChiDan = varChiDan;
			
			item.MaPhongStt = varMaPhongStt;
			
			item.MaXml = varMaXml;
			
			item.SogiuongKehoach = varSogiuongKehoach;
			
			item.SogiuongThucte = varSogiuongThucte;
			
			item.ManTinh = varManTinh;
			
			item.MaLoaikcb = varMaLoaikcb;
			
			item.BanKham = varBanKham;
			
			item.Giuong2015 = varGiuong2015;
			
			item.GiuongHstc = varGiuongHstc;
			
			item.GiuongHscc = varGiuongHscc;
			
			item.Ldlk = varLdlk;
			
			item.LienKhoa = varLienKhoa;
			
			item.MaCoso = varMaCoso;
			
			item.TrangThai = varTrangThai;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.IdTruongkhoa = varIdTruongkhoa;
			
			item.HoatdongTheotang = varHoatdongTheotang;
			
			item.AnhxaBhyt = varAnhxaBhyt;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(short varIdKhoaphong,string varMaKhoaphong,string varTenKhoaphong,short? varMaCha,short varSttHthi,string varMotaThem,decimal? varDonGia,decimal? varTamUng,string varNoitruNgoaitru,byte? varLaKhoacapcuu,string varKieuKhoaphong,byte? varPhongChucnang,string varMaDonvitinh,string varChiDan,string varMaPhongStt,string varMaXml,decimal? varSogiuongKehoach,decimal? varSogiuongThucte,short? varManTinh,string varMaLoaikcb,string varBanKham,int? varGiuong2015,int? varGiuongHstc,int? varGiuongHscc,int? varLdlk,int? varLienKhoa,string varMaCoso,bool? varTrangThai,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,int? varIdTruongkhoa,byte? varHoatdongTheotang,bool? varAnhxaBhyt)
		{
			DmucKhoaphong item = new DmucKhoaphong();
			
				item.IdKhoaphong = varIdKhoaphong;
			
				item.MaKhoaphong = varMaKhoaphong;
			
				item.TenKhoaphong = varTenKhoaphong;
			
				item.MaCha = varMaCha;
			
				item.SttHthi = varSttHthi;
			
				item.MotaThem = varMotaThem;
			
				item.DonGia = varDonGia;
			
				item.TamUng = varTamUng;
			
				item.NoitruNgoaitru = varNoitruNgoaitru;
			
				item.LaKhoacapcuu = varLaKhoacapcuu;
			
				item.KieuKhoaphong = varKieuKhoaphong;
			
				item.PhongChucnang = varPhongChucnang;
			
				item.MaDonvitinh = varMaDonvitinh;
			
				item.ChiDan = varChiDan;
			
				item.MaPhongStt = varMaPhongStt;
			
				item.MaXml = varMaXml;
			
				item.SogiuongKehoach = varSogiuongKehoach;
			
				item.SogiuongThucte = varSogiuongThucte;
			
				item.ManTinh = varManTinh;
			
				item.MaLoaikcb = varMaLoaikcb;
			
				item.BanKham = varBanKham;
			
				item.Giuong2015 = varGiuong2015;
			
				item.GiuongHstc = varGiuongHstc;
			
				item.GiuongHscc = varGiuongHscc;
			
				item.Ldlk = varLdlk;
			
				item.LienKhoa = varLienKhoa;
			
				item.MaCoso = varMaCoso;
			
				item.TrangThai = varTrangThai;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.IdTruongkhoa = varIdTruongkhoa;
			
				item.HoatdongTheotang = varHoatdongTheotang;
			
				item.AnhxaBhyt = varAnhxaBhyt;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdKhoaphongColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhoaphongColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TenKhoaphongColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn MaChaColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn SttHthiColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaThemColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn TamUngColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NoitruNgoaitruColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn LaKhoacapcuuColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuKhoaphongColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn PhongChucnangColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDonvitinhColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn ChiDanColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn MaPhongSttColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn MaXmlColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn SogiuongKehoachColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn SogiuongThucteColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn ManTinhColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLoaikcbColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn BanKhamColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn Giuong2015Column
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn GiuongHstcColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn GiuongHsccColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn LdlkColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn LienKhoaColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn MaCosoColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn IdTruongkhoaColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn HoatdongTheotangColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn AnhxaBhytColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdKhoaphong = @"id_khoaphong";
			 public static string MaKhoaphong = @"ma_khoaphong";
			 public static string TenKhoaphong = @"ten_khoaphong";
			 public static string MaCha = @"ma_cha";
			 public static string SttHthi = @"stt_hthi";
			 public static string MotaThem = @"mota_them";
			 public static string DonGia = @"don_gia";
			 public static string TamUng = @"tam_ung";
			 public static string NoitruNgoaitru = @"noitru_ngoaitru";
			 public static string LaKhoacapcuu = @"la_khoacapcuu";
			 public static string KieuKhoaphong = @"kieu_khoaphong";
			 public static string PhongChucnang = @"phong_chucnang";
			 public static string MaDonvitinh = @"ma_donvitinh";
			 public static string ChiDan = @"chi_dan";
			 public static string MaPhongStt = @"ma_phong_stt";
			 public static string MaXml = @"ma_xml";
			 public static string SogiuongKehoach = @"sogiuong_kehoach";
			 public static string SogiuongThucte = @"sogiuong_thucte";
			 public static string ManTinh = @"man_tinh";
			 public static string MaLoaikcb = @"ma_loaikcb";
			 public static string BanKham = @"ban_kham";
			 public static string Giuong2015 = @"giuong_2015";
			 public static string GiuongHstc = @"giuong_hstc";
			 public static string GiuongHscc = @"giuong_hscc";
			 public static string Ldlk = @"ldlk";
			 public static string LienKhoa = @"lien_khoa";
			 public static string MaCoso = @"ma_coso";
			 public static string TrangThai = @"trang_thai";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string NgaySua = @"ngay_sua";
			 public static string IdTruongkhoa = @"id_truongkhoa";
			 public static string HoatdongTheotang = @"hoatdong_theotang";
			 public static string AnhxaBhyt = @"anhxa_BHYT";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
