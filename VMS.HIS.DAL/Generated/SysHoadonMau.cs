using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the SysHoadonMau class.
	/// </summary>
    [Serializable]
	public partial class SysHoadonMauCollection : ActiveList<SysHoadonMau, SysHoadonMauCollection>
	{	   
		public SysHoadonMauCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>SysHoadonMauCollection</returns>
		public SysHoadonMauCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                SysHoadonMau o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the sys_hoadon_mau table.
	/// </summary>
	[Serializable]
	public partial class SysHoadonMau : ActiveRecord<SysHoadonMau>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public SysHoadonMau()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public SysHoadonMau(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public SysHoadonMau(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public SysHoadonMau(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("sys_hoadon_mau", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarMauHoadon = new TableSchema.TableColumn(schema);
				colvarMauHoadon.ColumnName = "mau_hoadon";
				colvarMauHoadon.DataType = DbType.String;
				colvarMauHoadon.MaxLength = 15;
				colvarMauHoadon.AutoIncrement = false;
				colvarMauHoadon.IsNullable = true;
				colvarMauHoadon.IsPrimaryKey = false;
				colvarMauHoadon.IsForeignKey = false;
				colvarMauHoadon.IsReadOnly = false;
				colvarMauHoadon.DefaultSetting = @"";
				colvarMauHoadon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMauHoadon);
				
				TableSchema.TableColumn colvarKiHieu = new TableSchema.TableColumn(schema);
				colvarKiHieu.ColumnName = "ki_hieu";
				colvarKiHieu.DataType = DbType.String;
				colvarKiHieu.MaxLength = 10;
				colvarKiHieu.AutoIncrement = false;
				colvarKiHieu.IsNullable = true;
				colvarKiHieu.IsPrimaryKey = false;
				colvarKiHieu.IsForeignKey = false;
				colvarKiHieu.IsReadOnly = false;
				colvarKiHieu.DefaultSetting = @"";
				colvarKiHieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKiHieu);
				
				TableSchema.TableColumn colvarMaQuyen = new TableSchema.TableColumn(schema);
				colvarMaQuyen.ColumnName = "ma_quyen";
				colvarMaQuyen.DataType = DbType.String;
				colvarMaQuyen.MaxLength = 15;
				colvarMaQuyen.AutoIncrement = false;
				colvarMaQuyen.IsNullable = true;
				colvarMaQuyen.IsPrimaryKey = false;
				colvarMaQuyen.IsForeignKey = false;
				colvarMaQuyen.IsReadOnly = false;
				colvarMaQuyen.DefaultSetting = @"";
				colvarMaQuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaQuyen);
				
				TableSchema.TableColumn colvarSerieHientai = new TableSchema.TableColumn(schema);
				colvarSerieHientai.ColumnName = "serie_hientai";
				colvarSerieHientai.DataType = DbType.String;
				colvarSerieHientai.MaxLength = 10;
				colvarSerieHientai.AutoIncrement = false;
				colvarSerieHientai.IsNullable = true;
				colvarSerieHientai.IsPrimaryKey = false;
				colvarSerieHientai.IsForeignKey = false;
				colvarSerieHientai.IsReadOnly = false;
				colvarSerieHientai.DefaultSetting = @"";
				colvarSerieHientai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSerieHientai);
				
				TableSchema.TableColumn colvarMaCoso = new TableSchema.TableColumn(schema);
				colvarMaCoso.ColumnName = "ma_coso";
				colvarMaCoso.DataType = DbType.String;
				colvarMaCoso.MaxLength = 10;
				colvarMaCoso.AutoIncrement = false;
				colvarMaCoso.IsNullable = true;
				colvarMaCoso.IsPrimaryKey = false;
				colvarMaCoso.IsForeignKey = false;
				colvarMaCoso.IsReadOnly = false;
				colvarMaCoso.DefaultSetting = @"";
				colvarMaCoso.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaCoso);
				
				TableSchema.TableColumn colvarKhoaLai = new TableSchema.TableColumn(schema);
				colvarKhoaLai.ColumnName = "khoa_lai";
				colvarKhoaLai.DataType = DbType.Boolean;
				colvarKhoaLai.MaxLength = 0;
				colvarKhoaLai.AutoIncrement = false;
				colvarKhoaLai.IsNullable = true;
				colvarKhoaLai.IsPrimaryKey = false;
				colvarKhoaLai.IsForeignKey = false;
				colvarKhoaLai.IsReadOnly = false;
				colvarKhoaLai.DefaultSetting = @"";
				colvarKhoaLai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhoaLai);
				
				TableSchema.TableColumn colvarIdHoadonMau = new TableSchema.TableColumn(schema);
				colvarIdHoadonMau.ColumnName = "id_hoadon_mau";
				colvarIdHoadonMau.DataType = DbType.Int64;
				colvarIdHoadonMau.MaxLength = 0;
				colvarIdHoadonMau.AutoIncrement = false;
				colvarIdHoadonMau.IsNullable = true;
				colvarIdHoadonMau.IsPrimaryKey = false;
				colvarIdHoadonMau.IsForeignKey = false;
				colvarIdHoadonMau.IsReadOnly = false;
				
						colvarIdHoadonMau.DefaultSetting = @"((0))";
				colvarIdHoadonMau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdHoadonMau);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("sys_hoadon_mau",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("MauHoadon")]
		[Bindable(true)]
		public string MauHoadon 
		{
			get { return GetColumnValue<string>(Columns.MauHoadon); }
			set { SetColumnValue(Columns.MauHoadon, value); }
		}
		  
		[XmlAttribute("KiHieu")]
		[Bindable(true)]
		public string KiHieu 
		{
			get { return GetColumnValue<string>(Columns.KiHieu); }
			set { SetColumnValue(Columns.KiHieu, value); }
		}
		  
		[XmlAttribute("MaQuyen")]
		[Bindable(true)]
		public string MaQuyen 
		{
			get { return GetColumnValue<string>(Columns.MaQuyen); }
			set { SetColumnValue(Columns.MaQuyen, value); }
		}
		  
		[XmlAttribute("SerieHientai")]
		[Bindable(true)]
		public string SerieHientai 
		{
			get { return GetColumnValue<string>(Columns.SerieHientai); }
			set { SetColumnValue(Columns.SerieHientai, value); }
		}
		  
		[XmlAttribute("MaCoso")]
		[Bindable(true)]
		public string MaCoso 
		{
			get { return GetColumnValue<string>(Columns.MaCoso); }
			set { SetColumnValue(Columns.MaCoso, value); }
		}
		  
		[XmlAttribute("KhoaLai")]
		[Bindable(true)]
		public bool? KhoaLai 
		{
			get { return GetColumnValue<bool?>(Columns.KhoaLai); }
			set { SetColumnValue(Columns.KhoaLai, value); }
		}
		  
		[XmlAttribute("IdHoadonMau")]
		[Bindable(true)]
		public long? IdHoadonMau 
		{
			get { return GetColumnValue<long?>(Columns.IdHoadonMau); }
			set { SetColumnValue(Columns.IdHoadonMau, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMauHoadon,string varKiHieu,string varMaQuyen,string varSerieHientai,string varMaCoso,bool? varKhoaLai,long? varIdHoadonMau)
		{
			SysHoadonMau item = new SysHoadonMau();
			
			item.MauHoadon = varMauHoadon;
			
			item.KiHieu = varKiHieu;
			
			item.MaQuyen = varMaQuyen;
			
			item.SerieHientai = varSerieHientai;
			
			item.MaCoso = varMaCoso;
			
			item.KhoaLai = varKhoaLai;
			
			item.IdHoadonMau = varIdHoadonMau;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,string varMauHoadon,string varKiHieu,string varMaQuyen,string varSerieHientai,string varMaCoso,bool? varKhoaLai,long? varIdHoadonMau)
		{
			SysHoadonMau item = new SysHoadonMau();
			
				item.Id = varId;
			
				item.MauHoadon = varMauHoadon;
			
				item.KiHieu = varKiHieu;
			
				item.MaQuyen = varMaQuyen;
			
				item.SerieHientai = varSerieHientai;
			
				item.MaCoso = varMaCoso;
			
				item.KhoaLai = varKhoaLai;
			
				item.IdHoadonMau = varIdHoadonMau;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MauHoadonColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn KiHieuColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn MaQuyenColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn SerieHientaiColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn MaCosoColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn KhoaLaiColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn IdHoadonMauColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string MauHoadon = @"mau_hoadon";
			 public static string KiHieu = @"ki_hieu";
			 public static string MaQuyen = @"ma_quyen";
			 public static string SerieHientai = @"serie_hientai";
			 public static string MaCoso = @"ma_coso";
			 public static string KhoaLai = @"khoa_lai";
			 public static string IdHoadonMau = @"id_hoadon_mau";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
