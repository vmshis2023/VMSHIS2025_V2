using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the DataKetqua class.
	/// </summary>
    [Serializable]
	public partial class DataKetquaCollection : ActiveList<DataKetqua, DataKetquaCollection>
	{	   
		public DataKetquaCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DataKetquaCollection</returns>
		public DataKetquaCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DataKetqua o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the data_ketqua table.
	/// </summary>
	[Serializable]
	public partial class DataKetqua : ActiveRecord<DataKetqua>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DataKetqua()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DataKetqua(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DataKetqua(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DataKetqua(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("data_ketqua", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarInvInvoiceAuthId = new TableSchema.TableColumn(schema);
				colvarInvInvoiceAuthId.ColumnName = "inv_InvoiceAuth_id";
				colvarInvInvoiceAuthId.DataType = DbType.String;
				colvarInvInvoiceAuthId.MaxLength = 100;
				colvarInvInvoiceAuthId.AutoIncrement = false;
				colvarInvInvoiceAuthId.IsNullable = false;
				colvarInvInvoiceAuthId.IsPrimaryKey = true;
				colvarInvInvoiceAuthId.IsForeignKey = false;
				colvarInvInvoiceAuthId.IsReadOnly = false;
				colvarInvInvoiceAuthId.DefaultSetting = @"";
				colvarInvInvoiceAuthId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvInvoiceAuthId);
				
				TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
				colvarPaymentId.ColumnName = "payment_id";
				colvarPaymentId.DataType = DbType.String;
				colvarPaymentId.MaxLength = 1000;
				colvarPaymentId.AutoIncrement = false;
				colvarPaymentId.IsNullable = false;
				colvarPaymentId.IsPrimaryKey = false;
				colvarPaymentId.IsForeignKey = false;
				colvarPaymentId.IsReadOnly = false;
				colvarPaymentId.DefaultSetting = @"";
				colvarPaymentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentId);
				
				TableSchema.TableColumn colvarInvInvoiceType = new TableSchema.TableColumn(schema);
				colvarInvInvoiceType.ColumnName = "inv_invoiceType";
				colvarInvInvoiceType.DataType = DbType.String;
				colvarInvInvoiceType.MaxLength = 100;
				colvarInvInvoiceType.AutoIncrement = false;
				colvarInvInvoiceType.IsNullable = true;
				colvarInvInvoiceType.IsPrimaryKey = false;
				colvarInvInvoiceType.IsForeignKey = false;
				colvarInvInvoiceType.IsReadOnly = false;
				colvarInvInvoiceType.DefaultSetting = @"";
				colvarInvInvoiceType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvInvoiceType);
				
				TableSchema.TableColumn colvarInvInvoiceCodeId = new TableSchema.TableColumn(schema);
				colvarInvInvoiceCodeId.ColumnName = "inv_InvoiceCode_id";
				colvarInvInvoiceCodeId.DataType = DbType.String;
				colvarInvInvoiceCodeId.MaxLength = 100;
				colvarInvInvoiceCodeId.AutoIncrement = false;
				colvarInvInvoiceCodeId.IsNullable = true;
				colvarInvInvoiceCodeId.IsPrimaryKey = false;
				colvarInvInvoiceCodeId.IsForeignKey = false;
				colvarInvInvoiceCodeId.IsReadOnly = false;
				colvarInvInvoiceCodeId.DefaultSetting = @"";
				colvarInvInvoiceCodeId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvInvoiceCodeId);
				
				TableSchema.TableColumn colvarInvInvoiceSeries = new TableSchema.TableColumn(schema);
				colvarInvInvoiceSeries.ColumnName = "inv_invoiceSeries";
				colvarInvInvoiceSeries.DataType = DbType.String;
				colvarInvInvoiceSeries.MaxLength = 100;
				colvarInvInvoiceSeries.AutoIncrement = false;
				colvarInvInvoiceSeries.IsNullable = true;
				colvarInvInvoiceSeries.IsPrimaryKey = false;
				colvarInvInvoiceSeries.IsForeignKey = false;
				colvarInvInvoiceSeries.IsReadOnly = false;
				colvarInvInvoiceSeries.DefaultSetting = @"";
				colvarInvInvoiceSeries.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvInvoiceSeries);
				
				TableSchema.TableColumn colvarInvInvoiceNumber = new TableSchema.TableColumn(schema);
				colvarInvInvoiceNumber.ColumnName = "inv_invoiceNumber";
				colvarInvInvoiceNumber.DataType = DbType.String;
				colvarInvInvoiceNumber.MaxLength = 100;
				colvarInvInvoiceNumber.AutoIncrement = false;
				colvarInvInvoiceNumber.IsNullable = true;
				colvarInvInvoiceNumber.IsPrimaryKey = false;
				colvarInvInvoiceNumber.IsForeignKey = false;
				colvarInvInvoiceNumber.IsReadOnly = false;
				colvarInvInvoiceNumber.DefaultSetting = @"";
				colvarInvInvoiceNumber.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvInvoiceNumber);
				
				TableSchema.TableColumn colvarInvInvoiceName = new TableSchema.TableColumn(schema);
				colvarInvInvoiceName.ColumnName = "inv_invoiceName";
				colvarInvInvoiceName.DataType = DbType.String;
				colvarInvInvoiceName.MaxLength = 100;
				colvarInvInvoiceName.AutoIncrement = false;
				colvarInvInvoiceName.IsNullable = true;
				colvarInvInvoiceName.IsPrimaryKey = false;
				colvarInvInvoiceName.IsForeignKey = false;
				colvarInvInvoiceName.IsReadOnly = false;
				colvarInvInvoiceName.DefaultSetting = @"";
				colvarInvInvoiceName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvInvoiceName);
				
				TableSchema.TableColumn colvarInvInvoiceIssuedDate = new TableSchema.TableColumn(schema);
				colvarInvInvoiceIssuedDate.ColumnName = "inv_invoiceIssuedDate";
				colvarInvInvoiceIssuedDate.DataType = DbType.String;
				colvarInvInvoiceIssuedDate.MaxLength = 100;
				colvarInvInvoiceIssuedDate.AutoIncrement = false;
				colvarInvInvoiceIssuedDate.IsNullable = true;
				colvarInvInvoiceIssuedDate.IsPrimaryKey = false;
				colvarInvInvoiceIssuedDate.IsForeignKey = false;
				colvarInvInvoiceIssuedDate.IsReadOnly = false;
				colvarInvInvoiceIssuedDate.DefaultSetting = @"";
				colvarInvInvoiceIssuedDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvInvoiceIssuedDate);
				
				TableSchema.TableColumn colvarInvSubmittedDate = new TableSchema.TableColumn(schema);
				colvarInvSubmittedDate.ColumnName = "inv_submittedDate";
				colvarInvSubmittedDate.DataType = DbType.String;
				colvarInvSubmittedDate.MaxLength = 100;
				colvarInvSubmittedDate.AutoIncrement = false;
				colvarInvSubmittedDate.IsNullable = true;
				colvarInvSubmittedDate.IsPrimaryKey = false;
				colvarInvSubmittedDate.IsForeignKey = false;
				colvarInvSubmittedDate.IsReadOnly = false;
				colvarInvSubmittedDate.DefaultSetting = @"";
				colvarInvSubmittedDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvSubmittedDate);
				
				TableSchema.TableColumn colvarInvContractNumber = new TableSchema.TableColumn(schema);
				colvarInvContractNumber.ColumnName = "inv_contractNumber";
				colvarInvContractNumber.DataType = DbType.String;
				colvarInvContractNumber.MaxLength = 100;
				colvarInvContractNumber.AutoIncrement = false;
				colvarInvContractNumber.IsNullable = true;
				colvarInvContractNumber.IsPrimaryKey = false;
				colvarInvContractNumber.IsForeignKey = false;
				colvarInvContractNumber.IsReadOnly = false;
				colvarInvContractNumber.DefaultSetting = @"";
				colvarInvContractNumber.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvContractNumber);
				
				TableSchema.TableColumn colvarInvContractDate = new TableSchema.TableColumn(schema);
				colvarInvContractDate.ColumnName = "inv_contractDate";
				colvarInvContractDate.DataType = DbType.String;
				colvarInvContractDate.MaxLength = 100;
				colvarInvContractDate.AutoIncrement = false;
				colvarInvContractDate.IsNullable = true;
				colvarInvContractDate.IsPrimaryKey = false;
				colvarInvContractDate.IsForeignKey = false;
				colvarInvContractDate.IsReadOnly = false;
				colvarInvContractDate.DefaultSetting = @"";
				colvarInvContractDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvContractDate);
				
				TableSchema.TableColumn colvarInvCurrencyCode = new TableSchema.TableColumn(schema);
				colvarInvCurrencyCode.ColumnName = "inv_currencyCode";
				colvarInvCurrencyCode.DataType = DbType.String;
				colvarInvCurrencyCode.MaxLength = 100;
				colvarInvCurrencyCode.AutoIncrement = false;
				colvarInvCurrencyCode.IsNullable = true;
				colvarInvCurrencyCode.IsPrimaryKey = false;
				colvarInvCurrencyCode.IsForeignKey = false;
				colvarInvCurrencyCode.IsReadOnly = false;
				colvarInvCurrencyCode.DefaultSetting = @"";
				colvarInvCurrencyCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvCurrencyCode);
				
				TableSchema.TableColumn colvarInvExchangeRate = new TableSchema.TableColumn(schema);
				colvarInvExchangeRate.ColumnName = "inv_exchangeRate";
				colvarInvExchangeRate.DataType = DbType.String;
				colvarInvExchangeRate.MaxLength = 100;
				colvarInvExchangeRate.AutoIncrement = false;
				colvarInvExchangeRate.IsNullable = true;
				colvarInvExchangeRate.IsPrimaryKey = false;
				colvarInvExchangeRate.IsForeignKey = false;
				colvarInvExchangeRate.IsReadOnly = false;
				colvarInvExchangeRate.DefaultSetting = @"";
				colvarInvExchangeRate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvExchangeRate);
				
				TableSchema.TableColumn colvarInvInvoiceNote = new TableSchema.TableColumn(schema);
				colvarInvInvoiceNote.ColumnName = "inv_invoiceNote";
				colvarInvInvoiceNote.DataType = DbType.String;
				colvarInvInvoiceNote.MaxLength = 100;
				colvarInvInvoiceNote.AutoIncrement = false;
				colvarInvInvoiceNote.IsNullable = true;
				colvarInvInvoiceNote.IsPrimaryKey = false;
				colvarInvInvoiceNote.IsForeignKey = false;
				colvarInvInvoiceNote.IsReadOnly = false;
				colvarInvInvoiceNote.DefaultSetting = @"";
				colvarInvInvoiceNote.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvInvoiceNote);
				
				TableSchema.TableColumn colvarInvAdjustmentType = new TableSchema.TableColumn(schema);
				colvarInvAdjustmentType.ColumnName = "inv_adjustmentType";
				colvarInvAdjustmentType.DataType = DbType.String;
				colvarInvAdjustmentType.MaxLength = 100;
				colvarInvAdjustmentType.AutoIncrement = false;
				colvarInvAdjustmentType.IsNullable = true;
				colvarInvAdjustmentType.IsPrimaryKey = false;
				colvarInvAdjustmentType.IsForeignKey = false;
				colvarInvAdjustmentType.IsReadOnly = false;
				colvarInvAdjustmentType.DefaultSetting = @"";
				colvarInvAdjustmentType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvAdjustmentType);
				
				TableSchema.TableColumn colvarInvOriginalInvoiceId = new TableSchema.TableColumn(schema);
				colvarInvOriginalInvoiceId.ColumnName = "inv_originalInvoiceId";
				colvarInvOriginalInvoiceId.DataType = DbType.String;
				colvarInvOriginalInvoiceId.MaxLength = 100;
				colvarInvOriginalInvoiceId.AutoIncrement = false;
				colvarInvOriginalInvoiceId.IsNullable = true;
				colvarInvOriginalInvoiceId.IsPrimaryKey = false;
				colvarInvOriginalInvoiceId.IsForeignKey = false;
				colvarInvOriginalInvoiceId.IsReadOnly = false;
				colvarInvOriginalInvoiceId.DefaultSetting = @"";
				colvarInvOriginalInvoiceId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvOriginalInvoiceId);
				
				TableSchema.TableColumn colvarInvAdditionalReferenceDes = new TableSchema.TableColumn(schema);
				colvarInvAdditionalReferenceDes.ColumnName = "inv_additionalReferenceDes";
				colvarInvAdditionalReferenceDes.DataType = DbType.String;
				colvarInvAdditionalReferenceDes.MaxLength = 100;
				colvarInvAdditionalReferenceDes.AutoIncrement = false;
				colvarInvAdditionalReferenceDes.IsNullable = true;
				colvarInvAdditionalReferenceDes.IsPrimaryKey = false;
				colvarInvAdditionalReferenceDes.IsForeignKey = false;
				colvarInvAdditionalReferenceDes.IsReadOnly = false;
				colvarInvAdditionalReferenceDes.DefaultSetting = @"";
				colvarInvAdditionalReferenceDes.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvAdditionalReferenceDes);
				
				TableSchema.TableColumn colvarInvAdditionalReferenceDate = new TableSchema.TableColumn(schema);
				colvarInvAdditionalReferenceDate.ColumnName = "inv_additionalReferenceDate";
				colvarInvAdditionalReferenceDate.DataType = DbType.String;
				colvarInvAdditionalReferenceDate.MaxLength = 100;
				colvarInvAdditionalReferenceDate.AutoIncrement = false;
				colvarInvAdditionalReferenceDate.IsNullable = true;
				colvarInvAdditionalReferenceDate.IsPrimaryKey = false;
				colvarInvAdditionalReferenceDate.IsForeignKey = false;
				colvarInvAdditionalReferenceDate.IsReadOnly = false;
				colvarInvAdditionalReferenceDate.DefaultSetting = @"";
				colvarInvAdditionalReferenceDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvAdditionalReferenceDate);
				
				TableSchema.TableColumn colvarInvBuyerDisplayName = new TableSchema.TableColumn(schema);
				colvarInvBuyerDisplayName.ColumnName = "inv_buyerDisplayName";
				colvarInvBuyerDisplayName.DataType = DbType.String;
				colvarInvBuyerDisplayName.MaxLength = 100;
				colvarInvBuyerDisplayName.AutoIncrement = false;
				colvarInvBuyerDisplayName.IsNullable = true;
				colvarInvBuyerDisplayName.IsPrimaryKey = false;
				colvarInvBuyerDisplayName.IsForeignKey = false;
				colvarInvBuyerDisplayName.IsReadOnly = false;
				colvarInvBuyerDisplayName.DefaultSetting = @"";
				colvarInvBuyerDisplayName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvBuyerDisplayName);
				
				TableSchema.TableColumn colvarMaDt = new TableSchema.TableColumn(schema);
				colvarMaDt.ColumnName = "ma_dt";
				colvarMaDt.DataType = DbType.String;
				colvarMaDt.MaxLength = 100;
				colvarMaDt.AutoIncrement = false;
				colvarMaDt.IsNullable = true;
				colvarMaDt.IsPrimaryKey = false;
				colvarMaDt.IsForeignKey = false;
				colvarMaDt.IsReadOnly = false;
				colvarMaDt.DefaultSetting = @"";
				colvarMaDt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDt);
				
				TableSchema.TableColumn colvarInvBuyerLegalName = new TableSchema.TableColumn(schema);
				colvarInvBuyerLegalName.ColumnName = "inv_buyerLegalName";
				colvarInvBuyerLegalName.DataType = DbType.String;
				colvarInvBuyerLegalName.MaxLength = 100;
				colvarInvBuyerLegalName.AutoIncrement = false;
				colvarInvBuyerLegalName.IsNullable = true;
				colvarInvBuyerLegalName.IsPrimaryKey = false;
				colvarInvBuyerLegalName.IsForeignKey = false;
				colvarInvBuyerLegalName.IsReadOnly = false;
				colvarInvBuyerLegalName.DefaultSetting = @"";
				colvarInvBuyerLegalName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvBuyerLegalName);
				
				TableSchema.TableColumn colvarInvBuyerTaxCode = new TableSchema.TableColumn(schema);
				colvarInvBuyerTaxCode.ColumnName = "inv_buyerTaxCode";
				colvarInvBuyerTaxCode.DataType = DbType.String;
				colvarInvBuyerTaxCode.MaxLength = 100;
				colvarInvBuyerTaxCode.AutoIncrement = false;
				colvarInvBuyerTaxCode.IsNullable = true;
				colvarInvBuyerTaxCode.IsPrimaryKey = false;
				colvarInvBuyerTaxCode.IsForeignKey = false;
				colvarInvBuyerTaxCode.IsReadOnly = false;
				colvarInvBuyerTaxCode.DefaultSetting = @"";
				colvarInvBuyerTaxCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvBuyerTaxCode);
				
				TableSchema.TableColumn colvarInvBuyerAddressLine = new TableSchema.TableColumn(schema);
				colvarInvBuyerAddressLine.ColumnName = "inv_buyerAddressLine";
				colvarInvBuyerAddressLine.DataType = DbType.String;
				colvarInvBuyerAddressLine.MaxLength = 100;
				colvarInvBuyerAddressLine.AutoIncrement = false;
				colvarInvBuyerAddressLine.IsNullable = true;
				colvarInvBuyerAddressLine.IsPrimaryKey = false;
				colvarInvBuyerAddressLine.IsForeignKey = false;
				colvarInvBuyerAddressLine.IsReadOnly = false;
				colvarInvBuyerAddressLine.DefaultSetting = @"";
				colvarInvBuyerAddressLine.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvBuyerAddressLine);
				
				TableSchema.TableColumn colvarInvBuyerEmail = new TableSchema.TableColumn(schema);
				colvarInvBuyerEmail.ColumnName = "inv_buyerEmail";
				colvarInvBuyerEmail.DataType = DbType.String;
				colvarInvBuyerEmail.MaxLength = 100;
				colvarInvBuyerEmail.AutoIncrement = false;
				colvarInvBuyerEmail.IsNullable = true;
				colvarInvBuyerEmail.IsPrimaryKey = false;
				colvarInvBuyerEmail.IsForeignKey = false;
				colvarInvBuyerEmail.IsReadOnly = false;
				colvarInvBuyerEmail.DefaultSetting = @"";
				colvarInvBuyerEmail.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvBuyerEmail);
				
				TableSchema.TableColumn colvarInvBuyerBankAccount = new TableSchema.TableColumn(schema);
				colvarInvBuyerBankAccount.ColumnName = "inv_buyerBankAccount";
				colvarInvBuyerBankAccount.DataType = DbType.String;
				colvarInvBuyerBankAccount.MaxLength = 100;
				colvarInvBuyerBankAccount.AutoIncrement = false;
				colvarInvBuyerBankAccount.IsNullable = true;
				colvarInvBuyerBankAccount.IsPrimaryKey = false;
				colvarInvBuyerBankAccount.IsForeignKey = false;
				colvarInvBuyerBankAccount.IsReadOnly = false;
				colvarInvBuyerBankAccount.DefaultSetting = @"";
				colvarInvBuyerBankAccount.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvBuyerBankAccount);
				
				TableSchema.TableColumn colvarInvBuyerBankName = new TableSchema.TableColumn(schema);
				colvarInvBuyerBankName.ColumnName = "inv_buyerBankName";
				colvarInvBuyerBankName.DataType = DbType.String;
				colvarInvBuyerBankName.MaxLength = 100;
				colvarInvBuyerBankName.AutoIncrement = false;
				colvarInvBuyerBankName.IsNullable = true;
				colvarInvBuyerBankName.IsPrimaryKey = false;
				colvarInvBuyerBankName.IsForeignKey = false;
				colvarInvBuyerBankName.IsReadOnly = false;
				colvarInvBuyerBankName.DefaultSetting = @"";
				colvarInvBuyerBankName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvBuyerBankName);
				
				TableSchema.TableColumn colvarInvPaymentMethodName = new TableSchema.TableColumn(schema);
				colvarInvPaymentMethodName.ColumnName = "inv_paymentMethodName";
				colvarInvPaymentMethodName.DataType = DbType.String;
				colvarInvPaymentMethodName.MaxLength = 100;
				colvarInvPaymentMethodName.AutoIncrement = false;
				colvarInvPaymentMethodName.IsNullable = true;
				colvarInvPaymentMethodName.IsPrimaryKey = false;
				colvarInvPaymentMethodName.IsForeignKey = false;
				colvarInvPaymentMethodName.IsReadOnly = false;
				colvarInvPaymentMethodName.DefaultSetting = @"";
				colvarInvPaymentMethodName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvPaymentMethodName);
				
				TableSchema.TableColumn colvarInvSellerBankAccount = new TableSchema.TableColumn(schema);
				colvarInvSellerBankAccount.ColumnName = "inv_sellerBankAccount";
				colvarInvSellerBankAccount.DataType = DbType.String;
				colvarInvSellerBankAccount.MaxLength = 100;
				colvarInvSellerBankAccount.AutoIncrement = false;
				colvarInvSellerBankAccount.IsNullable = true;
				colvarInvSellerBankAccount.IsPrimaryKey = false;
				colvarInvSellerBankAccount.IsForeignKey = false;
				colvarInvSellerBankAccount.IsReadOnly = false;
				colvarInvSellerBankAccount.DefaultSetting = @"";
				colvarInvSellerBankAccount.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvSellerBankAccount);
				
				TableSchema.TableColumn colvarInvSellerBankName = new TableSchema.TableColumn(schema);
				colvarInvSellerBankName.ColumnName = "inv_sellerBankName";
				colvarInvSellerBankName.DataType = DbType.String;
				colvarInvSellerBankName.MaxLength = 100;
				colvarInvSellerBankName.AutoIncrement = false;
				colvarInvSellerBankName.IsNullable = true;
				colvarInvSellerBankName.IsPrimaryKey = false;
				colvarInvSellerBankName.IsForeignKey = false;
				colvarInvSellerBankName.IsReadOnly = false;
				colvarInvSellerBankName.DefaultSetting = @"";
				colvarInvSellerBankName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvSellerBankName);
				
				TableSchema.TableColumn colvarInvDiscountAmount = new TableSchema.TableColumn(schema);
				colvarInvDiscountAmount.ColumnName = "inv_discountAmount";
				colvarInvDiscountAmount.DataType = DbType.String;
				colvarInvDiscountAmount.MaxLength = 100;
				colvarInvDiscountAmount.AutoIncrement = false;
				colvarInvDiscountAmount.IsNullable = true;
				colvarInvDiscountAmount.IsPrimaryKey = false;
				colvarInvDiscountAmount.IsForeignKey = false;
				colvarInvDiscountAmount.IsReadOnly = false;
				colvarInvDiscountAmount.DefaultSetting = @"";
				colvarInvDiscountAmount.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvDiscountAmount);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.String;
				colvarTrangThai.MaxLength = 100;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = true;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				colvarTrangThai.DefaultSetting = @"";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarUserNew = new TableSchema.TableColumn(schema);
				colvarUserNew.ColumnName = "user_new";
				colvarUserNew.DataType = DbType.String;
				colvarUserNew.MaxLength = 100;
				colvarUserNew.AutoIncrement = false;
				colvarUserNew.IsNullable = true;
				colvarUserNew.IsPrimaryKey = false;
				colvarUserNew.IsForeignKey = false;
				colvarUserNew.IsReadOnly = false;
				colvarUserNew.DefaultSetting = @"";
				colvarUserNew.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUserNew);
				
				TableSchema.TableColumn colvarDateNew = new TableSchema.TableColumn(schema);
				colvarDateNew.ColumnName = "date_new";
				colvarDateNew.DataType = DbType.String;
				colvarDateNew.MaxLength = 100;
				colvarDateNew.AutoIncrement = false;
				colvarDateNew.IsNullable = true;
				colvarDateNew.IsPrimaryKey = false;
				colvarDateNew.IsForeignKey = false;
				colvarDateNew.IsReadOnly = false;
				colvarDateNew.DefaultSetting = @"";
				colvarDateNew.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDateNew);
				
				TableSchema.TableColumn colvarUserEdit = new TableSchema.TableColumn(schema);
				colvarUserEdit.ColumnName = "user_edit";
				colvarUserEdit.DataType = DbType.String;
				colvarUserEdit.MaxLength = 100;
				colvarUserEdit.AutoIncrement = false;
				colvarUserEdit.IsNullable = true;
				colvarUserEdit.IsPrimaryKey = false;
				colvarUserEdit.IsForeignKey = false;
				colvarUserEdit.IsReadOnly = false;
				colvarUserEdit.DefaultSetting = @"";
				colvarUserEdit.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUserEdit);
				
				TableSchema.TableColumn colvarMaDvcs = new TableSchema.TableColumn(schema);
				colvarMaDvcs.ColumnName = "ma_dvcs";
				colvarMaDvcs.DataType = DbType.String;
				colvarMaDvcs.MaxLength = 100;
				colvarMaDvcs.AutoIncrement = false;
				colvarMaDvcs.IsNullable = true;
				colvarMaDvcs.IsPrimaryKey = false;
				colvarMaDvcs.IsForeignKey = false;
				colvarMaDvcs.IsReadOnly = false;
				colvarMaDvcs.DefaultSetting = @"";
				colvarMaDvcs.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDvcs);
				
				TableSchema.TableColumn colvarDatabaseCode = new TableSchema.TableColumn(schema);
				colvarDatabaseCode.ColumnName = "database_code";
				colvarDatabaseCode.DataType = DbType.String;
				colvarDatabaseCode.MaxLength = 100;
				colvarDatabaseCode.AutoIncrement = false;
				colvarDatabaseCode.IsNullable = true;
				colvarDatabaseCode.IsPrimaryKey = false;
				colvarDatabaseCode.IsForeignKey = false;
				colvarDatabaseCode.IsReadOnly = false;
				colvarDatabaseCode.DefaultSetting = @"";
				colvarDatabaseCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDatabaseCode);
				
				TableSchema.TableColumn colvarMaCt = new TableSchema.TableColumn(schema);
				colvarMaCt.ColumnName = "ma_ct";
				colvarMaCt.DataType = DbType.String;
				colvarMaCt.MaxLength = 100;
				colvarMaCt.AutoIncrement = false;
				colvarMaCt.IsNullable = true;
				colvarMaCt.IsPrimaryKey = false;
				colvarMaCt.IsForeignKey = false;
				colvarMaCt.IsReadOnly = false;
				colvarMaCt.DefaultSetting = @"";
				colvarMaCt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaCt);
				
				TableSchema.TableColumn colvarSignedDate = new TableSchema.TableColumn(schema);
				colvarSignedDate.ColumnName = "signedDate";
				colvarSignedDate.DataType = DbType.String;
				colvarSignedDate.MaxLength = 100;
				colvarSignedDate.AutoIncrement = false;
				colvarSignedDate.IsNullable = true;
				colvarSignedDate.IsPrimaryKey = false;
				colvarSignedDate.IsForeignKey = false;
				colvarSignedDate.IsReadOnly = false;
				colvarSignedDate.DefaultSetting = @"";
				colvarSignedDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSignedDate);
				
				TableSchema.TableColumn colvarSubmittedDate = new TableSchema.TableColumn(schema);
				colvarSubmittedDate.ColumnName = "submittedDate";
				colvarSubmittedDate.DataType = DbType.String;
				colvarSubmittedDate.MaxLength = 100;
				colvarSubmittedDate.AutoIncrement = false;
				colvarSubmittedDate.IsNullable = true;
				colvarSubmittedDate.IsPrimaryKey = false;
				colvarSubmittedDate.IsForeignKey = false;
				colvarSubmittedDate.IsReadOnly = false;
				colvarSubmittedDate.DefaultSetting = @"";
				colvarSubmittedDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSubmittedDate);
				
				TableSchema.TableColumn colvarMauHd = new TableSchema.TableColumn(schema);
				colvarMauHd.ColumnName = "mau_hd";
				colvarMauHd.DataType = DbType.String;
				colvarMauHd.MaxLength = 100;
				colvarMauHd.AutoIncrement = false;
				colvarMauHd.IsNullable = true;
				colvarMauHd.IsPrimaryKey = false;
				colvarMauHd.IsForeignKey = false;
				colvarMauHd.IsReadOnly = false;
				colvarMauHd.DefaultSetting = @"";
				colvarMauHd.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMauHd);
				
				TableSchema.TableColumn colvarSoBenhAn = new TableSchema.TableColumn(schema);
				colvarSoBenhAn.ColumnName = "so_benh_an";
				colvarSoBenhAn.DataType = DbType.String;
				colvarSoBenhAn.MaxLength = 100;
				colvarSoBenhAn.AutoIncrement = false;
				colvarSoBenhAn.IsNullable = true;
				colvarSoBenhAn.IsPrimaryKey = false;
				colvarSoBenhAn.IsForeignKey = false;
				colvarSoBenhAn.IsReadOnly = false;
				colvarSoBenhAn.DefaultSetting = @"";
				colvarSoBenhAn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoBenhAn);
				
				TableSchema.TableColumn colvarSovb = new TableSchema.TableColumn(schema);
				colvarSovb.ColumnName = "sovb";
				colvarSovb.DataType = DbType.String;
				colvarSovb.MaxLength = 100;
				colvarSovb.AutoIncrement = false;
				colvarSovb.IsNullable = true;
				colvarSovb.IsPrimaryKey = false;
				colvarSovb.IsForeignKey = false;
				colvarSovb.IsReadOnly = false;
				colvarSovb.DefaultSetting = @"";
				colvarSovb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSovb);
				
				TableSchema.TableColumn colvarNgayvb = new TableSchema.TableColumn(schema);
				colvarNgayvb.ColumnName = "ngayvb";
				colvarNgayvb.DataType = DbType.String;
				colvarNgayvb.MaxLength = 100;
				colvarNgayvb.AutoIncrement = false;
				colvarNgayvb.IsNullable = true;
				colvarNgayvb.IsPrimaryKey = false;
				colvarNgayvb.IsForeignKey = false;
				colvarNgayvb.IsReadOnly = false;
				colvarNgayvb.DefaultSetting = @"";
				colvarNgayvb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayvb);
				
				TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
				colvarGhiChu.ColumnName = "ghi_chu";
				colvarGhiChu.DataType = DbType.String;
				colvarGhiChu.MaxLength = 100;
				colvarGhiChu.AutoIncrement = false;
				colvarGhiChu.IsNullable = true;
				colvarGhiChu.IsPrimaryKey = false;
				colvarGhiChu.IsForeignKey = false;
				colvarGhiChu.IsReadOnly = false;
				colvarGhiChu.DefaultSetting = @"";
				colvarGhiChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChu);
				
				TableSchema.TableColumn colvarSoHdDc = new TableSchema.TableColumn(schema);
				colvarSoHdDc.ColumnName = "so_hd_dc";
				colvarSoHdDc.DataType = DbType.String;
				colvarSoHdDc.MaxLength = 100;
				colvarSoHdDc.AutoIncrement = false;
				colvarSoHdDc.IsNullable = true;
				colvarSoHdDc.IsPrimaryKey = false;
				colvarSoHdDc.IsForeignKey = false;
				colvarSoHdDc.IsReadOnly = false;
				colvarSoHdDc.DefaultSetting = @"";
				colvarSoHdDc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoHdDc);
				
				TableSchema.TableColumn colvarInvOriginalId = new TableSchema.TableColumn(schema);
				colvarInvOriginalId.ColumnName = "inv_originalId";
				colvarInvOriginalId.DataType = DbType.String;
				colvarInvOriginalId.MaxLength = 100;
				colvarInvOriginalId.AutoIncrement = false;
				colvarInvOriginalId.IsNullable = true;
				colvarInvOriginalId.IsPrimaryKey = false;
				colvarInvOriginalId.IsForeignKey = false;
				colvarInvOriginalId.IsReadOnly = false;
				colvarInvOriginalId.DefaultSetting = @"";
				colvarInvOriginalId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvOriginalId);
				
				TableSchema.TableColumn colvarSignature = new TableSchema.TableColumn(schema);
				colvarSignature.ColumnName = "signature";
				colvarSignature.DataType = DbType.String;
				colvarSignature.MaxLength = 100;
				colvarSignature.AutoIncrement = false;
				colvarSignature.IsNullable = true;
				colvarSignature.IsPrimaryKey = false;
				colvarSignature.IsForeignKey = false;
				colvarSignature.IsReadOnly = false;
				colvarSignature.DefaultSetting = @"";
				colvarSignature.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSignature);
				
				TableSchema.TableColumn colvarDieuTri = new TableSchema.TableColumn(schema);
				colvarDieuTri.ColumnName = "dieu_tri";
				colvarDieuTri.DataType = DbType.String;
				colvarDieuTri.MaxLength = 100;
				colvarDieuTri.AutoIncrement = false;
				colvarDieuTri.IsNullable = true;
				colvarDieuTri.IsPrimaryKey = false;
				colvarDieuTri.IsForeignKey = false;
				colvarDieuTri.IsReadOnly = false;
				colvarDieuTri.DefaultSetting = @"";
				colvarDieuTri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDieuTri);
				
				TableSchema.TableColumn colvarMa1 = new TableSchema.TableColumn(schema);
				colvarMa1.ColumnName = "ma1";
				colvarMa1.DataType = DbType.String;
				colvarMa1.MaxLength = 100;
				colvarMa1.AutoIncrement = false;
				colvarMa1.IsNullable = true;
				colvarMa1.IsPrimaryKey = false;
				colvarMa1.IsForeignKey = false;
				colvarMa1.IsReadOnly = false;
				colvarMa1.DefaultSetting = @"";
				colvarMa1.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMa1);
				
				TableSchema.TableColumn colvarInvItemCode = new TableSchema.TableColumn(schema);
				colvarInvItemCode.ColumnName = "inv_itemCode";
				colvarInvItemCode.DataType = DbType.String;
				colvarInvItemCode.MaxLength = 100;
				colvarInvItemCode.AutoIncrement = false;
				colvarInvItemCode.IsNullable = true;
				colvarInvItemCode.IsPrimaryKey = false;
				colvarInvItemCode.IsForeignKey = false;
				colvarInvItemCode.IsReadOnly = false;
				colvarInvItemCode.DefaultSetting = @"";
				colvarInvItemCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvItemCode);
				
				TableSchema.TableColumn colvarInvItemName = new TableSchema.TableColumn(schema);
				colvarInvItemName.ColumnName = "inv_itemName";
				colvarInvItemName.DataType = DbType.String;
				colvarInvItemName.MaxLength = 100;
				colvarInvItemName.AutoIncrement = false;
				colvarInvItemName.IsNullable = true;
				colvarInvItemName.IsPrimaryKey = false;
				colvarInvItemName.IsForeignKey = false;
				colvarInvItemName.IsReadOnly = false;
				colvarInvItemName.DefaultSetting = @"";
				colvarInvItemName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvItemName);
				
				TableSchema.TableColumn colvarInvUnitCode = new TableSchema.TableColumn(schema);
				colvarInvUnitCode.ColumnName = "inv_unitCode";
				colvarInvUnitCode.DataType = DbType.String;
				colvarInvUnitCode.MaxLength = 100;
				colvarInvUnitCode.AutoIncrement = false;
				colvarInvUnitCode.IsNullable = true;
				colvarInvUnitCode.IsPrimaryKey = false;
				colvarInvUnitCode.IsForeignKey = false;
				colvarInvUnitCode.IsReadOnly = false;
				colvarInvUnitCode.DefaultSetting = @"";
				colvarInvUnitCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvUnitCode);
				
				TableSchema.TableColumn colvarInvUnitName = new TableSchema.TableColumn(schema);
				colvarInvUnitName.ColumnName = "inv_unitName";
				colvarInvUnitName.DataType = DbType.String;
				colvarInvUnitName.MaxLength = 100;
				colvarInvUnitName.AutoIncrement = false;
				colvarInvUnitName.IsNullable = true;
				colvarInvUnitName.IsPrimaryKey = false;
				colvarInvUnitName.IsForeignKey = false;
				colvarInvUnitName.IsReadOnly = false;
				colvarInvUnitName.DefaultSetting = @"";
				colvarInvUnitName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvUnitName);
				
				TableSchema.TableColumn colvarInvUnitPrice = new TableSchema.TableColumn(schema);
				colvarInvUnitPrice.ColumnName = "inv_unitPrice";
				colvarInvUnitPrice.DataType = DbType.String;
				colvarInvUnitPrice.MaxLength = 100;
				colvarInvUnitPrice.AutoIncrement = false;
				colvarInvUnitPrice.IsNullable = true;
				colvarInvUnitPrice.IsPrimaryKey = false;
				colvarInvUnitPrice.IsForeignKey = false;
				colvarInvUnitPrice.IsReadOnly = false;
				colvarInvUnitPrice.DefaultSetting = @"";
				colvarInvUnitPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvUnitPrice);
				
				TableSchema.TableColumn colvarInvQuantity = new TableSchema.TableColumn(schema);
				colvarInvQuantity.ColumnName = "inv_quantity";
				colvarInvQuantity.DataType = DbType.String;
				colvarInvQuantity.MaxLength = 100;
				colvarInvQuantity.AutoIncrement = false;
				colvarInvQuantity.IsNullable = true;
				colvarInvQuantity.IsPrimaryKey = false;
				colvarInvQuantity.IsForeignKey = false;
				colvarInvQuantity.IsReadOnly = false;
				colvarInvQuantity.DefaultSetting = @"";
				colvarInvQuantity.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvQuantity);
				
				TableSchema.TableColumn colvarInvTotalAmountWithoutVat = new TableSchema.TableColumn(schema);
				colvarInvTotalAmountWithoutVat.ColumnName = "inv_TotalAmountWithoutVat";
				colvarInvTotalAmountWithoutVat.DataType = DbType.String;
				colvarInvTotalAmountWithoutVat.MaxLength = 100;
				colvarInvTotalAmountWithoutVat.AutoIncrement = false;
				colvarInvTotalAmountWithoutVat.IsNullable = true;
				colvarInvTotalAmountWithoutVat.IsPrimaryKey = false;
				colvarInvTotalAmountWithoutVat.IsForeignKey = false;
				colvarInvTotalAmountWithoutVat.IsReadOnly = false;
				colvarInvTotalAmountWithoutVat.DefaultSetting = @"";
				colvarInvTotalAmountWithoutVat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvTotalAmountWithoutVat);
				
				TableSchema.TableColumn colvarInvVatPercentage = new TableSchema.TableColumn(schema);
				colvarInvVatPercentage.ColumnName = "inv_vatPercentage";
				colvarInvVatPercentage.DataType = DbType.String;
				colvarInvVatPercentage.MaxLength = 100;
				colvarInvVatPercentage.AutoIncrement = false;
				colvarInvVatPercentage.IsNullable = true;
				colvarInvVatPercentage.IsPrimaryKey = false;
				colvarInvVatPercentage.IsForeignKey = false;
				colvarInvVatPercentage.IsReadOnly = false;
				colvarInvVatPercentage.DefaultSetting = @"";
				colvarInvVatPercentage.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvVatPercentage);
				
				TableSchema.TableColumn colvarInvVatAmount = new TableSchema.TableColumn(schema);
				colvarInvVatAmount.ColumnName = "inv_vatAmount";
				colvarInvVatAmount.DataType = DbType.String;
				colvarInvVatAmount.MaxLength = 100;
				colvarInvVatAmount.AutoIncrement = false;
				colvarInvVatAmount.IsNullable = true;
				colvarInvVatAmount.IsPrimaryKey = false;
				colvarInvVatAmount.IsForeignKey = false;
				colvarInvVatAmount.IsReadOnly = false;
				colvarInvVatAmount.DefaultSetting = @"";
				colvarInvVatAmount.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvVatAmount);
				
				TableSchema.TableColumn colvarInvTotalAmount = new TableSchema.TableColumn(schema);
				colvarInvTotalAmount.ColumnName = "inv_TotalAmount";
				colvarInvTotalAmount.DataType = DbType.String;
				colvarInvTotalAmount.MaxLength = 100;
				colvarInvTotalAmount.AutoIncrement = false;
				colvarInvTotalAmount.IsNullable = true;
				colvarInvTotalAmount.IsPrimaryKey = false;
				colvarInvTotalAmount.IsForeignKey = false;
				colvarInvTotalAmount.IsReadOnly = false;
				colvarInvTotalAmount.DefaultSetting = @"";
				colvarInvTotalAmount.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvTotalAmount);
				
				TableSchema.TableColumn colvarNguoiKy = new TableSchema.TableColumn(schema);
				colvarNguoiKy.ColumnName = "nguoi_ky";
				colvarNguoiKy.DataType = DbType.String;
				colvarNguoiKy.MaxLength = 100;
				colvarNguoiKy.AutoIncrement = false;
				colvarNguoiKy.IsNullable = true;
				colvarNguoiKy.IsPrimaryKey = false;
				colvarNguoiKy.IsForeignKey = false;
				colvarNguoiKy.IsReadOnly = false;
				colvarNguoiKy.DefaultSetting = @"";
				colvarNguoiKy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiKy);
				
				TableSchema.TableColumn colvarSobaomat = new TableSchema.TableColumn(schema);
				colvarSobaomat.ColumnName = "sobaomat";
				colvarSobaomat.DataType = DbType.String;
				colvarSobaomat.MaxLength = 100;
				colvarSobaomat.AutoIncrement = false;
				colvarSobaomat.IsNullable = true;
				colvarSobaomat.IsPrimaryKey = false;
				colvarSobaomat.IsForeignKey = false;
				colvarSobaomat.IsReadOnly = false;
				colvarSobaomat.DefaultSetting = @"";
				colvarSobaomat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSobaomat);
				
				TableSchema.TableColumn colvarTrangThaiHd = new TableSchema.TableColumn(schema);
				colvarTrangThaiHd.ColumnName = "trang_thai_hd";
				colvarTrangThaiHd.DataType = DbType.String;
				colvarTrangThaiHd.MaxLength = 100;
				colvarTrangThaiHd.AutoIncrement = false;
				colvarTrangThaiHd.IsNullable = true;
				colvarTrangThaiHd.IsPrimaryKey = false;
				colvarTrangThaiHd.IsForeignKey = false;
				colvarTrangThaiHd.IsReadOnly = false;
				colvarTrangThaiHd.DefaultSetting = @"";
				colvarTrangThaiHd.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThaiHd);
				
				TableSchema.TableColumn colvarInChuyenDoi = new TableSchema.TableColumn(schema);
				colvarInChuyenDoi.ColumnName = "in_chuyen_doi";
				colvarInChuyenDoi.DataType = DbType.String;
				colvarInChuyenDoi.MaxLength = 100;
				colvarInChuyenDoi.AutoIncrement = false;
				colvarInChuyenDoi.IsNullable = true;
				colvarInChuyenDoi.IsPrimaryKey = false;
				colvarInChuyenDoi.IsForeignKey = false;
				colvarInChuyenDoi.IsReadOnly = false;
				colvarInChuyenDoi.DefaultSetting = @"";
				colvarInChuyenDoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInChuyenDoi);
				
				TableSchema.TableColumn colvarNgayKy = new TableSchema.TableColumn(schema);
				colvarNgayKy.ColumnName = "ngay_ky";
				colvarNgayKy.DataType = DbType.String;
				colvarNgayKy.MaxLength = 100;
				colvarNgayKy.AutoIncrement = false;
				colvarNgayKy.IsNullable = true;
				colvarNgayKy.IsPrimaryKey = false;
				colvarNgayKy.IsForeignKey = false;
				colvarNgayKy.IsReadOnly = false;
				colvarNgayKy.DefaultSetting = @"";
				colvarNgayKy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayKy);
				
				TableSchema.TableColumn colvarNguoiInCdoi = new TableSchema.TableColumn(schema);
				colvarNguoiInCdoi.ColumnName = "nguoi_in_cdoi";
				colvarNguoiInCdoi.DataType = DbType.String;
				colvarNguoiInCdoi.MaxLength = 100;
				colvarNguoiInCdoi.AutoIncrement = false;
				colvarNguoiInCdoi.IsNullable = true;
				colvarNguoiInCdoi.IsPrimaryKey = false;
				colvarNguoiInCdoi.IsForeignKey = false;
				colvarNguoiInCdoi.IsReadOnly = false;
				colvarNguoiInCdoi.DefaultSetting = @"";
				colvarNguoiInCdoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiInCdoi);
				
				TableSchema.TableColumn colvarNgayInCdoi = new TableSchema.TableColumn(schema);
				colvarNgayInCdoi.ColumnName = "ngay_in_cdoi";
				colvarNgayInCdoi.DataType = DbType.String;
				colvarNgayInCdoi.MaxLength = 100;
				colvarNgayInCdoi.AutoIncrement = false;
				colvarNgayInCdoi.IsNullable = true;
				colvarNgayInCdoi.IsPrimaryKey = false;
				colvarNgayInCdoi.IsForeignKey = false;
				colvarNgayInCdoi.IsReadOnly = false;
				colvarNgayInCdoi.DefaultSetting = @"";
				colvarNgayInCdoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayInCdoi);
				
				TableSchema.TableColumn colvarInvDeliveryOrderNumber = new TableSchema.TableColumn(schema);
				colvarInvDeliveryOrderNumber.ColumnName = "inv_deliveryOrderNumber";
				colvarInvDeliveryOrderNumber.DataType = DbType.String;
				colvarInvDeliveryOrderNumber.MaxLength = 100;
				colvarInvDeliveryOrderNumber.AutoIncrement = false;
				colvarInvDeliveryOrderNumber.IsNullable = true;
				colvarInvDeliveryOrderNumber.IsPrimaryKey = false;
				colvarInvDeliveryOrderNumber.IsForeignKey = false;
				colvarInvDeliveryOrderNumber.IsReadOnly = false;
				colvarInvDeliveryOrderNumber.DefaultSetting = @"";
				colvarInvDeliveryOrderNumber.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvDeliveryOrderNumber);
				
				TableSchema.TableColumn colvarInvDeliveryOrderDate = new TableSchema.TableColumn(schema);
				colvarInvDeliveryOrderDate.ColumnName = "inv_deliveryOrderDate";
				colvarInvDeliveryOrderDate.DataType = DbType.String;
				colvarInvDeliveryOrderDate.MaxLength = 100;
				colvarInvDeliveryOrderDate.AutoIncrement = false;
				colvarInvDeliveryOrderDate.IsNullable = true;
				colvarInvDeliveryOrderDate.IsPrimaryKey = false;
				colvarInvDeliveryOrderDate.IsForeignKey = false;
				colvarInvDeliveryOrderDate.IsReadOnly = false;
				colvarInvDeliveryOrderDate.DefaultSetting = @"";
				colvarInvDeliveryOrderDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvDeliveryOrderDate);
				
				TableSchema.TableColumn colvarInvDeliveryBy = new TableSchema.TableColumn(schema);
				colvarInvDeliveryBy.ColumnName = "inv_deliveryBy";
				colvarInvDeliveryBy.DataType = DbType.String;
				colvarInvDeliveryBy.MaxLength = 100;
				colvarInvDeliveryBy.AutoIncrement = false;
				colvarInvDeliveryBy.IsNullable = true;
				colvarInvDeliveryBy.IsPrimaryKey = false;
				colvarInvDeliveryBy.IsForeignKey = false;
				colvarInvDeliveryBy.IsReadOnly = false;
				colvarInvDeliveryBy.DefaultSetting = @"";
				colvarInvDeliveryBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvDeliveryBy);
				
				TableSchema.TableColumn colvarInvTransportationMethod = new TableSchema.TableColumn(schema);
				colvarInvTransportationMethod.ColumnName = "inv_transportationMethod";
				colvarInvTransportationMethod.DataType = DbType.String;
				colvarInvTransportationMethod.MaxLength = 100;
				colvarInvTransportationMethod.AutoIncrement = false;
				colvarInvTransportationMethod.IsNullable = true;
				colvarInvTransportationMethod.IsPrimaryKey = false;
				colvarInvTransportationMethod.IsForeignKey = false;
				colvarInvTransportationMethod.IsReadOnly = false;
				colvarInvTransportationMethod.DefaultSetting = @"";
				colvarInvTransportationMethod.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvTransportationMethod);
				
				TableSchema.TableColumn colvarInvFromWarehouseName = new TableSchema.TableColumn(schema);
				colvarInvFromWarehouseName.ColumnName = "inv_fromWarehouseName";
				colvarInvFromWarehouseName.DataType = DbType.String;
				colvarInvFromWarehouseName.MaxLength = 100;
				colvarInvFromWarehouseName.AutoIncrement = false;
				colvarInvFromWarehouseName.IsNullable = true;
				colvarInvFromWarehouseName.IsPrimaryKey = false;
				colvarInvFromWarehouseName.IsForeignKey = false;
				colvarInvFromWarehouseName.IsReadOnly = false;
				colvarInvFromWarehouseName.DefaultSetting = @"";
				colvarInvFromWarehouseName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvFromWarehouseName);
				
				TableSchema.TableColumn colvarInvToWarehouseName = new TableSchema.TableColumn(schema);
				colvarInvToWarehouseName.ColumnName = "inv_toWarehouseName";
				colvarInvToWarehouseName.DataType = DbType.String;
				colvarInvToWarehouseName.MaxLength = 100;
				colvarInvToWarehouseName.AutoIncrement = false;
				colvarInvToWarehouseName.IsNullable = true;
				colvarInvToWarehouseName.IsPrimaryKey = false;
				colvarInvToWarehouseName.IsForeignKey = false;
				colvarInvToWarehouseName.IsReadOnly = false;
				colvarInvToWarehouseName.DefaultSetting = @"";
				colvarInvToWarehouseName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvToWarehouseName);
				
				TableSchema.TableColumn colvarInvSobangke = new TableSchema.TableColumn(schema);
				colvarInvSobangke.ColumnName = "inv_sobangke";
				colvarInvSobangke.DataType = DbType.String;
				colvarInvSobangke.MaxLength = 100;
				colvarInvSobangke.AutoIncrement = false;
				colvarInvSobangke.IsNullable = true;
				colvarInvSobangke.IsPrimaryKey = false;
				colvarInvSobangke.IsForeignKey = false;
				colvarInvSobangke.IsReadOnly = false;
				colvarInvSobangke.DefaultSetting = @"";
				colvarInvSobangke.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvSobangke);
				
				TableSchema.TableColumn colvarInvNgaybangke = new TableSchema.TableColumn(schema);
				colvarInvNgaybangke.ColumnName = "inv_ngaybangke";
				colvarInvNgaybangke.DataType = DbType.String;
				colvarInvNgaybangke.MaxLength = 100;
				colvarInvNgaybangke.AutoIncrement = false;
				colvarInvNgaybangke.IsNullable = true;
				colvarInvNgaybangke.IsPrimaryKey = false;
				colvarInvNgaybangke.IsForeignKey = false;
				colvarInvNgaybangke.IsReadOnly = false;
				colvarInvNgaybangke.DefaultSetting = @"";
				colvarInvNgaybangke.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInvNgaybangke);
				
				TableSchema.TableColumn colvarKeyApi = new TableSchema.TableColumn(schema);
				colvarKeyApi.ColumnName = "key_api";
				colvarKeyApi.DataType = DbType.String;
				colvarKeyApi.MaxLength = 100;
				colvarKeyApi.AutoIncrement = false;
				colvarKeyApi.IsNullable = true;
				colvarKeyApi.IsPrimaryKey = false;
				colvarKeyApi.IsForeignKey = false;
				colvarKeyApi.IsReadOnly = false;
				colvarKeyApi.DefaultSetting = @"";
				colvarKeyApi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKeyApi);
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.String;
				colvarId.MaxLength = 100;
				colvarId.AutoIncrement = false;
				colvarId.IsNullable = true;
				colvarId.IsPrimaryKey = false;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarRefID = new TableSchema.TableColumn(schema);
				colvarRefID.ColumnName = "RefID";
				colvarRefID.DataType = DbType.String;
				colvarRefID.MaxLength = 100;
				colvarRefID.AutoIncrement = false;
				colvarRefID.IsNullable = true;
				colvarRefID.IsPrimaryKey = false;
				colvarRefID.IsForeignKey = false;
				colvarRefID.IsReadOnly = false;
				colvarRefID.DefaultSetting = @"";
				colvarRefID.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRefID);
				
				TableSchema.TableColumn colvarTransactionID = new TableSchema.TableColumn(schema);
				colvarTransactionID.ColumnName = "transactionID";
				colvarTransactionID.DataType = DbType.String;
				colvarTransactionID.MaxLength = 100;
				colvarTransactionID.AutoIncrement = false;
				colvarTransactionID.IsNullable = true;
				colvarTransactionID.IsPrimaryKey = false;
				colvarTransactionID.IsForeignKey = false;
				colvarTransactionID.IsReadOnly = false;
				colvarTransactionID.DefaultSetting = @"";
				colvarTransactionID.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTransactionID);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("data_ketqua",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("InvInvoiceAuthId")]
		[Bindable(true)]
		public string InvInvoiceAuthId 
		{
			get { return GetColumnValue<string>(Columns.InvInvoiceAuthId); }
			set { SetColumnValue(Columns.InvInvoiceAuthId, value); }
		}
		  
		[XmlAttribute("PaymentId")]
		[Bindable(true)]
		public string PaymentId 
		{
			get { return GetColumnValue<string>(Columns.PaymentId); }
			set { SetColumnValue(Columns.PaymentId, value); }
		}
		  
		[XmlAttribute("InvInvoiceType")]
		[Bindable(true)]
		public string InvInvoiceType 
		{
			get { return GetColumnValue<string>(Columns.InvInvoiceType); }
			set { SetColumnValue(Columns.InvInvoiceType, value); }
		}
		  
		[XmlAttribute("InvInvoiceCodeId")]
		[Bindable(true)]
		public string InvInvoiceCodeId 
		{
			get { return GetColumnValue<string>(Columns.InvInvoiceCodeId); }
			set { SetColumnValue(Columns.InvInvoiceCodeId, value); }
		}
		  
		[XmlAttribute("InvInvoiceSeries")]
		[Bindable(true)]
		public string InvInvoiceSeries 
		{
			get { return GetColumnValue<string>(Columns.InvInvoiceSeries); }
			set { SetColumnValue(Columns.InvInvoiceSeries, value); }
		}
		  
		[XmlAttribute("InvInvoiceNumber")]
		[Bindable(true)]
		public string InvInvoiceNumber 
		{
			get { return GetColumnValue<string>(Columns.InvInvoiceNumber); }
			set { SetColumnValue(Columns.InvInvoiceNumber, value); }
		}
		  
		[XmlAttribute("InvInvoiceName")]
		[Bindable(true)]
		public string InvInvoiceName 
		{
			get { return GetColumnValue<string>(Columns.InvInvoiceName); }
			set { SetColumnValue(Columns.InvInvoiceName, value); }
		}
		  
		[XmlAttribute("InvInvoiceIssuedDate")]
		[Bindable(true)]
		public string InvInvoiceIssuedDate 
		{
			get { return GetColumnValue<string>(Columns.InvInvoiceIssuedDate); }
			set { SetColumnValue(Columns.InvInvoiceIssuedDate, value); }
		}
		  
		[XmlAttribute("InvSubmittedDate")]
		[Bindable(true)]
		public string InvSubmittedDate 
		{
			get { return GetColumnValue<string>(Columns.InvSubmittedDate); }
			set { SetColumnValue(Columns.InvSubmittedDate, value); }
		}
		  
		[XmlAttribute("InvContractNumber")]
		[Bindable(true)]
		public string InvContractNumber 
		{
			get { return GetColumnValue<string>(Columns.InvContractNumber); }
			set { SetColumnValue(Columns.InvContractNumber, value); }
		}
		  
		[XmlAttribute("InvContractDate")]
		[Bindable(true)]
		public string InvContractDate 
		{
			get { return GetColumnValue<string>(Columns.InvContractDate); }
			set { SetColumnValue(Columns.InvContractDate, value); }
		}
		  
		[XmlAttribute("InvCurrencyCode")]
		[Bindable(true)]
		public string InvCurrencyCode 
		{
			get { return GetColumnValue<string>(Columns.InvCurrencyCode); }
			set { SetColumnValue(Columns.InvCurrencyCode, value); }
		}
		  
		[XmlAttribute("InvExchangeRate")]
		[Bindable(true)]
		public string InvExchangeRate 
		{
			get { return GetColumnValue<string>(Columns.InvExchangeRate); }
			set { SetColumnValue(Columns.InvExchangeRate, value); }
		}
		  
		[XmlAttribute("InvInvoiceNote")]
		[Bindable(true)]
		public string InvInvoiceNote 
		{
			get { return GetColumnValue<string>(Columns.InvInvoiceNote); }
			set { SetColumnValue(Columns.InvInvoiceNote, value); }
		}
		  
		[XmlAttribute("InvAdjustmentType")]
		[Bindable(true)]
		public string InvAdjustmentType 
		{
			get { return GetColumnValue<string>(Columns.InvAdjustmentType); }
			set { SetColumnValue(Columns.InvAdjustmentType, value); }
		}
		  
		[XmlAttribute("InvOriginalInvoiceId")]
		[Bindable(true)]
		public string InvOriginalInvoiceId 
		{
			get { return GetColumnValue<string>(Columns.InvOriginalInvoiceId); }
			set { SetColumnValue(Columns.InvOriginalInvoiceId, value); }
		}
		  
		[XmlAttribute("InvAdditionalReferenceDes")]
		[Bindable(true)]
		public string InvAdditionalReferenceDes 
		{
			get { return GetColumnValue<string>(Columns.InvAdditionalReferenceDes); }
			set { SetColumnValue(Columns.InvAdditionalReferenceDes, value); }
		}
		  
		[XmlAttribute("InvAdditionalReferenceDate")]
		[Bindable(true)]
		public string InvAdditionalReferenceDate 
		{
			get { return GetColumnValue<string>(Columns.InvAdditionalReferenceDate); }
			set { SetColumnValue(Columns.InvAdditionalReferenceDate, value); }
		}
		  
		[XmlAttribute("InvBuyerDisplayName")]
		[Bindable(true)]
		public string InvBuyerDisplayName 
		{
			get { return GetColumnValue<string>(Columns.InvBuyerDisplayName); }
			set { SetColumnValue(Columns.InvBuyerDisplayName, value); }
		}
		  
		[XmlAttribute("MaDt")]
		[Bindable(true)]
		public string MaDt 
		{
			get { return GetColumnValue<string>(Columns.MaDt); }
			set { SetColumnValue(Columns.MaDt, value); }
		}
		  
		[XmlAttribute("InvBuyerLegalName")]
		[Bindable(true)]
		public string InvBuyerLegalName 
		{
			get { return GetColumnValue<string>(Columns.InvBuyerLegalName); }
			set { SetColumnValue(Columns.InvBuyerLegalName, value); }
		}
		  
		[XmlAttribute("InvBuyerTaxCode")]
		[Bindable(true)]
		public string InvBuyerTaxCode 
		{
			get { return GetColumnValue<string>(Columns.InvBuyerTaxCode); }
			set { SetColumnValue(Columns.InvBuyerTaxCode, value); }
		}
		  
		[XmlAttribute("InvBuyerAddressLine")]
		[Bindable(true)]
		public string InvBuyerAddressLine 
		{
			get { return GetColumnValue<string>(Columns.InvBuyerAddressLine); }
			set { SetColumnValue(Columns.InvBuyerAddressLine, value); }
		}
		  
		[XmlAttribute("InvBuyerEmail")]
		[Bindable(true)]
		public string InvBuyerEmail 
		{
			get { return GetColumnValue<string>(Columns.InvBuyerEmail); }
			set { SetColumnValue(Columns.InvBuyerEmail, value); }
		}
		  
		[XmlAttribute("InvBuyerBankAccount")]
		[Bindable(true)]
		public string InvBuyerBankAccount 
		{
			get { return GetColumnValue<string>(Columns.InvBuyerBankAccount); }
			set { SetColumnValue(Columns.InvBuyerBankAccount, value); }
		}
		  
		[XmlAttribute("InvBuyerBankName")]
		[Bindable(true)]
		public string InvBuyerBankName 
		{
			get { return GetColumnValue<string>(Columns.InvBuyerBankName); }
			set { SetColumnValue(Columns.InvBuyerBankName, value); }
		}
		  
		[XmlAttribute("InvPaymentMethodName")]
		[Bindable(true)]
		public string InvPaymentMethodName 
		{
			get { return GetColumnValue<string>(Columns.InvPaymentMethodName); }
			set { SetColumnValue(Columns.InvPaymentMethodName, value); }
		}
		  
		[XmlAttribute("InvSellerBankAccount")]
		[Bindable(true)]
		public string InvSellerBankAccount 
		{
			get { return GetColumnValue<string>(Columns.InvSellerBankAccount); }
			set { SetColumnValue(Columns.InvSellerBankAccount, value); }
		}
		  
		[XmlAttribute("InvSellerBankName")]
		[Bindable(true)]
		public string InvSellerBankName 
		{
			get { return GetColumnValue<string>(Columns.InvSellerBankName); }
			set { SetColumnValue(Columns.InvSellerBankName, value); }
		}
		  
		[XmlAttribute("InvDiscountAmount")]
		[Bindable(true)]
		public string InvDiscountAmount 
		{
			get { return GetColumnValue<string>(Columns.InvDiscountAmount); }
			set { SetColumnValue(Columns.InvDiscountAmount, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public string TrangThai 
		{
			get { return GetColumnValue<string>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("UserNew")]
		[Bindable(true)]
		public string UserNew 
		{
			get { return GetColumnValue<string>(Columns.UserNew); }
			set { SetColumnValue(Columns.UserNew, value); }
		}
		  
		[XmlAttribute("DateNew")]
		[Bindable(true)]
		public string DateNew 
		{
			get { return GetColumnValue<string>(Columns.DateNew); }
			set { SetColumnValue(Columns.DateNew, value); }
		}
		  
		[XmlAttribute("UserEdit")]
		[Bindable(true)]
		public string UserEdit 
		{
			get { return GetColumnValue<string>(Columns.UserEdit); }
			set { SetColumnValue(Columns.UserEdit, value); }
		}
		  
		[XmlAttribute("MaDvcs")]
		[Bindable(true)]
		public string MaDvcs 
		{
			get { return GetColumnValue<string>(Columns.MaDvcs); }
			set { SetColumnValue(Columns.MaDvcs, value); }
		}
		  
		[XmlAttribute("DatabaseCode")]
		[Bindable(true)]
		public string DatabaseCode 
		{
			get { return GetColumnValue<string>(Columns.DatabaseCode); }
			set { SetColumnValue(Columns.DatabaseCode, value); }
		}
		  
		[XmlAttribute("MaCt")]
		[Bindable(true)]
		public string MaCt 
		{
			get { return GetColumnValue<string>(Columns.MaCt); }
			set { SetColumnValue(Columns.MaCt, value); }
		}
		  
		[XmlAttribute("SignedDate")]
		[Bindable(true)]
		public string SignedDate 
		{
			get { return GetColumnValue<string>(Columns.SignedDate); }
			set { SetColumnValue(Columns.SignedDate, value); }
		}
		  
		[XmlAttribute("SubmittedDate")]
		[Bindable(true)]
		public string SubmittedDate 
		{
			get { return GetColumnValue<string>(Columns.SubmittedDate); }
			set { SetColumnValue(Columns.SubmittedDate, value); }
		}
		  
		[XmlAttribute("MauHd")]
		[Bindable(true)]
		public string MauHd 
		{
			get { return GetColumnValue<string>(Columns.MauHd); }
			set { SetColumnValue(Columns.MauHd, value); }
		}
		  
		[XmlAttribute("SoBenhAn")]
		[Bindable(true)]
		public string SoBenhAn 
		{
			get { return GetColumnValue<string>(Columns.SoBenhAn); }
			set { SetColumnValue(Columns.SoBenhAn, value); }
		}
		  
		[XmlAttribute("Sovb")]
		[Bindable(true)]
		public string Sovb 
		{
			get { return GetColumnValue<string>(Columns.Sovb); }
			set { SetColumnValue(Columns.Sovb, value); }
		}
		  
		[XmlAttribute("Ngayvb")]
		[Bindable(true)]
		public string Ngayvb 
		{
			get { return GetColumnValue<string>(Columns.Ngayvb); }
			set { SetColumnValue(Columns.Ngayvb, value); }
		}
		  
		[XmlAttribute("GhiChu")]
		[Bindable(true)]
		public string GhiChu 
		{
			get { return GetColumnValue<string>(Columns.GhiChu); }
			set { SetColumnValue(Columns.GhiChu, value); }
		}
		  
		[XmlAttribute("SoHdDc")]
		[Bindable(true)]
		public string SoHdDc 
		{
			get { return GetColumnValue<string>(Columns.SoHdDc); }
			set { SetColumnValue(Columns.SoHdDc, value); }
		}
		  
		[XmlAttribute("InvOriginalId")]
		[Bindable(true)]
		public string InvOriginalId 
		{
			get { return GetColumnValue<string>(Columns.InvOriginalId); }
			set { SetColumnValue(Columns.InvOriginalId, value); }
		}
		  
		[XmlAttribute("Signature")]
		[Bindable(true)]
		public string Signature 
		{
			get { return GetColumnValue<string>(Columns.Signature); }
			set { SetColumnValue(Columns.Signature, value); }
		}
		  
		[XmlAttribute("DieuTri")]
		[Bindable(true)]
		public string DieuTri 
		{
			get { return GetColumnValue<string>(Columns.DieuTri); }
			set { SetColumnValue(Columns.DieuTri, value); }
		}
		  
		[XmlAttribute("Ma1")]
		[Bindable(true)]
		public string Ma1 
		{
			get { return GetColumnValue<string>(Columns.Ma1); }
			set { SetColumnValue(Columns.Ma1, value); }
		}
		  
		[XmlAttribute("InvItemCode")]
		[Bindable(true)]
		public string InvItemCode 
		{
			get { return GetColumnValue<string>(Columns.InvItemCode); }
			set { SetColumnValue(Columns.InvItemCode, value); }
		}
		  
		[XmlAttribute("InvItemName")]
		[Bindable(true)]
		public string InvItemName 
		{
			get { return GetColumnValue<string>(Columns.InvItemName); }
			set { SetColumnValue(Columns.InvItemName, value); }
		}
		  
		[XmlAttribute("InvUnitCode")]
		[Bindable(true)]
		public string InvUnitCode 
		{
			get { return GetColumnValue<string>(Columns.InvUnitCode); }
			set { SetColumnValue(Columns.InvUnitCode, value); }
		}
		  
		[XmlAttribute("InvUnitName")]
		[Bindable(true)]
		public string InvUnitName 
		{
			get { return GetColumnValue<string>(Columns.InvUnitName); }
			set { SetColumnValue(Columns.InvUnitName, value); }
		}
		  
		[XmlAttribute("InvUnitPrice")]
		[Bindable(true)]
		public string InvUnitPrice 
		{
			get { return GetColumnValue<string>(Columns.InvUnitPrice); }
			set { SetColumnValue(Columns.InvUnitPrice, value); }
		}
		  
		[XmlAttribute("InvQuantity")]
		[Bindable(true)]
		public string InvQuantity 
		{
			get { return GetColumnValue<string>(Columns.InvQuantity); }
			set { SetColumnValue(Columns.InvQuantity, value); }
		}
		  
		[XmlAttribute("InvTotalAmountWithoutVat")]
		[Bindable(true)]
		public string InvTotalAmountWithoutVat 
		{
			get { return GetColumnValue<string>(Columns.InvTotalAmountWithoutVat); }
			set { SetColumnValue(Columns.InvTotalAmountWithoutVat, value); }
		}
		  
		[XmlAttribute("InvVatPercentage")]
		[Bindable(true)]
		public string InvVatPercentage 
		{
			get { return GetColumnValue<string>(Columns.InvVatPercentage); }
			set { SetColumnValue(Columns.InvVatPercentage, value); }
		}
		  
		[XmlAttribute("InvVatAmount")]
		[Bindable(true)]
		public string InvVatAmount 
		{
			get { return GetColumnValue<string>(Columns.InvVatAmount); }
			set { SetColumnValue(Columns.InvVatAmount, value); }
		}
		  
		[XmlAttribute("InvTotalAmount")]
		[Bindable(true)]
		public string InvTotalAmount 
		{
			get { return GetColumnValue<string>(Columns.InvTotalAmount); }
			set { SetColumnValue(Columns.InvTotalAmount, value); }
		}
		  
		[XmlAttribute("NguoiKy")]
		[Bindable(true)]
		public string NguoiKy 
		{
			get { return GetColumnValue<string>(Columns.NguoiKy); }
			set { SetColumnValue(Columns.NguoiKy, value); }
		}
		  
		[XmlAttribute("Sobaomat")]
		[Bindable(true)]
		public string Sobaomat 
		{
			get { return GetColumnValue<string>(Columns.Sobaomat); }
			set { SetColumnValue(Columns.Sobaomat, value); }
		}
		  
		[XmlAttribute("TrangThaiHd")]
		[Bindable(true)]
		public string TrangThaiHd 
		{
			get { return GetColumnValue<string>(Columns.TrangThaiHd); }
			set { SetColumnValue(Columns.TrangThaiHd, value); }
		}
		  
		[XmlAttribute("InChuyenDoi")]
		[Bindable(true)]
		public string InChuyenDoi 
		{
			get { return GetColumnValue<string>(Columns.InChuyenDoi); }
			set { SetColumnValue(Columns.InChuyenDoi, value); }
		}
		  
		[XmlAttribute("NgayKy")]
		[Bindable(true)]
		public string NgayKy 
		{
			get { return GetColumnValue<string>(Columns.NgayKy); }
			set { SetColumnValue(Columns.NgayKy, value); }
		}
		  
		[XmlAttribute("NguoiInCdoi")]
		[Bindable(true)]
		public string NguoiInCdoi 
		{
			get { return GetColumnValue<string>(Columns.NguoiInCdoi); }
			set { SetColumnValue(Columns.NguoiInCdoi, value); }
		}
		  
		[XmlAttribute("NgayInCdoi")]
		[Bindable(true)]
		public string NgayInCdoi 
		{
			get { return GetColumnValue<string>(Columns.NgayInCdoi); }
			set { SetColumnValue(Columns.NgayInCdoi, value); }
		}
		  
		[XmlAttribute("InvDeliveryOrderNumber")]
		[Bindable(true)]
		public string InvDeliveryOrderNumber 
		{
			get { return GetColumnValue<string>(Columns.InvDeliveryOrderNumber); }
			set { SetColumnValue(Columns.InvDeliveryOrderNumber, value); }
		}
		  
		[XmlAttribute("InvDeliveryOrderDate")]
		[Bindable(true)]
		public string InvDeliveryOrderDate 
		{
			get { return GetColumnValue<string>(Columns.InvDeliveryOrderDate); }
			set { SetColumnValue(Columns.InvDeliveryOrderDate, value); }
		}
		  
		[XmlAttribute("InvDeliveryBy")]
		[Bindable(true)]
		public string InvDeliveryBy 
		{
			get { return GetColumnValue<string>(Columns.InvDeliveryBy); }
			set { SetColumnValue(Columns.InvDeliveryBy, value); }
		}
		  
		[XmlAttribute("InvTransportationMethod")]
		[Bindable(true)]
		public string InvTransportationMethod 
		{
			get { return GetColumnValue<string>(Columns.InvTransportationMethod); }
			set { SetColumnValue(Columns.InvTransportationMethod, value); }
		}
		  
		[XmlAttribute("InvFromWarehouseName")]
		[Bindable(true)]
		public string InvFromWarehouseName 
		{
			get { return GetColumnValue<string>(Columns.InvFromWarehouseName); }
			set { SetColumnValue(Columns.InvFromWarehouseName, value); }
		}
		  
		[XmlAttribute("InvToWarehouseName")]
		[Bindable(true)]
		public string InvToWarehouseName 
		{
			get { return GetColumnValue<string>(Columns.InvToWarehouseName); }
			set { SetColumnValue(Columns.InvToWarehouseName, value); }
		}
		  
		[XmlAttribute("InvSobangke")]
		[Bindable(true)]
		public string InvSobangke 
		{
			get { return GetColumnValue<string>(Columns.InvSobangke); }
			set { SetColumnValue(Columns.InvSobangke, value); }
		}
		  
		[XmlAttribute("InvNgaybangke")]
		[Bindable(true)]
		public string InvNgaybangke 
		{
			get { return GetColumnValue<string>(Columns.InvNgaybangke); }
			set { SetColumnValue(Columns.InvNgaybangke, value); }
		}
		  
		[XmlAttribute("KeyApi")]
		[Bindable(true)]
		public string KeyApi 
		{
			get { return GetColumnValue<string>(Columns.KeyApi); }
			set { SetColumnValue(Columns.KeyApi, value); }
		}
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public string Id 
		{
			get { return GetColumnValue<string>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("RefID")]
		[Bindable(true)]
		public string RefID 
		{
			get { return GetColumnValue<string>(Columns.RefID); }
			set { SetColumnValue(Columns.RefID, value); }
		}
		  
		[XmlAttribute("TransactionID")]
		[Bindable(true)]
		public string TransactionID 
		{
			get { return GetColumnValue<string>(Columns.TransactionID); }
			set { SetColumnValue(Columns.TransactionID, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varInvInvoiceAuthId,string varPaymentId,string varInvInvoiceType,string varInvInvoiceCodeId,string varInvInvoiceSeries,string varInvInvoiceNumber,string varInvInvoiceName,string varInvInvoiceIssuedDate,string varInvSubmittedDate,string varInvContractNumber,string varInvContractDate,string varInvCurrencyCode,string varInvExchangeRate,string varInvInvoiceNote,string varInvAdjustmentType,string varInvOriginalInvoiceId,string varInvAdditionalReferenceDes,string varInvAdditionalReferenceDate,string varInvBuyerDisplayName,string varMaDt,string varInvBuyerLegalName,string varInvBuyerTaxCode,string varInvBuyerAddressLine,string varInvBuyerEmail,string varInvBuyerBankAccount,string varInvBuyerBankName,string varInvPaymentMethodName,string varInvSellerBankAccount,string varInvSellerBankName,string varInvDiscountAmount,string varTrangThai,string varUserNew,string varDateNew,string varUserEdit,string varMaDvcs,string varDatabaseCode,string varMaCt,string varSignedDate,string varSubmittedDate,string varMauHd,string varSoBenhAn,string varSovb,string varNgayvb,string varGhiChu,string varSoHdDc,string varInvOriginalId,string varSignature,string varDieuTri,string varMa1,string varInvItemCode,string varInvItemName,string varInvUnitCode,string varInvUnitName,string varInvUnitPrice,string varInvQuantity,string varInvTotalAmountWithoutVat,string varInvVatPercentage,string varInvVatAmount,string varInvTotalAmount,string varNguoiKy,string varSobaomat,string varTrangThaiHd,string varInChuyenDoi,string varNgayKy,string varNguoiInCdoi,string varNgayInCdoi,string varInvDeliveryOrderNumber,string varInvDeliveryOrderDate,string varInvDeliveryBy,string varInvTransportationMethod,string varInvFromWarehouseName,string varInvToWarehouseName,string varInvSobangke,string varInvNgaybangke,string varKeyApi,string varId,string varRefID,string varTransactionID)
		{
			DataKetqua item = new DataKetqua();
			
			item.InvInvoiceAuthId = varInvInvoiceAuthId;
			
			item.PaymentId = varPaymentId;
			
			item.InvInvoiceType = varInvInvoiceType;
			
			item.InvInvoiceCodeId = varInvInvoiceCodeId;
			
			item.InvInvoiceSeries = varInvInvoiceSeries;
			
			item.InvInvoiceNumber = varInvInvoiceNumber;
			
			item.InvInvoiceName = varInvInvoiceName;
			
			item.InvInvoiceIssuedDate = varInvInvoiceIssuedDate;
			
			item.InvSubmittedDate = varInvSubmittedDate;
			
			item.InvContractNumber = varInvContractNumber;
			
			item.InvContractDate = varInvContractDate;
			
			item.InvCurrencyCode = varInvCurrencyCode;
			
			item.InvExchangeRate = varInvExchangeRate;
			
			item.InvInvoiceNote = varInvInvoiceNote;
			
			item.InvAdjustmentType = varInvAdjustmentType;
			
			item.InvOriginalInvoiceId = varInvOriginalInvoiceId;
			
			item.InvAdditionalReferenceDes = varInvAdditionalReferenceDes;
			
			item.InvAdditionalReferenceDate = varInvAdditionalReferenceDate;
			
			item.InvBuyerDisplayName = varInvBuyerDisplayName;
			
			item.MaDt = varMaDt;
			
			item.InvBuyerLegalName = varInvBuyerLegalName;
			
			item.InvBuyerTaxCode = varInvBuyerTaxCode;
			
			item.InvBuyerAddressLine = varInvBuyerAddressLine;
			
			item.InvBuyerEmail = varInvBuyerEmail;
			
			item.InvBuyerBankAccount = varInvBuyerBankAccount;
			
			item.InvBuyerBankName = varInvBuyerBankName;
			
			item.InvPaymentMethodName = varInvPaymentMethodName;
			
			item.InvSellerBankAccount = varInvSellerBankAccount;
			
			item.InvSellerBankName = varInvSellerBankName;
			
			item.InvDiscountAmount = varInvDiscountAmount;
			
			item.TrangThai = varTrangThai;
			
			item.UserNew = varUserNew;
			
			item.DateNew = varDateNew;
			
			item.UserEdit = varUserEdit;
			
			item.MaDvcs = varMaDvcs;
			
			item.DatabaseCode = varDatabaseCode;
			
			item.MaCt = varMaCt;
			
			item.SignedDate = varSignedDate;
			
			item.SubmittedDate = varSubmittedDate;
			
			item.MauHd = varMauHd;
			
			item.SoBenhAn = varSoBenhAn;
			
			item.Sovb = varSovb;
			
			item.Ngayvb = varNgayvb;
			
			item.GhiChu = varGhiChu;
			
			item.SoHdDc = varSoHdDc;
			
			item.InvOriginalId = varInvOriginalId;
			
			item.Signature = varSignature;
			
			item.DieuTri = varDieuTri;
			
			item.Ma1 = varMa1;
			
			item.InvItemCode = varInvItemCode;
			
			item.InvItemName = varInvItemName;
			
			item.InvUnitCode = varInvUnitCode;
			
			item.InvUnitName = varInvUnitName;
			
			item.InvUnitPrice = varInvUnitPrice;
			
			item.InvQuantity = varInvQuantity;
			
			item.InvTotalAmountWithoutVat = varInvTotalAmountWithoutVat;
			
			item.InvVatPercentage = varInvVatPercentage;
			
			item.InvVatAmount = varInvVatAmount;
			
			item.InvTotalAmount = varInvTotalAmount;
			
			item.NguoiKy = varNguoiKy;
			
			item.Sobaomat = varSobaomat;
			
			item.TrangThaiHd = varTrangThaiHd;
			
			item.InChuyenDoi = varInChuyenDoi;
			
			item.NgayKy = varNgayKy;
			
			item.NguoiInCdoi = varNguoiInCdoi;
			
			item.NgayInCdoi = varNgayInCdoi;
			
			item.InvDeliveryOrderNumber = varInvDeliveryOrderNumber;
			
			item.InvDeliveryOrderDate = varInvDeliveryOrderDate;
			
			item.InvDeliveryBy = varInvDeliveryBy;
			
			item.InvTransportationMethod = varInvTransportationMethod;
			
			item.InvFromWarehouseName = varInvFromWarehouseName;
			
			item.InvToWarehouseName = varInvToWarehouseName;
			
			item.InvSobangke = varInvSobangke;
			
			item.InvNgaybangke = varInvNgaybangke;
			
			item.KeyApi = varKeyApi;
			
			item.Id = varId;
			
			item.RefID = varRefID;
			
			item.TransactionID = varTransactionID;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(string varInvInvoiceAuthId,string varPaymentId,string varInvInvoiceType,string varInvInvoiceCodeId,string varInvInvoiceSeries,string varInvInvoiceNumber,string varInvInvoiceName,string varInvInvoiceIssuedDate,string varInvSubmittedDate,string varInvContractNumber,string varInvContractDate,string varInvCurrencyCode,string varInvExchangeRate,string varInvInvoiceNote,string varInvAdjustmentType,string varInvOriginalInvoiceId,string varInvAdditionalReferenceDes,string varInvAdditionalReferenceDate,string varInvBuyerDisplayName,string varMaDt,string varInvBuyerLegalName,string varInvBuyerTaxCode,string varInvBuyerAddressLine,string varInvBuyerEmail,string varInvBuyerBankAccount,string varInvBuyerBankName,string varInvPaymentMethodName,string varInvSellerBankAccount,string varInvSellerBankName,string varInvDiscountAmount,string varTrangThai,string varUserNew,string varDateNew,string varUserEdit,string varMaDvcs,string varDatabaseCode,string varMaCt,string varSignedDate,string varSubmittedDate,string varMauHd,string varSoBenhAn,string varSovb,string varNgayvb,string varGhiChu,string varSoHdDc,string varInvOriginalId,string varSignature,string varDieuTri,string varMa1,string varInvItemCode,string varInvItemName,string varInvUnitCode,string varInvUnitName,string varInvUnitPrice,string varInvQuantity,string varInvTotalAmountWithoutVat,string varInvVatPercentage,string varInvVatAmount,string varInvTotalAmount,string varNguoiKy,string varSobaomat,string varTrangThaiHd,string varInChuyenDoi,string varNgayKy,string varNguoiInCdoi,string varNgayInCdoi,string varInvDeliveryOrderNumber,string varInvDeliveryOrderDate,string varInvDeliveryBy,string varInvTransportationMethod,string varInvFromWarehouseName,string varInvToWarehouseName,string varInvSobangke,string varInvNgaybangke,string varKeyApi,string varId,string varRefID,string varTransactionID)
		{
			DataKetqua item = new DataKetqua();
			
				item.InvInvoiceAuthId = varInvInvoiceAuthId;
			
				item.PaymentId = varPaymentId;
			
				item.InvInvoiceType = varInvInvoiceType;
			
				item.InvInvoiceCodeId = varInvInvoiceCodeId;
			
				item.InvInvoiceSeries = varInvInvoiceSeries;
			
				item.InvInvoiceNumber = varInvInvoiceNumber;
			
				item.InvInvoiceName = varInvInvoiceName;
			
				item.InvInvoiceIssuedDate = varInvInvoiceIssuedDate;
			
				item.InvSubmittedDate = varInvSubmittedDate;
			
				item.InvContractNumber = varInvContractNumber;
			
				item.InvContractDate = varInvContractDate;
			
				item.InvCurrencyCode = varInvCurrencyCode;
			
				item.InvExchangeRate = varInvExchangeRate;
			
				item.InvInvoiceNote = varInvInvoiceNote;
			
				item.InvAdjustmentType = varInvAdjustmentType;
			
				item.InvOriginalInvoiceId = varInvOriginalInvoiceId;
			
				item.InvAdditionalReferenceDes = varInvAdditionalReferenceDes;
			
				item.InvAdditionalReferenceDate = varInvAdditionalReferenceDate;
			
				item.InvBuyerDisplayName = varInvBuyerDisplayName;
			
				item.MaDt = varMaDt;
			
				item.InvBuyerLegalName = varInvBuyerLegalName;
			
				item.InvBuyerTaxCode = varInvBuyerTaxCode;
			
				item.InvBuyerAddressLine = varInvBuyerAddressLine;
			
				item.InvBuyerEmail = varInvBuyerEmail;
			
				item.InvBuyerBankAccount = varInvBuyerBankAccount;
			
				item.InvBuyerBankName = varInvBuyerBankName;
			
				item.InvPaymentMethodName = varInvPaymentMethodName;
			
				item.InvSellerBankAccount = varInvSellerBankAccount;
			
				item.InvSellerBankName = varInvSellerBankName;
			
				item.InvDiscountAmount = varInvDiscountAmount;
			
				item.TrangThai = varTrangThai;
			
				item.UserNew = varUserNew;
			
				item.DateNew = varDateNew;
			
				item.UserEdit = varUserEdit;
			
				item.MaDvcs = varMaDvcs;
			
				item.DatabaseCode = varDatabaseCode;
			
				item.MaCt = varMaCt;
			
				item.SignedDate = varSignedDate;
			
				item.SubmittedDate = varSubmittedDate;
			
				item.MauHd = varMauHd;
			
				item.SoBenhAn = varSoBenhAn;
			
				item.Sovb = varSovb;
			
				item.Ngayvb = varNgayvb;
			
				item.GhiChu = varGhiChu;
			
				item.SoHdDc = varSoHdDc;
			
				item.InvOriginalId = varInvOriginalId;
			
				item.Signature = varSignature;
			
				item.DieuTri = varDieuTri;
			
				item.Ma1 = varMa1;
			
				item.InvItemCode = varInvItemCode;
			
				item.InvItemName = varInvItemName;
			
				item.InvUnitCode = varInvUnitCode;
			
				item.InvUnitName = varInvUnitName;
			
				item.InvUnitPrice = varInvUnitPrice;
			
				item.InvQuantity = varInvQuantity;
			
				item.InvTotalAmountWithoutVat = varInvTotalAmountWithoutVat;
			
				item.InvVatPercentage = varInvVatPercentage;
			
				item.InvVatAmount = varInvVatAmount;
			
				item.InvTotalAmount = varInvTotalAmount;
			
				item.NguoiKy = varNguoiKy;
			
				item.Sobaomat = varSobaomat;
			
				item.TrangThaiHd = varTrangThaiHd;
			
				item.InChuyenDoi = varInChuyenDoi;
			
				item.NgayKy = varNgayKy;
			
				item.NguoiInCdoi = varNguoiInCdoi;
			
				item.NgayInCdoi = varNgayInCdoi;
			
				item.InvDeliveryOrderNumber = varInvDeliveryOrderNumber;
			
				item.InvDeliveryOrderDate = varInvDeliveryOrderDate;
			
				item.InvDeliveryBy = varInvDeliveryBy;
			
				item.InvTransportationMethod = varInvTransportationMethod;
			
				item.InvFromWarehouseName = varInvFromWarehouseName;
			
				item.InvToWarehouseName = varInvToWarehouseName;
			
				item.InvSobangke = varInvSobangke;
			
				item.InvNgaybangke = varInvNgaybangke;
			
				item.KeyApi = varKeyApi;
			
				item.Id = varId;
			
				item.RefID = varRefID;
			
				item.TransactionID = varTransactionID;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn InvInvoiceAuthIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn InvInvoiceTypeColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn InvInvoiceCodeIdColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn InvInvoiceSeriesColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn InvInvoiceNumberColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn InvInvoiceNameColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn InvInvoiceIssuedDateColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn InvSubmittedDateColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn InvContractNumberColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn InvContractDateColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn InvCurrencyCodeColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn InvExchangeRateColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn InvInvoiceNoteColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn InvAdjustmentTypeColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn InvOriginalInvoiceIdColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn InvAdditionalReferenceDesColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn InvAdditionalReferenceDateColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn InvBuyerDisplayNameColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDtColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn InvBuyerLegalNameColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn InvBuyerTaxCodeColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn InvBuyerAddressLineColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn InvBuyerEmailColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn InvBuyerBankAccountColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn InvBuyerBankNameColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn InvPaymentMethodNameColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn InvSellerBankAccountColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn InvSellerBankNameColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn InvDiscountAmountColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn UserNewColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn DateNewColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn UserEditColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDvcsColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn DatabaseCodeColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn MaCtColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn SignedDateColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn SubmittedDateColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn MauHdColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        public static TableSchema.TableColumn SoBenhAnColumn
        {
            get { return Schema.Columns[40]; }
        }
        
        
        
        public static TableSchema.TableColumn SovbColumn
        {
            get { return Schema.Columns[41]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayvbColumn
        {
            get { return Schema.Columns[42]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuColumn
        {
            get { return Schema.Columns[43]; }
        }
        
        
        
        public static TableSchema.TableColumn SoHdDcColumn
        {
            get { return Schema.Columns[44]; }
        }
        
        
        
        public static TableSchema.TableColumn InvOriginalIdColumn
        {
            get { return Schema.Columns[45]; }
        }
        
        
        
        public static TableSchema.TableColumn SignatureColumn
        {
            get { return Schema.Columns[46]; }
        }
        
        
        
        public static TableSchema.TableColumn DieuTriColumn
        {
            get { return Schema.Columns[47]; }
        }
        
        
        
        public static TableSchema.TableColumn Ma1Column
        {
            get { return Schema.Columns[48]; }
        }
        
        
        
        public static TableSchema.TableColumn InvItemCodeColumn
        {
            get { return Schema.Columns[49]; }
        }
        
        
        
        public static TableSchema.TableColumn InvItemNameColumn
        {
            get { return Schema.Columns[50]; }
        }
        
        
        
        public static TableSchema.TableColumn InvUnitCodeColumn
        {
            get { return Schema.Columns[51]; }
        }
        
        
        
        public static TableSchema.TableColumn InvUnitNameColumn
        {
            get { return Schema.Columns[52]; }
        }
        
        
        
        public static TableSchema.TableColumn InvUnitPriceColumn
        {
            get { return Schema.Columns[53]; }
        }
        
        
        
        public static TableSchema.TableColumn InvQuantityColumn
        {
            get { return Schema.Columns[54]; }
        }
        
        
        
        public static TableSchema.TableColumn InvTotalAmountWithoutVatColumn
        {
            get { return Schema.Columns[55]; }
        }
        
        
        
        public static TableSchema.TableColumn InvVatPercentageColumn
        {
            get { return Schema.Columns[56]; }
        }
        
        
        
        public static TableSchema.TableColumn InvVatAmountColumn
        {
            get { return Schema.Columns[57]; }
        }
        
        
        
        public static TableSchema.TableColumn InvTotalAmountColumn
        {
            get { return Schema.Columns[58]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiKyColumn
        {
            get { return Schema.Columns[59]; }
        }
        
        
        
        public static TableSchema.TableColumn SobaomatColumn
        {
            get { return Schema.Columns[60]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiHdColumn
        {
            get { return Schema.Columns[61]; }
        }
        
        
        
        public static TableSchema.TableColumn InChuyenDoiColumn
        {
            get { return Schema.Columns[62]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayKyColumn
        {
            get { return Schema.Columns[63]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiInCdoiColumn
        {
            get { return Schema.Columns[64]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayInCdoiColumn
        {
            get { return Schema.Columns[65]; }
        }
        
        
        
        public static TableSchema.TableColumn InvDeliveryOrderNumberColumn
        {
            get { return Schema.Columns[66]; }
        }
        
        
        
        public static TableSchema.TableColumn InvDeliveryOrderDateColumn
        {
            get { return Schema.Columns[67]; }
        }
        
        
        
        public static TableSchema.TableColumn InvDeliveryByColumn
        {
            get { return Schema.Columns[68]; }
        }
        
        
        
        public static TableSchema.TableColumn InvTransportationMethodColumn
        {
            get { return Schema.Columns[69]; }
        }
        
        
        
        public static TableSchema.TableColumn InvFromWarehouseNameColumn
        {
            get { return Schema.Columns[70]; }
        }
        
        
        
        public static TableSchema.TableColumn InvToWarehouseNameColumn
        {
            get { return Schema.Columns[71]; }
        }
        
        
        
        public static TableSchema.TableColumn InvSobangkeColumn
        {
            get { return Schema.Columns[72]; }
        }
        
        
        
        public static TableSchema.TableColumn InvNgaybangkeColumn
        {
            get { return Schema.Columns[73]; }
        }
        
        
        
        public static TableSchema.TableColumn KeyApiColumn
        {
            get { return Schema.Columns[74]; }
        }
        
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[75]; }
        }
        
        
        
        public static TableSchema.TableColumn RefIDColumn
        {
            get { return Schema.Columns[76]; }
        }
        
        
        
        public static TableSchema.TableColumn TransactionIDColumn
        {
            get { return Schema.Columns[77]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string InvInvoiceAuthId = @"inv_InvoiceAuth_id";
			 public static string PaymentId = @"payment_id";
			 public static string InvInvoiceType = @"inv_invoiceType";
			 public static string InvInvoiceCodeId = @"inv_InvoiceCode_id";
			 public static string InvInvoiceSeries = @"inv_invoiceSeries";
			 public static string InvInvoiceNumber = @"inv_invoiceNumber";
			 public static string InvInvoiceName = @"inv_invoiceName";
			 public static string InvInvoiceIssuedDate = @"inv_invoiceIssuedDate";
			 public static string InvSubmittedDate = @"inv_submittedDate";
			 public static string InvContractNumber = @"inv_contractNumber";
			 public static string InvContractDate = @"inv_contractDate";
			 public static string InvCurrencyCode = @"inv_currencyCode";
			 public static string InvExchangeRate = @"inv_exchangeRate";
			 public static string InvInvoiceNote = @"inv_invoiceNote";
			 public static string InvAdjustmentType = @"inv_adjustmentType";
			 public static string InvOriginalInvoiceId = @"inv_originalInvoiceId";
			 public static string InvAdditionalReferenceDes = @"inv_additionalReferenceDes";
			 public static string InvAdditionalReferenceDate = @"inv_additionalReferenceDate";
			 public static string InvBuyerDisplayName = @"inv_buyerDisplayName";
			 public static string MaDt = @"ma_dt";
			 public static string InvBuyerLegalName = @"inv_buyerLegalName";
			 public static string InvBuyerTaxCode = @"inv_buyerTaxCode";
			 public static string InvBuyerAddressLine = @"inv_buyerAddressLine";
			 public static string InvBuyerEmail = @"inv_buyerEmail";
			 public static string InvBuyerBankAccount = @"inv_buyerBankAccount";
			 public static string InvBuyerBankName = @"inv_buyerBankName";
			 public static string InvPaymentMethodName = @"inv_paymentMethodName";
			 public static string InvSellerBankAccount = @"inv_sellerBankAccount";
			 public static string InvSellerBankName = @"inv_sellerBankName";
			 public static string InvDiscountAmount = @"inv_discountAmount";
			 public static string TrangThai = @"trang_thai";
			 public static string UserNew = @"user_new";
			 public static string DateNew = @"date_new";
			 public static string UserEdit = @"user_edit";
			 public static string MaDvcs = @"ma_dvcs";
			 public static string DatabaseCode = @"database_code";
			 public static string MaCt = @"ma_ct";
			 public static string SignedDate = @"signedDate";
			 public static string SubmittedDate = @"submittedDate";
			 public static string MauHd = @"mau_hd";
			 public static string SoBenhAn = @"so_benh_an";
			 public static string Sovb = @"sovb";
			 public static string Ngayvb = @"ngayvb";
			 public static string GhiChu = @"ghi_chu";
			 public static string SoHdDc = @"so_hd_dc";
			 public static string InvOriginalId = @"inv_originalId";
			 public static string Signature = @"signature";
			 public static string DieuTri = @"dieu_tri";
			 public static string Ma1 = @"ma1";
			 public static string InvItemCode = @"inv_itemCode";
			 public static string InvItemName = @"inv_itemName";
			 public static string InvUnitCode = @"inv_unitCode";
			 public static string InvUnitName = @"inv_unitName";
			 public static string InvUnitPrice = @"inv_unitPrice";
			 public static string InvQuantity = @"inv_quantity";
			 public static string InvTotalAmountWithoutVat = @"inv_TotalAmountWithoutVat";
			 public static string InvVatPercentage = @"inv_vatPercentage";
			 public static string InvVatAmount = @"inv_vatAmount";
			 public static string InvTotalAmount = @"inv_TotalAmount";
			 public static string NguoiKy = @"nguoi_ky";
			 public static string Sobaomat = @"sobaomat";
			 public static string TrangThaiHd = @"trang_thai_hd";
			 public static string InChuyenDoi = @"in_chuyen_doi";
			 public static string NgayKy = @"ngay_ky";
			 public static string NguoiInCdoi = @"nguoi_in_cdoi";
			 public static string NgayInCdoi = @"ngay_in_cdoi";
			 public static string InvDeliveryOrderNumber = @"inv_deliveryOrderNumber";
			 public static string InvDeliveryOrderDate = @"inv_deliveryOrderDate";
			 public static string InvDeliveryBy = @"inv_deliveryBy";
			 public static string InvTransportationMethod = @"inv_transportationMethod";
			 public static string InvFromWarehouseName = @"inv_fromWarehouseName";
			 public static string InvToWarehouseName = @"inv_toWarehouseName";
			 public static string InvSobangke = @"inv_sobangke";
			 public static string InvNgaybangke = @"inv_ngaybangke";
			 public static string KeyApi = @"key_api";
			 public static string Id = @"id";
			 public static string RefID = @"RefID";
			 public static string TransactionID = @"transactionID";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
