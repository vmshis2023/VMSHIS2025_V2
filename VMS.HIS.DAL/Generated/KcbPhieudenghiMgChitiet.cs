using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the KcbPhieudenghiMgChitiet class.
	/// </summary>
    [Serializable]
	public partial class KcbPhieudenghiMgChitietCollection : ActiveList<KcbPhieudenghiMgChitiet, KcbPhieudenghiMgChitietCollection>
	{	   
		public KcbPhieudenghiMgChitietCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KcbPhieudenghiMgChitietCollection</returns>
		public KcbPhieudenghiMgChitietCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KcbPhieudenghiMgChitiet o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the kcb_phieudenghi_mg_chitiet table.
	/// </summary>
	[Serializable]
	public partial class KcbPhieudenghiMgChitiet : ActiveRecord<KcbPhieudenghiMgChitiet>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KcbPhieudenghiMgChitiet()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KcbPhieudenghiMgChitiet(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KcbPhieudenghiMgChitiet(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KcbPhieudenghiMgChitiet(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("kcb_phieudenghi_mg_chitiet", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdDenghiChitiet = new TableSchema.TableColumn(schema);
				colvarIdDenghiChitiet.ColumnName = "id_denghi_chitiet";
				colvarIdDenghiChitiet.DataType = DbType.Int64;
				colvarIdDenghiChitiet.MaxLength = 0;
				colvarIdDenghiChitiet.AutoIncrement = true;
				colvarIdDenghiChitiet.IsNullable = false;
				colvarIdDenghiChitiet.IsPrimaryKey = true;
				colvarIdDenghiChitiet.IsForeignKey = false;
				colvarIdDenghiChitiet.IsReadOnly = false;
				colvarIdDenghiChitiet.DefaultSetting = @"";
				colvarIdDenghiChitiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDenghiChitiet);
				
				TableSchema.TableColumn colvarIdDenghi = new TableSchema.TableColumn(schema);
				colvarIdDenghi.ColumnName = "id_denghi";
				colvarIdDenghi.DataType = DbType.Int64;
				colvarIdDenghi.MaxLength = 0;
				colvarIdDenghi.AutoIncrement = false;
				colvarIdDenghi.IsNullable = false;
				colvarIdDenghi.IsPrimaryKey = false;
				colvarIdDenghi.IsForeignKey = false;
				colvarIdDenghi.IsReadOnly = false;
				colvarIdDenghi.DefaultSetting = @"";
				colvarIdDenghi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDenghi);
				
				TableSchema.TableColumn colvarIdDichvu = new TableSchema.TableColumn(schema);
				colvarIdDichvu.ColumnName = "id_dichvu";
				colvarIdDichvu.DataType = DbType.Int32;
				colvarIdDichvu.MaxLength = 0;
				colvarIdDichvu.AutoIncrement = false;
				colvarIdDichvu.IsNullable = false;
				colvarIdDichvu.IsPrimaryKey = false;
				colvarIdDichvu.IsForeignKey = false;
				colvarIdDichvu.IsReadOnly = false;
				colvarIdDichvu.DefaultSetting = @"";
				colvarIdDichvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDichvu);
				
				TableSchema.TableColumn colvarIdDichvuChitiet = new TableSchema.TableColumn(schema);
				colvarIdDichvuChitiet.ColumnName = "id_dichvu_chitiet";
				colvarIdDichvuChitiet.DataType = DbType.Int32;
				colvarIdDichvuChitiet.MaxLength = 0;
				colvarIdDichvuChitiet.AutoIncrement = false;
				colvarIdDichvuChitiet.IsNullable = false;
				colvarIdDichvuChitiet.IsPrimaryKey = false;
				colvarIdDichvuChitiet.IsForeignKey = false;
				colvarIdDichvuChitiet.IsReadOnly = false;
				colvarIdDichvuChitiet.DefaultSetting = @"";
				colvarIdDichvuChitiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDichvuChitiet);
				
				TableSchema.TableColumn colvarTenDichvu = new TableSchema.TableColumn(schema);
				colvarTenDichvu.ColumnName = "ten_dichvu";
				colvarTenDichvu.DataType = DbType.String;
				colvarTenDichvu.MaxLength = 255;
				colvarTenDichvu.AutoIncrement = false;
				colvarTenDichvu.IsNullable = false;
				colvarTenDichvu.IsPrimaryKey = false;
				colvarTenDichvu.IsForeignKey = false;
				colvarTenDichvu.IsReadOnly = false;
				colvarTenDichvu.DefaultSetting = @"";
				colvarTenDichvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenDichvu);
				
				TableSchema.TableColumn colvarLoaiDvu = new TableSchema.TableColumn(schema);
				colvarLoaiDvu.ColumnName = "loai_dvu";
				colvarLoaiDvu.DataType = DbType.Byte;
				colvarLoaiDvu.MaxLength = 0;
				colvarLoaiDvu.AutoIncrement = false;
				colvarLoaiDvu.IsNullable = false;
				colvarLoaiDvu.IsPrimaryKey = false;
				colvarLoaiDvu.IsForeignKey = false;
				colvarLoaiDvu.IsReadOnly = false;
				colvarLoaiDvu.DefaultSetting = @"";
				colvarLoaiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiDvu);
				
				TableSchema.TableColumn colvarDonGia = new TableSchema.TableColumn(schema);
				colvarDonGia.ColumnName = "don_gia";
				colvarDonGia.DataType = DbType.Decimal;
				colvarDonGia.MaxLength = 0;
				colvarDonGia.AutoIncrement = false;
				colvarDonGia.IsNullable = false;
				colvarDonGia.IsPrimaryKey = false;
				colvarDonGia.IsForeignKey = false;
				colvarDonGia.IsReadOnly = false;
				colvarDonGia.DefaultSetting = @"";
				colvarDonGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGia);
				
				TableSchema.TableColumn colvarTyleMg = new TableSchema.TableColumn(schema);
				colvarTyleMg.ColumnName = "tyle_mg";
				colvarTyleMg.DataType = DbType.Byte;
				colvarTyleMg.MaxLength = 0;
				colvarTyleMg.AutoIncrement = false;
				colvarTyleMg.IsNullable = false;
				colvarTyleMg.IsPrimaryKey = false;
				colvarTyleMg.IsForeignKey = false;
				colvarTyleMg.IsReadOnly = false;
				colvarTyleMg.DefaultSetting = @"";
				colvarTyleMg.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTyleMg);
				
				TableSchema.TableColumn colvarSoLuong = new TableSchema.TableColumn(schema);
				colvarSoLuong.ColumnName = "so_luong";
				colvarSoLuong.DataType = DbType.Int32;
				colvarSoLuong.MaxLength = 0;
				colvarSoLuong.AutoIncrement = false;
				colvarSoLuong.IsNullable = false;
				colvarSoLuong.IsPrimaryKey = false;
				colvarSoLuong.IsForeignKey = false;
				colvarSoLuong.IsReadOnly = false;
				colvarSoLuong.DefaultSetting = @"";
				colvarSoLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuong);
				
				TableSchema.TableColumn colvarThanhTien = new TableSchema.TableColumn(schema);
				colvarThanhTien.ColumnName = "thanh_tien";
				colvarThanhTien.DataType = DbType.Decimal;
				colvarThanhTien.MaxLength = 0;
				colvarThanhTien.AutoIncrement = false;
				colvarThanhTien.IsNullable = false;
				colvarThanhTien.IsPrimaryKey = false;
				colvarThanhTien.IsForeignKey = false;
				colvarThanhTien.IsReadOnly = false;
				colvarThanhTien.DefaultSetting = @"";
				colvarThanhTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThanhTien);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("kcb_phieudenghi_mg_chitiet",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdDenghiChitiet")]
		[Bindable(true)]
		public long IdDenghiChitiet 
		{
			get { return GetColumnValue<long>(Columns.IdDenghiChitiet); }
			set { SetColumnValue(Columns.IdDenghiChitiet, value); }
		}
		  
		[XmlAttribute("IdDenghi")]
		[Bindable(true)]
		public long IdDenghi 
		{
			get { return GetColumnValue<long>(Columns.IdDenghi); }
			set { SetColumnValue(Columns.IdDenghi, value); }
		}
		  
		[XmlAttribute("IdDichvu")]
		[Bindable(true)]
		public int IdDichvu 
		{
			get { return GetColumnValue<int>(Columns.IdDichvu); }
			set { SetColumnValue(Columns.IdDichvu, value); }
		}
		  
		[XmlAttribute("IdDichvuChitiet")]
		[Bindable(true)]
		public int IdDichvuChitiet 
		{
			get { return GetColumnValue<int>(Columns.IdDichvuChitiet); }
			set { SetColumnValue(Columns.IdDichvuChitiet, value); }
		}
		  
		[XmlAttribute("TenDichvu")]
		[Bindable(true)]
		public string TenDichvu 
		{
			get { return GetColumnValue<string>(Columns.TenDichvu); }
			set { SetColumnValue(Columns.TenDichvu, value); }
		}
		  
		[XmlAttribute("LoaiDvu")]
		[Bindable(true)]
		public byte LoaiDvu 
		{
			get { return GetColumnValue<byte>(Columns.LoaiDvu); }
			set { SetColumnValue(Columns.LoaiDvu, value); }
		}
		  
		[XmlAttribute("DonGia")]
		[Bindable(true)]
		public decimal DonGia 
		{
			get { return GetColumnValue<decimal>(Columns.DonGia); }
			set { SetColumnValue(Columns.DonGia, value); }
		}
		  
		[XmlAttribute("TyleMg")]
		[Bindable(true)]
		public byte TyleMg 
		{
			get { return GetColumnValue<byte>(Columns.TyleMg); }
			set { SetColumnValue(Columns.TyleMg, value); }
		}
		  
		[XmlAttribute("SoLuong")]
		[Bindable(true)]
		public int SoLuong 
		{
			get { return GetColumnValue<int>(Columns.SoLuong); }
			set { SetColumnValue(Columns.SoLuong, value); }
		}
		  
		[XmlAttribute("ThanhTien")]
		[Bindable(true)]
		public decimal ThanhTien 
		{
			get { return GetColumnValue<decimal>(Columns.ThanhTien); }
			set { SetColumnValue(Columns.ThanhTien, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long varIdDenghi,int varIdDichvu,int varIdDichvuChitiet,string varTenDichvu,byte varLoaiDvu,decimal varDonGia,byte varTyleMg,int varSoLuong,decimal varThanhTien)
		{
			KcbPhieudenghiMgChitiet item = new KcbPhieudenghiMgChitiet();
			
			item.IdDenghi = varIdDenghi;
			
			item.IdDichvu = varIdDichvu;
			
			item.IdDichvuChitiet = varIdDichvuChitiet;
			
			item.TenDichvu = varTenDichvu;
			
			item.LoaiDvu = varLoaiDvu;
			
			item.DonGia = varDonGia;
			
			item.TyleMg = varTyleMg;
			
			item.SoLuong = varSoLuong;
			
			item.ThanhTien = varThanhTien;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varIdDenghiChitiet,long varIdDenghi,int varIdDichvu,int varIdDichvuChitiet,string varTenDichvu,byte varLoaiDvu,decimal varDonGia,byte varTyleMg,int varSoLuong,decimal varThanhTien)
		{
			KcbPhieudenghiMgChitiet item = new KcbPhieudenghiMgChitiet();
			
				item.IdDenghiChitiet = varIdDenghiChitiet;
			
				item.IdDenghi = varIdDenghi;
			
				item.IdDichvu = varIdDichvu;
			
				item.IdDichvuChitiet = varIdDichvuChitiet;
			
				item.TenDichvu = varTenDichvu;
			
				item.LoaiDvu = varLoaiDvu;
			
				item.DonGia = varDonGia;
			
				item.TyleMg = varTyleMg;
			
				item.SoLuong = varSoLuong;
			
				item.ThanhTien = varThanhTien;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdDenghiChitietColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDenghiColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDichvuColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDichvuChitietColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn TenDichvuColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiDvuColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn TyleMgColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn ThanhTienColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdDenghiChitiet = @"id_denghi_chitiet";
			 public static string IdDenghi = @"id_denghi";
			 public static string IdDichvu = @"id_dichvu";
			 public static string IdDichvuChitiet = @"id_dichvu_chitiet";
			 public static string TenDichvu = @"ten_dichvu";
			 public static string LoaiDvu = @"loai_dvu";
			 public static string DonGia = @"don_gia";
			 public static string TyleMg = @"tyle_mg";
			 public static string SoLuong = @"so_luong";
			 public static string ThanhTien = @"thanh_tien";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
