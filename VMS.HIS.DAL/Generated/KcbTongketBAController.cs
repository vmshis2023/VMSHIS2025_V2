using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
    /// <summary>
    /// Controller class for kcb_tongketBA
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class KcbTongketBAController
    {
        // Preload our schema..
        KcbTongketBA thisSchemaLoad = new KcbTongketBA();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public KcbTongketBACollection FetchAll()
        {
            KcbTongketBACollection coll = new KcbTongketBACollection();
            Query qry = new Query(KcbTongketBA.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public KcbTongketBACollection FetchByID(object Id)
        {
            KcbTongketBACollection coll = new KcbTongketBACollection().Where("ID", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public KcbTongketBACollection FetchByQuery(Query qry)
        {
            KcbTongketBACollection coll = new KcbTongketBACollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (KcbTongketBA.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (KcbTongketBA.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long IdBenhnhan,string MaLuotkham,string Ldvv,string ChanDoan,short IdKhoadieutri,DateTime? TuNgay,DateTime? DenNgay,DateTime? NgayRv,int? SoNgayDtri,string HuongDtri,string TTrangHienTai,string LamSang,string CanLamSang,DateTime? NgayTao,string NguoiTao,DateTime NgaySua,string NguoiSua,int? TrangThai,DateTime? NgaySinhcon,DateTime? NgayChetcon,int? TtRavien,string GhiChu,string PpDieutri,DateTime? NgayCt)
	    {
		    KcbTongketBA item = new KcbTongketBA();
		    
            item.IdBenhnhan = IdBenhnhan;
            
            item.MaLuotkham = MaLuotkham;
            
            item.Ldvv = Ldvv;
            
            item.ChanDoan = ChanDoan;
            
            item.IdKhoadieutri = IdKhoadieutri;
            
            item.TuNgay = TuNgay;
            
            item.DenNgay = DenNgay;
            
            item.NgayRv = NgayRv;
            
            item.SoNgayDtri = SoNgayDtri;
            
            item.HuongDtri = HuongDtri;
            
            item.TTrangHienTai = TTrangHienTai;
            
            item.LamSang = LamSang;
            
            item.CanLamSang = CanLamSang;
            
            item.NgayTao = NgayTao;
            
            item.NguoiTao = NguoiTao;
            
            item.NgaySua = NgaySua;
            
            item.NguoiSua = NguoiSua;
            
            item.TrangThai = TrangThai;
            
            item.NgaySinhcon = NgaySinhcon;
            
            item.NgayChetcon = NgayChetcon;
            
            item.TtRavien = TtRavien;
            
            item.GhiChu = GhiChu;
            
            item.PpDieutri = PpDieutri;
            
            item.NgayCt = NgayCt;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long Id,long IdBenhnhan,string MaLuotkham,string Ldvv,string ChanDoan,short IdKhoadieutri,DateTime? TuNgay,DateTime? DenNgay,DateTime? NgayRv,int? SoNgayDtri,string HuongDtri,string TTrangHienTai,string LamSang,string CanLamSang,DateTime? NgayTao,string NguoiTao,DateTime NgaySua,string NguoiSua,int? TrangThai,DateTime? NgaySinhcon,DateTime? NgayChetcon,int? TtRavien,string GhiChu,string PpDieutri,DateTime? NgayCt)
	    {
		    KcbTongketBA item = new KcbTongketBA();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.IdBenhnhan = IdBenhnhan;
				
			item.MaLuotkham = MaLuotkham;
				
			item.Ldvv = Ldvv;
				
			item.ChanDoan = ChanDoan;
				
			item.IdKhoadieutri = IdKhoadieutri;
				
			item.TuNgay = TuNgay;
				
			item.DenNgay = DenNgay;
				
			item.NgayRv = NgayRv;
				
			item.SoNgayDtri = SoNgayDtri;
				
			item.HuongDtri = HuongDtri;
				
			item.TTrangHienTai = TTrangHienTai;
				
			item.LamSang = LamSang;
				
			item.CanLamSang = CanLamSang;
				
			item.NgayTao = NgayTao;
				
			item.NguoiTao = NguoiTao;
				
			item.NgaySua = NgaySua;
				
			item.NguoiSua = NguoiSua;
				
			item.TrangThai = TrangThai;
				
			item.NgaySinhcon = NgaySinhcon;
				
			item.NgayChetcon = NgayChetcon;
				
			item.TtRavien = TtRavien;
				
			item.GhiChu = GhiChu;
				
			item.PpDieutri = PpDieutri;
				
			item.NgayCt = NgayCt;
				
	        item.Save(UserName);
	    }
    }
}
