using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the DmucDonthuocmauChitiet class.
	/// </summary>
    [Serializable]
	public partial class DmucDonthuocmauChitietCollection : ActiveList<DmucDonthuocmauChitiet, DmucDonthuocmauChitietCollection>
	{	   
		public DmucDonthuocmauChitietCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DmucDonthuocmauChitietCollection</returns>
		public DmucDonthuocmauChitietCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DmucDonthuocmauChitiet o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the dmuc_donthuocmau_chitiet table.
	/// </summary>
	[Serializable]
	public partial class DmucDonthuocmauChitiet : ActiveRecord<DmucDonthuocmauChitiet>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DmucDonthuocmauChitiet()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DmucDonthuocmauChitiet(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DmucDonthuocmauChitiet(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DmucDonthuocmauChitiet(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("dmuc_donthuocmau_chitiet", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdChitiet = new TableSchema.TableColumn(schema);
				colvarIdChitiet.ColumnName = "id_chitiet";
				colvarIdChitiet.DataType = DbType.Int32;
				colvarIdChitiet.MaxLength = 0;
				colvarIdChitiet.AutoIncrement = true;
				colvarIdChitiet.IsNullable = false;
				colvarIdChitiet.IsPrimaryKey = true;
				colvarIdChitiet.IsForeignKey = false;
				colvarIdChitiet.IsReadOnly = false;
				colvarIdChitiet.DefaultSetting = @"";
				colvarIdChitiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdChitiet);
				
				TableSchema.TableColumn colvarIdNhom = new TableSchema.TableColumn(schema);
				colvarIdNhom.ColumnName = "id_nhom";
				colvarIdNhom.DataType = DbType.Int32;
				colvarIdNhom.MaxLength = 0;
				colvarIdNhom.AutoIncrement = false;
				colvarIdNhom.IsNullable = false;
				colvarIdNhom.IsPrimaryKey = false;
				colvarIdNhom.IsForeignKey = false;
				colvarIdNhom.IsReadOnly = false;
				colvarIdNhom.DefaultSetting = @"";
				colvarIdNhom.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhom);
				
				TableSchema.TableColumn colvarIdLoaithuoc = new TableSchema.TableColumn(schema);
				colvarIdLoaithuoc.ColumnName = "id_loaithuoc";
				colvarIdLoaithuoc.DataType = DbType.Int32;
				colvarIdLoaithuoc.MaxLength = 0;
				colvarIdLoaithuoc.AutoIncrement = false;
				colvarIdLoaithuoc.IsNullable = false;
				colvarIdLoaithuoc.IsPrimaryKey = false;
				colvarIdLoaithuoc.IsForeignKey = false;
				colvarIdLoaithuoc.IsReadOnly = false;
				colvarIdLoaithuoc.DefaultSetting = @"";
				colvarIdLoaithuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdLoaithuoc);
				
				TableSchema.TableColumn colvarIdThuoc = new TableSchema.TableColumn(schema);
				colvarIdThuoc.ColumnName = "id_thuoc";
				colvarIdThuoc.DataType = DbType.Int32;
				colvarIdThuoc.MaxLength = 0;
				colvarIdThuoc.AutoIncrement = false;
				colvarIdThuoc.IsNullable = false;
				colvarIdThuoc.IsPrimaryKey = false;
				colvarIdThuoc.IsForeignKey = false;
				colvarIdThuoc.IsReadOnly = false;
				colvarIdThuoc.DefaultSetting = @"";
				colvarIdThuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdThuoc);
				
				TableSchema.TableColumn colvarSoLuong = new TableSchema.TableColumn(schema);
				colvarSoLuong.ColumnName = "so_luong";
				colvarSoLuong.DataType = DbType.Decimal;
				colvarSoLuong.MaxLength = 0;
				colvarSoLuong.AutoIncrement = false;
				colvarSoLuong.IsNullable = true;
				colvarSoLuong.IsPrimaryKey = false;
				colvarSoLuong.IsForeignKey = false;
				colvarSoLuong.IsReadOnly = false;
				colvarSoLuong.DefaultSetting = @"";
				colvarSoLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuong);
				
				TableSchema.TableColumn colvarSang = new TableSchema.TableColumn(schema);
				colvarSang.ColumnName = "sang";
				colvarSang.DataType = DbType.Decimal;
				colvarSang.MaxLength = 0;
				colvarSang.AutoIncrement = false;
				colvarSang.IsNullable = true;
				colvarSang.IsPrimaryKey = false;
				colvarSang.IsForeignKey = false;
				colvarSang.IsReadOnly = false;
				colvarSang.DefaultSetting = @"";
				colvarSang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSang);
				
				TableSchema.TableColumn colvarTrua = new TableSchema.TableColumn(schema);
				colvarTrua.ColumnName = "trua";
				colvarTrua.DataType = DbType.Decimal;
				colvarTrua.MaxLength = 0;
				colvarTrua.AutoIncrement = false;
				colvarTrua.IsNullable = true;
				colvarTrua.IsPrimaryKey = false;
				colvarTrua.IsForeignKey = false;
				colvarTrua.IsReadOnly = false;
				colvarTrua.DefaultSetting = @"";
				colvarTrua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrua);
				
				TableSchema.TableColumn colvarChieu = new TableSchema.TableColumn(schema);
				colvarChieu.ColumnName = "chieu";
				colvarChieu.DataType = DbType.Decimal;
				colvarChieu.MaxLength = 0;
				colvarChieu.AutoIncrement = false;
				colvarChieu.IsNullable = true;
				colvarChieu.IsPrimaryKey = false;
				colvarChieu.IsForeignKey = false;
				colvarChieu.IsReadOnly = false;
				colvarChieu.DefaultSetting = @"";
				colvarChieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChieu);
				
				TableSchema.TableColumn colvarToi = new TableSchema.TableColumn(schema);
				colvarToi.ColumnName = "toi";
				colvarToi.DataType = DbType.Decimal;
				colvarToi.MaxLength = 0;
				colvarToi.AutoIncrement = false;
				colvarToi.IsNullable = true;
				colvarToi.IsPrimaryKey = false;
				colvarToi.IsForeignKey = false;
				colvarToi.IsReadOnly = false;
				colvarToi.DefaultSetting = @"";
				colvarToi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarToi);
				
				TableSchema.TableColumn colvarSttHienthi = new TableSchema.TableColumn(schema);
				colvarSttHienthi.ColumnName = "stt_hienthi";
				colvarSttHienthi.DataType = DbType.Int16;
				colvarSttHienthi.MaxLength = 0;
				colvarSttHienthi.AutoIncrement = false;
				colvarSttHienthi.IsNullable = true;
				colvarSttHienthi.IsPrimaryKey = false;
				colvarSttHienthi.IsForeignKey = false;
				colvarSttHienthi.IsReadOnly = false;
				colvarSttHienthi.DefaultSetting = @"";
				colvarSttHienthi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSttHienthi);
				
				TableSchema.TableColumn colvarDonviTinh = new TableSchema.TableColumn(schema);
				colvarDonviTinh.ColumnName = "donvi_tinh";
				colvarDonviTinh.DataType = DbType.String;
				colvarDonviTinh.MaxLength = 20;
				colvarDonviTinh.AutoIncrement = false;
				colvarDonviTinh.IsNullable = true;
				colvarDonviTinh.IsPrimaryKey = false;
				colvarDonviTinh.IsForeignKey = false;
				colvarDonviTinh.IsReadOnly = false;
				colvarDonviTinh.DefaultSetting = @"";
				colvarDonviTinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonviTinh);
				
				TableSchema.TableColumn colvarSolanDung = new TableSchema.TableColumn(schema);
				colvarSolanDung.ColumnName = "solan_dung";
				colvarSolanDung.DataType = DbType.String;
				colvarSolanDung.MaxLength = 20;
				colvarSolanDung.AutoIncrement = false;
				colvarSolanDung.IsNullable = true;
				colvarSolanDung.IsPrimaryKey = false;
				colvarSolanDung.IsForeignKey = false;
				colvarSolanDung.IsReadOnly = false;
				colvarSolanDung.DefaultSetting = @"";
				colvarSolanDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSolanDung);
				
				TableSchema.TableColumn colvarSoluongDung = new TableSchema.TableColumn(schema);
				colvarSoluongDung.ColumnName = "soluong_dung";
				colvarSoluongDung.DataType = DbType.String;
				colvarSoluongDung.MaxLength = 20;
				colvarSoluongDung.AutoIncrement = false;
				colvarSoluongDung.IsNullable = true;
				colvarSoluongDung.IsPrimaryKey = false;
				colvarSoluongDung.IsForeignKey = false;
				colvarSoluongDung.IsReadOnly = false;
				colvarSoluongDung.DefaultSetting = @"";
				colvarSoluongDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoluongDung);
				
				TableSchema.TableColumn colvarCachDung = new TableSchema.TableColumn(schema);
				colvarCachDung.ColumnName = "cach_dung";
				colvarCachDung.DataType = DbType.String;
				colvarCachDung.MaxLength = 100;
				colvarCachDung.AutoIncrement = false;
				colvarCachDung.IsNullable = true;
				colvarCachDung.IsPrimaryKey = false;
				colvarCachDung.IsForeignKey = false;
				colvarCachDung.IsReadOnly = false;
				colvarCachDung.DefaultSetting = @"";
				colvarCachDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCachDung);
				
				TableSchema.TableColumn colvarChidanThem = new TableSchema.TableColumn(schema);
				colvarChidanThem.ColumnName = "chidan_them";
				colvarChidanThem.DataType = DbType.String;
				colvarChidanThem.MaxLength = 255;
				colvarChidanThem.AutoIncrement = false;
				colvarChidanThem.IsNullable = true;
				colvarChidanThem.IsPrimaryKey = false;
				colvarChidanThem.IsForeignKey = false;
				colvarChidanThem.IsReadOnly = false;
				colvarChidanThem.DefaultSetting = @"";
				colvarChidanThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChidanThem);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 30;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("dmuc_donthuocmau_chitiet",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdChitiet")]
		[Bindable(true)]
		public int IdChitiet 
		{
			get { return GetColumnValue<int>(Columns.IdChitiet); }
			set { SetColumnValue(Columns.IdChitiet, value); }
		}
		  
		[XmlAttribute("IdNhom")]
		[Bindable(true)]
		public int IdNhom 
		{
			get { return GetColumnValue<int>(Columns.IdNhom); }
			set { SetColumnValue(Columns.IdNhom, value); }
		}
		  
		[XmlAttribute("IdLoaithuoc")]
		[Bindable(true)]
		public int IdLoaithuoc 
		{
			get { return GetColumnValue<int>(Columns.IdLoaithuoc); }
			set { SetColumnValue(Columns.IdLoaithuoc, value); }
		}
		  
		[XmlAttribute("IdThuoc")]
		[Bindable(true)]
		public int IdThuoc 
		{
			get { return GetColumnValue<int>(Columns.IdThuoc); }
			set { SetColumnValue(Columns.IdThuoc, value); }
		}
		  
		[XmlAttribute("SoLuong")]
		[Bindable(true)]
		public decimal? SoLuong 
		{
			get { return GetColumnValue<decimal?>(Columns.SoLuong); }
			set { SetColumnValue(Columns.SoLuong, value); }
		}
		  
		[XmlAttribute("Sang")]
		[Bindable(true)]
		public decimal? Sang 
		{
			get { return GetColumnValue<decimal?>(Columns.Sang); }
			set { SetColumnValue(Columns.Sang, value); }
		}
		  
		[XmlAttribute("Trua")]
		[Bindable(true)]
		public decimal? Trua 
		{
			get { return GetColumnValue<decimal?>(Columns.Trua); }
			set { SetColumnValue(Columns.Trua, value); }
		}
		  
		[XmlAttribute("Chieu")]
		[Bindable(true)]
		public decimal? Chieu 
		{
			get { return GetColumnValue<decimal?>(Columns.Chieu); }
			set { SetColumnValue(Columns.Chieu, value); }
		}
		  
		[XmlAttribute("Toi")]
		[Bindable(true)]
		public decimal? Toi 
		{
			get { return GetColumnValue<decimal?>(Columns.Toi); }
			set { SetColumnValue(Columns.Toi, value); }
		}
		  
		[XmlAttribute("SttHienthi")]
		[Bindable(true)]
		public short? SttHienthi 
		{
			get { return GetColumnValue<short?>(Columns.SttHienthi); }
			set { SetColumnValue(Columns.SttHienthi, value); }
		}
		  
		[XmlAttribute("DonviTinh")]
		[Bindable(true)]
		public string DonviTinh 
		{
			get { return GetColumnValue<string>(Columns.DonviTinh); }
			set { SetColumnValue(Columns.DonviTinh, value); }
		}
		  
		[XmlAttribute("SolanDung")]
		[Bindable(true)]
		public string SolanDung 
		{
			get { return GetColumnValue<string>(Columns.SolanDung); }
			set { SetColumnValue(Columns.SolanDung, value); }
		}
		  
		[XmlAttribute("SoluongDung")]
		[Bindable(true)]
		public string SoluongDung 
		{
			get { return GetColumnValue<string>(Columns.SoluongDung); }
			set { SetColumnValue(Columns.SoluongDung, value); }
		}
		  
		[XmlAttribute("CachDung")]
		[Bindable(true)]
		public string CachDung 
		{
			get { return GetColumnValue<string>(Columns.CachDung); }
			set { SetColumnValue(Columns.CachDung, value); }
		}
		  
		[XmlAttribute("ChidanThem")]
		[Bindable(true)]
		public string ChidanThem 
		{
			get { return GetColumnValue<string>(Columns.ChidanThem); }
			set { SetColumnValue(Columns.ChidanThem, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varIdNhom,int varIdLoaithuoc,int varIdThuoc,decimal? varSoLuong,decimal? varSang,decimal? varTrua,decimal? varChieu,decimal? varToi,short? varSttHienthi,string varDonviTinh,string varSolanDung,string varSoluongDung,string varCachDung,string varChidanThem,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua)
		{
			DmucDonthuocmauChitiet item = new DmucDonthuocmauChitiet();
			
			item.IdNhom = varIdNhom;
			
			item.IdLoaithuoc = varIdLoaithuoc;
			
			item.IdThuoc = varIdThuoc;
			
			item.SoLuong = varSoLuong;
			
			item.Sang = varSang;
			
			item.Trua = varTrua;
			
			item.Chieu = varChieu;
			
			item.Toi = varToi;
			
			item.SttHienthi = varSttHienthi;
			
			item.DonviTinh = varDonviTinh;
			
			item.SolanDung = varSolanDung;
			
			item.SoluongDung = varSoluongDung;
			
			item.CachDung = varCachDung;
			
			item.ChidanThem = varChidanThem;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdChitiet,int varIdNhom,int varIdLoaithuoc,int varIdThuoc,decimal? varSoLuong,decimal? varSang,decimal? varTrua,decimal? varChieu,decimal? varToi,short? varSttHienthi,string varDonviTinh,string varSolanDung,string varSoluongDung,string varCachDung,string varChidanThem,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua)
		{
			DmucDonthuocmauChitiet item = new DmucDonthuocmauChitiet();
			
				item.IdChitiet = varIdChitiet;
			
				item.IdNhom = varIdNhom;
			
				item.IdLoaithuoc = varIdLoaithuoc;
			
				item.IdThuoc = varIdThuoc;
			
				item.SoLuong = varSoLuong;
			
				item.Sang = varSang;
			
				item.Trua = varTrua;
			
				item.Chieu = varChieu;
			
				item.Toi = varToi;
			
				item.SttHienthi = varSttHienthi;
			
				item.DonviTinh = varDonviTinh;
			
				item.SolanDung = varSolanDung;
			
				item.SoluongDung = varSoluongDung;
			
				item.CachDung = varCachDung;
			
				item.ChidanThem = varChidanThem;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdChitietColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhomColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdLoaithuocColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdThuocColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn SangColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn TruaColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn ChieuColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn ToiColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn SttHienthiColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn DonviTinhColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn SolanDungColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn SoluongDungColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn CachDungColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn ChidanThemColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdChitiet = @"id_chitiet";
			 public static string IdNhom = @"id_nhom";
			 public static string IdLoaithuoc = @"id_loaithuoc";
			 public static string IdThuoc = @"id_thuoc";
			 public static string SoLuong = @"so_luong";
			 public static string Sang = @"sang";
			 public static string Trua = @"trua";
			 public static string Chieu = @"chieu";
			 public static string Toi = @"toi";
			 public static string SttHienthi = @"stt_hienthi";
			 public static string DonviTinh = @"donvi_tinh";
			 public static string SolanDung = @"solan_dung";
			 public static string SoluongDung = @"soluong_dung";
			 public static string CachDung = @"cach_dung";
			 public static string ChidanThem = @"chidan_them";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string NgaySua = @"ngay_sua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
