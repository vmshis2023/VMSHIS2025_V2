using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the EmrPhieukhamNoikhoa class.
	/// </summary>
    [Serializable]
	public partial class EmrPhieukhamNoikhoaCollection : ActiveList<EmrPhieukhamNoikhoa, EmrPhieukhamNoikhoaCollection>
	{	   
		public EmrPhieukhamNoikhoaCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>EmrPhieukhamNoikhoaCollection</returns>
		public EmrPhieukhamNoikhoaCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                EmrPhieukhamNoikhoa o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the emr_phieukham_noikhoa table.
	/// </summary>
	[Serializable]
	public partial class EmrPhieukhamNoikhoa : ActiveRecord<EmrPhieukhamNoikhoa>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public EmrPhieukhamNoikhoa()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public EmrPhieukhamNoikhoa(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public EmrPhieukhamNoikhoa(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public EmrPhieukhamNoikhoa(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("emr_phieukham_noikhoa", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 10;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarNgayKham = new TableSchema.TableColumn(schema);
				colvarNgayKham.ColumnName = "ngay_kham";
				colvarNgayKham.DataType = DbType.DateTime;
				colvarNgayKham.MaxLength = 0;
				colvarNgayKham.AutoIncrement = false;
				colvarNgayKham.IsNullable = false;
				colvarNgayKham.IsPrimaryKey = false;
				colvarNgayKham.IsForeignKey = false;
				colvarNgayKham.IsReadOnly = false;
				colvarNgayKham.DefaultSetting = @"";
				colvarNgayKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayKham);
				
				TableSchema.TableColumn colvarMach = new TableSchema.TableColumn(schema);
				colvarMach.ColumnName = "mach";
				colvarMach.DataType = DbType.String;
				colvarMach.MaxLength = 10;
				colvarMach.AutoIncrement = false;
				colvarMach.IsNullable = true;
				colvarMach.IsPrimaryKey = false;
				colvarMach.IsForeignKey = false;
				colvarMach.IsReadOnly = false;
				colvarMach.DefaultSetting = @"";
				colvarMach.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMach);
				
				TableSchema.TableColumn colvarNhietDo = new TableSchema.TableColumn(schema);
				colvarNhietDo.ColumnName = "nhiet_do";
				colvarNhietDo.DataType = DbType.String;
				colvarNhietDo.MaxLength = 10;
				colvarNhietDo.AutoIncrement = false;
				colvarNhietDo.IsNullable = true;
				colvarNhietDo.IsPrimaryKey = false;
				colvarNhietDo.IsForeignKey = false;
				colvarNhietDo.IsReadOnly = false;
				colvarNhietDo.DefaultSetting = @"";
				colvarNhietDo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhietDo);
				
				TableSchema.TableColumn colvarHuyetAp = new TableSchema.TableColumn(schema);
				colvarHuyetAp.ColumnName = "huyet_ap";
				colvarHuyetAp.DataType = DbType.String;
				colvarHuyetAp.MaxLength = 20;
				colvarHuyetAp.AutoIncrement = false;
				colvarHuyetAp.IsNullable = true;
				colvarHuyetAp.IsPrimaryKey = false;
				colvarHuyetAp.IsForeignKey = false;
				colvarHuyetAp.IsReadOnly = false;
				colvarHuyetAp.DefaultSetting = @"";
				colvarHuyetAp.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHuyetAp);
				
				TableSchema.TableColumn colvarNhipTho = new TableSchema.TableColumn(schema);
				colvarNhipTho.ColumnName = "nhip_tho";
				colvarNhipTho.DataType = DbType.String;
				colvarNhipTho.MaxLength = 10;
				colvarNhipTho.AutoIncrement = false;
				colvarNhipTho.IsNullable = true;
				colvarNhipTho.IsPrimaryKey = false;
				colvarNhipTho.IsForeignKey = false;
				colvarNhipTho.IsReadOnly = false;
				colvarNhipTho.DefaultSetting = @"";
				colvarNhipTho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhipTho);
				
				TableSchema.TableColumn colvarChieuCao = new TableSchema.TableColumn(schema);
				colvarChieuCao.ColumnName = "chieu_cao";
				colvarChieuCao.DataType = DbType.String;
				colvarChieuCao.MaxLength = 5;
				colvarChieuCao.AutoIncrement = false;
				colvarChieuCao.IsNullable = true;
				colvarChieuCao.IsPrimaryKey = false;
				colvarChieuCao.IsForeignKey = false;
				colvarChieuCao.IsReadOnly = false;
				colvarChieuCao.DefaultSetting = @"";
				colvarChieuCao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChieuCao);
				
				TableSchema.TableColumn colvarCanNang = new TableSchema.TableColumn(schema);
				colvarCanNang.ColumnName = "can_nang";
				colvarCanNang.DataType = DbType.String;
				colvarCanNang.MaxLength = 5;
				colvarCanNang.AutoIncrement = false;
				colvarCanNang.IsNullable = true;
				colvarCanNang.IsPrimaryKey = false;
				colvarCanNang.IsForeignKey = false;
				colvarCanNang.IsReadOnly = false;
				colvarCanNang.DefaultSetting = @"";
				colvarCanNang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCanNang);
				
				TableSchema.TableColumn colvarNhomMau = new TableSchema.TableColumn(schema);
				colvarNhomMau.ColumnName = "nhom_mau";
				colvarNhomMau.DataType = DbType.String;
				colvarNhomMau.MaxLength = 25;
				colvarNhomMau.AutoIncrement = false;
				colvarNhomMau.IsNullable = true;
				colvarNhomMau.IsPrimaryKey = false;
				colvarNhomMau.IsForeignKey = false;
				colvarNhomMau.IsReadOnly = false;
				colvarNhomMau.DefaultSetting = @"";
				colvarNhomMau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhomMau);
				
				TableSchema.TableColumn colvarBmi = new TableSchema.TableColumn(schema);
				colvarBmi.ColumnName = "bmi";
				colvarBmi.DataType = DbType.String;
				colvarBmi.MaxLength = 5;
				colvarBmi.AutoIncrement = false;
				colvarBmi.IsNullable = true;
				colvarBmi.IsPrimaryKey = false;
				colvarBmi.IsForeignKey = false;
				colvarBmi.IsReadOnly = false;
				colvarBmi.DefaultSetting = @"";
				colvarBmi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBmi);
				
				TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
				colvarMotaThem.ColumnName = "mota_them";
				colvarMotaThem.DataType = DbType.String;
				colvarMotaThem.MaxLength = 255;
				colvarMotaThem.AutoIncrement = false;
				colvarMotaThem.IsNullable = true;
				colvarMotaThem.IsPrimaryKey = false;
				colvarMotaThem.IsForeignKey = false;
				colvarMotaThem.IsReadOnly = false;
				colvarMotaThem.DefaultSetting = @"";
				colvarMotaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaThem);
				
				TableSchema.TableColumn colvarIdBacsi = new TableSchema.TableColumn(schema);
				colvarIdBacsi.ColumnName = "id_bacsi";
				colvarIdBacsi.DataType = DbType.Int16;
				colvarIdBacsi.MaxLength = 0;
				colvarIdBacsi.AutoIncrement = false;
				colvarIdBacsi.IsNullable = true;
				colvarIdBacsi.IsPrimaryKey = false;
				colvarIdBacsi.IsForeignKey = false;
				colvarIdBacsi.IsReadOnly = false;
				colvarIdBacsi.DefaultSetting = @"";
				colvarIdBacsi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBacsi);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				
						colvarNgayTao.DefaultSetting = @"(getdate())";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 30;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("emr_phieukham_noikhoa",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("NgayKham")]
		[Bindable(true)]
		public DateTime NgayKham 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayKham); }
			set { SetColumnValue(Columns.NgayKham, value); }
		}
		  
		[XmlAttribute("Mach")]
		[Bindable(true)]
		public string Mach 
		{
			get { return GetColumnValue<string>(Columns.Mach); }
			set { SetColumnValue(Columns.Mach, value); }
		}
		  
		[XmlAttribute("NhietDo")]
		[Bindable(true)]
		public string NhietDo 
		{
			get { return GetColumnValue<string>(Columns.NhietDo); }
			set { SetColumnValue(Columns.NhietDo, value); }
		}
		  
		[XmlAttribute("HuyetAp")]
		[Bindable(true)]
		public string HuyetAp 
		{
			get { return GetColumnValue<string>(Columns.HuyetAp); }
			set { SetColumnValue(Columns.HuyetAp, value); }
		}
		  
		[XmlAttribute("NhipTho")]
		[Bindable(true)]
		public string NhipTho 
		{
			get { return GetColumnValue<string>(Columns.NhipTho); }
			set { SetColumnValue(Columns.NhipTho, value); }
		}
		  
		[XmlAttribute("ChieuCao")]
		[Bindable(true)]
		public string ChieuCao 
		{
			get { return GetColumnValue<string>(Columns.ChieuCao); }
			set { SetColumnValue(Columns.ChieuCao, value); }
		}
		  
		[XmlAttribute("CanNang")]
		[Bindable(true)]
		public string CanNang 
		{
			get { return GetColumnValue<string>(Columns.CanNang); }
			set { SetColumnValue(Columns.CanNang, value); }
		}
		  
		[XmlAttribute("NhomMau")]
		[Bindable(true)]
		public string NhomMau 
		{
			get { return GetColumnValue<string>(Columns.NhomMau); }
			set { SetColumnValue(Columns.NhomMau, value); }
		}
		  
		[XmlAttribute("Bmi")]
		[Bindable(true)]
		public string Bmi 
		{
			get { return GetColumnValue<string>(Columns.Bmi); }
			set { SetColumnValue(Columns.Bmi, value); }
		}
		  
		[XmlAttribute("MotaThem")]
		[Bindable(true)]
		public string MotaThem 
		{
			get { return GetColumnValue<string>(Columns.MotaThem); }
			set { SetColumnValue(Columns.MotaThem, value); }
		}
		  
		[XmlAttribute("IdBacsi")]
		[Bindable(true)]
		public short? IdBacsi 
		{
			get { return GetColumnValue<short?>(Columns.IdBacsi); }
			set { SetColumnValue(Columns.IdBacsi, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaLuotkham,long varIdBenhnhan,DateTime varNgayKham,string varMach,string varNhietDo,string varHuyetAp,string varNhipTho,string varChieuCao,string varCanNang,string varNhomMau,string varBmi,string varMotaThem,short? varIdBacsi,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua)
		{
			EmrPhieukhamNoikhoa item = new EmrPhieukhamNoikhoa();
			
			item.MaLuotkham = varMaLuotkham;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.NgayKham = varNgayKham;
			
			item.Mach = varMach;
			
			item.NhietDo = varNhietDo;
			
			item.HuyetAp = varHuyetAp;
			
			item.NhipTho = varNhipTho;
			
			item.ChieuCao = varChieuCao;
			
			item.CanNang = varCanNang;
			
			item.NhomMau = varNhomMau;
			
			item.Bmi = varBmi;
			
			item.MotaThem = varMotaThem;
			
			item.IdBacsi = varIdBacsi;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,string varMaLuotkham,long varIdBenhnhan,DateTime varNgayKham,string varMach,string varNhietDo,string varHuyetAp,string varNhipTho,string varChieuCao,string varCanNang,string varNhomMau,string varBmi,string varMotaThem,short? varIdBacsi,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua)
		{
			EmrPhieukhamNoikhoa item = new EmrPhieukhamNoikhoa();
			
				item.Id = varId;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.NgayKham = varNgayKham;
			
				item.Mach = varMach;
			
				item.NhietDo = varNhietDo;
			
				item.HuyetAp = varHuyetAp;
			
				item.NhipTho = varNhipTho;
			
				item.ChieuCao = varChieuCao;
			
				item.CanNang = varCanNang;
			
				item.NhomMau = varNhomMau;
			
				item.Bmi = varBmi;
			
				item.MotaThem = varMotaThem;
			
				item.IdBacsi = varIdBacsi;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayKhamColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn MachColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn NhietDoColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn HuyetApColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NhipThoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn ChieuCaoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn CanNangColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NhomMauColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn BmiColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaThemColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBacsiColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string NgayKham = @"ngay_kham";
			 public static string Mach = @"mach";
			 public static string NhietDo = @"nhiet_do";
			 public static string HuyetAp = @"huyet_ap";
			 public static string NhipTho = @"nhip_tho";
			 public static string ChieuCao = @"chieu_cao";
			 public static string CanNang = @"can_nang";
			 public static string NhomMau = @"nhom_mau";
			 public static string Bmi = @"bmi";
			 public static string MotaThem = @"mota_them";
			 public static string IdBacsi = @"id_bacsi";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string NgaySua = @"ngay_sua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
