using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the QlnsLichkham class.
	/// </summary>
    [Serializable]
	public partial class QlnsLichkhamCollection : ActiveList<QlnsLichkham, QlnsLichkhamCollection>
	{	   
		public QlnsLichkhamCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>QlnsLichkhamCollection</returns>
		public QlnsLichkhamCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                QlnsLichkham o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the qlns_lichkham table.
	/// </summary>
	[Serializable]
	public partial class QlnsLichkham : ActiveRecord<QlnsLichkham>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public QlnsLichkham()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public QlnsLichkham(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public QlnsLichkham(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public QlnsLichkham(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("qlns_lichkham", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarIdBacsi = new TableSchema.TableColumn(schema);
				colvarIdBacsi.ColumnName = "id_bacsi";
				colvarIdBacsi.DataType = DbType.Int16;
				colvarIdBacsi.MaxLength = 0;
				colvarIdBacsi.AutoIncrement = false;
				colvarIdBacsi.IsNullable = false;
				colvarIdBacsi.IsPrimaryKey = false;
				colvarIdBacsi.IsForeignKey = false;
				colvarIdBacsi.IsReadOnly = false;
				colvarIdBacsi.DefaultSetting = @"";
				colvarIdBacsi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBacsi);
				
				TableSchema.TableColumn colvarIdKhoaphong = new TableSchema.TableColumn(schema);
				colvarIdKhoaphong.ColumnName = "id_khoaphong";
				colvarIdKhoaphong.DataType = DbType.Int16;
				colvarIdKhoaphong.MaxLength = 0;
				colvarIdKhoaphong.AutoIncrement = false;
				colvarIdKhoaphong.IsNullable = false;
				colvarIdKhoaphong.IsPrimaryKey = false;
				colvarIdKhoaphong.IsForeignKey = false;
				colvarIdKhoaphong.IsReadOnly = false;
				colvarIdKhoaphong.DefaultSetting = @"";
				colvarIdKhoaphong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoaphong);
				
				TableSchema.TableColumn colvarNgay = new TableSchema.TableColumn(schema);
				colvarNgay.ColumnName = "ngay";
				colvarNgay.DataType = DbType.DateTime;
				colvarNgay.MaxLength = 0;
				colvarNgay.AutoIncrement = false;
				colvarNgay.IsNullable = false;
				colvarNgay.IsPrimaryKey = false;
				colvarNgay.IsForeignKey = false;
				colvarNgay.IsReadOnly = false;
				colvarNgay.DefaultSetting = @"";
				colvarNgay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgay);
				
				TableSchema.TableColumn colvarThu = new TableSchema.TableColumn(schema);
				colvarThu.ColumnName = "thu";
				colvarThu.DataType = DbType.String;
				colvarThu.MaxLength = 15;
				colvarThu.AutoIncrement = false;
				colvarThu.IsNullable = true;
				colvarThu.IsPrimaryKey = false;
				colvarThu.IsForeignKey = false;
				colvarThu.IsReadOnly = false;
				colvarThu.DefaultSetting = @"";
				colvarThu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThu);
				
				TableSchema.TableColumn colvarTuanNam = new TableSchema.TableColumn(schema);
				colvarTuanNam.ColumnName = "tuan_nam";
				colvarTuanNam.DataType = DbType.Int16;
				colvarTuanNam.MaxLength = 0;
				colvarTuanNam.AutoIncrement = false;
				colvarTuanNam.IsNullable = false;
				colvarTuanNam.IsPrimaryKey = false;
				colvarTuanNam.IsForeignKey = false;
				colvarTuanNam.IsReadOnly = false;
				colvarTuanNam.DefaultSetting = @"";
				colvarTuanNam.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuanNam);
				
				TableSchema.TableColumn colvarTuanThang = new TableSchema.TableColumn(schema);
				colvarTuanThang.ColumnName = "tuan_thang";
				colvarTuanThang.DataType = DbType.Int16;
				colvarTuanThang.MaxLength = 0;
				colvarTuanThang.AutoIncrement = false;
				colvarTuanThang.IsNullable = false;
				colvarTuanThang.IsPrimaryKey = false;
				colvarTuanThang.IsForeignKey = false;
				colvarTuanThang.IsReadOnly = false;
				colvarTuanThang.DefaultSetting = @"";
				colvarTuanThang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuanThang);
				
				TableSchema.TableColumn colvarThang = new TableSchema.TableColumn(schema);
				colvarThang.ColumnName = "thang";
				colvarThang.DataType = DbType.Int16;
				colvarThang.MaxLength = 0;
				colvarThang.AutoIncrement = false;
				colvarThang.IsNullable = false;
				colvarThang.IsPrimaryKey = false;
				colvarThang.IsForeignKey = false;
				colvarThang.IsReadOnly = false;
				colvarThang.DefaultSetting = @"";
				colvarThang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThang);
				
				TableSchema.TableColumn colvarThoigianKham = new TableSchema.TableColumn(schema);
				colvarThoigianKham.ColumnName = "thoigian_kham";
				colvarThoigianKham.DataType = DbType.String;
				colvarThoigianKham.MaxLength = 500;
				colvarThoigianKham.AutoIncrement = false;
				colvarThoigianKham.IsNullable = false;
				colvarThoigianKham.IsPrimaryKey = false;
				colvarThoigianKham.IsForeignKey = false;
				colvarThoigianKham.IsReadOnly = false;
				colvarThoigianKham.DefaultSetting = @"";
				colvarThoigianKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThoigianKham);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = false;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 30;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarTthaiLamviec = new TableSchema.TableColumn(schema);
				colvarTthaiLamviec.ColumnName = "tthai_lamviec";
				colvarTthaiLamviec.DataType = DbType.Byte;
				colvarTthaiLamviec.MaxLength = 0;
				colvarTthaiLamviec.AutoIncrement = false;
				colvarTthaiLamviec.IsNullable = false;
				colvarTthaiLamviec.IsPrimaryKey = false;
				colvarTthaiLamviec.IsForeignKey = false;
				colvarTthaiLamviec.IsReadOnly = false;
				
						colvarTthaiLamviec.DefaultSetting = @"((0))";
				colvarTthaiLamviec.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTthaiLamviec);
				
				TableSchema.TableColumn colvarNguoiChamcong = new TableSchema.TableColumn(schema);
				colvarNguoiChamcong.ColumnName = "nguoi_chamcong";
				colvarNguoiChamcong.DataType = DbType.String;
				colvarNguoiChamcong.MaxLength = 30;
				colvarNguoiChamcong.AutoIncrement = false;
				colvarNguoiChamcong.IsNullable = true;
				colvarNguoiChamcong.IsPrimaryKey = false;
				colvarNguoiChamcong.IsForeignKey = false;
				colvarNguoiChamcong.IsReadOnly = false;
				colvarNguoiChamcong.DefaultSetting = @"";
				colvarNguoiChamcong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiChamcong);
				
				TableSchema.TableColumn colvarNgayChamcong = new TableSchema.TableColumn(schema);
				colvarNgayChamcong.ColumnName = "ngay_chamcong";
				colvarNgayChamcong.DataType = DbType.DateTime;
				colvarNgayChamcong.MaxLength = 0;
				colvarNgayChamcong.AutoIncrement = false;
				colvarNgayChamcong.IsNullable = true;
				colvarNgayChamcong.IsPrimaryKey = false;
				colvarNgayChamcong.IsForeignKey = false;
				colvarNgayChamcong.IsReadOnly = false;
				colvarNgayChamcong.DefaultSetting = @"";
				colvarNgayChamcong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayChamcong);
				
				TableSchema.TableColumn colvarNguoisuaChamcong = new TableSchema.TableColumn(schema);
				colvarNguoisuaChamcong.ColumnName = "nguoisua_chamcong";
				colvarNguoisuaChamcong.DataType = DbType.String;
				colvarNguoisuaChamcong.MaxLength = 30;
				colvarNguoisuaChamcong.AutoIncrement = false;
				colvarNguoisuaChamcong.IsNullable = true;
				colvarNguoisuaChamcong.IsPrimaryKey = false;
				colvarNguoisuaChamcong.IsForeignKey = false;
				colvarNguoisuaChamcong.IsReadOnly = false;
				colvarNguoisuaChamcong.DefaultSetting = @"";
				colvarNguoisuaChamcong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoisuaChamcong);
				
				TableSchema.TableColumn colvarNgaysuaChamcong = new TableSchema.TableColumn(schema);
				colvarNgaysuaChamcong.ColumnName = "ngaysua_chamcong";
				colvarNgaysuaChamcong.DataType = DbType.DateTime;
				colvarNgaysuaChamcong.MaxLength = 0;
				colvarNgaysuaChamcong.AutoIncrement = false;
				colvarNgaysuaChamcong.IsNullable = true;
				colvarNgaysuaChamcong.IsPrimaryKey = false;
				colvarNgaysuaChamcong.IsForeignKey = false;
				colvarNgaysuaChamcong.IsReadOnly = false;
				colvarNgaysuaChamcong.DefaultSetting = @"";
				colvarNgaysuaChamcong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaysuaChamcong);
				
				TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
				colvarGhiChu.ColumnName = "ghi_chu";
				colvarGhiChu.DataType = DbType.String;
				colvarGhiChu.MaxLength = 500;
				colvarGhiChu.AutoIncrement = false;
				colvarGhiChu.IsNullable = true;
				colvarGhiChu.IsPrimaryKey = false;
				colvarGhiChu.IsForeignKey = false;
				colvarGhiChu.IsReadOnly = false;
				colvarGhiChu.DefaultSetting = @"";
				colvarGhiChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChu);
				
				TableSchema.TableColumn colvarGhichuChamcong = new TableSchema.TableColumn(schema);
				colvarGhichuChamcong.ColumnName = "ghichu_chamcong";
				colvarGhichuChamcong.DataType = DbType.String;
				colvarGhichuChamcong.MaxLength = 500;
				colvarGhichuChamcong.AutoIncrement = false;
				colvarGhichuChamcong.IsNullable = true;
				colvarGhichuChamcong.IsPrimaryKey = false;
				colvarGhichuChamcong.IsForeignKey = false;
				colvarGhichuChamcong.IsReadOnly = false;
				colvarGhichuChamcong.DefaultSetting = @"";
				colvarGhichuChamcong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhichuChamcong);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("qlns_lichkham",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("IdBacsi")]
		[Bindable(true)]
		public short IdBacsi 
		{
			get { return GetColumnValue<short>(Columns.IdBacsi); }
			set { SetColumnValue(Columns.IdBacsi, value); }
		}
		  
		[XmlAttribute("IdKhoaphong")]
		[Bindable(true)]
		public short IdKhoaphong 
		{
			get { return GetColumnValue<short>(Columns.IdKhoaphong); }
			set { SetColumnValue(Columns.IdKhoaphong, value); }
		}
		  
		[XmlAttribute("Ngay")]
		[Bindable(true)]
		public DateTime Ngay 
		{
			get { return GetColumnValue<DateTime>(Columns.Ngay); }
			set { SetColumnValue(Columns.Ngay, value); }
		}
		  
		[XmlAttribute("Thu")]
		[Bindable(true)]
		public string Thu 
		{
			get { return GetColumnValue<string>(Columns.Thu); }
			set { SetColumnValue(Columns.Thu, value); }
		}
		  
		[XmlAttribute("TuanNam")]
		[Bindable(true)]
		public short TuanNam 
		{
			get { return GetColumnValue<short>(Columns.TuanNam); }
			set { SetColumnValue(Columns.TuanNam, value); }
		}
		  
		[XmlAttribute("TuanThang")]
		[Bindable(true)]
		public short TuanThang 
		{
			get { return GetColumnValue<short>(Columns.TuanThang); }
			set { SetColumnValue(Columns.TuanThang, value); }
		}
		  
		[XmlAttribute("Thang")]
		[Bindable(true)]
		public short Thang 
		{
			get { return GetColumnValue<short>(Columns.Thang); }
			set { SetColumnValue(Columns.Thang, value); }
		}
		  
		[XmlAttribute("ThoigianKham")]
		[Bindable(true)]
		public string ThoigianKham 
		{
			get { return GetColumnValue<string>(Columns.ThoigianKham); }
			set { SetColumnValue(Columns.ThoigianKham, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime NgayTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("TthaiLamviec")]
		[Bindable(true)]
		public byte TthaiLamviec 
		{
			get { return GetColumnValue<byte>(Columns.TthaiLamviec); }
			set { SetColumnValue(Columns.TthaiLamviec, value); }
		}
		  
		[XmlAttribute("NguoiChamcong")]
		[Bindable(true)]
		public string NguoiChamcong 
		{
			get { return GetColumnValue<string>(Columns.NguoiChamcong); }
			set { SetColumnValue(Columns.NguoiChamcong, value); }
		}
		  
		[XmlAttribute("NgayChamcong")]
		[Bindable(true)]
		public DateTime? NgayChamcong 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayChamcong); }
			set { SetColumnValue(Columns.NgayChamcong, value); }
		}
		  
		[XmlAttribute("NguoisuaChamcong")]
		[Bindable(true)]
		public string NguoisuaChamcong 
		{
			get { return GetColumnValue<string>(Columns.NguoisuaChamcong); }
			set { SetColumnValue(Columns.NguoisuaChamcong, value); }
		}
		  
		[XmlAttribute("NgaysuaChamcong")]
		[Bindable(true)]
		public DateTime? NgaysuaChamcong 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaysuaChamcong); }
			set { SetColumnValue(Columns.NgaysuaChamcong, value); }
		}
		  
		[XmlAttribute("GhiChu")]
		[Bindable(true)]
		public string GhiChu 
		{
			get { return GetColumnValue<string>(Columns.GhiChu); }
			set { SetColumnValue(Columns.GhiChu, value); }
		}
		  
		[XmlAttribute("GhichuChamcong")]
		[Bindable(true)]
		public string GhichuChamcong 
		{
			get { return GetColumnValue<string>(Columns.GhichuChamcong); }
			set { SetColumnValue(Columns.GhichuChamcong, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(short varIdBacsi,short varIdKhoaphong,DateTime varNgay,string varThu,short varTuanNam,short varTuanThang,short varThang,string varThoigianKham,DateTime varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,byte varTthaiLamviec,string varNguoiChamcong,DateTime? varNgayChamcong,string varNguoisuaChamcong,DateTime? varNgaysuaChamcong,string varGhiChu,string varGhichuChamcong)
		{
			QlnsLichkham item = new QlnsLichkham();
			
			item.IdBacsi = varIdBacsi;
			
			item.IdKhoaphong = varIdKhoaphong;
			
			item.Ngay = varNgay;
			
			item.Thu = varThu;
			
			item.TuanNam = varTuanNam;
			
			item.TuanThang = varTuanThang;
			
			item.Thang = varThang;
			
			item.ThoigianKham = varThoigianKham;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
			item.TthaiLamviec = varTthaiLamviec;
			
			item.NguoiChamcong = varNguoiChamcong;
			
			item.NgayChamcong = varNgayChamcong;
			
			item.NguoisuaChamcong = varNguoisuaChamcong;
			
			item.NgaysuaChamcong = varNgaysuaChamcong;
			
			item.GhiChu = varGhiChu;
			
			item.GhichuChamcong = varGhichuChamcong;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,short varIdBacsi,short varIdKhoaphong,DateTime varNgay,string varThu,short varTuanNam,short varTuanThang,short varThang,string varThoigianKham,DateTime varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,byte varTthaiLamviec,string varNguoiChamcong,DateTime? varNgayChamcong,string varNguoisuaChamcong,DateTime? varNgaysuaChamcong,string varGhiChu,string varGhichuChamcong)
		{
			QlnsLichkham item = new QlnsLichkham();
			
				item.Id = varId;
			
				item.IdBacsi = varIdBacsi;
			
				item.IdKhoaphong = varIdKhoaphong;
			
				item.Ngay = varNgay;
			
				item.Thu = varThu;
			
				item.TuanNam = varTuanNam;
			
				item.TuanThang = varTuanThang;
			
				item.Thang = varThang;
			
				item.ThoigianKham = varThoigianKham;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
				item.TthaiLamviec = varTthaiLamviec;
			
				item.NguoiChamcong = varNguoiChamcong;
			
				item.NgayChamcong = varNgayChamcong;
			
				item.NguoisuaChamcong = varNguoisuaChamcong;
			
				item.NgaysuaChamcong = varNgaysuaChamcong;
			
				item.GhiChu = varGhiChu;
			
				item.GhichuChamcong = varGhichuChamcong;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBacsiColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaphongColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn ThuColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TuanNamColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn TuanThangColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn ThangColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn ThoigianKhamColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn TthaiLamviecColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiChamcongColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayChamcongColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoisuaChamcongColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaysuaChamcongColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn GhichuChamcongColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string IdBacsi = @"id_bacsi";
			 public static string IdKhoaphong = @"id_khoaphong";
			 public static string Ngay = @"ngay";
			 public static string Thu = @"thu";
			 public static string TuanNam = @"tuan_nam";
			 public static string TuanThang = @"tuan_thang";
			 public static string Thang = @"thang";
			 public static string ThoigianKham = @"thoigian_kham";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgaySua = @"ngay_sua";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string TthaiLamviec = @"tthai_lamviec";
			 public static string NguoiChamcong = @"nguoi_chamcong";
			 public static string NgayChamcong = @"ngay_chamcong";
			 public static string NguoisuaChamcong = @"nguoisua_chamcong";
			 public static string NgaysuaChamcong = @"ngaysua_chamcong";
			 public static string GhiChu = @"ghi_chu";
			 public static string GhichuChamcong = @"ghichu_chamcong";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
