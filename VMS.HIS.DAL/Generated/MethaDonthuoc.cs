using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the MethaDonthuoc class.
	/// </summary>
    [Serializable]
	public partial class MethaDonthuocCollection : ActiveList<MethaDonthuoc, MethaDonthuocCollection>
	{	   
		public MethaDonthuocCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>MethaDonthuocCollection</returns>
		public MethaDonthuocCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                MethaDonthuoc o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the metha_donthuoc table.
	/// </summary>
	[Serializable]
	public partial class MethaDonthuoc : ActiveRecord<MethaDonthuoc>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public MethaDonthuoc()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public MethaDonthuoc(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public MethaDonthuoc(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public MethaDonthuoc(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("metha_donthuoc", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdDonthuoc = new TableSchema.TableColumn(schema);
				colvarIdDonthuoc.ColumnName = "id_donthuoc";
				colvarIdDonthuoc.DataType = DbType.Int64;
				colvarIdDonthuoc.MaxLength = 0;
				colvarIdDonthuoc.AutoIncrement = false;
				colvarIdDonthuoc.IsNullable = false;
				colvarIdDonthuoc.IsPrimaryKey = true;
				colvarIdDonthuoc.IsForeignKey = false;
				colvarIdDonthuoc.IsReadOnly = false;
				colvarIdDonthuoc.DefaultSetting = @"";
				colvarIdDonthuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDonthuoc);
				
				TableSchema.TableColumn colvarIdKham = new TableSchema.TableColumn(schema);
				colvarIdKham.ColumnName = "id_kham";
				colvarIdKham.DataType = DbType.Int64;
				colvarIdKham.MaxLength = 0;
				colvarIdKham.AutoIncrement = false;
				colvarIdKham.IsNullable = true;
				colvarIdKham.IsPrimaryKey = false;
				colvarIdKham.IsForeignKey = false;
				colvarIdKham.IsReadOnly = false;
				
						colvarIdKham.DefaultSetting = @"((-1))";
				colvarIdKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKham);
				
				TableSchema.TableColumn colvarMaDieutri = new TableSchema.TableColumn(schema);
				colvarMaDieutri.ColumnName = "ma_dieutri";
				colvarMaDieutri.DataType = DbType.String;
				colvarMaDieutri.MaxLength = 20;
				colvarMaDieutri.AutoIncrement = false;
				colvarMaDieutri.IsNullable = false;
				colvarMaDieutri.IsPrimaryKey = false;
				colvarMaDieutri.IsForeignKey = false;
				colvarMaDieutri.IsReadOnly = false;
				colvarMaDieutri.DefaultSetting = @"";
				colvarMaDieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDieutri);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarMaLoaikham = new TableSchema.TableColumn(schema);
				colvarMaLoaikham.ColumnName = "ma_loaikham";
				colvarMaLoaikham.DataType = DbType.String;
				colvarMaLoaikham.MaxLength = 20;
				colvarMaLoaikham.AutoIncrement = false;
				colvarMaLoaikham.IsNullable = false;
				colvarMaLoaikham.IsPrimaryKey = false;
				colvarMaLoaikham.IsForeignKey = false;
				colvarMaLoaikham.IsReadOnly = false;
				colvarMaLoaikham.DefaultSetting = @"";
				colvarMaLoaikham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLoaikham);
				
				TableSchema.TableColumn colvarMaDonthuoc = new TableSchema.TableColumn(schema);
				colvarMaDonthuoc.ColumnName = "ma_donthuoc";
				colvarMaDonthuoc.DataType = DbType.String;
				colvarMaDonthuoc.MaxLength = 20;
				colvarMaDonthuoc.AutoIncrement = false;
				colvarMaDonthuoc.IsNullable = true;
				colvarMaDonthuoc.IsPrimaryKey = false;
				colvarMaDonthuoc.IsForeignKey = false;
				colvarMaDonthuoc.IsReadOnly = false;
				colvarMaDonthuoc.DefaultSetting = @"";
				colvarMaDonthuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDonthuoc);
				
				TableSchema.TableColumn colvarIdBacsyKedon = new TableSchema.TableColumn(schema);
				colvarIdBacsyKedon.ColumnName = "id_bacsy_kedon";
				colvarIdBacsyKedon.DataType = DbType.Int16;
				colvarIdBacsyKedon.MaxLength = 0;
				colvarIdBacsyKedon.AutoIncrement = false;
				colvarIdBacsyKedon.IsNullable = true;
				colvarIdBacsyKedon.IsPrimaryKey = false;
				colvarIdBacsyKedon.IsForeignKey = false;
				colvarIdBacsyKedon.IsReadOnly = false;
				
						colvarIdBacsyKedon.DefaultSetting = @"((-1))";
				colvarIdBacsyKedon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBacsyKedon);
				
				TableSchema.TableColumn colvarIdPhongkham = new TableSchema.TableColumn(schema);
				colvarIdPhongkham.ColumnName = "id_phongkham";
				colvarIdPhongkham.DataType = DbType.Int16;
				colvarIdPhongkham.MaxLength = 0;
				colvarIdPhongkham.AutoIncrement = false;
				colvarIdPhongkham.IsNullable = true;
				colvarIdPhongkham.IsPrimaryKey = false;
				colvarIdPhongkham.IsForeignKey = false;
				colvarIdPhongkham.IsReadOnly = false;
				
						colvarIdPhongkham.DefaultSetting = @"((-1))";
				colvarIdPhongkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhongkham);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.Byte;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = true;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				
						colvarTrangThai.DefaultSetting = @"((0))";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarNgaykedon = new TableSchema.TableColumn(schema);
				colvarNgaykedon.ColumnName = "ngaykedon";
				colvarNgaykedon.DataType = DbType.DateTime;
				colvarNgaykedon.MaxLength = 0;
				colvarNgaykedon.AutoIncrement = false;
				colvarNgaykedon.IsNullable = true;
				colvarNgaykedon.IsPrimaryKey = false;
				colvarNgaykedon.IsForeignKey = false;
				colvarNgaykedon.IsReadOnly = false;
				colvarNgaykedon.DefaultSetting = @"";
				colvarNgaykedon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaykedon);
				
				TableSchema.TableColumn colvarDaDung = new TableSchema.TableColumn(schema);
				colvarDaDung.ColumnName = "da_dung";
				colvarDaDung.DataType = DbType.Byte;
				colvarDaDung.MaxLength = 0;
				colvarDaDung.AutoIncrement = false;
				colvarDaDung.IsNullable = true;
				colvarDaDung.IsPrimaryKey = false;
				colvarDaDung.IsForeignKey = false;
				colvarDaDung.IsReadOnly = false;
				
						colvarDaDung.DefaultSetting = @"((0))";
				colvarDaDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaDung);
				
				TableSchema.TableColumn colvarNgayDung = new TableSchema.TableColumn(schema);
				colvarNgayDung.ColumnName = "ngay_dung";
				colvarNgayDung.DataType = DbType.DateTime;
				colvarNgayDung.MaxLength = 0;
				colvarNgayDung.AutoIncrement = false;
				colvarNgayDung.IsNullable = true;
				colvarNgayDung.IsPrimaryKey = false;
				colvarNgayDung.IsForeignKey = false;
				colvarNgayDung.IsReadOnly = false;
				colvarNgayDung.DefaultSetting = @"";
				colvarNgayDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayDung);
				
				TableSchema.TableColumn colvarNgayCapphat = new TableSchema.TableColumn(schema);
				colvarNgayCapphat.ColumnName = "ngay_capphat";
				colvarNgayCapphat.DataType = DbType.DateTime;
				colvarNgayCapphat.MaxLength = 0;
				colvarNgayCapphat.AutoIncrement = false;
				colvarNgayCapphat.IsNullable = true;
				colvarNgayCapphat.IsPrimaryKey = false;
				colvarNgayCapphat.IsForeignKey = false;
				colvarNgayCapphat.IsReadOnly = false;
				colvarNgayCapphat.DefaultSetting = @"";
				colvarNgayCapphat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayCapphat);
				
				TableSchema.TableColumn colvarNguoiCapphat = new TableSchema.TableColumn(schema);
				colvarNguoiCapphat.ColumnName = "nguoi_capphat";
				colvarNguoiCapphat.DataType = DbType.String;
				colvarNguoiCapphat.MaxLength = 20;
				colvarNguoiCapphat.AutoIncrement = false;
				colvarNguoiCapphat.IsNullable = true;
				colvarNguoiCapphat.IsPrimaryKey = false;
				colvarNguoiCapphat.IsForeignKey = false;
				colvarNguoiCapphat.IsReadOnly = false;
				colvarNguoiCapphat.DefaultSetting = @"";
				colvarNguoiCapphat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiCapphat);
				
				TableSchema.TableColumn colvarNguoiChot = new TableSchema.TableColumn(schema);
				colvarNguoiChot.ColumnName = "nguoi_chot";
				colvarNguoiChot.DataType = DbType.String;
				colvarNguoiChot.MaxLength = 20;
				colvarNguoiChot.AutoIncrement = false;
				colvarNguoiChot.IsNullable = true;
				colvarNguoiChot.IsPrimaryKey = false;
				colvarNguoiChot.IsForeignKey = false;
				colvarNguoiChot.IsReadOnly = false;
				colvarNguoiChot.DefaultSetting = @"";
				colvarNguoiChot.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiChot);
				
				TableSchema.TableColumn colvarNgayChot = new TableSchema.TableColumn(schema);
				colvarNgayChot.ColumnName = "ngay_chot";
				colvarNgayChot.DataType = DbType.DateTime;
				colvarNgayChot.MaxLength = 0;
				colvarNgayChot.AutoIncrement = false;
				colvarNgayChot.IsNullable = true;
				colvarNgayChot.IsPrimaryKey = false;
				colvarNgayChot.IsForeignKey = false;
				colvarNgayChot.IsReadOnly = false;
				colvarNgayChot.DefaultSetting = @"";
				colvarNgayChot.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayChot);
				
				TableSchema.TableColumn colvarHuyDonthuoc = new TableSchema.TableColumn(schema);
				colvarHuyDonthuoc.ColumnName = "huy_donthuoc";
				colvarHuyDonthuoc.DataType = DbType.Byte;
				colvarHuyDonthuoc.MaxLength = 0;
				colvarHuyDonthuoc.AutoIncrement = false;
				colvarHuyDonthuoc.IsNullable = true;
				colvarHuyDonthuoc.IsPrimaryKey = false;
				colvarHuyDonthuoc.IsForeignKey = false;
				colvarHuyDonthuoc.IsReadOnly = false;
				
						colvarHuyDonthuoc.DefaultSetting = @"((0))";
				colvarHuyDonthuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHuyDonthuoc);
				
				TableSchema.TableColumn colvarNgayHuydon = new TableSchema.TableColumn(schema);
				colvarNgayHuydon.ColumnName = "ngay_huydon";
				colvarNgayHuydon.DataType = DbType.DateTime;
				colvarNgayHuydon.MaxLength = 0;
				colvarNgayHuydon.AutoIncrement = false;
				colvarNgayHuydon.IsNullable = true;
				colvarNgayHuydon.IsPrimaryKey = false;
				colvarNgayHuydon.IsForeignKey = false;
				colvarNgayHuydon.IsReadOnly = false;
				colvarNgayHuydon.DefaultSetting = @"";
				colvarNgayHuydon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayHuydon);
				
				TableSchema.TableColumn colvarNguoiHuydon = new TableSchema.TableColumn(schema);
				colvarNguoiHuydon.ColumnName = "nguoi_huydon";
				colvarNguoiHuydon.DataType = DbType.String;
				colvarNguoiHuydon.MaxLength = 20;
				colvarNguoiHuydon.AutoIncrement = false;
				colvarNguoiHuydon.IsNullable = true;
				colvarNguoiHuydon.IsPrimaryKey = false;
				colvarNguoiHuydon.IsForeignKey = false;
				colvarNguoiHuydon.IsReadOnly = false;
				colvarNguoiHuydon.DefaultSetting = @"";
				colvarNguoiHuydon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiHuydon);
				
				TableSchema.TableColumn colvarLydoHuydon = new TableSchema.TableColumn(schema);
				colvarLydoHuydon.ColumnName = "lydo_huydon";
				colvarLydoHuydon.DataType = DbType.String;
				colvarLydoHuydon.MaxLength = 100;
				colvarLydoHuydon.AutoIncrement = false;
				colvarLydoHuydon.IsNullable = true;
				colvarLydoHuydon.IsPrimaryKey = false;
				colvarLydoHuydon.IsForeignKey = false;
				colvarLydoHuydon.IsReadOnly = false;
				colvarLydoHuydon.DefaultSetting = @"";
				colvarLydoHuydon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLydoHuydon);
				
				TableSchema.TableColumn colvarTrangthaiTong = new TableSchema.TableColumn(schema);
				colvarTrangthaiTong.ColumnName = "trangthai_tong";
				colvarTrangthaiTong.DataType = DbType.Byte;
				colvarTrangthaiTong.MaxLength = 0;
				colvarTrangthaiTong.AutoIncrement = false;
				colvarTrangthaiTong.IsNullable = true;
				colvarTrangthaiTong.IsPrimaryKey = false;
				colvarTrangthaiTong.IsForeignKey = false;
				colvarTrangthaiTong.IsReadOnly = false;
				
						colvarTrangthaiTong.DefaultSetting = @"((0))";
				colvarTrangthaiTong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangthaiTong);
				
				TableSchema.TableColumn colvarIdHoadon = new TableSchema.TableColumn(schema);
				colvarIdHoadon.ColumnName = "id_hoadon";
				colvarIdHoadon.DataType = DbType.Int64;
				colvarIdHoadon.MaxLength = 0;
				colvarIdHoadon.AutoIncrement = false;
				colvarIdHoadon.IsNullable = true;
				colvarIdHoadon.IsPrimaryKey = false;
				colvarIdHoadon.IsForeignKey = false;
				colvarIdHoadon.IsReadOnly = false;
				
						colvarIdHoadon.DefaultSetting = @"((-1))";
				colvarIdHoadon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdHoadon);
				
				TableSchema.TableColumn colvarIdGoi = new TableSchema.TableColumn(schema);
				colvarIdGoi.ColumnName = "id_goi";
				colvarIdGoi.DataType = DbType.Int32;
				colvarIdGoi.MaxLength = 0;
				colvarIdGoi.AutoIncrement = false;
				colvarIdGoi.IsNullable = true;
				colvarIdGoi.IsPrimaryKey = false;
				colvarIdGoi.IsForeignKey = false;
				colvarIdGoi.IsReadOnly = false;
				
						colvarIdGoi.DefaultSetting = @"((-1))";
				colvarIdGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGoi);
				
				TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
				colvarTrongGoi.ColumnName = "trong_goi";
				colvarTrongGoi.DataType = DbType.Byte;
				colvarTrongGoi.MaxLength = 0;
				colvarTrongGoi.AutoIncrement = false;
				colvarTrongGoi.IsNullable = true;
				colvarTrongGoi.IsPrimaryKey = false;
				colvarTrongGoi.IsForeignKey = false;
				colvarTrongGoi.IsReadOnly = false;
				
						colvarTrongGoi.DefaultSetting = @"((0))";
				colvarTrongGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrongGoi);
				
				TableSchema.TableColumn colvarIdDoituong = new TableSchema.TableColumn(schema);
				colvarIdDoituong.ColumnName = "id_doituong";
				colvarIdDoituong.DataType = DbType.Int16;
				colvarIdDoituong.MaxLength = 0;
				colvarIdDoituong.AutoIncrement = false;
				colvarIdDoituong.IsNullable = true;
				colvarIdDoituong.IsPrimaryKey = false;
				colvarIdDoituong.IsForeignKey = false;
				colvarIdDoituong.IsReadOnly = false;
				
						colvarIdDoituong.DefaultSetting = @"((-1))";
				colvarIdDoituong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDoituong);
				
				TableSchema.TableColumn colvarIdThe = new TableSchema.TableColumn(schema);
				colvarIdThe.ColumnName = "id_the";
				colvarIdThe.DataType = DbType.Int64;
				colvarIdThe.MaxLength = 0;
				colvarIdThe.AutoIncrement = false;
				colvarIdThe.IsNullable = true;
				colvarIdThe.IsPrimaryKey = false;
				colvarIdThe.IsForeignKey = false;
				colvarIdThe.IsReadOnly = false;
				
						colvarIdThe.DefaultSetting = @"((-1))";
				colvarIdThe.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdThe);
				
				TableSchema.TableColumn colvarCosoDtri = new TableSchema.TableColumn(schema);
				colvarCosoDtri.ColumnName = "coso_dtri";
				colvarCosoDtri.DataType = DbType.Int32;
				colvarCosoDtri.MaxLength = 0;
				colvarCosoDtri.AutoIncrement = false;
				colvarCosoDtri.IsNullable = true;
				colvarCosoDtri.IsPrimaryKey = false;
				colvarCosoDtri.IsForeignKey = false;
				colvarCosoDtri.IsReadOnly = false;
				colvarCosoDtri.DefaultSetting = @"";
				colvarCosoDtri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCosoDtri);
				
				TableSchema.TableColumn colvarLoidanBacsy = new TableSchema.TableColumn(schema);
				colvarLoidanBacsy.ColumnName = "loidan_bacsy";
				colvarLoidanBacsy.DataType = DbType.String;
				colvarLoidanBacsy.MaxLength = 255;
				colvarLoidanBacsy.AutoIncrement = false;
				colvarLoidanBacsy.IsNullable = true;
				colvarLoidanBacsy.IsPrimaryKey = false;
				colvarLoidanBacsy.IsForeignKey = false;
				colvarLoidanBacsy.IsReadOnly = false;
				colvarLoidanBacsy.DefaultSetting = @"";
				colvarLoidanBacsy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoidanBacsy);
				
				TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
				colvarMotaThem.ColumnName = "mota_them";
				colvarMotaThem.DataType = DbType.String;
				colvarMotaThem.MaxLength = 255;
				colvarMotaThem.AutoIncrement = false;
				colvarMotaThem.IsNullable = true;
				colvarMotaThem.IsPrimaryKey = false;
				colvarMotaThem.IsForeignKey = false;
				colvarMotaThem.IsReadOnly = false;
				colvarMotaThem.DefaultSetting = @"";
				colvarMotaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaThem);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 20;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarIpMacSua = new TableSchema.TableColumn(schema);
				colvarIpMacSua.ColumnName = "ip_mac_sua";
				colvarIpMacSua.DataType = DbType.String;
				colvarIpMacSua.MaxLength = 20;
				colvarIpMacSua.AutoIncrement = false;
				colvarIpMacSua.IsNullable = true;
				colvarIpMacSua.IsPrimaryKey = false;
				colvarIpMacSua.IsForeignKey = false;
				colvarIpMacSua.IsReadOnly = false;
				colvarIpMacSua.DefaultSetting = @"";
				colvarIpMacSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMacSua);
				
				TableSchema.TableColumn colvarIpMacTao = new TableSchema.TableColumn(schema);
				colvarIpMacTao.ColumnName = "ip_mac_tao";
				colvarIpMacTao.DataType = DbType.String;
				colvarIpMacTao.MaxLength = 20;
				colvarIpMacTao.AutoIncrement = false;
				colvarIpMacTao.IsNullable = true;
				colvarIpMacTao.IsPrimaryKey = false;
				colvarIpMacTao.IsForeignKey = false;
				colvarIpMacTao.IsReadOnly = false;
				colvarIpMacTao.DefaultSetting = @"";
				colvarIpMacTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMacTao);
				
				TableSchema.TableColumn colvarLastAction = new TableSchema.TableColumn(schema);
				colvarLastAction.ColumnName = "last_action";
				colvarLastAction.DataType = DbType.String;
				colvarLastAction.MaxLength = 20;
				colvarLastAction.AutoIncrement = false;
				colvarLastAction.IsNullable = true;
				colvarLastAction.IsPrimaryKey = false;
				colvarLastAction.IsForeignKey = false;
				colvarLastAction.IsReadOnly = false;
				colvarLastAction.DefaultSetting = @"";
				colvarLastAction.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLastAction);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("metha_donthuoc",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdDonthuoc")]
		[Bindable(true)]
		public long IdDonthuoc 
		{
			get { return GetColumnValue<long>(Columns.IdDonthuoc); }
			set { SetColumnValue(Columns.IdDonthuoc, value); }
		}
		  
		[XmlAttribute("IdKham")]
		[Bindable(true)]
		public long? IdKham 
		{
			get { return GetColumnValue<long?>(Columns.IdKham); }
			set { SetColumnValue(Columns.IdKham, value); }
		}
		  
		[XmlAttribute("MaDieutri")]
		[Bindable(true)]
		public string MaDieutri 
		{
			get { return GetColumnValue<string>(Columns.MaDieutri); }
			set { SetColumnValue(Columns.MaDieutri, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("MaLoaikham")]
		[Bindable(true)]
		public string MaLoaikham 
		{
			get { return GetColumnValue<string>(Columns.MaLoaikham); }
			set { SetColumnValue(Columns.MaLoaikham, value); }
		}
		  
		[XmlAttribute("MaDonthuoc")]
		[Bindable(true)]
		public string MaDonthuoc 
		{
			get { return GetColumnValue<string>(Columns.MaDonthuoc); }
			set { SetColumnValue(Columns.MaDonthuoc, value); }
		}
		  
		[XmlAttribute("IdBacsyKedon")]
		[Bindable(true)]
		public short? IdBacsyKedon 
		{
			get { return GetColumnValue<short?>(Columns.IdBacsyKedon); }
			set { SetColumnValue(Columns.IdBacsyKedon, value); }
		}
		  
		[XmlAttribute("IdPhongkham")]
		[Bindable(true)]
		public short? IdPhongkham 
		{
			get { return GetColumnValue<short?>(Columns.IdPhongkham); }
			set { SetColumnValue(Columns.IdPhongkham, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public byte? TrangThai 
		{
			get { return GetColumnValue<byte?>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("Ngaykedon")]
		[Bindable(true)]
		public DateTime? Ngaykedon 
		{
			get { return GetColumnValue<DateTime?>(Columns.Ngaykedon); }
			set { SetColumnValue(Columns.Ngaykedon, value); }
		}
		  
		[XmlAttribute("DaDung")]
		[Bindable(true)]
		public byte? DaDung 
		{
			get { return GetColumnValue<byte?>(Columns.DaDung); }
			set { SetColumnValue(Columns.DaDung, value); }
		}
		  
		[XmlAttribute("NgayDung")]
		[Bindable(true)]
		public DateTime? NgayDung 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayDung); }
			set { SetColumnValue(Columns.NgayDung, value); }
		}
		  
		[XmlAttribute("NgayCapphat")]
		[Bindable(true)]
		public DateTime? NgayCapphat 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayCapphat); }
			set { SetColumnValue(Columns.NgayCapphat, value); }
		}
		  
		[XmlAttribute("NguoiCapphat")]
		[Bindable(true)]
		public string NguoiCapphat 
		{
			get { return GetColumnValue<string>(Columns.NguoiCapphat); }
			set { SetColumnValue(Columns.NguoiCapphat, value); }
		}
		  
		[XmlAttribute("NguoiChot")]
		[Bindable(true)]
		public string NguoiChot 
		{
			get { return GetColumnValue<string>(Columns.NguoiChot); }
			set { SetColumnValue(Columns.NguoiChot, value); }
		}
		  
		[XmlAttribute("NgayChot")]
		[Bindable(true)]
		public DateTime? NgayChot 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayChot); }
			set { SetColumnValue(Columns.NgayChot, value); }
		}
		  
		[XmlAttribute("HuyDonthuoc")]
		[Bindable(true)]
		public byte? HuyDonthuoc 
		{
			get { return GetColumnValue<byte?>(Columns.HuyDonthuoc); }
			set { SetColumnValue(Columns.HuyDonthuoc, value); }
		}
		  
		[XmlAttribute("NgayHuydon")]
		[Bindable(true)]
		public DateTime? NgayHuydon 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayHuydon); }
			set { SetColumnValue(Columns.NgayHuydon, value); }
		}
		  
		[XmlAttribute("NguoiHuydon")]
		[Bindable(true)]
		public string NguoiHuydon 
		{
			get { return GetColumnValue<string>(Columns.NguoiHuydon); }
			set { SetColumnValue(Columns.NguoiHuydon, value); }
		}
		  
		[XmlAttribute("LydoHuydon")]
		[Bindable(true)]
		public string LydoHuydon 
		{
			get { return GetColumnValue<string>(Columns.LydoHuydon); }
			set { SetColumnValue(Columns.LydoHuydon, value); }
		}
		  
		[XmlAttribute("TrangthaiTong")]
		[Bindable(true)]
		public byte? TrangthaiTong 
		{
			get { return GetColumnValue<byte?>(Columns.TrangthaiTong); }
			set { SetColumnValue(Columns.TrangthaiTong, value); }
		}
		  
		[XmlAttribute("IdHoadon")]
		[Bindable(true)]
		public long? IdHoadon 
		{
			get { return GetColumnValue<long?>(Columns.IdHoadon); }
			set { SetColumnValue(Columns.IdHoadon, value); }
		}
		  
		[XmlAttribute("IdGoi")]
		[Bindable(true)]
		public int? IdGoi 
		{
			get { return GetColumnValue<int?>(Columns.IdGoi); }
			set { SetColumnValue(Columns.IdGoi, value); }
		}
		  
		[XmlAttribute("TrongGoi")]
		[Bindable(true)]
		public byte? TrongGoi 
		{
			get { return GetColumnValue<byte?>(Columns.TrongGoi); }
			set { SetColumnValue(Columns.TrongGoi, value); }
		}
		  
		[XmlAttribute("IdDoituong")]
		[Bindable(true)]
		public short? IdDoituong 
		{
			get { return GetColumnValue<short?>(Columns.IdDoituong); }
			set { SetColumnValue(Columns.IdDoituong, value); }
		}
		  
		[XmlAttribute("IdThe")]
		[Bindable(true)]
		public long? IdThe 
		{
			get { return GetColumnValue<long?>(Columns.IdThe); }
			set { SetColumnValue(Columns.IdThe, value); }
		}
		  
		[XmlAttribute("CosoDtri")]
		[Bindable(true)]
		public int? CosoDtri 
		{
			get { return GetColumnValue<int?>(Columns.CosoDtri); }
			set { SetColumnValue(Columns.CosoDtri, value); }
		}
		  
		[XmlAttribute("LoidanBacsy")]
		[Bindable(true)]
		public string LoidanBacsy 
		{
			get { return GetColumnValue<string>(Columns.LoidanBacsy); }
			set { SetColumnValue(Columns.LoidanBacsy, value); }
		}
		  
		[XmlAttribute("MotaThem")]
		[Bindable(true)]
		public string MotaThem 
		{
			get { return GetColumnValue<string>(Columns.MotaThem); }
			set { SetColumnValue(Columns.MotaThem, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("IpMacSua")]
		[Bindable(true)]
		public string IpMacSua 
		{
			get { return GetColumnValue<string>(Columns.IpMacSua); }
			set { SetColumnValue(Columns.IpMacSua, value); }
		}
		  
		[XmlAttribute("IpMacTao")]
		[Bindable(true)]
		public string IpMacTao 
		{
			get { return GetColumnValue<string>(Columns.IpMacTao); }
			set { SetColumnValue(Columns.IpMacTao, value); }
		}
		  
		[XmlAttribute("LastAction")]
		[Bindable(true)]
		public string LastAction 
		{
			get { return GetColumnValue<string>(Columns.LastAction); }
			set { SetColumnValue(Columns.LastAction, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long varIdDonthuoc,long? varIdKham,string varMaDieutri,long varIdBenhnhan,string varMaLoaikham,string varMaDonthuoc,short? varIdBacsyKedon,short? varIdPhongkham,byte? varTrangThai,DateTime? varNgaykedon,byte? varDaDung,DateTime? varNgayDung,DateTime? varNgayCapphat,string varNguoiCapphat,string varNguoiChot,DateTime? varNgayChot,byte? varHuyDonthuoc,DateTime? varNgayHuydon,string varNguoiHuydon,string varLydoHuydon,byte? varTrangthaiTong,long? varIdHoadon,int? varIdGoi,byte? varTrongGoi,short? varIdDoituong,long? varIdThe,int? varCosoDtri,string varLoidanBacsy,string varMotaThem,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,string varIpMacSua,string varIpMacTao,string varLastAction)
		{
			MethaDonthuoc item = new MethaDonthuoc();
			
			item.IdDonthuoc = varIdDonthuoc;
			
			item.IdKham = varIdKham;
			
			item.MaDieutri = varMaDieutri;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.MaLoaikham = varMaLoaikham;
			
			item.MaDonthuoc = varMaDonthuoc;
			
			item.IdBacsyKedon = varIdBacsyKedon;
			
			item.IdPhongkham = varIdPhongkham;
			
			item.TrangThai = varTrangThai;
			
			item.Ngaykedon = varNgaykedon;
			
			item.DaDung = varDaDung;
			
			item.NgayDung = varNgayDung;
			
			item.NgayCapphat = varNgayCapphat;
			
			item.NguoiCapphat = varNguoiCapphat;
			
			item.NguoiChot = varNguoiChot;
			
			item.NgayChot = varNgayChot;
			
			item.HuyDonthuoc = varHuyDonthuoc;
			
			item.NgayHuydon = varNgayHuydon;
			
			item.NguoiHuydon = varNguoiHuydon;
			
			item.LydoHuydon = varLydoHuydon;
			
			item.TrangthaiTong = varTrangthaiTong;
			
			item.IdHoadon = varIdHoadon;
			
			item.IdGoi = varIdGoi;
			
			item.TrongGoi = varTrongGoi;
			
			item.IdDoituong = varIdDoituong;
			
			item.IdThe = varIdThe;
			
			item.CosoDtri = varCosoDtri;
			
			item.LoidanBacsy = varLoidanBacsy;
			
			item.MotaThem = varMotaThem;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.IpMacSua = varIpMacSua;
			
			item.IpMacTao = varIpMacTao;
			
			item.LastAction = varLastAction;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varIdDonthuoc,long? varIdKham,string varMaDieutri,long varIdBenhnhan,string varMaLoaikham,string varMaDonthuoc,short? varIdBacsyKedon,short? varIdPhongkham,byte? varTrangThai,DateTime? varNgaykedon,byte? varDaDung,DateTime? varNgayDung,DateTime? varNgayCapphat,string varNguoiCapphat,string varNguoiChot,DateTime? varNgayChot,byte? varHuyDonthuoc,DateTime? varNgayHuydon,string varNguoiHuydon,string varLydoHuydon,byte? varTrangthaiTong,long? varIdHoadon,int? varIdGoi,byte? varTrongGoi,short? varIdDoituong,long? varIdThe,int? varCosoDtri,string varLoidanBacsy,string varMotaThem,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,string varIpMacSua,string varIpMacTao,string varLastAction)
		{
			MethaDonthuoc item = new MethaDonthuoc();
			
				item.IdDonthuoc = varIdDonthuoc;
			
				item.IdKham = varIdKham;
			
				item.MaDieutri = varMaDieutri;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.MaLoaikham = varMaLoaikham;
			
				item.MaDonthuoc = varMaDonthuoc;
			
				item.IdBacsyKedon = varIdBacsyKedon;
			
				item.IdPhongkham = varIdPhongkham;
			
				item.TrangThai = varTrangThai;
			
				item.Ngaykedon = varNgaykedon;
			
				item.DaDung = varDaDung;
			
				item.NgayDung = varNgayDung;
			
				item.NgayCapphat = varNgayCapphat;
			
				item.NguoiCapphat = varNguoiCapphat;
			
				item.NguoiChot = varNguoiChot;
			
				item.NgayChot = varNgayChot;
			
				item.HuyDonthuoc = varHuyDonthuoc;
			
				item.NgayHuydon = varNgayHuydon;
			
				item.NguoiHuydon = varNguoiHuydon;
			
				item.LydoHuydon = varLydoHuydon;
			
				item.TrangthaiTong = varTrangthaiTong;
			
				item.IdHoadon = varIdHoadon;
			
				item.IdGoi = varIdGoi;
			
				item.TrongGoi = varTrongGoi;
			
				item.IdDoituong = varIdDoituong;
			
				item.IdThe = varIdThe;
			
				item.CosoDtri = varCosoDtri;
			
				item.LoidanBacsy = varLoidanBacsy;
			
				item.MotaThem = varMotaThem;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.IpMacSua = varIpMacSua;
			
				item.IpMacTao = varIpMacTao;
			
				item.LastAction = varLastAction;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdDonthuocColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhamColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDieutriColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLoaikhamColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDonthuocColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBacsyKedonColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhongkhamColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaykedonColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn DaDungColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayDungColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayCapphatColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiCapphatColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiChotColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayChotColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn HuyDonthuocColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayHuydonColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiHuydonColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn LydoHuydonColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangthaiTongColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn IdHoadonColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGoiColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn TrongGoiColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDoituongColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn IdTheColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn CosoDtriColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn LoidanBacsyColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaThemColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMacSuaColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMacTaoColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn LastActionColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdDonthuoc = @"id_donthuoc";
			 public static string IdKham = @"id_kham";
			 public static string MaDieutri = @"ma_dieutri";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string MaLoaikham = @"ma_loaikham";
			 public static string MaDonthuoc = @"ma_donthuoc";
			 public static string IdBacsyKedon = @"id_bacsy_kedon";
			 public static string IdPhongkham = @"id_phongkham";
			 public static string TrangThai = @"trang_thai";
			 public static string Ngaykedon = @"ngaykedon";
			 public static string DaDung = @"da_dung";
			 public static string NgayDung = @"ngay_dung";
			 public static string NgayCapphat = @"ngay_capphat";
			 public static string NguoiCapphat = @"nguoi_capphat";
			 public static string NguoiChot = @"nguoi_chot";
			 public static string NgayChot = @"ngay_chot";
			 public static string HuyDonthuoc = @"huy_donthuoc";
			 public static string NgayHuydon = @"ngay_huydon";
			 public static string NguoiHuydon = @"nguoi_huydon";
			 public static string LydoHuydon = @"lydo_huydon";
			 public static string TrangthaiTong = @"trangthai_tong";
			 public static string IdHoadon = @"id_hoadon";
			 public static string IdGoi = @"id_goi";
			 public static string TrongGoi = @"trong_goi";
			 public static string IdDoituong = @"id_doituong";
			 public static string IdThe = @"id_the";
			 public static string CosoDtri = @"coso_dtri";
			 public static string LoidanBacsy = @"loidan_bacsy";
			 public static string MotaThem = @"mota_them";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string NgaySua = @"ngay_sua";
			 public static string IpMacSua = @"ip_mac_sua";
			 public static string IpMacTao = @"ip_mac_tao";
			 public static string LastAction = @"last_action";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
