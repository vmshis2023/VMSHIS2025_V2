using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the ThuocLichsuTralaithuoctaiquayChitiet class.
	/// </summary>
    [Serializable]
	public partial class ThuocLichsuTralaithuoctaiquayChitietCollection : ActiveList<ThuocLichsuTralaithuoctaiquayChitiet, ThuocLichsuTralaithuoctaiquayChitietCollection>
	{	   
		public ThuocLichsuTralaithuoctaiquayChitietCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>ThuocLichsuTralaithuoctaiquayChitietCollection</returns>
		public ThuocLichsuTralaithuoctaiquayChitietCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                ThuocLichsuTralaithuoctaiquayChitiet o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the thuoc_lichsu_tralaithuoctaiquay_chitiet table.
	/// </summary>
	[Serializable]
	public partial class ThuocLichsuTralaithuoctaiquayChitiet : ActiveRecord<ThuocLichsuTralaithuoctaiquayChitiet>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public ThuocLichsuTralaithuoctaiquayChitiet()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public ThuocLichsuTralaithuoctaiquayChitiet(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public ThuocLichsuTralaithuoctaiquayChitiet(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public ThuocLichsuTralaithuoctaiquayChitiet(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("thuoc_lichsu_tralaithuoctaiquay_chitiet", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarIdChitietThanhtoan = new TableSchema.TableColumn(schema);
				colvarIdChitietThanhtoan.ColumnName = "id_chitiet_thanhtoan";
				colvarIdChitietThanhtoan.DataType = DbType.Int64;
				colvarIdChitietThanhtoan.MaxLength = 0;
				colvarIdChitietThanhtoan.AutoIncrement = false;
				colvarIdChitietThanhtoan.IsNullable = false;
				colvarIdChitietThanhtoan.IsPrimaryKey = false;
				colvarIdChitietThanhtoan.IsForeignKey = false;
				colvarIdChitietThanhtoan.IsReadOnly = false;
				colvarIdChitietThanhtoan.DefaultSetting = @"";
				colvarIdChitietThanhtoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdChitietThanhtoan);
				
				TableSchema.TableColumn colvarIdChitietThanhtoanGoc = new TableSchema.TableColumn(schema);
				colvarIdChitietThanhtoanGoc.ColumnName = "id_chitiet_thanhtoan_goc";
				colvarIdChitietThanhtoanGoc.DataType = DbType.Int64;
				colvarIdChitietThanhtoanGoc.MaxLength = 0;
				colvarIdChitietThanhtoanGoc.AutoIncrement = false;
				colvarIdChitietThanhtoanGoc.IsNullable = false;
				colvarIdChitietThanhtoanGoc.IsPrimaryKey = false;
				colvarIdChitietThanhtoanGoc.IsForeignKey = false;
				colvarIdChitietThanhtoanGoc.IsReadOnly = false;
				
						colvarIdChitietThanhtoanGoc.DefaultSetting = @"((-1))";
				colvarIdChitietThanhtoanGoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdChitietThanhtoanGoc);
				
				TableSchema.TableColumn colvarIdPhieuchi = new TableSchema.TableColumn(schema);
				colvarIdPhieuchi.ColumnName = "id_phieuchi";
				colvarIdPhieuchi.DataType = DbType.Int64;
				colvarIdPhieuchi.MaxLength = 0;
				colvarIdPhieuchi.AutoIncrement = false;
				colvarIdPhieuchi.IsNullable = true;
				colvarIdPhieuchi.IsPrimaryKey = false;
				colvarIdPhieuchi.IsForeignKey = false;
				colvarIdPhieuchi.IsReadOnly = false;
				colvarIdPhieuchi.DefaultSetting = @"";
				colvarIdPhieuchi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuchi);
				
				TableSchema.TableColumn colvarIdLoaithanhtoan = new TableSchema.TableColumn(schema);
				colvarIdLoaithanhtoan.ColumnName = "id_loaithanhtoan";
				colvarIdLoaithanhtoan.DataType = DbType.Byte;
				colvarIdLoaithanhtoan.MaxLength = 0;
				colvarIdLoaithanhtoan.AutoIncrement = false;
				colvarIdLoaithanhtoan.IsNullable = false;
				colvarIdLoaithanhtoan.IsPrimaryKey = false;
				colvarIdLoaithanhtoan.IsForeignKey = false;
				colvarIdLoaithanhtoan.IsReadOnly = false;
				
						colvarIdLoaithanhtoan.DefaultSetting = @"((0))";
				colvarIdLoaithanhtoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdLoaithanhtoan);
				
				TableSchema.TableColumn colvarSoLuong = new TableSchema.TableColumn(schema);
				colvarSoLuong.ColumnName = "so_luong";
				colvarSoLuong.DataType = DbType.Int32;
				colvarSoLuong.MaxLength = 0;
				colvarSoLuong.AutoIncrement = false;
				colvarSoLuong.IsNullable = false;
				colvarSoLuong.IsPrimaryKey = false;
				colvarSoLuong.IsForeignKey = false;
				colvarSoLuong.IsReadOnly = false;
				colvarSoLuong.DefaultSetting = @"";
				colvarSoLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuong);
				
				TableSchema.TableColumn colvarDonGia = new TableSchema.TableColumn(schema);
				colvarDonGia.ColumnName = "don_gia";
				colvarDonGia.DataType = DbType.Decimal;
				colvarDonGia.MaxLength = 0;
				colvarDonGia.AutoIncrement = false;
				colvarDonGia.IsNullable = false;
				colvarDonGia.IsPrimaryKey = false;
				colvarDonGia.IsForeignKey = false;
				colvarDonGia.IsReadOnly = false;
				colvarDonGia.DefaultSetting = @"";
				colvarDonGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGia);
				
				TableSchema.TableColumn colvarIdDonthuoc = new TableSchema.TableColumn(schema);
				colvarIdDonthuoc.ColumnName = "id_donthuoc";
				colvarIdDonthuoc.DataType = DbType.Int64;
				colvarIdDonthuoc.MaxLength = 0;
				colvarIdDonthuoc.AutoIncrement = false;
				colvarIdDonthuoc.IsNullable = false;
				colvarIdDonthuoc.IsPrimaryKey = false;
				colvarIdDonthuoc.IsForeignKey = false;
				colvarIdDonthuoc.IsReadOnly = false;
				colvarIdDonthuoc.DefaultSetting = @"";
				colvarIdDonthuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDonthuoc);
				
				TableSchema.TableColumn colvarIdChitietdonthuoc = new TableSchema.TableColumn(schema);
				colvarIdChitietdonthuoc.ColumnName = "id_chitietdonthuoc";
				colvarIdChitietdonthuoc.DataType = DbType.Int64;
				colvarIdChitietdonthuoc.MaxLength = 0;
				colvarIdChitietdonthuoc.AutoIncrement = false;
				colvarIdChitietdonthuoc.IsNullable = false;
				colvarIdChitietdonthuoc.IsPrimaryKey = false;
				colvarIdChitietdonthuoc.IsForeignKey = false;
				colvarIdChitietdonthuoc.IsReadOnly = false;
				colvarIdChitietdonthuoc.DefaultSetting = @"";
				colvarIdChitietdonthuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdChitietdonthuoc);
				
				TableSchema.TableColumn colvarIdThuoc = new TableSchema.TableColumn(schema);
				colvarIdThuoc.ColumnName = "id_thuoc";
				colvarIdThuoc.DataType = DbType.Int32;
				colvarIdThuoc.MaxLength = 0;
				colvarIdThuoc.AutoIncrement = false;
				colvarIdThuoc.IsNullable = false;
				colvarIdThuoc.IsPrimaryKey = false;
				colvarIdThuoc.IsForeignKey = false;
				colvarIdThuoc.IsReadOnly = false;
				colvarIdThuoc.DefaultSetting = @"";
				colvarIdThuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdThuoc);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = false;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarIdTralaithuoc = new TableSchema.TableColumn(schema);
				colvarIdTralaithuoc.ColumnName = "id_tralaithuoc";
				colvarIdTralaithuoc.DataType = DbType.Int64;
				colvarIdTralaithuoc.MaxLength = 0;
				colvarIdTralaithuoc.AutoIncrement = false;
				colvarIdTralaithuoc.IsNullable = true;
				colvarIdTralaithuoc.IsPrimaryKey = false;
				colvarIdTralaithuoc.IsForeignKey = false;
				colvarIdTralaithuoc.IsReadOnly = false;
				colvarIdTralaithuoc.DefaultSetting = @"";
				colvarIdTralaithuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdTralaithuoc);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("thuoc_lichsu_tralaithuoctaiquay_chitiet",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("IdChitietThanhtoan")]
		[Bindable(true)]
		public long IdChitietThanhtoan 
		{
			get { return GetColumnValue<long>(Columns.IdChitietThanhtoan); }
			set { SetColumnValue(Columns.IdChitietThanhtoan, value); }
		}
		  
		[XmlAttribute("IdChitietThanhtoanGoc")]
		[Bindable(true)]
		public long IdChitietThanhtoanGoc 
		{
			get { return GetColumnValue<long>(Columns.IdChitietThanhtoanGoc); }
			set { SetColumnValue(Columns.IdChitietThanhtoanGoc, value); }
		}
		  
		[XmlAttribute("IdPhieuchi")]
		[Bindable(true)]
		public long? IdPhieuchi 
		{
			get { return GetColumnValue<long?>(Columns.IdPhieuchi); }
			set { SetColumnValue(Columns.IdPhieuchi, value); }
		}
		  
		[XmlAttribute("IdLoaithanhtoan")]
		[Bindable(true)]
		public byte IdLoaithanhtoan 
		{
			get { return GetColumnValue<byte>(Columns.IdLoaithanhtoan); }
			set { SetColumnValue(Columns.IdLoaithanhtoan, value); }
		}
		  
		[XmlAttribute("SoLuong")]
		[Bindable(true)]
		public int SoLuong 
		{
			get { return GetColumnValue<int>(Columns.SoLuong); }
			set { SetColumnValue(Columns.SoLuong, value); }
		}
		  
		[XmlAttribute("DonGia")]
		[Bindable(true)]
		public decimal DonGia 
		{
			get { return GetColumnValue<decimal>(Columns.DonGia); }
			set { SetColumnValue(Columns.DonGia, value); }
		}
		  
		[XmlAttribute("IdDonthuoc")]
		[Bindable(true)]
		public long IdDonthuoc 
		{
			get { return GetColumnValue<long>(Columns.IdDonthuoc); }
			set { SetColumnValue(Columns.IdDonthuoc, value); }
		}
		  
		[XmlAttribute("IdChitietdonthuoc")]
		[Bindable(true)]
		public long IdChitietdonthuoc 
		{
			get { return GetColumnValue<long>(Columns.IdChitietdonthuoc); }
			set { SetColumnValue(Columns.IdChitietdonthuoc, value); }
		}
		  
		[XmlAttribute("IdThuoc")]
		[Bindable(true)]
		public int IdThuoc 
		{
			get { return GetColumnValue<int>(Columns.IdThuoc); }
			set { SetColumnValue(Columns.IdThuoc, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime NgayTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("IdTralaithuoc")]
		[Bindable(true)]
		public long? IdTralaithuoc 
		{
			get { return GetColumnValue<long?>(Columns.IdTralaithuoc); }
			set { SetColumnValue(Columns.IdTralaithuoc, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long varIdChitietThanhtoan,long varIdChitietThanhtoanGoc,long? varIdPhieuchi,byte varIdLoaithanhtoan,int varSoLuong,decimal varDonGia,long varIdDonthuoc,long varIdChitietdonthuoc,int varIdThuoc,string varNguoiTao,DateTime varNgayTao,long? varIdTralaithuoc)
		{
			ThuocLichsuTralaithuoctaiquayChitiet item = new ThuocLichsuTralaithuoctaiquayChitiet();
			
			item.IdChitietThanhtoan = varIdChitietThanhtoan;
			
			item.IdChitietThanhtoanGoc = varIdChitietThanhtoanGoc;
			
			item.IdPhieuchi = varIdPhieuchi;
			
			item.IdLoaithanhtoan = varIdLoaithanhtoan;
			
			item.SoLuong = varSoLuong;
			
			item.DonGia = varDonGia;
			
			item.IdDonthuoc = varIdDonthuoc;
			
			item.IdChitietdonthuoc = varIdChitietdonthuoc;
			
			item.IdThuoc = varIdThuoc;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.IdTralaithuoc = varIdTralaithuoc;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,long varIdChitietThanhtoan,long varIdChitietThanhtoanGoc,long? varIdPhieuchi,byte varIdLoaithanhtoan,int varSoLuong,decimal varDonGia,long varIdDonthuoc,long varIdChitietdonthuoc,int varIdThuoc,string varNguoiTao,DateTime varNgayTao,long? varIdTralaithuoc)
		{
			ThuocLichsuTralaithuoctaiquayChitiet item = new ThuocLichsuTralaithuoctaiquayChitiet();
			
				item.Id = varId;
			
				item.IdChitietThanhtoan = varIdChitietThanhtoan;
			
				item.IdChitietThanhtoanGoc = varIdChitietThanhtoanGoc;
			
				item.IdPhieuchi = varIdPhieuchi;
			
				item.IdLoaithanhtoan = varIdLoaithanhtoan;
			
				item.SoLuong = varSoLuong;
			
				item.DonGia = varDonGia;
			
				item.IdDonthuoc = varIdDonthuoc;
			
				item.IdChitietdonthuoc = varIdChitietdonthuoc;
			
				item.IdThuoc = varIdThuoc;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.IdTralaithuoc = varIdTralaithuoc;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdChitietThanhtoanColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdChitietThanhtoanGocColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuchiColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdLoaithanhtoanColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDonthuocColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn IdChitietdonthuocColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn IdThuocColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn IdTralaithuocColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string IdChitietThanhtoan = @"id_chitiet_thanhtoan";
			 public static string IdChitietThanhtoanGoc = @"id_chitiet_thanhtoan_goc";
			 public static string IdPhieuchi = @"id_phieuchi";
			 public static string IdLoaithanhtoan = @"id_loaithanhtoan";
			 public static string SoLuong = @"so_luong";
			 public static string DonGia = @"don_gia";
			 public static string IdDonthuoc = @"id_donthuoc";
			 public static string IdChitietdonthuoc = @"id_chitietdonthuoc";
			 public static string IdThuoc = @"id_thuoc";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgayTao = @"ngay_tao";
			 public static string IdTralaithuoc = @"id_tralaithuoc";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
