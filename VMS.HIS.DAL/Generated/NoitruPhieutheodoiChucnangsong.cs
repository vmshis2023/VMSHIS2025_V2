using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the NoitruPhieutheodoiChucnangsong class.
	/// </summary>
    [Serializable]
	public partial class NoitruPhieutheodoiChucnangsongCollection : ActiveList<NoitruPhieutheodoiChucnangsong, NoitruPhieutheodoiChucnangsongCollection>
	{	   
		public NoitruPhieutheodoiChucnangsongCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>NoitruPhieutheodoiChucnangsongCollection</returns>
		public NoitruPhieutheodoiChucnangsongCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                NoitruPhieutheodoiChucnangsong o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the noitru_phieutheodoi_chucnangsong table.
	/// </summary>
	[Serializable]
	public partial class NoitruPhieutheodoiChucnangsong : ActiveRecord<NoitruPhieutheodoiChucnangsong>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public NoitruPhieutheodoiChucnangsong()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public NoitruPhieutheodoiChucnangsong(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public NoitruPhieutheodoiChucnangsong(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public NoitruPhieutheodoiChucnangsong(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("noitru_phieutheodoi_chucnangsong", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 20;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = true;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = true;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarIdPhieuchamsoc = new TableSchema.TableColumn(schema);
				colvarIdPhieuchamsoc.ColumnName = "id_phieuchamsoc";
				colvarIdPhieuchamsoc.DataType = DbType.Int64;
				colvarIdPhieuchamsoc.MaxLength = 0;
				colvarIdPhieuchamsoc.AutoIncrement = false;
				colvarIdPhieuchamsoc.IsNullable = true;
				colvarIdPhieuchamsoc.IsPrimaryKey = false;
				colvarIdPhieuchamsoc.IsForeignKey = false;
				colvarIdPhieuchamsoc.IsReadOnly = false;
				colvarIdPhieuchamsoc.DefaultSetting = @"";
				colvarIdPhieuchamsoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuchamsoc);
				
				TableSchema.TableColumn colvarNhiptho = new TableSchema.TableColumn(schema);
				colvarNhiptho.ColumnName = "nhiptho";
				colvarNhiptho.DataType = DbType.String;
				colvarNhiptho.MaxLength = 5;
				colvarNhiptho.AutoIncrement = false;
				colvarNhiptho.IsNullable = true;
				colvarNhiptho.IsPrimaryKey = false;
				colvarNhiptho.IsForeignKey = false;
				colvarNhiptho.IsReadOnly = false;
				colvarNhiptho.DefaultSetting = @"";
				colvarNhiptho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhiptho);
				
				TableSchema.TableColumn colvarHuyetapTren = new TableSchema.TableColumn(schema);
				colvarHuyetapTren.ColumnName = "huyetap_tren";
				colvarHuyetapTren.DataType = DbType.String;
				colvarHuyetapTren.MaxLength = 5;
				colvarHuyetapTren.AutoIncrement = false;
				colvarHuyetapTren.IsNullable = true;
				colvarHuyetapTren.IsPrimaryKey = false;
				colvarHuyetapTren.IsForeignKey = false;
				colvarHuyetapTren.IsReadOnly = false;
				colvarHuyetapTren.DefaultSetting = @"";
				colvarHuyetapTren.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHuyetapTren);
				
				TableSchema.TableColumn colvarHuyetapDuoi = new TableSchema.TableColumn(schema);
				colvarHuyetapDuoi.ColumnName = "huyetap_duoi";
				colvarHuyetapDuoi.DataType = DbType.String;
				colvarHuyetapDuoi.MaxLength = 5;
				colvarHuyetapDuoi.AutoIncrement = false;
				colvarHuyetapDuoi.IsNullable = true;
				colvarHuyetapDuoi.IsPrimaryKey = false;
				colvarHuyetapDuoi.IsForeignKey = false;
				colvarHuyetapDuoi.IsReadOnly = false;
				colvarHuyetapDuoi.DefaultSetting = @"";
				colvarHuyetapDuoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHuyetapDuoi);
				
				TableSchema.TableColumn colvarNhietDo = new TableSchema.TableColumn(schema);
				colvarNhietDo.ColumnName = "nhiet_do";
				colvarNhietDo.DataType = DbType.String;
				colvarNhietDo.MaxLength = 5;
				colvarNhietDo.AutoIncrement = false;
				colvarNhietDo.IsNullable = true;
				colvarNhietDo.IsPrimaryKey = false;
				colvarNhietDo.IsForeignKey = false;
				colvarNhietDo.IsReadOnly = false;
				colvarNhietDo.DefaultSetting = @"";
				colvarNhietDo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhietDo);
				
				TableSchema.TableColumn colvarChieuCao = new TableSchema.TableColumn(schema);
				colvarChieuCao.ColumnName = "chieu_cao";
				colvarChieuCao.DataType = DbType.String;
				colvarChieuCao.MaxLength = 5;
				colvarChieuCao.AutoIncrement = false;
				colvarChieuCao.IsNullable = true;
				colvarChieuCao.IsPrimaryKey = false;
				colvarChieuCao.IsForeignKey = false;
				colvarChieuCao.IsReadOnly = false;
				colvarChieuCao.DefaultSetting = @"";
				colvarChieuCao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChieuCao);
				
				TableSchema.TableColumn colvarCanNang = new TableSchema.TableColumn(schema);
				colvarCanNang.ColumnName = "can_nang";
				colvarCanNang.DataType = DbType.String;
				colvarCanNang.MaxLength = 5;
				colvarCanNang.AutoIncrement = false;
				colvarCanNang.IsNullable = true;
				colvarCanNang.IsPrimaryKey = false;
				colvarCanNang.IsForeignKey = false;
				colvarCanNang.IsReadOnly = false;
				colvarCanNang.DefaultSetting = @"";
				colvarCanNang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCanNang);
				
				TableSchema.TableColumn colvarBmi = new TableSchema.TableColumn(schema);
				colvarBmi.ColumnName = "bmi";
				colvarBmi.DataType = DbType.String;
				colvarBmi.MaxLength = 5;
				colvarBmi.AutoIncrement = false;
				colvarBmi.IsNullable = true;
				colvarBmi.IsPrimaryKey = false;
				colvarBmi.IsForeignKey = false;
				colvarBmi.IsReadOnly = false;
				colvarBmi.DefaultSetting = @"";
				colvarBmi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBmi);
				
				TableSchema.TableColumn colvarMach = new TableSchema.TableColumn(schema);
				colvarMach.ColumnName = "mach";
				colvarMach.DataType = DbType.String;
				colvarMach.MaxLength = 5;
				colvarMach.AutoIncrement = false;
				colvarMach.IsNullable = true;
				colvarMach.IsPrimaryKey = false;
				colvarMach.IsForeignKey = false;
				colvarMach.IsReadOnly = false;
				colvarMach.DefaultSetting = @"";
				colvarMach.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMach);
				
				TableSchema.TableColumn colvarSpo2 = new TableSchema.TableColumn(schema);
				colvarSpo2.ColumnName = "spo2";
				colvarSpo2.DataType = DbType.String;
				colvarSpo2.MaxLength = 50;
				colvarSpo2.AutoIncrement = false;
				colvarSpo2.IsNullable = true;
				colvarSpo2.IsPrimaryKey = false;
				colvarSpo2.IsForeignKey = false;
				colvarSpo2.IsReadOnly = false;
				colvarSpo2.DefaultSetting = @"";
				colvarSpo2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSpo2);
				
				TableSchema.TableColumn colvarTheodoiNuoctieu = new TableSchema.TableColumn(schema);
				colvarTheodoiNuoctieu.ColumnName = "theodoi_nuoctieu";
				colvarTheodoiNuoctieu.DataType = DbType.String;
				colvarTheodoiNuoctieu.MaxLength = 255;
				colvarTheodoiNuoctieu.AutoIncrement = false;
				colvarTheodoiNuoctieu.IsNullable = true;
				colvarTheodoiNuoctieu.IsPrimaryKey = false;
				colvarTheodoiNuoctieu.IsForeignKey = false;
				colvarTheodoiNuoctieu.IsReadOnly = false;
				colvarTheodoiNuoctieu.DefaultSetting = @"";
				colvarTheodoiNuoctieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTheodoiNuoctieu);
				
				TableSchema.TableColumn colvarTheodoiThem = new TableSchema.TableColumn(schema);
				colvarTheodoiThem.ColumnName = "theodoi_them";
				colvarTheodoiThem.DataType = DbType.String;
				colvarTheodoiThem.MaxLength = 255;
				colvarTheodoiThem.AutoIncrement = false;
				colvarTheodoiThem.IsNullable = true;
				colvarTheodoiThem.IsPrimaryKey = false;
				colvarTheodoiThem.IsForeignKey = false;
				colvarTheodoiThem.IsReadOnly = false;
				colvarTheodoiThem.DefaultSetting = @"";
				colvarTheodoiThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTheodoiThem);
				
				TableSchema.TableColumn colvarIdPhieudieutri = new TableSchema.TableColumn(schema);
				colvarIdPhieudieutri.ColumnName = "id_phieudieutri";
				colvarIdPhieudieutri.DataType = DbType.Int64;
				colvarIdPhieudieutri.MaxLength = 0;
				colvarIdPhieudieutri.AutoIncrement = false;
				colvarIdPhieudieutri.IsNullable = true;
				colvarIdPhieudieutri.IsPrimaryKey = false;
				colvarIdPhieudieutri.IsForeignKey = false;
				colvarIdPhieudieutri.IsReadOnly = false;
				colvarIdPhieudieutri.DefaultSetting = @"";
				colvarIdPhieudieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieudieutri);
				
				TableSchema.TableColumn colvarIdKhoanoitru = new TableSchema.TableColumn(schema);
				colvarIdKhoanoitru.ColumnName = "id_khoanoitru";
				colvarIdKhoanoitru.DataType = DbType.Int16;
				colvarIdKhoanoitru.MaxLength = 0;
				colvarIdKhoanoitru.AutoIncrement = false;
				colvarIdKhoanoitru.IsNullable = true;
				colvarIdKhoanoitru.IsPrimaryKey = false;
				colvarIdKhoanoitru.IsForeignKey = false;
				colvarIdKhoanoitru.IsReadOnly = false;
				colvarIdKhoanoitru.DefaultSetting = @"";
				colvarIdKhoanoitru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoanoitru);
				
				TableSchema.TableColumn colvarIdBuongGiuong = new TableSchema.TableColumn(schema);
				colvarIdBuongGiuong.ColumnName = "id_buong_giuong";
				colvarIdBuongGiuong.DataType = DbType.Int64;
				colvarIdBuongGiuong.MaxLength = 0;
				colvarIdBuongGiuong.AutoIncrement = false;
				colvarIdBuongGiuong.IsNullable = true;
				colvarIdBuongGiuong.IsPrimaryKey = false;
				colvarIdBuongGiuong.IsForeignKey = false;
				colvarIdBuongGiuong.IsReadOnly = false;
				colvarIdBuongGiuong.DefaultSetting = @"";
				colvarIdBuongGiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBuongGiuong);
				
				TableSchema.TableColumn colvarIdBuong = new TableSchema.TableColumn(schema);
				colvarIdBuong.ColumnName = "id_buong";
				colvarIdBuong.DataType = DbType.Int32;
				colvarIdBuong.MaxLength = 0;
				colvarIdBuong.AutoIncrement = false;
				colvarIdBuong.IsNullable = true;
				colvarIdBuong.IsPrimaryKey = false;
				colvarIdBuong.IsForeignKey = false;
				colvarIdBuong.IsReadOnly = false;
				colvarIdBuong.DefaultSetting = @"";
				colvarIdBuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBuong);
				
				TableSchema.TableColumn colvarIdGiuong = new TableSchema.TableColumn(schema);
				colvarIdGiuong.ColumnName = "id_giuong";
				colvarIdGiuong.DataType = DbType.Int32;
				colvarIdGiuong.MaxLength = 0;
				colvarIdGiuong.AutoIncrement = false;
				colvarIdGiuong.IsNullable = true;
				colvarIdGiuong.IsPrimaryKey = false;
				colvarIdGiuong.IsForeignKey = false;
				colvarIdGiuong.IsReadOnly = false;
				colvarIdGiuong.DefaultSetting = @"";
				colvarIdGiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGiuong);
				
				TableSchema.TableColumn colvarTthaiIn = new TableSchema.TableColumn(schema);
				colvarTthaiIn.ColumnName = "tthai_in";
				colvarTthaiIn.DataType = DbType.Boolean;
				colvarTthaiIn.MaxLength = 0;
				colvarTthaiIn.AutoIncrement = false;
				colvarTthaiIn.IsNullable = true;
				colvarTthaiIn.IsPrimaryKey = false;
				colvarTthaiIn.IsForeignKey = false;
				colvarTthaiIn.IsReadOnly = false;
				
						colvarTthaiIn.DefaultSetting = @"((0))";
				colvarTthaiIn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTthaiIn);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = false;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 30;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("noitru_phieutheodoi_chucnangsong",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long? IdBenhnhan 
		{
			get { return GetColumnValue<long?>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("IdPhieuchamsoc")]
		[Bindable(true)]
		public long? IdPhieuchamsoc 
		{
			get { return GetColumnValue<long?>(Columns.IdPhieuchamsoc); }
			set { SetColumnValue(Columns.IdPhieuchamsoc, value); }
		}
		  
		[XmlAttribute("Nhiptho")]
		[Bindable(true)]
		public string Nhiptho 
		{
			get { return GetColumnValue<string>(Columns.Nhiptho); }
			set { SetColumnValue(Columns.Nhiptho, value); }
		}
		  
		[XmlAttribute("HuyetapTren")]
		[Bindable(true)]
		public string HuyetapTren 
		{
			get { return GetColumnValue<string>(Columns.HuyetapTren); }
			set { SetColumnValue(Columns.HuyetapTren, value); }
		}
		  
		[XmlAttribute("HuyetapDuoi")]
		[Bindable(true)]
		public string HuyetapDuoi 
		{
			get { return GetColumnValue<string>(Columns.HuyetapDuoi); }
			set { SetColumnValue(Columns.HuyetapDuoi, value); }
		}
		  
		[XmlAttribute("NhietDo")]
		[Bindable(true)]
		public string NhietDo 
		{
			get { return GetColumnValue<string>(Columns.NhietDo); }
			set { SetColumnValue(Columns.NhietDo, value); }
		}
		  
		[XmlAttribute("ChieuCao")]
		[Bindable(true)]
		public string ChieuCao 
		{
			get { return GetColumnValue<string>(Columns.ChieuCao); }
			set { SetColumnValue(Columns.ChieuCao, value); }
		}
		  
		[XmlAttribute("CanNang")]
		[Bindable(true)]
		public string CanNang 
		{
			get { return GetColumnValue<string>(Columns.CanNang); }
			set { SetColumnValue(Columns.CanNang, value); }
		}
		  
		[XmlAttribute("Bmi")]
		[Bindable(true)]
		public string Bmi 
		{
			get { return GetColumnValue<string>(Columns.Bmi); }
			set { SetColumnValue(Columns.Bmi, value); }
		}
		  
		[XmlAttribute("Mach")]
		[Bindable(true)]
		public string Mach 
		{
			get { return GetColumnValue<string>(Columns.Mach); }
			set { SetColumnValue(Columns.Mach, value); }
		}
		  
		[XmlAttribute("Spo2")]
		[Bindable(true)]
		public string Spo2 
		{
			get { return GetColumnValue<string>(Columns.Spo2); }
			set { SetColumnValue(Columns.Spo2, value); }
		}
		  
		[XmlAttribute("TheodoiNuoctieu")]
		[Bindable(true)]
		public string TheodoiNuoctieu 
		{
			get { return GetColumnValue<string>(Columns.TheodoiNuoctieu); }
			set { SetColumnValue(Columns.TheodoiNuoctieu, value); }
		}
		  
		[XmlAttribute("TheodoiThem")]
		[Bindable(true)]
		public string TheodoiThem 
		{
			get { return GetColumnValue<string>(Columns.TheodoiThem); }
			set { SetColumnValue(Columns.TheodoiThem, value); }
		}
		  
		[XmlAttribute("IdPhieudieutri")]
		[Bindable(true)]
		public long? IdPhieudieutri 
		{
			get { return GetColumnValue<long?>(Columns.IdPhieudieutri); }
			set { SetColumnValue(Columns.IdPhieudieutri, value); }
		}
		  
		[XmlAttribute("IdKhoanoitru")]
		[Bindable(true)]
		public short? IdKhoanoitru 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoanoitru); }
			set { SetColumnValue(Columns.IdKhoanoitru, value); }
		}
		  
		[XmlAttribute("IdBuongGiuong")]
		[Bindable(true)]
		public long? IdBuongGiuong 
		{
			get { return GetColumnValue<long?>(Columns.IdBuongGiuong); }
			set { SetColumnValue(Columns.IdBuongGiuong, value); }
		}
		  
		[XmlAttribute("IdBuong")]
		[Bindable(true)]
		public int? IdBuong 
		{
			get { return GetColumnValue<int?>(Columns.IdBuong); }
			set { SetColumnValue(Columns.IdBuong, value); }
		}
		  
		[XmlAttribute("IdGiuong")]
		[Bindable(true)]
		public int? IdGiuong 
		{
			get { return GetColumnValue<int?>(Columns.IdGiuong); }
			set { SetColumnValue(Columns.IdGiuong, value); }
		}
		  
		[XmlAttribute("TthaiIn")]
		[Bindable(true)]
		public bool? TthaiIn 
		{
			get { return GetColumnValue<bool?>(Columns.TthaiIn); }
			set { SetColumnValue(Columns.TthaiIn, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime NgayTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaLuotkham,long? varIdBenhnhan,long? varIdPhieuchamsoc,string varNhiptho,string varHuyetapTren,string varHuyetapDuoi,string varNhietDo,string varChieuCao,string varCanNang,string varBmi,string varMach,string varSpo2,string varTheodoiNuoctieu,string varTheodoiThem,long? varIdPhieudieutri,short? varIdKhoanoitru,long? varIdBuongGiuong,int? varIdBuong,int? varIdGiuong,bool? varTthaiIn,DateTime varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua)
		{
			NoitruPhieutheodoiChucnangsong item = new NoitruPhieutheodoiChucnangsong();
			
			item.MaLuotkham = varMaLuotkham;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.IdPhieuchamsoc = varIdPhieuchamsoc;
			
			item.Nhiptho = varNhiptho;
			
			item.HuyetapTren = varHuyetapTren;
			
			item.HuyetapDuoi = varHuyetapDuoi;
			
			item.NhietDo = varNhietDo;
			
			item.ChieuCao = varChieuCao;
			
			item.CanNang = varCanNang;
			
			item.Bmi = varBmi;
			
			item.Mach = varMach;
			
			item.Spo2 = varSpo2;
			
			item.TheodoiNuoctieu = varTheodoiNuoctieu;
			
			item.TheodoiThem = varTheodoiThem;
			
			item.IdPhieudieutri = varIdPhieudieutri;
			
			item.IdKhoanoitru = varIdKhoanoitru;
			
			item.IdBuongGiuong = varIdBuongGiuong;
			
			item.IdBuong = varIdBuong;
			
			item.IdGiuong = varIdGiuong;
			
			item.TthaiIn = varTthaiIn;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,string varMaLuotkham,long? varIdBenhnhan,long? varIdPhieuchamsoc,string varNhiptho,string varHuyetapTren,string varHuyetapDuoi,string varNhietDo,string varChieuCao,string varCanNang,string varBmi,string varMach,string varSpo2,string varTheodoiNuoctieu,string varTheodoiThem,long? varIdPhieudieutri,short? varIdKhoanoitru,long? varIdBuongGiuong,int? varIdBuong,int? varIdGiuong,bool? varTthaiIn,DateTime varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua)
		{
			NoitruPhieutheodoiChucnangsong item = new NoitruPhieutheodoiChucnangsong();
			
				item.Id = varId;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.IdPhieuchamsoc = varIdPhieuchamsoc;
			
				item.Nhiptho = varNhiptho;
			
				item.HuyetapTren = varHuyetapTren;
			
				item.HuyetapDuoi = varHuyetapDuoi;
			
				item.NhietDo = varNhietDo;
			
				item.ChieuCao = varChieuCao;
			
				item.CanNang = varCanNang;
			
				item.Bmi = varBmi;
			
				item.Mach = varMach;
			
				item.Spo2 = varSpo2;
			
				item.TheodoiNuoctieu = varTheodoiNuoctieu;
			
				item.TheodoiThem = varTheodoiThem;
			
				item.IdPhieudieutri = varIdPhieudieutri;
			
				item.IdKhoanoitru = varIdKhoanoitru;
			
				item.IdBuongGiuong = varIdBuongGiuong;
			
				item.IdBuong = varIdBuong;
			
				item.IdGiuong = varIdGiuong;
			
				item.TthaiIn = varTthaiIn;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuchamsocColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn NhipthoColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn HuyetapTrenColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn HuyetapDuoiColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NhietDoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn ChieuCaoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn CanNangColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn BmiColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn MachColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn Spo2Column
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn TheodoiNuoctieuColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn TheodoiThemColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieudieutriColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoanoitruColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBuongGiuongColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBuongColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGiuongColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn TthaiInColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string IdPhieuchamsoc = @"id_phieuchamsoc";
			 public static string Nhiptho = @"nhiptho";
			 public static string HuyetapTren = @"huyetap_tren";
			 public static string HuyetapDuoi = @"huyetap_duoi";
			 public static string NhietDo = @"nhiet_do";
			 public static string ChieuCao = @"chieu_cao";
			 public static string CanNang = @"can_nang";
			 public static string Bmi = @"bmi";
			 public static string Mach = @"mach";
			 public static string Spo2 = @"spo2";
			 public static string TheodoiNuoctieu = @"theodoi_nuoctieu";
			 public static string TheodoiThem = @"theodoi_them";
			 public static string IdPhieudieutri = @"id_phieudieutri";
			 public static string IdKhoanoitru = @"id_khoanoitru";
			 public static string IdBuongGiuong = @"id_buong_giuong";
			 public static string IdBuong = @"id_buong";
			 public static string IdGiuong = @"id_giuong";
			 public static string TthaiIn = @"tthai_in";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgaySua = @"ngay_sua";
			 public static string NguoiSua = @"nguoi_sua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
