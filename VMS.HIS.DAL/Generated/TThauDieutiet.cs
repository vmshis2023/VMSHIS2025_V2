using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VMS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the TThauDieutiet class.
	/// </summary>
    [Serializable]
	public partial class TThauDieutietCollection : ActiveList<TThauDieutiet, TThauDieutietCollection>
	{	   
		public TThauDieutietCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TThauDieutietCollection</returns>
		public TThauDieutietCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TThauDieutiet o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the t_thau_dieutiet table.
	/// </summary>
	[Serializable]
	public partial class TThauDieutiet : ActiveRecord<TThauDieutiet>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TThauDieutiet()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TThauDieutiet(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TThauDieutiet(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TThauDieutiet(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("t_thau_dieutiet", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdDieutiet = new TableSchema.TableColumn(schema);
				colvarIdDieutiet.ColumnName = "id_dieutiet";
				colvarIdDieutiet.DataType = DbType.Int64;
				colvarIdDieutiet.MaxLength = 0;
				colvarIdDieutiet.AutoIncrement = true;
				colvarIdDieutiet.IsNullable = false;
				colvarIdDieutiet.IsPrimaryKey = true;
				colvarIdDieutiet.IsForeignKey = false;
				colvarIdDieutiet.IsReadOnly = false;
				colvarIdDieutiet.DefaultSetting = @"";
				colvarIdDieutiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDieutiet);
				
				TableSchema.TableColumn colvarIdThau = new TableSchema.TableColumn(schema);
				colvarIdThau.ColumnName = "id_thau";
				colvarIdThau.DataType = DbType.Int64;
				colvarIdThau.MaxLength = 0;
				colvarIdThau.AutoIncrement = false;
				colvarIdThau.IsNullable = false;
				colvarIdThau.IsPrimaryKey = false;
				colvarIdThau.IsForeignKey = false;
				colvarIdThau.IsReadOnly = false;
				colvarIdThau.DefaultSetting = @"";
				colvarIdThau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdThau);
				
				TableSchema.TableColumn colvarLoaiDieutiet = new TableSchema.TableColumn(schema);
				colvarLoaiDieutiet.ColumnName = "loai_dieutiet";
				colvarLoaiDieutiet.DataType = DbType.Byte;
				colvarLoaiDieutiet.MaxLength = 0;
				colvarLoaiDieutiet.AutoIncrement = false;
				colvarLoaiDieutiet.IsNullable = false;
				colvarLoaiDieutiet.IsPrimaryKey = false;
				colvarLoaiDieutiet.IsForeignKey = false;
				colvarLoaiDieutiet.IsReadOnly = false;
				colvarLoaiDieutiet.DefaultSetting = @"";
				colvarLoaiDieutiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiDieutiet);
				
				TableSchema.TableColumn colvarNgayDieutiet = new TableSchema.TableColumn(schema);
				colvarNgayDieutiet.ColumnName = "ngay_dieutiet";
				colvarNgayDieutiet.DataType = DbType.DateTime;
				colvarNgayDieutiet.MaxLength = 0;
				colvarNgayDieutiet.AutoIncrement = false;
				colvarNgayDieutiet.IsNullable = true;
				colvarNgayDieutiet.IsPrimaryKey = false;
				colvarNgayDieutiet.IsForeignKey = false;
				colvarNgayDieutiet.IsReadOnly = false;
				colvarNgayDieutiet.DefaultSetting = @"";
				colvarNgayDieutiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayDieutiet);
				
				TableSchema.TableColumn colvarIdBenhvienDieutiet = new TableSchema.TableColumn(schema);
				colvarIdBenhvienDieutiet.ColumnName = "id_benhvien_dieutiet";
				colvarIdBenhvienDieutiet.DataType = DbType.Int32;
				colvarIdBenhvienDieutiet.MaxLength = 0;
				colvarIdBenhvienDieutiet.AutoIncrement = false;
				colvarIdBenhvienDieutiet.IsNullable = false;
				colvarIdBenhvienDieutiet.IsPrimaryKey = false;
				colvarIdBenhvienDieutiet.IsForeignKey = false;
				colvarIdBenhvienDieutiet.IsReadOnly = false;
				colvarIdBenhvienDieutiet.DefaultSetting = @"";
				colvarIdBenhvienDieutiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhvienDieutiet);
				
				TableSchema.TableColumn colvarSoHdongDieutiet = new TableSchema.TableColumn(schema);
				colvarSoHdongDieutiet.ColumnName = "so_hdong_dieutiet";
				colvarSoHdongDieutiet.DataType = DbType.String;
				colvarSoHdongDieutiet.MaxLength = 50;
				colvarSoHdongDieutiet.AutoIncrement = false;
				colvarSoHdongDieutiet.IsNullable = true;
				colvarSoHdongDieutiet.IsPrimaryKey = false;
				colvarSoHdongDieutiet.IsForeignKey = false;
				colvarSoHdongDieutiet.IsReadOnly = false;
				colvarSoHdongDieutiet.DefaultSetting = @"";
				colvarSoHdongDieutiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoHdongDieutiet);
				
				TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
				colvarGhiChu.ColumnName = "ghi_chu";
				colvarGhiChu.DataType = DbType.String;
				colvarGhiChu.MaxLength = 255;
				colvarGhiChu.AutoIncrement = false;
				colvarGhiChu.IsNullable = true;
				colvarGhiChu.IsPrimaryKey = false;
				colvarGhiChu.IsForeignKey = false;
				colvarGhiChu.IsReadOnly = false;
				colvarGhiChu.DefaultSetting = @"";
				colvarGhiChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChu);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.Byte;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = true;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				
						colvarTrangThai.DefaultSetting = @"((0))";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = false;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 30;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgayXacnhan = new TableSchema.TableColumn(schema);
				colvarNgayXacnhan.ColumnName = "ngay_xacnhan";
				colvarNgayXacnhan.DataType = DbType.DateTime;
				colvarNgayXacnhan.MaxLength = 0;
				colvarNgayXacnhan.AutoIncrement = false;
				colvarNgayXacnhan.IsNullable = true;
				colvarNgayXacnhan.IsPrimaryKey = false;
				colvarNgayXacnhan.IsForeignKey = false;
				colvarNgayXacnhan.IsReadOnly = false;
				colvarNgayXacnhan.DefaultSetting = @"";
				colvarNgayXacnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayXacnhan);
				
				TableSchema.TableColumn colvarNguoiXacnhan = new TableSchema.TableColumn(schema);
				colvarNguoiXacnhan.ColumnName = "nguoi_xacnhan";
				colvarNguoiXacnhan.DataType = DbType.String;
				colvarNguoiXacnhan.MaxLength = 30;
				colvarNguoiXacnhan.AutoIncrement = false;
				colvarNguoiXacnhan.IsNullable = true;
				colvarNguoiXacnhan.IsPrimaryKey = false;
				colvarNguoiXacnhan.IsForeignKey = false;
				colvarNguoiXacnhan.IsReadOnly = false;
				colvarNguoiXacnhan.DefaultSetting = @"";
				colvarNguoiXacnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiXacnhan);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("t_thau_dieutiet",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdDieutiet")]
		[Bindable(true)]
		public long IdDieutiet 
		{
			get { return GetColumnValue<long>(Columns.IdDieutiet); }
			set { SetColumnValue(Columns.IdDieutiet, value); }
		}
		  
		[XmlAttribute("IdThau")]
		[Bindable(true)]
		public long IdThau 
		{
			get { return GetColumnValue<long>(Columns.IdThau); }
			set { SetColumnValue(Columns.IdThau, value); }
		}
		  
		[XmlAttribute("LoaiDieutiet")]
		[Bindable(true)]
		public byte LoaiDieutiet 
		{
			get { return GetColumnValue<byte>(Columns.LoaiDieutiet); }
			set { SetColumnValue(Columns.LoaiDieutiet, value); }
		}
		  
		[XmlAttribute("NgayDieutiet")]
		[Bindable(true)]
		public DateTime? NgayDieutiet 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayDieutiet); }
			set { SetColumnValue(Columns.NgayDieutiet, value); }
		}
		  
		[XmlAttribute("IdBenhvienDieutiet")]
		[Bindable(true)]
		public int IdBenhvienDieutiet 
		{
			get { return GetColumnValue<int>(Columns.IdBenhvienDieutiet); }
			set { SetColumnValue(Columns.IdBenhvienDieutiet, value); }
		}
		  
		[XmlAttribute("SoHdongDieutiet")]
		[Bindable(true)]
		public string SoHdongDieutiet 
		{
			get { return GetColumnValue<string>(Columns.SoHdongDieutiet); }
			set { SetColumnValue(Columns.SoHdongDieutiet, value); }
		}
		  
		[XmlAttribute("GhiChu")]
		[Bindable(true)]
		public string GhiChu 
		{
			get { return GetColumnValue<string>(Columns.GhiChu); }
			set { SetColumnValue(Columns.GhiChu, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public byte? TrangThai 
		{
			get { return GetColumnValue<byte?>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime NgayTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgayXacnhan")]
		[Bindable(true)]
		public DateTime? NgayXacnhan 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayXacnhan); }
			set { SetColumnValue(Columns.NgayXacnhan, value); }
		}
		  
		[XmlAttribute("NguoiXacnhan")]
		[Bindable(true)]
		public string NguoiXacnhan 
		{
			get { return GetColumnValue<string>(Columns.NguoiXacnhan); }
			set { SetColumnValue(Columns.NguoiXacnhan, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long varIdThau,byte varLoaiDieutiet,DateTime? varNgayDieutiet,int varIdBenhvienDieutiet,string varSoHdongDieutiet,string varGhiChu,byte? varTrangThai,DateTime varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,DateTime? varNgayXacnhan,string varNguoiXacnhan)
		{
			TThauDieutiet item = new TThauDieutiet();
			
			item.IdThau = varIdThau;
			
			item.LoaiDieutiet = varLoaiDieutiet;
			
			item.NgayDieutiet = varNgayDieutiet;
			
			item.IdBenhvienDieutiet = varIdBenhvienDieutiet;
			
			item.SoHdongDieutiet = varSoHdongDieutiet;
			
			item.GhiChu = varGhiChu;
			
			item.TrangThai = varTrangThai;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgayXacnhan = varNgayXacnhan;
			
			item.NguoiXacnhan = varNguoiXacnhan;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varIdDieutiet,long varIdThau,byte varLoaiDieutiet,DateTime? varNgayDieutiet,int varIdBenhvienDieutiet,string varSoHdongDieutiet,string varGhiChu,byte? varTrangThai,DateTime varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,DateTime? varNgayXacnhan,string varNguoiXacnhan)
		{
			TThauDieutiet item = new TThauDieutiet();
			
				item.IdDieutiet = varIdDieutiet;
			
				item.IdThau = varIdThau;
			
				item.LoaiDieutiet = varLoaiDieutiet;
			
				item.NgayDieutiet = varNgayDieutiet;
			
				item.IdBenhvienDieutiet = varIdBenhvienDieutiet;
			
				item.SoHdongDieutiet = varSoHdongDieutiet;
			
				item.GhiChu = varGhiChu;
			
				item.TrangThai = varTrangThai;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgayXacnhan = varNgayXacnhan;
			
				item.NguoiXacnhan = varNguoiXacnhan;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdDieutietColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdThauColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiDieutietColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayDieutietColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhvienDieutietColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn SoHdongDieutietColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayXacnhanColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiXacnhanColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdDieutiet = @"id_dieutiet";
			 public static string IdThau = @"id_thau";
			 public static string LoaiDieutiet = @"loai_dieutiet";
			 public static string NgayDieutiet = @"ngay_dieutiet";
			 public static string IdBenhvienDieutiet = @"id_benhvien_dieutiet";
			 public static string SoHdongDieutiet = @"so_hdong_dieutiet";
			 public static string GhiChu = @"ghi_chu";
			 public static string TrangThai = @"trang_thai";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgaySua = @"ngay_sua";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string NgayXacnhan = @"ngay_xacnhan";
			 public static string NguoiXacnhan = @"nguoi_xacnhan";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
