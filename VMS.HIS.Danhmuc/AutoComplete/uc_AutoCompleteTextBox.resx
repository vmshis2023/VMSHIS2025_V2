<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdShow.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="autoCompleteTextbox1.AutoCompleteList" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAJoBbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
        ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0sIG1zY29ybGliLCBWZXJzaW9u
        PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQUB
        AAAAMFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkxpc3RgMVtbU3lzdGVtLlN0cmluZwMAAAAGX2l0
        ZW1zBV9zaXplCF92ZXJzaW9uBgAACAgCAAAACQMAAAAAAAAAAAAAABEDAAAAAAAAAAs=
</value>
  </data>
</root>