using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for L_Drugs
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class LDrugController
    {
        // Preload our schema..
        LDrug thisSchemaLoad = new LDrug();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public LDrugCollection FetchAll()
        {
            LDrugCollection coll = new LDrugCollection();
            Query qry = new Query(LDrug.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public LDrugCollection FetchByID(object DrugId)
        {
            LDrugCollection coll = new LDrugCollection().Where("Drug_ID", DrugId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public LDrugCollection FetchByQuery(Query qry)
        {
            LDrugCollection coll = new LDrugCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object DrugId)
        {
            return (LDrug.Delete(DrugId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object DrugId)
        {
            return (LDrug.Destroy(DrugId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string DrugCode,string DrugName,short DrugTypeId,byte DrugNature,decimal Price,short UnitId,byte HieuLuc,string SDesc,string Active,string Content,string Manufacturers,string NumberRegister,string Producer,string ListBHYT,string DangBche,string NguoiTao,DateTime? NgayTao,DateTime? NgaySua,string NguoiSua,int? BnNgoaiTru,int? BnNoiTru,string MaKhoaThien,string KieuThuocVt,string TenBhyt,string NqTt,bool? IsNhapSLKhong)
	    {
		    LDrug item = new LDrug();
		    
            item.DrugCode = DrugCode;
            
            item.DrugName = DrugName;
            
            item.DrugTypeId = DrugTypeId;
            
            item.DrugNature = DrugNature;
            
            item.Price = Price;
            
            item.UnitId = UnitId;
            
            item.HieuLuc = HieuLuc;
            
            item.SDesc = SDesc;
            
            item.Active = Active;
            
            item.Content = Content;
            
            item.Manufacturers = Manufacturers;
            
            item.NumberRegister = NumberRegister;
            
            item.Producer = Producer;
            
            item.ListBHYT = ListBHYT;
            
            item.DangBche = DangBche;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.NgaySua = NgaySua;
            
            item.NguoiSua = NguoiSua;
            
            item.BnNgoaiTru = BnNgoaiTru;
            
            item.BnNoiTru = BnNoiTru;
            
            item.MaKhoaThien = MaKhoaThien;
            
            item.KieuThuocVt = KieuThuocVt;
            
            item.TenBhyt = TenBhyt;
            
            item.NqTt = NqTt;
            
            item.IsNhapSLKhong = IsNhapSLKhong;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int DrugId,string DrugCode,string DrugName,short DrugTypeId,byte DrugNature,decimal Price,short UnitId,byte HieuLuc,string SDesc,string Active,string Content,string Manufacturers,string NumberRegister,string Producer,string ListBHYT,string DangBche,string NguoiTao,DateTime? NgayTao,DateTime? NgaySua,string NguoiSua,int? BnNgoaiTru,int? BnNoiTru,string MaKhoaThien,string KieuThuocVt,string TenBhyt,string NqTt,bool? IsNhapSLKhong)
	    {
		    LDrug item = new LDrug();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.DrugId = DrugId;
				
			item.DrugCode = DrugCode;
				
			item.DrugName = DrugName;
				
			item.DrugTypeId = DrugTypeId;
				
			item.DrugNature = DrugNature;
				
			item.Price = Price;
				
			item.UnitId = UnitId;
				
			item.HieuLuc = HieuLuc;
				
			item.SDesc = SDesc;
				
			item.Active = Active;
				
			item.Content = Content;
				
			item.Manufacturers = Manufacturers;
				
			item.NumberRegister = NumberRegister;
				
			item.Producer = Producer;
				
			item.ListBHYT = ListBHYT;
				
			item.DangBche = DangBche;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.NgaySua = NgaySua;
				
			item.NguoiSua = NguoiSua;
				
			item.BnNgoaiTru = BnNgoaiTru;
				
			item.BnNoiTru = BnNoiTru;
				
			item.MaKhoaThien = MaKhoaThien;
				
			item.KieuThuocVt = KieuThuocVt;
				
			item.TenBhyt = TenBhyt;
				
			item.NqTt = NqTt;
				
			item.IsNhapSLKhong = IsNhapSLKhong;
				
	        item.Save(UserName);
	    }
    }
}
