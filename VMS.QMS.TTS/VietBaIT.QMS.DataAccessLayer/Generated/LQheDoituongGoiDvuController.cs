using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for L_QHE_DOITUONG_GOI_DVU
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class LQheDoituongGoiDvuController
    {
        // Preload our schema..
        LQheDoituongGoiDvu thisSchemaLoad = new LQheDoituongGoiDvu();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public LQheDoituongGoiDvuCollection FetchAll()
        {
            LQheDoituongGoiDvuCollection coll = new LQheDoituongGoiDvuCollection();
            Query qry = new Query(LQheDoituongGoiDvu.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public LQheDoituongGoiDvuCollection FetchByID(object Id)
        {
            LQheDoituongGoiDvuCollection coll = new LQheDoituongGoiDvuCollection().Where("ID", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public LQheDoituongGoiDvuCollection FetchByQuery(Query qry)
        {
            LQheDoituongGoiDvuCollection coll = new LQheDoituongGoiDvuCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (LQheDoituongGoiDvu.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (LQheDoituongGoiDvu.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string MaGoiDvu,string MaDtuong,int? SoLuong,decimal? GiaDtuong,decimal? DonGia,decimal? PhuThu,int IdDvu,int IdLoaiDvu,string TenDvu,string TenLoaiDvu,string MaKieuDvu,int? IdGoiDvu,string KieuThue)
	    {
		    LQheDoituongGoiDvu item = new LQheDoituongGoiDvu();
		    
            item.MaGoiDvu = MaGoiDvu;
            
            item.MaDtuong = MaDtuong;
            
            item.SoLuong = SoLuong;
            
            item.GiaDtuong = GiaDtuong;
            
            item.DonGia = DonGia;
            
            item.PhuThu = PhuThu;
            
            item.IdDvu = IdDvu;
            
            item.IdLoaiDvu = IdLoaiDvu;
            
            item.TenDvu = TenDvu;
            
            item.TenLoaiDvu = TenLoaiDvu;
            
            item.MaKieuDvu = MaKieuDvu;
            
            item.IdGoiDvu = IdGoiDvu;
            
            item.KieuThue = KieuThue;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Id,string MaGoiDvu,string MaDtuong,int? SoLuong,decimal? GiaDtuong,decimal? DonGia,decimal? PhuThu,int IdDvu,int IdLoaiDvu,string TenDvu,string TenLoaiDvu,string MaKieuDvu,int? IdGoiDvu,string KieuThue)
	    {
		    LQheDoituongGoiDvu item = new LQheDoituongGoiDvu();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.MaGoiDvu = MaGoiDvu;
				
			item.MaDtuong = MaDtuong;
				
			item.SoLuong = SoLuong;
				
			item.GiaDtuong = GiaDtuong;
				
			item.DonGia = DonGia;
				
			item.PhuThu = PhuThu;
				
			item.IdDvu = IdDvu;
				
			item.IdLoaiDvu = IdLoaiDvu;
				
			item.TenDvu = TenDvu;
				
			item.TenLoaiDvu = TenLoaiDvu;
				
			item.MaKieuDvu = MaKieuDvu;
				
			item.IdGoiDvu = IdGoiDvu;
				
			item.KieuThue = KieuThue;
				
	        item.Save(UserName);
	    }
    }
}
