using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TMienGiamThanhtoan class.
	/// </summary>
    [Serializable]
	public partial class TMienGiamThanhtoanCollection : ActiveList<TMienGiamThanhtoan, TMienGiamThanhtoanCollection>
	{	   
		public TMienGiamThanhtoanCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TMienGiamThanhtoanCollection</returns>
		public TMienGiamThanhtoanCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TMienGiamThanhtoan o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_MIEN_GIAM_THANHTOAN table.
	/// </summary>
	[Serializable]
	public partial class TMienGiamThanhtoan : ActiveRecord<TMienGiamThanhtoan>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TMienGiamThanhtoan()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TMienGiamThanhtoan(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TMienGiamThanhtoan(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TMienGiamThanhtoan(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_MIEN_GIAM_THANHTOAN", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdCkhau = new TableSchema.TableColumn(schema);
				colvarIdCkhau.ColumnName = "ID_CKHAU";
				colvarIdCkhau.DataType = DbType.Int32;
				colvarIdCkhau.MaxLength = 0;
				colvarIdCkhau.AutoIncrement = true;
				colvarIdCkhau.IsNullable = false;
				colvarIdCkhau.IsPrimaryKey = true;
				colvarIdCkhau.IsForeignKey = false;
				colvarIdCkhau.IsReadOnly = false;
				colvarIdCkhau.DefaultSetting = @"";
				colvarIdCkhau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdCkhau);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.String;
				colvarPatientCode.MaxLength = 50;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = true;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int32;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = true;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarIdNhanvien = new TableSchema.TableColumn(schema);
				colvarIdNhanvien.ColumnName = "ID_NHANVIEN";
				colvarIdNhanvien.DataType = DbType.Int16;
				colvarIdNhanvien.MaxLength = 0;
				colvarIdNhanvien.AutoIncrement = false;
				colvarIdNhanvien.IsNullable = true;
				colvarIdNhanvien.IsPrimaryKey = false;
				colvarIdNhanvien.IsForeignKey = false;
				colvarIdNhanvien.IsReadOnly = false;
				colvarIdNhanvien.DefaultSetting = @"";
				colvarIdNhanvien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhanvien);
				
				TableSchema.TableColumn colvarNgayCkhau = new TableSchema.TableColumn(schema);
				colvarNgayCkhau.ColumnName = "NGAY_CKHAU";
				colvarNgayCkhau.DataType = DbType.DateTime;
				colvarNgayCkhau.MaxLength = 0;
				colvarNgayCkhau.AutoIncrement = false;
				colvarNgayCkhau.IsNullable = true;
				colvarNgayCkhau.IsPrimaryKey = false;
				colvarNgayCkhau.IsForeignKey = false;
				colvarNgayCkhau.IsReadOnly = false;
				colvarNgayCkhau.DefaultSetting = @"";
				colvarNgayCkhau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayCkhau);
				
				TableSchema.TableColumn colvarNguoiKyMg = new TableSchema.TableColumn(schema);
				colvarNguoiKyMg.ColumnName = "Nguoi_Ky_MG";
				colvarNguoiKyMg.DataType = DbType.String;
				colvarNguoiKyMg.MaxLength = 100;
				colvarNguoiKyMg.AutoIncrement = false;
				colvarNguoiKyMg.IsNullable = true;
				colvarNguoiKyMg.IsPrimaryKey = false;
				colvarNguoiKyMg.IsForeignKey = false;
				colvarNguoiKyMg.IsReadOnly = false;
				colvarNguoiKyMg.DefaultSetting = @"";
				colvarNguoiKyMg.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiKyMg);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				
						colvarNgayTao.DefaultSetting = @"(getdate())";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarSoTienCkhau = new TableSchema.TableColumn(schema);
				colvarSoTienCkhau.ColumnName = "SO_TIEN_CKHAU";
				colvarSoTienCkhau.DataType = DbType.Decimal;
				colvarSoTienCkhau.MaxLength = 0;
				colvarSoTienCkhau.AutoIncrement = false;
				colvarSoTienCkhau.IsNullable = true;
				colvarSoTienCkhau.IsPrimaryKey = false;
				colvarSoTienCkhau.IsForeignKey = false;
				colvarSoTienCkhau.IsReadOnly = false;
				colvarSoTienCkhau.DefaultSetting = @"";
				colvarSoTienCkhau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoTienCkhau);
				
				TableSchema.TableColumn colvarNoiTru = new TableSchema.TableColumn(schema);
				colvarNoiTru.ColumnName = "NOI_TRU";
				colvarNoiTru.DataType = DbType.Byte;
				colvarNoiTru.MaxLength = 0;
				colvarNoiTru.AutoIncrement = false;
				colvarNoiTru.IsNullable = true;
				colvarNoiTru.IsPrimaryKey = false;
				colvarNoiTru.IsForeignKey = false;
				colvarNoiTru.IsReadOnly = false;
				colvarNoiTru.DefaultSetting = @"";
				colvarNoiTru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoiTru);
				
				TableSchema.TableColumn colvarHienThi = new TableSchema.TableColumn(schema);
				colvarHienThi.ColumnName = "HIEN_THI";
				colvarHienThi.DataType = DbType.Byte;
				colvarHienThi.MaxLength = 0;
				colvarHienThi.AutoIncrement = false;
				colvarHienThi.IsNullable = true;
				colvarHienThi.IsPrimaryKey = false;
				colvarHienThi.IsForeignKey = false;
				colvarHienThi.IsReadOnly = false;
				colvarHienThi.DefaultSetting = @"";
				colvarHienThi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHienThi);
				
				TableSchema.TableColumn colvarPkIdCkhau = new TableSchema.TableColumn(schema);
				colvarPkIdCkhau.ColumnName = "PK_ID_CKHAU";
				colvarPkIdCkhau.DataType = DbType.Int32;
				colvarPkIdCkhau.MaxLength = 0;
				colvarPkIdCkhau.AutoIncrement = false;
				colvarPkIdCkhau.IsNullable = true;
				colvarPkIdCkhau.IsPrimaryKey = false;
				colvarPkIdCkhau.IsForeignKey = false;
				colvarPkIdCkhau.IsReadOnly = false;
				colvarPkIdCkhau.DefaultSetting = @"";
				colvarPkIdCkhau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPkIdCkhau);
				
				TableSchema.TableColumn colvarLyDo = new TableSchema.TableColumn(schema);
				colvarLyDo.ColumnName = "LY_DO";
				colvarLyDo.DataType = DbType.String;
				colvarLyDo.MaxLength = 500;
				colvarLyDo.AutoIncrement = false;
				colvarLyDo.IsNullable = true;
				colvarLyDo.IsPrimaryKey = false;
				colvarLyDo.IsForeignKey = false;
				colvarLyDo.IsReadOnly = false;
				colvarLyDo.DefaultSetting = @"";
				colvarLyDo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLyDo);
				
				TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
				colvarPaymentId.ColumnName = "Payment_ID";
				colvarPaymentId.DataType = DbType.Int32;
				colvarPaymentId.MaxLength = 0;
				colvarPaymentId.AutoIncrement = false;
				colvarPaymentId.IsNullable = true;
				colvarPaymentId.IsPrimaryKey = false;
				colvarPaymentId.IsForeignKey = false;
				colvarPaymentId.IsReadOnly = false;
				colvarPaymentId.DefaultSetting = @"";
				colvarPaymentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentId);
				
				TableSchema.TableColumn colvarPtramMg = new TableSchema.TableColumn(schema);
				colvarPtramMg.ColumnName = "Ptram_MG";
				colvarPtramMg.DataType = DbType.Int16;
				colvarPtramMg.MaxLength = 0;
				colvarPtramMg.AutoIncrement = false;
				colvarPtramMg.IsNullable = true;
				colvarPtramMg.IsPrimaryKey = false;
				colvarPtramMg.IsForeignKey = false;
				colvarPtramMg.IsReadOnly = false;
				colvarPtramMg.DefaultSetting = @"";
				colvarPtramMg.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPtramMg);
				
				TableSchema.TableColumn colvarKieuMg = new TableSchema.TableColumn(schema);
				colvarKieuMg.ColumnName = "Kieu_MG";
				colvarKieuMg.DataType = DbType.String;
				colvarKieuMg.MaxLength = 5;
				colvarKieuMg.AutoIncrement = false;
				colvarKieuMg.IsNullable = true;
				colvarKieuMg.IsPrimaryKey = false;
				colvarKieuMg.IsForeignKey = false;
				colvarKieuMg.IsReadOnly = false;
				colvarKieuMg.DefaultSetting = @"";
				colvarKieuMg.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuMg);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_MIEN_GIAM_THANHTOAN",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdCkhau")]
		[Bindable(true)]
		public int IdCkhau 
		{
			get { return GetColumnValue<int>(Columns.IdCkhau); }
			set { SetColumnValue(Columns.IdCkhau, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public int? PatientId 
		{
			get { return GetColumnValue<int?>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("IdNhanvien")]
		[Bindable(true)]
		public short? IdNhanvien 
		{
			get { return GetColumnValue<short?>(Columns.IdNhanvien); }
			set { SetColumnValue(Columns.IdNhanvien, value); }
		}
		  
		[XmlAttribute("NgayCkhau")]
		[Bindable(true)]
		public DateTime? NgayCkhau 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayCkhau); }
			set { SetColumnValue(Columns.NgayCkhau, value); }
		}
		  
		[XmlAttribute("NguoiKyMg")]
		[Bindable(true)]
		public string NguoiKyMg 
		{
			get { return GetColumnValue<string>(Columns.NguoiKyMg); }
			set { SetColumnValue(Columns.NguoiKyMg, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("SoTienCkhau")]
		[Bindable(true)]
		public decimal? SoTienCkhau 
		{
			get { return GetColumnValue<decimal?>(Columns.SoTienCkhau); }
			set { SetColumnValue(Columns.SoTienCkhau, value); }
		}
		  
		[XmlAttribute("NoiTru")]
		[Bindable(true)]
		public byte? NoiTru 
		{
			get { return GetColumnValue<byte?>(Columns.NoiTru); }
			set { SetColumnValue(Columns.NoiTru, value); }
		}
		  
		[XmlAttribute("HienThi")]
		[Bindable(true)]
		public byte? HienThi 
		{
			get { return GetColumnValue<byte?>(Columns.HienThi); }
			set { SetColumnValue(Columns.HienThi, value); }
		}
		  
		[XmlAttribute("PkIdCkhau")]
		[Bindable(true)]
		public int? PkIdCkhau 
		{
			get { return GetColumnValue<int?>(Columns.PkIdCkhau); }
			set { SetColumnValue(Columns.PkIdCkhau, value); }
		}
		  
		[XmlAttribute("LyDo")]
		[Bindable(true)]
		public string LyDo 
		{
			get { return GetColumnValue<string>(Columns.LyDo); }
			set { SetColumnValue(Columns.LyDo, value); }
		}
		  
		[XmlAttribute("PaymentId")]
		[Bindable(true)]
		public int? PaymentId 
		{
			get { return GetColumnValue<int?>(Columns.PaymentId); }
			set { SetColumnValue(Columns.PaymentId, value); }
		}
		  
		[XmlAttribute("PtramMg")]
		[Bindable(true)]
		public short? PtramMg 
		{
			get { return GetColumnValue<short?>(Columns.PtramMg); }
			set { SetColumnValue(Columns.PtramMg, value); }
		}
		  
		[XmlAttribute("KieuMg")]
		[Bindable(true)]
		public string KieuMg 
		{
			get { return GetColumnValue<string>(Columns.KieuMg); }
			set { SetColumnValue(Columns.KieuMg, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varPatientCode,int? varPatientId,short? varIdNhanvien,DateTime? varNgayCkhau,string varNguoiKyMg,string varNguoiTao,string varNguoiSua,DateTime? varNgayTao,DateTime? varNgaySua,decimal? varSoTienCkhau,byte? varNoiTru,byte? varHienThi,int? varPkIdCkhau,string varLyDo,int? varPaymentId,short? varPtramMg,string varKieuMg)
		{
			TMienGiamThanhtoan item = new TMienGiamThanhtoan();
			
			item.PatientCode = varPatientCode;
			
			item.PatientId = varPatientId;
			
			item.IdNhanvien = varIdNhanvien;
			
			item.NgayCkhau = varNgayCkhau;
			
			item.NguoiKyMg = varNguoiKyMg;
			
			item.NguoiTao = varNguoiTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgayTao = varNgayTao;
			
			item.NgaySua = varNgaySua;
			
			item.SoTienCkhau = varSoTienCkhau;
			
			item.NoiTru = varNoiTru;
			
			item.HienThi = varHienThi;
			
			item.PkIdCkhau = varPkIdCkhau;
			
			item.LyDo = varLyDo;
			
			item.PaymentId = varPaymentId;
			
			item.PtramMg = varPtramMg;
			
			item.KieuMg = varKieuMg;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdCkhau,string varPatientCode,int? varPatientId,short? varIdNhanvien,DateTime? varNgayCkhau,string varNguoiKyMg,string varNguoiTao,string varNguoiSua,DateTime? varNgayTao,DateTime? varNgaySua,decimal? varSoTienCkhau,byte? varNoiTru,byte? varHienThi,int? varPkIdCkhau,string varLyDo,int? varPaymentId,short? varPtramMg,string varKieuMg)
		{
			TMienGiamThanhtoan item = new TMienGiamThanhtoan();
			
				item.IdCkhau = varIdCkhau;
			
				item.PatientCode = varPatientCode;
			
				item.PatientId = varPatientId;
			
				item.IdNhanvien = varIdNhanvien;
			
				item.NgayCkhau = varNgayCkhau;
			
				item.NguoiKyMg = varNguoiKyMg;
			
				item.NguoiTao = varNguoiTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgayTao = varNgayTao;
			
				item.NgaySua = varNgaySua;
			
				item.SoTienCkhau = varSoTienCkhau;
			
				item.NoiTru = varNoiTru;
			
				item.HienThi = varHienThi;
			
				item.PkIdCkhau = varPkIdCkhau;
			
				item.LyDo = varLyDo;
			
				item.PaymentId = varPaymentId;
			
				item.PtramMg = varPtramMg;
			
				item.KieuMg = varKieuMg;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdCkhauColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhanvienColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayCkhauColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiKyMgColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn SoTienCkhauColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NoiTruColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn HienThiColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn PkIdCkhauColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn LyDoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentIdColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn PtramMgColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuMgColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdCkhau = @"ID_CKHAU";
			 public static string PatientCode = @"Patient_Code";
			 public static string PatientId = @"Patient_ID";
			 public static string IdNhanvien = @"ID_NHANVIEN";
			 public static string NgayCkhau = @"NGAY_CKHAU";
			 public static string NguoiKyMg = @"Nguoi_Ky_MG";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string SoTienCkhau = @"SO_TIEN_CKHAU";
			 public static string NoiTru = @"NOI_TRU";
			 public static string HienThi = @"HIEN_THI";
			 public static string PkIdCkhau = @"PK_ID_CKHAU";
			 public static string LyDo = @"LY_DO";
			 public static string PaymentId = @"Payment_ID";
			 public static string PtramMg = @"Ptram_MG";
			 public static string KieuMg = @"Kieu_MG";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
