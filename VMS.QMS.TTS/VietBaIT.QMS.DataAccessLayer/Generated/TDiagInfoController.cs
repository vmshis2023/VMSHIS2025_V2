using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_Diag_Info
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TDiagInfoController
    {
        // Preload our schema..
        TDiagInfo thisSchemaLoad = new TDiagInfo();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TDiagInfoCollection FetchAll()
        {
            TDiagInfoCollection coll = new TDiagInfoCollection();
            Query qry = new Query(TDiagInfo.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TDiagInfoCollection FetchByID(object DiagId)
        {
            TDiagInfoCollection coll = new TDiagInfoCollection().Where("Diag_ID", DiagId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TDiagInfoCollection FetchByQuery(Query qry)
        {
            TDiagInfoCollection coll = new TDiagInfoCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object DiagId)
        {
            return (TDiagInfo.Delete(DiagId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object DiagId)
        {
            return (TDiagInfo.Destroy(DiagId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long ExamId,int? PatientDeptId,long PatientId,string PatientCode,string SummarizeInfo,string DiagInfo,string TreatInfo,string MainDiseaseId,string AuxiDiseaseId,string DifferInfo,short DoctorId,DateTime DiagDate,string CreatedBy,DateTime? CreateDate,string ModifiedBy,DateTime? ModifiedDate,string KeyCode,string PhanBietId,int? DepartmentId,string DepartmentName)
	    {
		    TDiagInfo item = new TDiagInfo();
		    
            item.ExamId = ExamId;
            
            item.PatientDeptId = PatientDeptId;
            
            item.PatientId = PatientId;
            
            item.PatientCode = PatientCode;
            
            item.SummarizeInfo = SummarizeInfo;
            
            item.DiagInfo = DiagInfo;
            
            item.TreatInfo = TreatInfo;
            
            item.MainDiseaseId = MainDiseaseId;
            
            item.AuxiDiseaseId = AuxiDiseaseId;
            
            item.DifferInfo = DifferInfo;
            
            item.DoctorId = DoctorId;
            
            item.DiagDate = DiagDate;
            
            item.CreatedBy = CreatedBy;
            
            item.CreateDate = CreateDate;
            
            item.ModifiedBy = ModifiedBy;
            
            item.ModifiedDate = ModifiedDate;
            
            item.KeyCode = KeyCode;
            
            item.PhanBietId = PhanBietId;
            
            item.DepartmentId = DepartmentId;
            
            item.DepartmentName = DepartmentName;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long DiagId,long ExamId,int? PatientDeptId,long PatientId,string PatientCode,string SummarizeInfo,string DiagInfo,string TreatInfo,string MainDiseaseId,string AuxiDiseaseId,string DifferInfo,short DoctorId,DateTime DiagDate,string CreatedBy,DateTime? CreateDate,string ModifiedBy,DateTime? ModifiedDate,string KeyCode,string PhanBietId,int? DepartmentId,string DepartmentName)
	    {
		    TDiagInfo item = new TDiagInfo();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.DiagId = DiagId;
				
			item.ExamId = ExamId;
				
			item.PatientDeptId = PatientDeptId;
				
			item.PatientId = PatientId;
				
			item.PatientCode = PatientCode;
				
			item.SummarizeInfo = SummarizeInfo;
				
			item.DiagInfo = DiagInfo;
				
			item.TreatInfo = TreatInfo;
				
			item.MainDiseaseId = MainDiseaseId;
				
			item.AuxiDiseaseId = AuxiDiseaseId;
				
			item.DifferInfo = DifferInfo;
				
			item.DoctorId = DoctorId;
				
			item.DiagDate = DiagDate;
				
			item.CreatedBy = CreatedBy;
				
			item.CreateDate = CreateDate;
				
			item.ModifiedBy = ModifiedBy;
				
			item.ModifiedDate = ModifiedDate;
				
			item.KeyCode = KeyCode;
				
			item.PhanBietId = PhanBietId;
				
			item.DepartmentId = DepartmentId;
				
			item.DepartmentName = DepartmentName;
				
	        item.Save(UserName);
	    }
    }
}
