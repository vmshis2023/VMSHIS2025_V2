using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewDrugDonthuocChitietMau class.
    /// </summary>
    [Serializable]
    public partial class ViewDrugDonthuocChitietMauCollection : ReadOnlyList<ViewDrugDonthuocChitietMau, ViewDrugDonthuocChitietMauCollection>
    {        
        public ViewDrugDonthuocChitietMauCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VIEW_DRUG_DONTHUOC_CHITIET_MAU view.
    /// </summary>
    [Serializable]
    public partial class ViewDrugDonthuocChitietMau : ReadOnlyRecord<ViewDrugDonthuocChitietMau>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VIEW_DRUG_DONTHUOC_CHITIET_MAU", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
                colvarId.ColumnName = "ID";
                colvarId.DataType = DbType.Int32;
                colvarId.MaxLength = 0;
                colvarId.AutoIncrement = false;
                colvarId.IsNullable = false;
                colvarId.IsPrimaryKey = false;
                colvarId.IsForeignKey = false;
                colvarId.IsReadOnly = false;
                
                schema.Columns.Add(colvarId);
                
                TableSchema.TableColumn colvarCode = new TableSchema.TableColumn(schema);
                colvarCode.ColumnName = "Code";
                colvarCode.DataType = DbType.String;
                colvarCode.MaxLength = 50;
                colvarCode.AutoIncrement = false;
                colvarCode.IsNullable = true;
                colvarCode.IsPrimaryKey = false;
                colvarCode.IsForeignKey = false;
                colvarCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarCode);
                
                TableSchema.TableColumn colvarTenMau = new TableSchema.TableColumn(schema);
                colvarTenMau.ColumnName = "Ten_Mau";
                colvarTenMau.DataType = DbType.String;
                colvarTenMau.MaxLength = 50;
                colvarTenMau.AutoIncrement = false;
                colvarTenMau.IsNullable = true;
                colvarTenMau.IsPrimaryKey = false;
                colvarTenMau.IsForeignKey = false;
                colvarTenMau.IsReadOnly = false;
                
                schema.Columns.Add(colvarTenMau);
                
                TableSchema.TableColumn colvarParentId = new TableSchema.TableColumn(schema);
                colvarParentId.ColumnName = "Parent_ID";
                colvarParentId.DataType = DbType.Int32;
                colvarParentId.MaxLength = 0;
                colvarParentId.AutoIncrement = false;
                colvarParentId.IsNullable = true;
                colvarParentId.IsPrimaryKey = false;
                colvarParentId.IsForeignKey = false;
                colvarParentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarParentId);
                
                TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
                colvarServiceId.ColumnName = "Service_ID";
                colvarServiceId.DataType = DbType.Int32;
                colvarServiceId.MaxLength = 0;
                colvarServiceId.AutoIncrement = false;
                colvarServiceId.IsNullable = true;
                colvarServiceId.IsPrimaryKey = false;
                colvarServiceId.IsForeignKey = false;
                colvarServiceId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceId);
                
                TableSchema.TableColumn colvarServiceDetailId = new TableSchema.TableColumn(schema);
                colvarServiceDetailId.ColumnName = "ServiceDetail_ID";
                colvarServiceDetailId.DataType = DbType.Int32;
                colvarServiceDetailId.MaxLength = 0;
                colvarServiceDetailId.AutoIncrement = false;
                colvarServiceDetailId.IsNullable = true;
                colvarServiceDetailId.IsPrimaryKey = false;
                colvarServiceDetailId.IsForeignKey = false;
                colvarServiceDetailId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceDetailId);
                
                TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
                colvarQuantity.ColumnName = "Quantity";
                colvarQuantity.DataType = DbType.Int32;
                colvarQuantity.MaxLength = 0;
                colvarQuantity.AutoIncrement = false;
                colvarQuantity.IsNullable = true;
                colvarQuantity.IsPrimaryKey = false;
                colvarQuantity.IsForeignKey = false;
                colvarQuantity.IsReadOnly = false;
                
                schema.Columns.Add(colvarQuantity);
                
                TableSchema.TableColumn colvarStaffId = new TableSchema.TableColumn(schema);
                colvarStaffId.ColumnName = "Staff_ID";
                colvarStaffId.DataType = DbType.Int32;
                colvarStaffId.MaxLength = 0;
                colvarStaffId.AutoIncrement = false;
                colvarStaffId.IsNullable = true;
                colvarStaffId.IsPrimaryKey = false;
                colvarStaffId.IsForeignKey = false;
                colvarStaffId.IsReadOnly = false;
                
                schema.Columns.Add(colvarStaffId);
                
                TableSchema.TableColumn colvarDeparmentId = new TableSchema.TableColumn(schema);
                colvarDeparmentId.ColumnName = "Deparment_ID";
                colvarDeparmentId.DataType = DbType.Int32;
                colvarDeparmentId.MaxLength = 0;
                colvarDeparmentId.AutoIncrement = false;
                colvarDeparmentId.IsNullable = true;
                colvarDeparmentId.IsPrimaryKey = false;
                colvarDeparmentId.IsForeignKey = false;
                colvarDeparmentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeparmentId);
                
                TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
                colvarNgayTao.ColumnName = "Ngay_Tao";
                colvarNgayTao.DataType = DbType.DateTime;
                colvarNgayTao.MaxLength = 0;
                colvarNgayTao.AutoIncrement = false;
                colvarNgayTao.IsNullable = true;
                colvarNgayTao.IsPrimaryKey = false;
                colvarNgayTao.IsForeignKey = false;
                colvarNgayTao.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgayTao);
                
                TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
                colvarNguoiTao.ColumnName = "Nguoi_Tao";
                colvarNguoiTao.DataType = DbType.String;
                colvarNguoiTao.MaxLength = 50;
                colvarNguoiTao.AutoIncrement = false;
                colvarNguoiTao.IsNullable = true;
                colvarNguoiTao.IsPrimaryKey = false;
                colvarNguoiTao.IsForeignKey = false;
                colvarNguoiTao.IsReadOnly = false;
                
                schema.Columns.Add(colvarNguoiTao);
                
                TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
                colvarNguoiSua.ColumnName = "Nguoi_Sua";
                colvarNguoiSua.DataType = DbType.String;
                colvarNguoiSua.MaxLength = 50;
                colvarNguoiSua.AutoIncrement = false;
                colvarNguoiSua.IsNullable = true;
                colvarNguoiSua.IsPrimaryKey = false;
                colvarNguoiSua.IsForeignKey = false;
                colvarNguoiSua.IsReadOnly = false;
                
                schema.Columns.Add(colvarNguoiSua);
                
                TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
                colvarNgaySua.ColumnName = "Ngay_Sua";
                colvarNgaySua.DataType = DbType.DateTime;
                colvarNgaySua.MaxLength = 0;
                colvarNgaySua.AutoIncrement = false;
                colvarNgaySua.IsNullable = true;
                colvarNgaySua.IsPrimaryKey = false;
                colvarNgaySua.IsForeignKey = false;
                colvarNgaySua.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgaySua);
                
                TableSchema.TableColumn colvarKieuMau = new TableSchema.TableColumn(schema);
                colvarKieuMau.ColumnName = "Kieu_Mau";
                colvarKieuMau.DataType = DbType.String;
                colvarKieuMau.MaxLength = 50;
                colvarKieuMau.AutoIncrement = false;
                colvarKieuMau.IsNullable = true;
                colvarKieuMau.IsPrimaryKey = false;
                colvarKieuMau.IsForeignKey = false;
                colvarKieuMau.IsReadOnly = false;
                
                schema.Columns.Add(colvarKieuMau);
                
                TableSchema.TableColumn colvarChiDan = new TableSchema.TableColumn(schema);
                colvarChiDan.ColumnName = "Chi_Dan";
                colvarChiDan.DataType = DbType.String;
                colvarChiDan.MaxLength = 500;
                colvarChiDan.AutoIncrement = false;
                colvarChiDan.IsNullable = true;
                colvarChiDan.IsPrimaryKey = false;
                colvarChiDan.IsForeignKey = false;
                colvarChiDan.IsReadOnly = false;
                
                schema.Columns.Add(colvarChiDan);
                
                TableSchema.TableColumn colvarMaDoiTuong = new TableSchema.TableColumn(schema);
                colvarMaDoiTuong.ColumnName = "MA_DOI_TUONG";
                colvarMaDoiTuong.DataType = DbType.String;
                colvarMaDoiTuong.MaxLength = 50;
                colvarMaDoiTuong.AutoIncrement = false;
                colvarMaDoiTuong.IsNullable = true;
                colvarMaDoiTuong.IsPrimaryKey = false;
                colvarMaDoiTuong.IsForeignKey = false;
                colvarMaDoiTuong.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaDoiTuong);
                
                TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
                colvarTrongGoi.ColumnName = "TRONG_GOI";
                colvarTrongGoi.DataType = DbType.Byte;
                colvarTrongGoi.MaxLength = 0;
                colvarTrongGoi.AutoIncrement = false;
                colvarTrongGoi.IsNullable = true;
                colvarTrongGoi.IsPrimaryKey = false;
                colvarTrongGoi.IsForeignKey = false;
                colvarTrongGoi.IsReadOnly = false;
                
                schema.Columns.Add(colvarTrongGoi);
                
                TableSchema.TableColumn colvarCachDung = new TableSchema.TableColumn(schema);
                colvarCachDung.ColumnName = "CACH_DUNG";
                colvarCachDung.DataType = DbType.String;
                colvarCachDung.MaxLength = 20;
                colvarCachDung.AutoIncrement = false;
                colvarCachDung.IsNullable = true;
                colvarCachDung.IsPrimaryKey = false;
                colvarCachDung.IsForeignKey = false;
                colvarCachDung.IsReadOnly = false;
                
                schema.Columns.Add(colvarCachDung);
                
                TableSchema.TableColumn colvarChiDanThem = new TableSchema.TableColumn(schema);
                colvarChiDanThem.ColumnName = "CHI_DAN_THEM";
                colvarChiDanThem.DataType = DbType.String;
                colvarChiDanThem.MaxLength = 255;
                colvarChiDanThem.AutoIncrement = false;
                colvarChiDanThem.IsNullable = true;
                colvarChiDanThem.IsPrimaryKey = false;
                colvarChiDanThem.IsForeignKey = false;
                colvarChiDanThem.IsReadOnly = false;
                
                schema.Columns.Add(colvarChiDanThem);
                
                TableSchema.TableColumn colvarDviDung = new TableSchema.TableColumn(schema);
                colvarDviDung.ColumnName = "DVI_DUNG";
                colvarDviDung.DataType = DbType.String;
                colvarDviDung.MaxLength = 20;
                colvarDviDung.AutoIncrement = false;
                colvarDviDung.IsNullable = true;
                colvarDviDung.IsPrimaryKey = false;
                colvarDviDung.IsForeignKey = false;
                colvarDviDung.IsReadOnly = false;
                
                schema.Columns.Add(colvarDviDung);
                
                TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
                colvarIsPayment.ColumnName = "IsPayment";
                colvarIsPayment.DataType = DbType.Byte;
                colvarIsPayment.MaxLength = 0;
                colvarIsPayment.AutoIncrement = false;
                colvarIsPayment.IsNullable = true;
                colvarIsPayment.IsPrimaryKey = false;
                colvarIsPayment.IsForeignKey = false;
                colvarIsPayment.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsPayment);
                
                TableSchema.TableColumn colvarSoLanDung = new TableSchema.TableColumn(schema);
                colvarSoLanDung.ColumnName = "SO_LAN_DUNG";
                colvarSoLanDung.DataType = DbType.String;
                colvarSoLanDung.MaxLength = 20;
                colvarSoLanDung.AutoIncrement = false;
                colvarSoLanDung.IsNullable = true;
                colvarSoLanDung.IsPrimaryKey = false;
                colvarSoLanDung.IsForeignKey = false;
                colvarSoLanDung.IsReadOnly = false;
                
                schema.Columns.Add(colvarSoLanDung);
                
                TableSchema.TableColumn colvarSoLuongDung = new TableSchema.TableColumn(schema);
                colvarSoLuongDung.ColumnName = "SO_LUONG_DUNG";
                colvarSoLuongDung.DataType = DbType.String;
                colvarSoLuongDung.MaxLength = 20;
                colvarSoLuongDung.AutoIncrement = false;
                colvarSoLuongDung.IsNullable = true;
                colvarSoLuongDung.IsPrimaryKey = false;
                colvarSoLuongDung.IsForeignKey = false;
                colvarSoLuongDung.IsReadOnly = false;
                
                schema.Columns.Add(colvarSoLuongDung);
                
                TableSchema.TableColumn colvarDrugId = new TableSchema.TableColumn(schema);
                colvarDrugId.ColumnName = "drug_Id";
                colvarDrugId.DataType = DbType.Int32;
                colvarDrugId.MaxLength = 0;
                colvarDrugId.AutoIncrement = false;
                colvarDrugId.IsNullable = true;
                colvarDrugId.IsPrimaryKey = false;
                colvarDrugId.IsForeignKey = false;
                colvarDrugId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugId);
                
                TableSchema.TableColumn colvarDrugCode = new TableSchema.TableColumn(schema);
                colvarDrugCode.ColumnName = "Drug_Code";
                colvarDrugCode.DataType = DbType.AnsiString;
                colvarDrugCode.MaxLength = 20;
                colvarDrugCode.AutoIncrement = false;
                colvarDrugCode.IsNullable = false;
                colvarDrugCode.IsPrimaryKey = false;
                colvarDrugCode.IsForeignKey = false;
                colvarDrugCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugCode);
                
                TableSchema.TableColumn colvarDrugTypeId = new TableSchema.TableColumn(schema);
                colvarDrugTypeId.ColumnName = "DrugType_ID";
                colvarDrugTypeId.DataType = DbType.Int16;
                colvarDrugTypeId.MaxLength = 0;
                colvarDrugTypeId.AutoIncrement = false;
                colvarDrugTypeId.IsNullable = false;
                colvarDrugTypeId.IsPrimaryKey = false;
                colvarDrugTypeId.IsForeignKey = false;
                colvarDrugTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugTypeId);
                
                TableSchema.TableColumn colvarDrugNature = new TableSchema.TableColumn(schema);
                colvarDrugNature.ColumnName = "Drug_Nature";
                colvarDrugNature.DataType = DbType.Byte;
                colvarDrugNature.MaxLength = 0;
                colvarDrugNature.AutoIncrement = false;
                colvarDrugNature.IsNullable = false;
                colvarDrugNature.IsPrimaryKey = false;
                colvarDrugNature.IsForeignKey = false;
                colvarDrugNature.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugNature);
                
                TableSchema.TableColumn colvarDrugName = new TableSchema.TableColumn(schema);
                colvarDrugName.ColumnName = "Drug_Name";
                colvarDrugName.DataType = DbType.String;
                colvarDrugName.MaxLength = 200;
                colvarDrugName.AutoIncrement = false;
                colvarDrugName.IsNullable = false;
                colvarDrugName.IsPrimaryKey = false;
                colvarDrugName.IsForeignKey = false;
                colvarDrugName.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugName);
                
                TableSchema.TableColumn colvarPrice = new TableSchema.TableColumn(schema);
                colvarPrice.ColumnName = "Price";
                colvarPrice.DataType = DbType.Decimal;
                colvarPrice.MaxLength = 0;
                colvarPrice.AutoIncrement = false;
                colvarPrice.IsNullable = false;
                colvarPrice.IsPrimaryKey = false;
                colvarPrice.IsForeignKey = false;
                colvarPrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrice);
                
                TableSchema.TableColumn colvarUnitId = new TableSchema.TableColumn(schema);
                colvarUnitId.ColumnName = "Unit_ID";
                colvarUnitId.DataType = DbType.Int16;
                colvarUnitId.MaxLength = 0;
                colvarUnitId.AutoIncrement = false;
                colvarUnitId.IsNullable = false;
                colvarUnitId.IsPrimaryKey = false;
                colvarUnitId.IsForeignKey = false;
                colvarUnitId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitId);
                
                TableSchema.TableColumn colvarActive = new TableSchema.TableColumn(schema);
                colvarActive.ColumnName = "active";
                colvarActive.DataType = DbType.String;
                colvarActive.MaxLength = 255;
                colvarActive.AutoIncrement = false;
                colvarActive.IsNullable = true;
                colvarActive.IsPrimaryKey = false;
                colvarActive.IsForeignKey = false;
                colvarActive.IsReadOnly = false;
                
                schema.Columns.Add(colvarActive);
                
                TableSchema.TableColumn colvarContent = new TableSchema.TableColumn(schema);
                colvarContent.ColumnName = "Content";
                colvarContent.DataType = DbType.String;
                colvarContent.MaxLength = 255;
                colvarContent.AutoIncrement = false;
                colvarContent.IsNullable = true;
                colvarContent.IsPrimaryKey = false;
                colvarContent.IsForeignKey = false;
                colvarContent.IsReadOnly = false;
                
                schema.Columns.Add(colvarContent);
                
                TableSchema.TableColumn colvarManufacturers = new TableSchema.TableColumn(schema);
                colvarManufacturers.ColumnName = "Manufacturers";
                colvarManufacturers.DataType = DbType.String;
                colvarManufacturers.MaxLength = 100;
                colvarManufacturers.AutoIncrement = false;
                colvarManufacturers.IsNullable = true;
                colvarManufacturers.IsPrimaryKey = false;
                colvarManufacturers.IsForeignKey = false;
                colvarManufacturers.IsReadOnly = false;
                
                schema.Columns.Add(colvarManufacturers);
                
                TableSchema.TableColumn colvarNumberRegister = new TableSchema.TableColumn(schema);
                colvarNumberRegister.ColumnName = "Number_Register";
                colvarNumberRegister.DataType = DbType.String;
                colvarNumberRegister.MaxLength = 50;
                colvarNumberRegister.AutoIncrement = false;
                colvarNumberRegister.IsNullable = true;
                colvarNumberRegister.IsPrimaryKey = false;
                colvarNumberRegister.IsForeignKey = false;
                colvarNumberRegister.IsReadOnly = false;
                
                schema.Columns.Add(colvarNumberRegister);
                
                TableSchema.TableColumn colvarProducer = new TableSchema.TableColumn(schema);
                colvarProducer.ColumnName = "Producer";
                colvarProducer.DataType = DbType.String;
                colvarProducer.MaxLength = 100;
                colvarProducer.AutoIncrement = false;
                colvarProducer.IsNullable = true;
                colvarProducer.IsPrimaryKey = false;
                colvarProducer.IsForeignKey = false;
                colvarProducer.IsReadOnly = false;
                
                schema.Columns.Add(colvarProducer);
                
                TableSchema.TableColumn colvarListBHYT = new TableSchema.TableColumn(schema);
                colvarListBHYT.ColumnName = "ListBHYT";
                colvarListBHYT.DataType = DbType.String;
                colvarListBHYT.MaxLength = 255;
                colvarListBHYT.AutoIncrement = false;
                colvarListBHYT.IsNullable = true;
                colvarListBHYT.IsPrimaryKey = false;
                colvarListBHYT.IsForeignKey = false;
                colvarListBHYT.IsReadOnly = false;
                
                schema.Columns.Add(colvarListBHYT);
                
                TableSchema.TableColumn colvarHieuLuc = new TableSchema.TableColumn(schema);
                colvarHieuLuc.ColumnName = "HieuLuc";
                colvarHieuLuc.DataType = DbType.Byte;
                colvarHieuLuc.MaxLength = 0;
                colvarHieuLuc.AutoIncrement = false;
                colvarHieuLuc.IsNullable = false;
                colvarHieuLuc.IsPrimaryKey = false;
                colvarHieuLuc.IsForeignKey = false;
                colvarHieuLuc.IsReadOnly = false;
                
                schema.Columns.Add(colvarHieuLuc);
                
                TableSchema.TableColumn colvarDangBche = new TableSchema.TableColumn(schema);
                colvarDangBche.ColumnName = "Dang_BCHE";
                colvarDangBche.DataType = DbType.String;
                colvarDangBche.MaxLength = 100;
                colvarDangBche.AutoIncrement = false;
                colvarDangBche.IsNullable = true;
                colvarDangBche.IsPrimaryKey = false;
                colvarDangBche.IsForeignKey = false;
                colvarDangBche.IsReadOnly = false;
                
                schema.Columns.Add(colvarDangBche);
                
                TableSchema.TableColumn colvarUnitName = new TableSchema.TableColumn(schema);
                colvarUnitName.ColumnName = "Unit_Name";
                colvarUnitName.DataType = DbType.String;
                colvarUnitName.MaxLength = 100;
                colvarUnitName.AutoIncrement = false;
                colvarUnitName.IsNullable = true;
                colvarUnitName.IsPrimaryKey = false;
                colvarUnitName.IsForeignKey = false;
                colvarUnitName.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitName);
                
                TableSchema.TableColumn colvarSDesc = new TableSchema.TableColumn(schema);
                colvarSDesc.ColumnName = "sDesc";
                colvarSDesc.DataType = DbType.String;
                colvarSDesc.MaxLength = 500;
                colvarSDesc.AutoIncrement = false;
                colvarSDesc.IsNullable = true;
                colvarSDesc.IsPrimaryKey = false;
                colvarSDesc.IsForeignKey = false;
                colvarSDesc.IsReadOnly = false;
                
                schema.Columns.Add(colvarSDesc);
                
                TableSchema.TableColumn colvarMaNhomThuoc = new TableSchema.TableColumn(schema);
                colvarMaNhomThuoc.ColumnName = "MA_NHOM_THUOC";
                colvarMaNhomThuoc.DataType = DbType.String;
                colvarMaNhomThuoc.MaxLength = 50;
                colvarMaNhomThuoc.AutoIncrement = false;
                colvarMaNhomThuoc.IsNullable = true;
                colvarMaNhomThuoc.IsPrimaryKey = false;
                colvarMaNhomThuoc.IsForeignKey = false;
                colvarMaNhomThuoc.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaNhomThuoc);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("VIEW_DRUG_DONTHUOC_CHITIET_MAU",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewDrugDonthuocChitietMau()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewDrugDonthuocChitietMau(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewDrugDonthuocChitietMau(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewDrugDonthuocChitietMau(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Id")]
        [Bindable(true)]
        public int Id 
	    {
		    get
		    {
			    return GetColumnValue<int>("ID");
		    }
            set 
		    {
			    SetColumnValue("ID", value);
            }
        }
	      
        [XmlAttribute("Code")]
        [Bindable(true)]
        public string Code 
	    {
		    get
		    {
			    return GetColumnValue<string>("Code");
		    }
            set 
		    {
			    SetColumnValue("Code", value);
            }
        }
	      
        [XmlAttribute("TenMau")]
        [Bindable(true)]
        public string TenMau 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ten_Mau");
		    }
            set 
		    {
			    SetColumnValue("Ten_Mau", value);
            }
        }
	      
        [XmlAttribute("ParentId")]
        [Bindable(true)]
        public int? ParentId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Parent_ID");
		    }
            set 
		    {
			    SetColumnValue("Parent_ID", value);
            }
        }
	      
        [XmlAttribute("ServiceId")]
        [Bindable(true)]
        public int? ServiceId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Service_ID");
		    }
            set 
		    {
			    SetColumnValue("Service_ID", value);
            }
        }
	      
        [XmlAttribute("ServiceDetailId")]
        [Bindable(true)]
        public int? ServiceDetailId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ServiceDetail_ID");
		    }
            set 
		    {
			    SetColumnValue("ServiceDetail_ID", value);
            }
        }
	      
        [XmlAttribute("Quantity")]
        [Bindable(true)]
        public int? Quantity 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Quantity");
		    }
            set 
		    {
			    SetColumnValue("Quantity", value);
            }
        }
	      
        [XmlAttribute("StaffId")]
        [Bindable(true)]
        public int? StaffId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Staff_ID");
		    }
            set 
		    {
			    SetColumnValue("Staff_ID", value);
            }
        }
	      
        [XmlAttribute("DeparmentId")]
        [Bindable(true)]
        public int? DeparmentId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Deparment_ID");
		    }
            set 
		    {
			    SetColumnValue("Deparment_ID", value);
            }
        }
	      
        [XmlAttribute("NgayTao")]
        [Bindable(true)]
        public DateTime? NgayTao 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Ngay_Tao");
		    }
            set 
		    {
			    SetColumnValue("Ngay_Tao", value);
            }
        }
	      
        [XmlAttribute("NguoiTao")]
        [Bindable(true)]
        public string NguoiTao 
	    {
		    get
		    {
			    return GetColumnValue<string>("Nguoi_Tao");
		    }
            set 
		    {
			    SetColumnValue("Nguoi_Tao", value);
            }
        }
	      
        [XmlAttribute("NguoiSua")]
        [Bindable(true)]
        public string NguoiSua 
	    {
		    get
		    {
			    return GetColumnValue<string>("Nguoi_Sua");
		    }
            set 
		    {
			    SetColumnValue("Nguoi_Sua", value);
            }
        }
	      
        [XmlAttribute("NgaySua")]
        [Bindable(true)]
        public DateTime? NgaySua 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Ngay_Sua");
		    }
            set 
		    {
			    SetColumnValue("Ngay_Sua", value);
            }
        }
	      
        [XmlAttribute("KieuMau")]
        [Bindable(true)]
        public string KieuMau 
	    {
		    get
		    {
			    return GetColumnValue<string>("Kieu_Mau");
		    }
            set 
		    {
			    SetColumnValue("Kieu_Mau", value);
            }
        }
	      
        [XmlAttribute("ChiDan")]
        [Bindable(true)]
        public string ChiDan 
	    {
		    get
		    {
			    return GetColumnValue<string>("Chi_Dan");
		    }
            set 
		    {
			    SetColumnValue("Chi_Dan", value);
            }
        }
	      
        [XmlAttribute("MaDoiTuong")]
        [Bindable(true)]
        public string MaDoiTuong 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_DOI_TUONG");
		    }
            set 
		    {
			    SetColumnValue("MA_DOI_TUONG", value);
            }
        }
	      
        [XmlAttribute("TrongGoi")]
        [Bindable(true)]
        public byte? TrongGoi 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("TRONG_GOI");
		    }
            set 
		    {
			    SetColumnValue("TRONG_GOI", value);
            }
        }
	      
        [XmlAttribute("CachDung")]
        [Bindable(true)]
        public string CachDung 
	    {
		    get
		    {
			    return GetColumnValue<string>("CACH_DUNG");
		    }
            set 
		    {
			    SetColumnValue("CACH_DUNG", value);
            }
        }
	      
        [XmlAttribute("ChiDanThem")]
        [Bindable(true)]
        public string ChiDanThem 
	    {
		    get
		    {
			    return GetColumnValue<string>("CHI_DAN_THEM");
		    }
            set 
		    {
			    SetColumnValue("CHI_DAN_THEM", value);
            }
        }
	      
        [XmlAttribute("DviDung")]
        [Bindable(true)]
        public string DviDung 
	    {
		    get
		    {
			    return GetColumnValue<string>("DVI_DUNG");
		    }
            set 
		    {
			    SetColumnValue("DVI_DUNG", value);
            }
        }
	      
        [XmlAttribute("IsPayment")]
        [Bindable(true)]
        public byte? IsPayment 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("IsPayment");
		    }
            set 
		    {
			    SetColumnValue("IsPayment", value);
            }
        }
	      
        [XmlAttribute("SoLanDung")]
        [Bindable(true)]
        public string SoLanDung 
	    {
		    get
		    {
			    return GetColumnValue<string>("SO_LAN_DUNG");
		    }
            set 
		    {
			    SetColumnValue("SO_LAN_DUNG", value);
            }
        }
	      
        [XmlAttribute("SoLuongDung")]
        [Bindable(true)]
        public string SoLuongDung 
	    {
		    get
		    {
			    return GetColumnValue<string>("SO_LUONG_DUNG");
		    }
            set 
		    {
			    SetColumnValue("SO_LUONG_DUNG", value);
            }
        }
	      
        [XmlAttribute("DrugId")]
        [Bindable(true)]
        public int? DrugId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("drug_Id");
		    }
            set 
		    {
			    SetColumnValue("drug_Id", value);
            }
        }
	      
        [XmlAttribute("DrugCode")]
        [Bindable(true)]
        public string DrugCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Drug_Code");
		    }
            set 
		    {
			    SetColumnValue("Drug_Code", value);
            }
        }
	      
        [XmlAttribute("DrugTypeId")]
        [Bindable(true)]
        public short DrugTypeId 
	    {
		    get
		    {
			    return GetColumnValue<short>("DrugType_ID");
		    }
            set 
		    {
			    SetColumnValue("DrugType_ID", value);
            }
        }
	      
        [XmlAttribute("DrugNature")]
        [Bindable(true)]
        public byte DrugNature 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Drug_Nature");
		    }
            set 
		    {
			    SetColumnValue("Drug_Nature", value);
            }
        }
	      
        [XmlAttribute("DrugName")]
        [Bindable(true)]
        public string DrugName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Drug_Name");
		    }
            set 
		    {
			    SetColumnValue("Drug_Name", value);
            }
        }
	      
        [XmlAttribute("Price")]
        [Bindable(true)]
        public decimal Price 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("Price");
		    }
            set 
		    {
			    SetColumnValue("Price", value);
            }
        }
	      
        [XmlAttribute("UnitId")]
        [Bindable(true)]
        public short UnitId 
	    {
		    get
		    {
			    return GetColumnValue<short>("Unit_ID");
		    }
            set 
		    {
			    SetColumnValue("Unit_ID", value);
            }
        }
	      
        [XmlAttribute("Active")]
        [Bindable(true)]
        public string Active 
	    {
		    get
		    {
			    return GetColumnValue<string>("active");
		    }
            set 
		    {
			    SetColumnValue("active", value);
            }
        }
	      
        [XmlAttribute("Content")]
        [Bindable(true)]
        public string Content 
	    {
		    get
		    {
			    return GetColumnValue<string>("Content");
		    }
            set 
		    {
			    SetColumnValue("Content", value);
            }
        }
	      
        [XmlAttribute("Manufacturers")]
        [Bindable(true)]
        public string Manufacturers 
	    {
		    get
		    {
			    return GetColumnValue<string>("Manufacturers");
		    }
            set 
		    {
			    SetColumnValue("Manufacturers", value);
            }
        }
	      
        [XmlAttribute("NumberRegister")]
        [Bindable(true)]
        public string NumberRegister 
	    {
		    get
		    {
			    return GetColumnValue<string>("Number_Register");
		    }
            set 
		    {
			    SetColumnValue("Number_Register", value);
            }
        }
	      
        [XmlAttribute("Producer")]
        [Bindable(true)]
        public string Producer 
	    {
		    get
		    {
			    return GetColumnValue<string>("Producer");
		    }
            set 
		    {
			    SetColumnValue("Producer", value);
            }
        }
	      
        [XmlAttribute("ListBHYT")]
        [Bindable(true)]
        public string ListBHYT 
	    {
		    get
		    {
			    return GetColumnValue<string>("ListBHYT");
		    }
            set 
		    {
			    SetColumnValue("ListBHYT", value);
            }
        }
	      
        [XmlAttribute("HieuLuc")]
        [Bindable(true)]
        public byte HieuLuc 
	    {
		    get
		    {
			    return GetColumnValue<byte>("HieuLuc");
		    }
            set 
		    {
			    SetColumnValue("HieuLuc", value);
            }
        }
	      
        [XmlAttribute("DangBche")]
        [Bindable(true)]
        public string DangBche 
	    {
		    get
		    {
			    return GetColumnValue<string>("Dang_BCHE");
		    }
            set 
		    {
			    SetColumnValue("Dang_BCHE", value);
            }
        }
	      
        [XmlAttribute("UnitName")]
        [Bindable(true)]
        public string UnitName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Unit_Name");
		    }
            set 
		    {
			    SetColumnValue("Unit_Name", value);
            }
        }
	      
        [XmlAttribute("SDesc")]
        [Bindable(true)]
        public string SDesc 
	    {
		    get
		    {
			    return GetColumnValue<string>("sDesc");
		    }
            set 
		    {
			    SetColumnValue("sDesc", value);
            }
        }
	      
        [XmlAttribute("MaNhomThuoc")]
        [Bindable(true)]
        public string MaNhomThuoc 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_NHOM_THUOC");
		    }
            set 
		    {
			    SetColumnValue("MA_NHOM_THUOC", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Id = @"ID";
            
            public static string Code = @"Code";
            
            public static string TenMau = @"Ten_Mau";
            
            public static string ParentId = @"Parent_ID";
            
            public static string ServiceId = @"Service_ID";
            
            public static string ServiceDetailId = @"ServiceDetail_ID";
            
            public static string Quantity = @"Quantity";
            
            public static string StaffId = @"Staff_ID";
            
            public static string DeparmentId = @"Deparment_ID";
            
            public static string NgayTao = @"Ngay_Tao";
            
            public static string NguoiTao = @"Nguoi_Tao";
            
            public static string NguoiSua = @"Nguoi_Sua";
            
            public static string NgaySua = @"Ngay_Sua";
            
            public static string KieuMau = @"Kieu_Mau";
            
            public static string ChiDan = @"Chi_Dan";
            
            public static string MaDoiTuong = @"MA_DOI_TUONG";
            
            public static string TrongGoi = @"TRONG_GOI";
            
            public static string CachDung = @"CACH_DUNG";
            
            public static string ChiDanThem = @"CHI_DAN_THEM";
            
            public static string DviDung = @"DVI_DUNG";
            
            public static string IsPayment = @"IsPayment";
            
            public static string SoLanDung = @"SO_LAN_DUNG";
            
            public static string SoLuongDung = @"SO_LUONG_DUNG";
            
            public static string DrugId = @"drug_Id";
            
            public static string DrugCode = @"Drug_Code";
            
            public static string DrugTypeId = @"DrugType_ID";
            
            public static string DrugNature = @"Drug_Nature";
            
            public static string DrugName = @"Drug_Name";
            
            public static string Price = @"Price";
            
            public static string UnitId = @"Unit_ID";
            
            public static string Active = @"active";
            
            public static string Content = @"Content";
            
            public static string Manufacturers = @"Manufacturers";
            
            public static string NumberRegister = @"Number_Register";
            
            public static string Producer = @"Producer";
            
            public static string ListBHYT = @"ListBHYT";
            
            public static string HieuLuc = @"HieuLuc";
            
            public static string DangBche = @"Dang_BCHE";
            
            public static string UnitName = @"Unit_Name";
            
            public static string SDesc = @"sDesc";
            
            public static string MaNhomThuoc = @"MA_NHOM_THUOC";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
