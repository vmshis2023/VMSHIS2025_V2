using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_Delivery_PresDetail
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TDeliveryPresDetailController
    {
        // Preload our schema..
        TDeliveryPresDetail thisSchemaLoad = new TDeliveryPresDetail();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TDeliveryPresDetailCollection FetchAll()
        {
            TDeliveryPresDetailCollection coll = new TDeliveryPresDetailCollection();
            Query qry = new Query(TDeliveryPresDetail.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TDeliveryPresDetailCollection FetchByID(object PresId)
        {
            TDeliveryPresDetailCollection coll = new TDeliveryPresDetailCollection().Where("Pres_ID", PresId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TDeliveryPresDetailCollection FetchByQuery(Query qry)
        {
            TDeliveryPresDetailCollection coll = new TDeliveryPresDetailCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object PresId)
        {
            return (TDeliveryPresDetail.Delete(PresId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object PresId)
        {
            return (TDeliveryPresDetail.Destroy(PresId) == 1);
        }
        
        
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(long PresId,int DrugId,short StockId,DateTime ExpireDate,decimal Price)
        {
            Query qry = new Query(TDeliveryPresDetail.Schema);
            qry.QueryType = QueryType.Delete;
            qry.AddWhere("PresId", PresId).AND("DrugId", DrugId).AND("StockId", StockId).AND("ExpireDate", ExpireDate).AND("Price", Price);
            qry.Execute();
            return (true);
        }        
       
    	
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long PresId,int DrugId,short StockId,DateTime ExpireDate,decimal Price,int Quantity,DateTime NgayCapphat,DateTime NgayTao,string NguoiTao,DateTime? NgayChot,int? IdChot)
	    {
		    TDeliveryPresDetail item = new TDeliveryPresDetail();
		    
            item.PresId = PresId;
            
            item.DrugId = DrugId;
            
            item.StockId = StockId;
            
            item.ExpireDate = ExpireDate;
            
            item.Price = Price;
            
            item.Quantity = Quantity;
            
            item.NgayCapphat = NgayCapphat;
            
            item.NgayTao = NgayTao;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayChot = NgayChot;
            
            item.IdChot = IdChot;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long PresId,int DrugId,short StockId,DateTime ExpireDate,decimal Price,int Quantity,DateTime NgayCapphat,DateTime NgayTao,string NguoiTao,DateTime? NgayChot,int? IdChot)
	    {
		    TDeliveryPresDetail item = new TDeliveryPresDetail();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.PresId = PresId;
				
			item.DrugId = DrugId;
				
			item.StockId = StockId;
				
			item.ExpireDate = ExpireDate;
				
			item.Price = Price;
				
			item.Quantity = Quantity;
				
			item.NgayCapphat = NgayCapphat;
				
			item.NgayTao = NgayTao;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayChot = NgayChot;
				
			item.IdChot = IdChot;
				
	        item.Save(UserName);
	    }
    }
}
