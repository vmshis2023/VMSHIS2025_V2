using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for D_PHIEU_NHAP_TRA
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class DPhieuNhapTraController
    {
        // Preload our schema..
        DPhieuNhapTra thisSchemaLoad = new DPhieuNhapTra();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public DPhieuNhapTraCollection FetchAll()
        {
            DPhieuNhapTraCollection coll = new DPhieuNhapTraCollection();
            Query qry = new Query(DPhieuNhapTra.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public DPhieuNhapTraCollection FetchByID(object IdPhieuNhapTra)
        {
            DPhieuNhapTraCollection coll = new DPhieuNhapTraCollection().Where("ID_PHIEU_NHAP_TRA", IdPhieuNhapTra).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public DPhieuNhapTraCollection FetchByQuery(Query qry)
        {
            DPhieuNhapTraCollection coll = new DPhieuNhapTraCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdPhieuNhapTra)
        {
            return (DPhieuNhapTra.Delete(IdPhieuNhapTra) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdPhieuNhapTra)
        {
            return (DPhieuNhapTra.Destroy(IdPhieuNhapTra) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string MaPhieuNhapTra,DateTime? NgayNhapTra,short? IdNhanVien,short? IdKhoTra,short? IdKhoaTra,short? IdKhoLinh,short? IdKhoaThien,byte? NhapTraTuTruc,string NguoiTao,DateTime? NgayTao,int? IdDonThuoc,short? IdNhaCcap,int? IdPhieuBn,byte? LoaiPhieu,byte? TrangThai,string IpMaySua,string IpMayTao,string MaLoaiPhieu,DateTime? NgaySua,DateTime? NgayXacNhan,string NguoiSua,string NguoiXacNhan)
	    {
		    DPhieuNhapTra item = new DPhieuNhapTra();
		    
            item.MaPhieuNhapTra = MaPhieuNhapTra;
            
            item.NgayNhapTra = NgayNhapTra;
            
            item.IdNhanVien = IdNhanVien;
            
            item.IdKhoTra = IdKhoTra;
            
            item.IdKhoaTra = IdKhoaTra;
            
            item.IdKhoLinh = IdKhoLinh;
            
            item.IdKhoaThien = IdKhoaThien;
            
            item.NhapTraTuTruc = NhapTraTuTruc;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.IdDonThuoc = IdDonThuoc;
            
            item.IdNhaCcap = IdNhaCcap;
            
            item.IdPhieuBn = IdPhieuBn;
            
            item.LoaiPhieu = LoaiPhieu;
            
            item.TrangThai = TrangThai;
            
            item.IpMaySua = IpMaySua;
            
            item.IpMayTao = IpMayTao;
            
            item.MaLoaiPhieu = MaLoaiPhieu;
            
            item.NgaySua = NgaySua;
            
            item.NgayXacNhan = NgayXacNhan;
            
            item.NguoiSua = NguoiSua;
            
            item.NguoiXacNhan = NguoiXacNhan;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int IdPhieuNhapTra,string MaPhieuNhapTra,DateTime? NgayNhapTra,short? IdNhanVien,short? IdKhoTra,short? IdKhoaTra,short? IdKhoLinh,short? IdKhoaThien,byte? NhapTraTuTruc,string NguoiTao,DateTime? NgayTao,int? IdDonThuoc,short? IdNhaCcap,int? IdPhieuBn,byte? LoaiPhieu,byte? TrangThai,string IpMaySua,string IpMayTao,string MaLoaiPhieu,DateTime? NgaySua,DateTime? NgayXacNhan,string NguoiSua,string NguoiXacNhan)
	    {
		    DPhieuNhapTra item = new DPhieuNhapTra();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdPhieuNhapTra = IdPhieuNhapTra;
				
			item.MaPhieuNhapTra = MaPhieuNhapTra;
				
			item.NgayNhapTra = NgayNhapTra;
				
			item.IdNhanVien = IdNhanVien;
				
			item.IdKhoTra = IdKhoTra;
				
			item.IdKhoaTra = IdKhoaTra;
				
			item.IdKhoLinh = IdKhoLinh;
				
			item.IdKhoaThien = IdKhoaThien;
				
			item.NhapTraTuTruc = NhapTraTuTruc;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.IdDonThuoc = IdDonThuoc;
				
			item.IdNhaCcap = IdNhaCcap;
				
			item.IdPhieuBn = IdPhieuBn;
				
			item.LoaiPhieu = LoaiPhieu;
				
			item.TrangThai = TrangThai;
				
			item.IpMaySua = IpMaySua;
				
			item.IpMayTao = IpMayTao;
				
			item.MaLoaiPhieu = MaLoaiPhieu;
				
			item.NgaySua = NgaySua;
				
			item.NgayXacNhan = NgayXacNhan;
				
			item.NguoiSua = NguoiSua;
				
			item.NguoiXacNhan = NguoiXacNhan;
				
	        item.Save(UserName);
	    }
    }
}
