using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the DPhieuNhapCt class.
	/// </summary>
    [Serializable]
	public partial class DPhieuNhapCtCollection : ActiveList<DPhieuNhapCt, DPhieuNhapCtCollection>
	{	   
		public DPhieuNhapCtCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DPhieuNhapCtCollection</returns>
		public DPhieuNhapCtCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DPhieuNhapCt o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the D_PHIEU_NHAP_CT table.
	/// </summary>
	[Serializable]
	public partial class DPhieuNhapCt : ActiveRecord<DPhieuNhapCt>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DPhieuNhapCt()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DPhieuNhapCt(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DPhieuNhapCt(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DPhieuNhapCt(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("D_PHIEU_NHAP_CT", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdPhieuNhapCt = new TableSchema.TableColumn(schema);
				colvarIdPhieuNhapCt.ColumnName = "ID_PHIEU_NHAP_CT";
				colvarIdPhieuNhapCt.DataType = DbType.Int32;
				colvarIdPhieuNhapCt.MaxLength = 0;
				colvarIdPhieuNhapCt.AutoIncrement = true;
				colvarIdPhieuNhapCt.IsNullable = false;
				colvarIdPhieuNhapCt.IsPrimaryKey = true;
				colvarIdPhieuNhapCt.IsForeignKey = false;
				colvarIdPhieuNhapCt.IsReadOnly = false;
				colvarIdPhieuNhapCt.DefaultSetting = @"";
				colvarIdPhieuNhapCt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuNhapCt);
				
				TableSchema.TableColumn colvarIdPhieuNhap = new TableSchema.TableColumn(schema);
				colvarIdPhieuNhap.ColumnName = "ID_PHIEU_NHAP";
				colvarIdPhieuNhap.DataType = DbType.Int32;
				colvarIdPhieuNhap.MaxLength = 0;
				colvarIdPhieuNhap.AutoIncrement = false;
				colvarIdPhieuNhap.IsNullable = false;
				colvarIdPhieuNhap.IsPrimaryKey = false;
				colvarIdPhieuNhap.IsForeignKey = false;
				colvarIdPhieuNhap.IsReadOnly = false;
				colvarIdPhieuNhap.DefaultSetting = @"";
				colvarIdPhieuNhap.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuNhap);
				
				TableSchema.TableColumn colvarNgayHetHan = new TableSchema.TableColumn(schema);
				colvarNgayHetHan.ColumnName = "NGAY_HET_HAN";
				colvarNgayHetHan.DataType = DbType.DateTime;
				colvarNgayHetHan.MaxLength = 0;
				colvarNgayHetHan.AutoIncrement = false;
				colvarNgayHetHan.IsNullable = false;
				colvarNgayHetHan.IsPrimaryKey = false;
				colvarNgayHetHan.IsForeignKey = false;
				colvarNgayHetHan.IsReadOnly = false;
				colvarNgayHetHan.DefaultSetting = @"";
				colvarNgayHetHan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayHetHan);
				
				TableSchema.TableColumn colvarIdThuoc = new TableSchema.TableColumn(schema);
				colvarIdThuoc.ColumnName = "ID_THUOC";
				colvarIdThuoc.DataType = DbType.Int32;
				colvarIdThuoc.MaxLength = 0;
				colvarIdThuoc.AutoIncrement = false;
				colvarIdThuoc.IsNullable = false;
				colvarIdThuoc.IsPrimaryKey = false;
				colvarIdThuoc.IsForeignKey = false;
				colvarIdThuoc.IsReadOnly = false;
				colvarIdThuoc.DefaultSetting = @"";
				colvarIdThuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdThuoc);
				
				TableSchema.TableColumn colvarDonGia = new TableSchema.TableColumn(schema);
				colvarDonGia.ColumnName = "DON_GIA";
				colvarDonGia.DataType = DbType.Decimal;
				colvarDonGia.MaxLength = 0;
				colvarDonGia.AutoIncrement = false;
				colvarDonGia.IsNullable = false;
				colvarDonGia.IsPrimaryKey = false;
				colvarDonGia.IsForeignKey = false;
				colvarDonGia.IsReadOnly = false;
				colvarDonGia.DefaultSetting = @"";
				colvarDonGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGia);
				
				TableSchema.TableColumn colvarGiaBan = new TableSchema.TableColumn(schema);
				colvarGiaBan.ColumnName = "GIA_BAN";
				colvarGiaBan.DataType = DbType.Decimal;
				colvarGiaBan.MaxLength = 0;
				colvarGiaBan.AutoIncrement = false;
				colvarGiaBan.IsNullable = false;
				colvarGiaBan.IsPrimaryKey = false;
				colvarGiaBan.IsForeignKey = false;
				colvarGiaBan.IsReadOnly = false;
				
						colvarGiaBan.DefaultSetting = @"((0))";
				colvarGiaBan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaBan);
				
				TableSchema.TableColumn colvarThangDu = new TableSchema.TableColumn(schema);
				colvarThangDu.ColumnName = "THANG_DU";
				colvarThangDu.DataType = DbType.Int16;
				colvarThangDu.MaxLength = 0;
				colvarThangDu.AutoIncrement = false;
				colvarThangDu.IsNullable = false;
				colvarThangDu.IsPrimaryKey = false;
				colvarThangDu.IsForeignKey = false;
				colvarThangDu.IsReadOnly = false;
				
						colvarThangDu.DefaultSetting = @"((0))";
				colvarThangDu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThangDu);
				
				TableSchema.TableColumn colvarSoLuong = new TableSchema.TableColumn(schema);
				colvarSoLuong.ColumnName = "SO_LUONG";
				colvarSoLuong.DataType = DbType.Int32;
				colvarSoLuong.MaxLength = 0;
				colvarSoLuong.AutoIncrement = false;
				colvarSoLuong.IsNullable = false;
				colvarSoLuong.IsPrimaryKey = false;
				colvarSoLuong.IsForeignKey = false;
				colvarSoLuong.IsReadOnly = false;
				colvarSoLuong.DefaultSetting = @"";
				colvarSoLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuong);
				
				TableSchema.TableColumn colvarSoLo = new TableSchema.TableColumn(schema);
				colvarSoLo.ColumnName = "SO_LO";
				colvarSoLo.DataType = DbType.String;
				colvarSoLo.MaxLength = 50;
				colvarSoLo.AutoIncrement = false;
				colvarSoLo.IsNullable = true;
				colvarSoLo.IsPrimaryKey = false;
				colvarSoLo.IsForeignKey = false;
				colvarSoLo.IsReadOnly = false;
				colvarSoLo.DefaultSetting = @"";
				colvarSoLo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLo);
				
				TableSchema.TableColumn colvarChietKhau = new TableSchema.TableColumn(schema);
				colvarChietKhau.ColumnName = "CHIET_KHAU";
				colvarChietKhau.DataType = DbType.Int32;
				colvarChietKhau.MaxLength = 0;
				colvarChietKhau.AutoIncrement = false;
				colvarChietKhau.IsNullable = true;
				colvarChietKhau.IsPrimaryKey = false;
				colvarChietKhau.IsForeignKey = false;
				colvarChietKhau.IsReadOnly = false;
				colvarChietKhau.DefaultSetting = @"";
				colvarChietKhau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChietKhau);
				
				TableSchema.TableColumn colvarThanhTien = new TableSchema.TableColumn(schema);
				colvarThanhTien.ColumnName = "THANH_TIEN";
				colvarThanhTien.DataType = DbType.Decimal;
				colvarThanhTien.MaxLength = 0;
				colvarThanhTien.AutoIncrement = false;
				colvarThanhTien.IsNullable = true;
				colvarThanhTien.IsPrimaryKey = false;
				colvarThanhTien.IsForeignKey = false;
				colvarThanhTien.IsReadOnly = false;
				colvarThanhTien.DefaultSetting = @"";
				colvarThanhTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThanhTien);
				
				TableSchema.TableColumn colvarMaPhieuXuat = new TableSchema.TableColumn(schema);
				colvarMaPhieuXuat.ColumnName = "MA_PHIEU_XUAT";
				colvarMaPhieuXuat.DataType = DbType.String;
				colvarMaPhieuXuat.MaxLength = 20;
				colvarMaPhieuXuat.AutoIncrement = false;
				colvarMaPhieuXuat.IsNullable = true;
				colvarMaPhieuXuat.IsPrimaryKey = false;
				colvarMaPhieuXuat.IsForeignKey = false;
				colvarMaPhieuXuat.IsReadOnly = false;
				colvarMaPhieuXuat.DefaultSetting = @"";
				colvarMaPhieuXuat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaPhieuXuat);
				
				TableSchema.TableColumn colvarIdPhieuXuat = new TableSchema.TableColumn(schema);
				colvarIdPhieuXuat.ColumnName = "ID_PHIEU_XUAT";
				colvarIdPhieuXuat.DataType = DbType.Int32;
				colvarIdPhieuXuat.MaxLength = 0;
				colvarIdPhieuXuat.AutoIncrement = false;
				colvarIdPhieuXuat.IsNullable = true;
				colvarIdPhieuXuat.IsPrimaryKey = false;
				colvarIdPhieuXuat.IsForeignKey = false;
				colvarIdPhieuXuat.IsReadOnly = false;
				colvarIdPhieuXuat.DefaultSetting = @"";
				colvarIdPhieuXuat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuXuat);
				
				TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
				colvarGhiChu.ColumnName = "GHI_CHU";
				colvarGhiChu.DataType = DbType.String;
				colvarGhiChu.MaxLength = 200;
				colvarGhiChu.AutoIncrement = false;
				colvarGhiChu.IsNullable = true;
				colvarGhiChu.IsPrimaryKey = false;
				colvarGhiChu.IsForeignKey = false;
				colvarGhiChu.IsReadOnly = false;
				colvarGhiChu.DefaultSetting = @"";
				colvarGhiChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChu);
				
				TableSchema.TableColumn colvarVat = new TableSchema.TableColumn(schema);
				colvarVat.ColumnName = "VAT";
				colvarVat.DataType = DbType.Decimal;
				colvarVat.MaxLength = 0;
				colvarVat.AutoIncrement = false;
				colvarVat.IsNullable = true;
				colvarVat.IsPrimaryKey = false;
				colvarVat.IsForeignKey = false;
				colvarVat.IsReadOnly = false;
				colvarVat.DefaultSetting = @"";
				colvarVat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarVat);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("D_PHIEU_NHAP_CT",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdPhieuNhapCt")]
		[Bindable(true)]
		public int IdPhieuNhapCt 
		{
			get { return GetColumnValue<int>(Columns.IdPhieuNhapCt); }
			set { SetColumnValue(Columns.IdPhieuNhapCt, value); }
		}
		  
		[XmlAttribute("IdPhieuNhap")]
		[Bindable(true)]
		public int IdPhieuNhap 
		{
			get { return GetColumnValue<int>(Columns.IdPhieuNhap); }
			set { SetColumnValue(Columns.IdPhieuNhap, value); }
		}
		  
		[XmlAttribute("NgayHetHan")]
		[Bindable(true)]
		public DateTime NgayHetHan 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayHetHan); }
			set { SetColumnValue(Columns.NgayHetHan, value); }
		}
		  
		[XmlAttribute("IdThuoc")]
		[Bindable(true)]
		public int IdThuoc 
		{
			get { return GetColumnValue<int>(Columns.IdThuoc); }
			set { SetColumnValue(Columns.IdThuoc, value); }
		}
		  
		[XmlAttribute("DonGia")]
		[Bindable(true)]
		public decimal DonGia 
		{
			get { return GetColumnValue<decimal>(Columns.DonGia); }
			set { SetColumnValue(Columns.DonGia, value); }
		}
		  
		[XmlAttribute("GiaBan")]
		[Bindable(true)]
		public decimal GiaBan 
		{
			get { return GetColumnValue<decimal>(Columns.GiaBan); }
			set { SetColumnValue(Columns.GiaBan, value); }
		}
		  
		[XmlAttribute("ThangDu")]
		[Bindable(true)]
		public short ThangDu 
		{
			get { return GetColumnValue<short>(Columns.ThangDu); }
			set { SetColumnValue(Columns.ThangDu, value); }
		}
		  
		[XmlAttribute("SoLuong")]
		[Bindable(true)]
		public int SoLuong 
		{
			get { return GetColumnValue<int>(Columns.SoLuong); }
			set { SetColumnValue(Columns.SoLuong, value); }
		}
		  
		[XmlAttribute("SoLo")]
		[Bindable(true)]
		public string SoLo 
		{
			get { return GetColumnValue<string>(Columns.SoLo); }
			set { SetColumnValue(Columns.SoLo, value); }
		}
		  
		[XmlAttribute("ChietKhau")]
		[Bindable(true)]
		public int? ChietKhau 
		{
			get { return GetColumnValue<int?>(Columns.ChietKhau); }
			set { SetColumnValue(Columns.ChietKhau, value); }
		}
		  
		[XmlAttribute("ThanhTien")]
		[Bindable(true)]
		public decimal? ThanhTien 
		{
			get { return GetColumnValue<decimal?>(Columns.ThanhTien); }
			set { SetColumnValue(Columns.ThanhTien, value); }
		}
		  
		[XmlAttribute("MaPhieuXuat")]
		[Bindable(true)]
		public string MaPhieuXuat 
		{
			get { return GetColumnValue<string>(Columns.MaPhieuXuat); }
			set { SetColumnValue(Columns.MaPhieuXuat, value); }
		}
		  
		[XmlAttribute("IdPhieuXuat")]
		[Bindable(true)]
		public int? IdPhieuXuat 
		{
			get { return GetColumnValue<int?>(Columns.IdPhieuXuat); }
			set { SetColumnValue(Columns.IdPhieuXuat, value); }
		}
		  
		[XmlAttribute("GhiChu")]
		[Bindable(true)]
		public string GhiChu 
		{
			get { return GetColumnValue<string>(Columns.GhiChu); }
			set { SetColumnValue(Columns.GhiChu, value); }
		}
		  
		[XmlAttribute("Vat")]
		[Bindable(true)]
		public decimal? Vat 
		{
			get { return GetColumnValue<decimal?>(Columns.Vat); }
			set { SetColumnValue(Columns.Vat, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varIdPhieuNhap,DateTime varNgayHetHan,int varIdThuoc,decimal varDonGia,decimal varGiaBan,short varThangDu,int varSoLuong,string varSoLo,int? varChietKhau,decimal? varThanhTien,string varMaPhieuXuat,int? varIdPhieuXuat,string varGhiChu,decimal? varVat)
		{
			DPhieuNhapCt item = new DPhieuNhapCt();
			
			item.IdPhieuNhap = varIdPhieuNhap;
			
			item.NgayHetHan = varNgayHetHan;
			
			item.IdThuoc = varIdThuoc;
			
			item.DonGia = varDonGia;
			
			item.GiaBan = varGiaBan;
			
			item.ThangDu = varThangDu;
			
			item.SoLuong = varSoLuong;
			
			item.SoLo = varSoLo;
			
			item.ChietKhau = varChietKhau;
			
			item.ThanhTien = varThanhTien;
			
			item.MaPhieuXuat = varMaPhieuXuat;
			
			item.IdPhieuXuat = varIdPhieuXuat;
			
			item.GhiChu = varGhiChu;
			
			item.Vat = varVat;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdPhieuNhapCt,int varIdPhieuNhap,DateTime varNgayHetHan,int varIdThuoc,decimal varDonGia,decimal varGiaBan,short varThangDu,int varSoLuong,string varSoLo,int? varChietKhau,decimal? varThanhTien,string varMaPhieuXuat,int? varIdPhieuXuat,string varGhiChu,decimal? varVat)
		{
			DPhieuNhapCt item = new DPhieuNhapCt();
			
				item.IdPhieuNhapCt = varIdPhieuNhapCt;
			
				item.IdPhieuNhap = varIdPhieuNhap;
			
				item.NgayHetHan = varNgayHetHan;
			
				item.IdThuoc = varIdThuoc;
			
				item.DonGia = varDonGia;
			
				item.GiaBan = varGiaBan;
			
				item.ThangDu = varThangDu;
			
				item.SoLuong = varSoLuong;
			
				item.SoLo = varSoLo;
			
				item.ChietKhau = varChietKhau;
			
				item.ThanhTien = varThanhTien;
			
				item.MaPhieuXuat = varMaPhieuXuat;
			
				item.IdPhieuXuat = varIdPhieuXuat;
			
				item.GhiChu = varGhiChu;
			
				item.Vat = varVat;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdPhieuNhapCtColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuNhapColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayHetHanColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdThuocColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaBanColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn ThangDuColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn ChietKhauColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn ThanhTienColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn MaPhieuXuatColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuXuatColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn VatColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdPhieuNhapCt = @"ID_PHIEU_NHAP_CT";
			 public static string IdPhieuNhap = @"ID_PHIEU_NHAP";
			 public static string NgayHetHan = @"NGAY_HET_HAN";
			 public static string IdThuoc = @"ID_THUOC";
			 public static string DonGia = @"DON_GIA";
			 public static string GiaBan = @"GIA_BAN";
			 public static string ThangDu = @"THANG_DU";
			 public static string SoLuong = @"SO_LUONG";
			 public static string SoLo = @"SO_LO";
			 public static string ChietKhau = @"CHIET_KHAU";
			 public static string ThanhTien = @"THANH_TIEN";
			 public static string MaPhieuXuat = @"MA_PHIEU_XUAT";
			 public static string IdPhieuXuat = @"ID_PHIEU_XUAT";
			 public static string GhiChu = @"GHI_CHU";
			 public static string Vat = @"VAT";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
