using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_Reg_Exam_temp
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TRegExamTempController
    {
        // Preload our schema..
        TRegExamTemp thisSchemaLoad = new TRegExamTemp();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TRegExamTempCollection FetchAll()
        {
            TRegExamTempCollection coll = new TRegExamTempCollection();
            Query qry = new Query(TRegExamTemp.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TRegExamTempCollection FetchByID(object RegId)
        {
            TRegExamTempCollection coll = new TRegExamTempCollection().Where("Reg_ID", RegId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TRegExamTempCollection FetchByQuery(Query qry)
        {
            TRegExamTempCollection coll = new TRegExamTempCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object RegId)
        {
            return (TRegExamTemp.Delete(RegId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object RegId)
        {
            return (TRegExamTemp.Destroy(RegId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long RegId,long? PatientId,string PatientCode,decimal? RegFee,byte? PaymentStatus,DateTime? RegDate,DateTime? InputDate,string UserId,decimal? SurchargePrice,short? DepartmentId,short? DoctorAssignId,byte? Actived,byte? PrintId,DateTime? ModifyDate,string ModifiedBy,byte? Status,int? ExamId,byte? IsCancel,short? SoKham,decimal? GiaBhytCt,decimal? GiaBnct,DateTime? PaymentDate,short? FromDepartmentId,byte? NoiTru,byte? XacNhan,int? PaymentId,short? IdBsyThien,int? IdGoiDvu,string KieuKhambenh,int? TrongGoi,string IpMacSua,string IpMacTao,string IpMaySua,string IpMayTao,string MaKhoaThien,short? IdPhongChuyen,byte? IsPayment,DateTime? NgayChuyenPhong,string NguoiChuyenPhong,byte? TtChuyen,byte? KhamNgoaigio,string MaPhongStt,byte? IsNgoaiGio)
	    {
		    TRegExamTemp item = new TRegExamTemp();
		    
            item.RegId = RegId;
            
            item.PatientId = PatientId;
            
            item.PatientCode = PatientCode;
            
            item.RegFee = RegFee;
            
            item.PaymentStatus = PaymentStatus;
            
            item.RegDate = RegDate;
            
            item.InputDate = InputDate;
            
            item.UserId = UserId;
            
            item.SurchargePrice = SurchargePrice;
            
            item.DepartmentId = DepartmentId;
            
            item.DoctorAssignId = DoctorAssignId;
            
            item.Actived = Actived;
            
            item.PrintId = PrintId;
            
            item.ModifyDate = ModifyDate;
            
            item.ModifiedBy = ModifiedBy;
            
            item.Status = Status;
            
            item.ExamId = ExamId;
            
            item.IsCancel = IsCancel;
            
            item.SoKham = SoKham;
            
            item.GiaBhytCt = GiaBhytCt;
            
            item.GiaBnct = GiaBnct;
            
            item.PaymentDate = PaymentDate;
            
            item.FromDepartmentId = FromDepartmentId;
            
            item.NoiTru = NoiTru;
            
            item.XacNhan = XacNhan;
            
            item.PaymentId = PaymentId;
            
            item.IdBsyThien = IdBsyThien;
            
            item.IdGoiDvu = IdGoiDvu;
            
            item.KieuKhambenh = KieuKhambenh;
            
            item.TrongGoi = TrongGoi;
            
            item.IpMacSua = IpMacSua;
            
            item.IpMacTao = IpMacTao;
            
            item.IpMaySua = IpMaySua;
            
            item.IpMayTao = IpMayTao;
            
            item.MaKhoaThien = MaKhoaThien;
            
            item.IdPhongChuyen = IdPhongChuyen;
            
            item.IsPayment = IsPayment;
            
            item.NgayChuyenPhong = NgayChuyenPhong;
            
            item.NguoiChuyenPhong = NguoiChuyenPhong;
            
            item.TtChuyen = TtChuyen;
            
            item.KhamNgoaigio = KhamNgoaigio;
            
            item.MaPhongStt = MaPhongStt;
            
            item.IsNgoaiGio = IsNgoaiGio;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long RegId,long? PatientId,string PatientCode,decimal? RegFee,byte? PaymentStatus,DateTime? RegDate,DateTime? InputDate,string UserId,decimal? SurchargePrice,short? DepartmentId,short? DoctorAssignId,byte? Actived,byte? PrintId,DateTime? ModifyDate,string ModifiedBy,byte? Status,int? ExamId,byte? IsCancel,short? SoKham,decimal? GiaBhytCt,decimal? GiaBnct,DateTime? PaymentDate,short? FromDepartmentId,byte? NoiTru,byte? XacNhan,int? PaymentId,short? IdBsyThien,int? IdGoiDvu,string KieuKhambenh,int? TrongGoi,string IpMacSua,string IpMacTao,string IpMaySua,string IpMayTao,string MaKhoaThien,short? IdPhongChuyen,byte? IsPayment,DateTime? NgayChuyenPhong,string NguoiChuyenPhong,byte? TtChuyen,byte? KhamNgoaigio,string MaPhongStt,byte? IsNgoaiGio)
	    {
		    TRegExamTemp item = new TRegExamTemp();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.RegId = RegId;
				
			item.PatientId = PatientId;
				
			item.PatientCode = PatientCode;
				
			item.RegFee = RegFee;
				
			item.PaymentStatus = PaymentStatus;
				
			item.RegDate = RegDate;
				
			item.InputDate = InputDate;
				
			item.UserId = UserId;
				
			item.SurchargePrice = SurchargePrice;
				
			item.DepartmentId = DepartmentId;
				
			item.DoctorAssignId = DoctorAssignId;
				
			item.Actived = Actived;
				
			item.PrintId = PrintId;
				
			item.ModifyDate = ModifyDate;
				
			item.ModifiedBy = ModifiedBy;
				
			item.Status = Status;
				
			item.ExamId = ExamId;
				
			item.IsCancel = IsCancel;
				
			item.SoKham = SoKham;
				
			item.GiaBhytCt = GiaBhytCt;
				
			item.GiaBnct = GiaBnct;
				
			item.PaymentDate = PaymentDate;
				
			item.FromDepartmentId = FromDepartmentId;
				
			item.NoiTru = NoiTru;
				
			item.XacNhan = XacNhan;
				
			item.PaymentId = PaymentId;
				
			item.IdBsyThien = IdBsyThien;
				
			item.IdGoiDvu = IdGoiDvu;
				
			item.KieuKhambenh = KieuKhambenh;
				
			item.TrongGoi = TrongGoi;
				
			item.IpMacSua = IpMacSua;
				
			item.IpMacTao = IpMacTao;
				
			item.IpMaySua = IpMaySua;
				
			item.IpMayTao = IpMayTao;
				
			item.MaKhoaThien = MaKhoaThien;
				
			item.IdPhongChuyen = IdPhongChuyen;
				
			item.IsPayment = IsPayment;
				
			item.NgayChuyenPhong = NgayChuyenPhong;
				
			item.NguoiChuyenPhong = NguoiChuyenPhong;
				
			item.TtChuyen = TtChuyen;
				
			item.KhamNgoaigio = KhamNgoaigio;
				
			item.MaPhongStt = MaPhongStt;
				
			item.IsNgoaiGio = IsNgoaiGio;
				
	        item.Save(UserName);
	    }
    }
}
