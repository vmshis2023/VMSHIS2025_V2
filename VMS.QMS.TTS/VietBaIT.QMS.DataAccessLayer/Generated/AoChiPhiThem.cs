using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the AoChiPhiThem class.
	/// </summary>
    [Serializable]
	public partial class AoChiPhiThemCollection : ActiveList<AoChiPhiThem, AoChiPhiThemCollection>
	{	   
		public AoChiPhiThemCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>AoChiPhiThemCollection</returns>
		public AoChiPhiThemCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                AoChiPhiThem o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the AO_ChiPhi_Them table.
	/// </summary>
	[Serializable]
	public partial class AoChiPhiThem : ActiveRecord<AoChiPhiThem>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public AoChiPhiThem()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public AoChiPhiThem(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public AoChiPhiThem(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public AoChiPhiThem(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("AO_ChiPhi_Them", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarSoPhieu = new TableSchema.TableColumn(schema);
				colvarSoPhieu.ColumnName = "So_Phieu";
				colvarSoPhieu.DataType = DbType.Int32;
				colvarSoPhieu.MaxLength = 0;
				colvarSoPhieu.AutoIncrement = true;
				colvarSoPhieu.IsNullable = false;
				colvarSoPhieu.IsPrimaryKey = true;
				colvarSoPhieu.IsForeignKey = false;
				colvarSoPhieu.IsReadOnly = false;
				colvarSoPhieu.DefaultSetting = @"";
				colvarSoPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoPhieu);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.String;
				colvarPatientCode.MaxLength = 20;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = false;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int32;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = false;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarSoLuong = new TableSchema.TableColumn(schema);
				colvarSoLuong.ColumnName = "So_Luong";
				colvarSoLuong.DataType = DbType.Int32;
				colvarSoLuong.MaxLength = 0;
				colvarSoLuong.AutoIncrement = false;
				colvarSoLuong.IsNullable = true;
				colvarSoLuong.IsPrimaryKey = false;
				colvarSoLuong.IsForeignKey = false;
				colvarSoLuong.IsReadOnly = false;
				
						colvarSoLuong.DefaultSetting = @"((1))";
				colvarSoLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuong);
				
				TableSchema.TableColumn colvarSoTien = new TableSchema.TableColumn(schema);
				colvarSoTien.ColumnName = "So_Tien";
				colvarSoTien.DataType = DbType.Decimal;
				colvarSoTien.MaxLength = 0;
				colvarSoTien.AutoIncrement = false;
				colvarSoTien.IsNullable = true;
				colvarSoTien.IsPrimaryKey = false;
				colvarSoTien.IsForeignKey = false;
				colvarSoTien.IsReadOnly = false;
				colvarSoTien.DefaultSetting = @"";
				colvarSoTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoTien);
				
				TableSchema.TableColumn colvarLyDo = new TableSchema.TableColumn(schema);
				colvarLyDo.ColumnName = "Ly_Do";
				colvarLyDo.DataType = DbType.String;
				colvarLyDo.MaxLength = 300;
				colvarLyDo.AutoIncrement = false;
				colvarLyDo.IsNullable = true;
				colvarLyDo.IsPrimaryKey = false;
				colvarLyDo.IsForeignKey = false;
				colvarLyDo.IsReadOnly = false;
				colvarLyDo.DefaultSetting = @"";
				colvarLyDo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLyDo);
				
				TableSchema.TableColumn colvarStaffId = new TableSchema.TableColumn(schema);
				colvarStaffId.ColumnName = "Staff_ID";
				colvarStaffId.DataType = DbType.Int16;
				colvarStaffId.MaxLength = 0;
				colvarStaffId.AutoIncrement = false;
				colvarStaffId.IsNullable = true;
				colvarStaffId.IsPrimaryKey = false;
				colvarStaffId.IsForeignKey = false;
				colvarStaffId.IsReadOnly = false;
				colvarStaffId.DefaultSetting = @"";
				colvarStaffId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStaffId);
				
				TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
				colvarDepartmentId.ColumnName = "Department_ID";
				colvarDepartmentId.DataType = DbType.Int16;
				colvarDepartmentId.MaxLength = 0;
				colvarDepartmentId.AutoIncrement = false;
				colvarDepartmentId.IsNullable = true;
				colvarDepartmentId.IsPrimaryKey = false;
				colvarDepartmentId.IsForeignKey = false;
				colvarDepartmentId.IsReadOnly = false;
				colvarDepartmentId.DefaultSetting = @"";
				colvarDepartmentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDepartmentId);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "Nguoi_Tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "Ngay_Tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				
						colvarNgayTao.DefaultSetting = @"(getdate())";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
				colvarPaymentId.ColumnName = "Payment_ID";
				colvarPaymentId.DataType = DbType.Int32;
				colvarPaymentId.MaxLength = 0;
				colvarPaymentId.AutoIncrement = false;
				colvarPaymentId.IsNullable = true;
				colvarPaymentId.IsPrimaryKey = false;
				colvarPaymentId.IsForeignKey = false;
				colvarPaymentId.IsReadOnly = false;
				colvarPaymentId.DefaultSetting = @"";
				colvarPaymentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentId);
				
				TableSchema.TableColumn colvarNoiTru = new TableSchema.TableColumn(schema);
				colvarNoiTru.ColumnName = "Noi_Tru";
				colvarNoiTru.DataType = DbType.Byte;
				colvarNoiTru.MaxLength = 0;
				colvarNoiTru.AutoIncrement = false;
				colvarNoiTru.IsNullable = true;
				colvarNoiTru.IsPrimaryKey = false;
				colvarNoiTru.IsForeignKey = false;
				colvarNoiTru.IsReadOnly = false;
				colvarNoiTru.DefaultSetting = @"";
				colvarNoiTru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoiTru);
				
				TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
				colvarPaymentStatus.ColumnName = "Payment_Status";
				colvarPaymentStatus.DataType = DbType.Byte;
				colvarPaymentStatus.MaxLength = 0;
				colvarPaymentStatus.AutoIncrement = false;
				colvarPaymentStatus.IsNullable = true;
				colvarPaymentStatus.IsPrimaryKey = false;
				colvarPaymentStatus.IsForeignKey = false;
				colvarPaymentStatus.IsReadOnly = false;
				colvarPaymentStatus.DefaultSetting = @"";
				colvarPaymentStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentStatus);
				
				TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
				colvarPaymentDate.ColumnName = "Payment_Date";
				colvarPaymentDate.DataType = DbType.DateTime;
				colvarPaymentDate.MaxLength = 0;
				colvarPaymentDate.AutoIncrement = false;
				colvarPaymentDate.IsNullable = true;
				colvarPaymentDate.IsPrimaryKey = false;
				colvarPaymentDate.IsForeignKey = false;
				colvarPaymentDate.IsReadOnly = false;
				colvarPaymentDate.DefaultSetting = @"";
				colvarPaymentDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentDate);
				
				TableSchema.TableColumn colvarNgayDky = new TableSchema.TableColumn(schema);
				colvarNgayDky.ColumnName = "NGAY_DKY";
				colvarNgayDky.DataType = DbType.DateTime;
				colvarNgayDky.MaxLength = 0;
				colvarNgayDky.AutoIncrement = false;
				colvarNgayDky.IsNullable = true;
				colvarNgayDky.IsPrimaryKey = false;
				colvarNgayDky.IsForeignKey = false;
				colvarNgayDky.IsReadOnly = false;
				colvarNgayDky.DefaultSetting = @"";
				colvarNgayDky.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayDky);
				
				TableSchema.TableColumn colvarGiaBhytCt = new TableSchema.TableColumn(schema);
				colvarGiaBhytCt.ColumnName = "Gia_BHYT_CT";
				colvarGiaBhytCt.DataType = DbType.Decimal;
				colvarGiaBhytCt.MaxLength = 0;
				colvarGiaBhytCt.AutoIncrement = false;
				colvarGiaBhytCt.IsNullable = true;
				colvarGiaBhytCt.IsPrimaryKey = false;
				colvarGiaBhytCt.IsForeignKey = false;
				colvarGiaBhytCt.IsReadOnly = false;
				colvarGiaBhytCt.DefaultSetting = @"";
				colvarGiaBhytCt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaBhytCt);
				
				TableSchema.TableColumn colvarGiaBnct = new TableSchema.TableColumn(schema);
				colvarGiaBnct.ColumnName = "Gia_BNCT";
				colvarGiaBnct.DataType = DbType.Decimal;
				colvarGiaBnct.MaxLength = 0;
				colvarGiaBnct.AutoIncrement = false;
				colvarGiaBnct.IsNullable = true;
				colvarGiaBnct.IsPrimaryKey = false;
				colvarGiaBnct.IsForeignKey = false;
				colvarGiaBnct.IsReadOnly = false;
				colvarGiaBnct.DefaultSetting = @"";
				colvarGiaBnct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaBnct);
				
				TableSchema.TableColumn colvarPtramBhyt = new TableSchema.TableColumn(schema);
				colvarPtramBhyt.ColumnName = "Ptram_Bhyt";
				colvarPtramBhyt.DataType = DbType.Decimal;
				colvarPtramBhyt.MaxLength = 0;
				colvarPtramBhyt.AutoIncrement = false;
				colvarPtramBhyt.IsNullable = true;
				colvarPtramBhyt.IsPrimaryKey = false;
				colvarPtramBhyt.IsForeignKey = false;
				colvarPtramBhyt.IsReadOnly = false;
				colvarPtramBhyt.DefaultSetting = @"";
				colvarPtramBhyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPtramBhyt);
				
				TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
				colvarGhiChu.ColumnName = "Ghi_Chu";
				colvarGhiChu.DataType = DbType.String;
				colvarGhiChu.MaxLength = 200;
				colvarGhiChu.AutoIncrement = false;
				colvarGhiChu.IsNullable = true;
				colvarGhiChu.IsPrimaryKey = false;
				colvarGhiChu.IsForeignKey = false;
				colvarGhiChu.IsReadOnly = false;
				colvarGhiChu.DefaultSetting = @"";
				colvarGhiChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChu);
				
				TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
				colvarIsPayment.ColumnName = "IsPayment";
				colvarIsPayment.DataType = DbType.Byte;
				colvarIsPayment.MaxLength = 0;
				colvarIsPayment.AutoIncrement = false;
				colvarIsPayment.IsNullable = true;
				colvarIsPayment.IsPrimaryKey = false;
				colvarIsPayment.IsForeignKey = false;
				colvarIsPayment.IsReadOnly = false;
				
						colvarIsPayment.DefaultSetting = @"((0))";
				colvarIsPayment.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsPayment);
				
				TableSchema.TableColumn colvarObjectTypeId = new TableSchema.TableColumn(schema);
				colvarObjectTypeId.ColumnName = "ObjectType_ID";
				colvarObjectTypeId.DataType = DbType.Int16;
				colvarObjectTypeId.MaxLength = 0;
				colvarObjectTypeId.AutoIncrement = false;
				colvarObjectTypeId.IsNullable = true;
				colvarObjectTypeId.IsPrimaryKey = false;
				colvarObjectTypeId.IsForeignKey = false;
				colvarObjectTypeId.IsReadOnly = false;
				colvarObjectTypeId.DefaultSetting = @"";
				colvarObjectTypeId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObjectTypeId);
				
				TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
				colvarServiceId.ColumnName = "Service_ID";
				colvarServiceId.DataType = DbType.Int16;
				colvarServiceId.MaxLength = 0;
				colvarServiceId.AutoIncrement = false;
				colvarServiceId.IsNullable = true;
				colvarServiceId.IsPrimaryKey = false;
				colvarServiceId.IsForeignKey = false;
				colvarServiceId.IsReadOnly = false;
				colvarServiceId.DefaultSetting = @"";
				colvarServiceId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceId);
				
				TableSchema.TableColumn colvarServiceDetailId = new TableSchema.TableColumn(schema);
				colvarServiceDetailId.ColumnName = "ServiceDetail_ID";
				colvarServiceDetailId.DataType = DbType.Int16;
				colvarServiceDetailId.MaxLength = 0;
				colvarServiceDetailId.AutoIncrement = false;
				colvarServiceDetailId.IsNullable = true;
				colvarServiceDetailId.IsPrimaryKey = false;
				colvarServiceDetailId.IsForeignKey = false;
				colvarServiceDetailId.IsReadOnly = false;
				colvarServiceDetailId.DefaultSetting = @"";
				colvarServiceDetailId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceDetailId);
				
				TableSchema.TableColumn colvarMaKhoaTHien = new TableSchema.TableColumn(schema);
				colvarMaKhoaTHien.ColumnName = "Ma_Khoa_THien";
				colvarMaKhoaTHien.DataType = DbType.String;
				colvarMaKhoaTHien.MaxLength = 10;
				colvarMaKhoaTHien.AutoIncrement = false;
				colvarMaKhoaTHien.IsNullable = true;
				colvarMaKhoaTHien.IsPrimaryKey = false;
				colvarMaKhoaTHien.IsForeignKey = false;
				colvarMaKhoaTHien.IsReadOnly = false;
				colvarMaKhoaTHien.DefaultSetting = @"";
				colvarMaKhoaTHien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKhoaTHien);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("AO_ChiPhi_Them",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("SoPhieu")]
		[Bindable(true)]
		public int SoPhieu 
		{
			get { return GetColumnValue<int>(Columns.SoPhieu); }
			set { SetColumnValue(Columns.SoPhieu, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public int PatientId 
		{
			get { return GetColumnValue<int>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("SoLuong")]
		[Bindable(true)]
		public int? SoLuong 
		{
			get { return GetColumnValue<int?>(Columns.SoLuong); }
			set { SetColumnValue(Columns.SoLuong, value); }
		}
		  
		[XmlAttribute("SoTien")]
		[Bindable(true)]
		public decimal? SoTien 
		{
			get { return GetColumnValue<decimal?>(Columns.SoTien); }
			set { SetColumnValue(Columns.SoTien, value); }
		}
		  
		[XmlAttribute("LyDo")]
		[Bindable(true)]
		public string LyDo 
		{
			get { return GetColumnValue<string>(Columns.LyDo); }
			set { SetColumnValue(Columns.LyDo, value); }
		}
		  
		[XmlAttribute("StaffId")]
		[Bindable(true)]
		public short? StaffId 
		{
			get { return GetColumnValue<short?>(Columns.StaffId); }
			set { SetColumnValue(Columns.StaffId, value); }
		}
		  
		[XmlAttribute("DepartmentId")]
		[Bindable(true)]
		public short? DepartmentId 
		{
			get { return GetColumnValue<short?>(Columns.DepartmentId); }
			set { SetColumnValue(Columns.DepartmentId, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("PaymentId")]
		[Bindable(true)]
		public int? PaymentId 
		{
			get { return GetColumnValue<int?>(Columns.PaymentId); }
			set { SetColumnValue(Columns.PaymentId, value); }
		}
		  
		[XmlAttribute("NoiTru")]
		[Bindable(true)]
		public byte? NoiTru 
		{
			get { return GetColumnValue<byte?>(Columns.NoiTru); }
			set { SetColumnValue(Columns.NoiTru, value); }
		}
		  
		[XmlAttribute("PaymentStatus")]
		[Bindable(true)]
		public byte? PaymentStatus 
		{
			get { return GetColumnValue<byte?>(Columns.PaymentStatus); }
			set { SetColumnValue(Columns.PaymentStatus, value); }
		}
		  
		[XmlAttribute("PaymentDate")]
		[Bindable(true)]
		public DateTime? PaymentDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.PaymentDate); }
			set { SetColumnValue(Columns.PaymentDate, value); }
		}
		  
		[XmlAttribute("NgayDky")]
		[Bindable(true)]
		public DateTime? NgayDky 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayDky); }
			set { SetColumnValue(Columns.NgayDky, value); }
		}
		  
		[XmlAttribute("GiaBhytCt")]
		[Bindable(true)]
		public decimal? GiaBhytCt 
		{
			get { return GetColumnValue<decimal?>(Columns.GiaBhytCt); }
			set { SetColumnValue(Columns.GiaBhytCt, value); }
		}
		  
		[XmlAttribute("GiaBnct")]
		[Bindable(true)]
		public decimal? GiaBnct 
		{
			get { return GetColumnValue<decimal?>(Columns.GiaBnct); }
			set { SetColumnValue(Columns.GiaBnct, value); }
		}
		  
		[XmlAttribute("PtramBhyt")]
		[Bindable(true)]
		public decimal? PtramBhyt 
		{
			get { return GetColumnValue<decimal?>(Columns.PtramBhyt); }
			set { SetColumnValue(Columns.PtramBhyt, value); }
		}
		  
		[XmlAttribute("GhiChu")]
		[Bindable(true)]
		public string GhiChu 
		{
			get { return GetColumnValue<string>(Columns.GhiChu); }
			set { SetColumnValue(Columns.GhiChu, value); }
		}
		  
		[XmlAttribute("IsPayment")]
		[Bindable(true)]
		public byte? IsPayment 
		{
			get { return GetColumnValue<byte?>(Columns.IsPayment); }
			set { SetColumnValue(Columns.IsPayment, value); }
		}
		  
		[XmlAttribute("ObjectTypeId")]
		[Bindable(true)]
		public short? ObjectTypeId 
		{
			get { return GetColumnValue<short?>(Columns.ObjectTypeId); }
			set { SetColumnValue(Columns.ObjectTypeId, value); }
		}
		  
		[XmlAttribute("ServiceId")]
		[Bindable(true)]
		public short? ServiceId 
		{
			get { return GetColumnValue<short?>(Columns.ServiceId); }
			set { SetColumnValue(Columns.ServiceId, value); }
		}
		  
		[XmlAttribute("ServiceDetailId")]
		[Bindable(true)]
		public short? ServiceDetailId 
		{
			get { return GetColumnValue<short?>(Columns.ServiceDetailId); }
			set { SetColumnValue(Columns.ServiceDetailId, value); }
		}
		  
		[XmlAttribute("MaKhoaTHien")]
		[Bindable(true)]
		public string MaKhoaTHien 
		{
			get { return GetColumnValue<string>(Columns.MaKhoaTHien); }
			set { SetColumnValue(Columns.MaKhoaTHien, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varPatientCode,int varPatientId,int? varSoLuong,decimal? varSoTien,string varLyDo,short? varStaffId,short? varDepartmentId,string varNguoiTao,DateTime? varNgayTao,int? varPaymentId,byte? varNoiTru,byte? varPaymentStatus,DateTime? varPaymentDate,DateTime? varNgayDky,decimal? varGiaBhytCt,decimal? varGiaBnct,decimal? varPtramBhyt,string varGhiChu,byte? varIsPayment,short? varObjectTypeId,short? varServiceId,short? varServiceDetailId,string varMaKhoaTHien)
		{
			AoChiPhiThem item = new AoChiPhiThem();
			
			item.PatientCode = varPatientCode;
			
			item.PatientId = varPatientId;
			
			item.SoLuong = varSoLuong;
			
			item.SoTien = varSoTien;
			
			item.LyDo = varLyDo;
			
			item.StaffId = varStaffId;
			
			item.DepartmentId = varDepartmentId;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.PaymentId = varPaymentId;
			
			item.NoiTru = varNoiTru;
			
			item.PaymentStatus = varPaymentStatus;
			
			item.PaymentDate = varPaymentDate;
			
			item.NgayDky = varNgayDky;
			
			item.GiaBhytCt = varGiaBhytCt;
			
			item.GiaBnct = varGiaBnct;
			
			item.PtramBhyt = varPtramBhyt;
			
			item.GhiChu = varGhiChu;
			
			item.IsPayment = varIsPayment;
			
			item.ObjectTypeId = varObjectTypeId;
			
			item.ServiceId = varServiceId;
			
			item.ServiceDetailId = varServiceDetailId;
			
			item.MaKhoaTHien = varMaKhoaTHien;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varSoPhieu,string varPatientCode,int varPatientId,int? varSoLuong,decimal? varSoTien,string varLyDo,short? varStaffId,short? varDepartmentId,string varNguoiTao,DateTime? varNgayTao,int? varPaymentId,byte? varNoiTru,byte? varPaymentStatus,DateTime? varPaymentDate,DateTime? varNgayDky,decimal? varGiaBhytCt,decimal? varGiaBnct,decimal? varPtramBhyt,string varGhiChu,byte? varIsPayment,short? varObjectTypeId,short? varServiceId,short? varServiceDetailId,string varMaKhoaTHien)
		{
			AoChiPhiThem item = new AoChiPhiThem();
			
				item.SoPhieu = varSoPhieu;
			
				item.PatientCode = varPatientCode;
			
				item.PatientId = varPatientId;
			
				item.SoLuong = varSoLuong;
			
				item.SoTien = varSoTien;
			
				item.LyDo = varLyDo;
			
				item.StaffId = varStaffId;
			
				item.DepartmentId = varDepartmentId;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.PaymentId = varPaymentId;
			
				item.NoiTru = varNoiTru;
			
				item.PaymentStatus = varPaymentStatus;
			
				item.PaymentDate = varPaymentDate;
			
				item.NgayDky = varNgayDky;
			
				item.GiaBhytCt = varGiaBhytCt;
			
				item.GiaBnct = varGiaBnct;
			
				item.PtramBhyt = varPtramBhyt;
			
				item.GhiChu = varGhiChu;
			
				item.IsPayment = varIsPayment;
			
				item.ObjectTypeId = varObjectTypeId;
			
				item.ServiceId = varServiceId;
			
				item.ServiceDetailId = varServiceDetailId;
			
				item.MaKhoaTHien = varMaKhoaTHien;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn SoPhieuColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn SoTienColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn LyDoColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn StaffIdColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn DepartmentIdColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentIdColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NoiTruColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentStatusColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentDateColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayDkyColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaBhytCtColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaBnctColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn PtramBhytColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn IsPaymentColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn ObjectTypeIdColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceIdColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceDetailIdColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhoaTHienColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string SoPhieu = @"So_Phieu";
			 public static string PatientCode = @"Patient_Code";
			 public static string PatientId = @"Patient_ID";
			 public static string SoLuong = @"So_Luong";
			 public static string SoTien = @"So_Tien";
			 public static string LyDo = @"Ly_Do";
			 public static string StaffId = @"Staff_ID";
			 public static string DepartmentId = @"Department_ID";
			 public static string NguoiTao = @"Nguoi_Tao";
			 public static string NgayTao = @"Ngay_Tao";
			 public static string PaymentId = @"Payment_ID";
			 public static string NoiTru = @"Noi_Tru";
			 public static string PaymentStatus = @"Payment_Status";
			 public static string PaymentDate = @"Payment_Date";
			 public static string NgayDky = @"NGAY_DKY";
			 public static string GiaBhytCt = @"Gia_BHYT_CT";
			 public static string GiaBnct = @"Gia_BNCT";
			 public static string PtramBhyt = @"Ptram_Bhyt";
			 public static string GhiChu = @"Ghi_Chu";
			 public static string IsPayment = @"IsPayment";
			 public static string ObjectTypeId = @"ObjectType_ID";
			 public static string ServiceId = @"Service_ID";
			 public static string ServiceDetailId = @"ServiceDetail_ID";
			 public static string MaKhoaTHien = @"Ma_Khoa_THien";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
