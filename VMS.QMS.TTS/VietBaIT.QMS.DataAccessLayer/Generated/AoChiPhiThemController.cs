using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for AO_ChiPhi_Them
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class AoChiPhiThemController
    {
        // Preload our schema..
        AoChiPhiThem thisSchemaLoad = new AoChiPhiThem();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public AoChiPhiThemCollection FetchAll()
        {
            AoChiPhiThemCollection coll = new AoChiPhiThemCollection();
            Query qry = new Query(AoChiPhiThem.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public AoChiPhiThemCollection FetchByID(object SoPhieu)
        {
            AoChiPhiThemCollection coll = new AoChiPhiThemCollection().Where("So_Phieu", SoPhieu).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public AoChiPhiThemCollection FetchByQuery(Query qry)
        {
            AoChiPhiThemCollection coll = new AoChiPhiThemCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object SoPhieu)
        {
            return (AoChiPhiThem.Delete(SoPhieu) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object SoPhieu)
        {
            return (AoChiPhiThem.Destroy(SoPhieu) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string PatientCode,int PatientId,int? SoLuong,decimal? SoTien,string LyDo,short? StaffId,short? DepartmentId,string NguoiTao,DateTime? NgayTao,int? PaymentId,byte? NoiTru,byte? PaymentStatus,DateTime? PaymentDate,DateTime? NgayDky,decimal? GiaBhytCt,decimal? GiaBnct,decimal? PtramBhyt,string GhiChu,byte? IsPayment,short? ObjectTypeId,short? ServiceId,short? ServiceDetailId,string MaKhoaTHien)
	    {
		    AoChiPhiThem item = new AoChiPhiThem();
		    
            item.PatientCode = PatientCode;
            
            item.PatientId = PatientId;
            
            item.SoLuong = SoLuong;
            
            item.SoTien = SoTien;
            
            item.LyDo = LyDo;
            
            item.StaffId = StaffId;
            
            item.DepartmentId = DepartmentId;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.PaymentId = PaymentId;
            
            item.NoiTru = NoiTru;
            
            item.PaymentStatus = PaymentStatus;
            
            item.PaymentDate = PaymentDate;
            
            item.NgayDky = NgayDky;
            
            item.GiaBhytCt = GiaBhytCt;
            
            item.GiaBnct = GiaBnct;
            
            item.PtramBhyt = PtramBhyt;
            
            item.GhiChu = GhiChu;
            
            item.IsPayment = IsPayment;
            
            item.ObjectTypeId = ObjectTypeId;
            
            item.ServiceId = ServiceId;
            
            item.ServiceDetailId = ServiceDetailId;
            
            item.MaKhoaTHien = MaKhoaTHien;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int SoPhieu,string PatientCode,int PatientId,int? SoLuong,decimal? SoTien,string LyDo,short? StaffId,short? DepartmentId,string NguoiTao,DateTime? NgayTao,int? PaymentId,byte? NoiTru,byte? PaymentStatus,DateTime? PaymentDate,DateTime? NgayDky,decimal? GiaBhytCt,decimal? GiaBnct,decimal? PtramBhyt,string GhiChu,byte? IsPayment,short? ObjectTypeId,short? ServiceId,short? ServiceDetailId,string MaKhoaTHien)
	    {
		    AoChiPhiThem item = new AoChiPhiThem();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.SoPhieu = SoPhieu;
				
			item.PatientCode = PatientCode;
				
			item.PatientId = PatientId;
				
			item.SoLuong = SoLuong;
				
			item.SoTien = SoTien;
				
			item.LyDo = LyDo;
				
			item.StaffId = StaffId;
				
			item.DepartmentId = DepartmentId;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.PaymentId = PaymentId;
				
			item.NoiTru = NoiTru;
				
			item.PaymentStatus = PaymentStatus;
				
			item.PaymentDate = PaymentDate;
				
			item.NgayDky = NgayDky;
				
			item.GiaBhytCt = GiaBhytCt;
				
			item.GiaBnct = GiaBnct;
				
			item.PtramBhyt = PtramBhyt;
				
			item.GhiChu = GhiChu;
				
			item.IsPayment = IsPayment;
				
			item.ObjectTypeId = ObjectTypeId;
				
			item.ServiceId = ServiceId;
				
			item.ServiceDetailId = ServiceDetailId;
				
			item.MaKhoaTHien = MaKhoaTHien;
				
	        item.Save(UserName);
	    }
    }
}
