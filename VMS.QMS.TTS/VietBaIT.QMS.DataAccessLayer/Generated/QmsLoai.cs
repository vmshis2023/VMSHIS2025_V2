using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the QmsLoai class.
	/// </summary>
    [Serializable]
	public partial class QmsLoaiCollection : ActiveList<QmsLoai, QmsLoaiCollection>
	{	   
		public QmsLoaiCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>QmsLoaiCollection</returns>
		public QmsLoaiCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                QmsLoai o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the QMS_LOAI table.
	/// </summary>
	[Serializable]
	public partial class QmsLoai : ActiveRecord<QmsLoai>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public QmsLoai()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public QmsLoai(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public QmsLoai(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public QmsLoai(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("QMS_LOAI", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarNhomQms = new TableSchema.TableColumn(schema);
				colvarNhomQms.ColumnName = "nhom_qms";
				colvarNhomQms.DataType = DbType.String;
				colvarNhomQms.MaxLength = 20;
				colvarNhomQms.AutoIncrement = false;
				colvarNhomQms.IsNullable = false;
				colvarNhomQms.IsPrimaryKey = false;
				colvarNhomQms.IsForeignKey = false;
				colvarNhomQms.IsReadOnly = false;
				colvarNhomQms.DefaultSetting = @"";
				colvarNhomQms.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhomQms);
				
				TableSchema.TableColumn colvarLoaiQms = new TableSchema.TableColumn(schema);
				colvarLoaiQms.ColumnName = "loai_qms";
				colvarLoaiQms.DataType = DbType.String;
				colvarLoaiQms.MaxLength = 20;
				colvarLoaiQms.AutoIncrement = false;
				colvarLoaiQms.IsNullable = false;
				colvarLoaiQms.IsPrimaryKey = false;
				colvarLoaiQms.IsForeignKey = false;
				colvarLoaiQms.IsReadOnly = false;
				colvarLoaiQms.DefaultSetting = @"";
				colvarLoaiQms.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiQms);
				
				TableSchema.TableColumn colvarTenQms = new TableSchema.TableColumn(schema);
				colvarTenQms.ColumnName = "ten_qms";
				colvarTenQms.DataType = DbType.String;
				colvarTenQms.MaxLength = 50;
				colvarTenQms.AutoIncrement = false;
				colvarTenQms.IsNullable = false;
				colvarTenQms.IsPrimaryKey = false;
				colvarTenQms.IsForeignKey = false;
				colvarTenQms.IsReadOnly = false;
				colvarTenQms.DefaultSetting = @"";
				colvarTenQms.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenQms);
				
				TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
				colvarGhiChu.ColumnName = "ghi_chu";
				colvarGhiChu.DataType = DbType.String;
				colvarGhiChu.MaxLength = 50;
				colvarGhiChu.AutoIncrement = false;
				colvarGhiChu.IsNullable = true;
				colvarGhiChu.IsPrimaryKey = false;
				colvarGhiChu.IsForeignKey = false;
				colvarGhiChu.IsReadOnly = false;
				colvarGhiChu.DefaultSetting = @"";
				colvarGhiChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChu);
				
				TableSchema.TableColumn colvarSttUutien = new TableSchema.TableColumn(schema);
				colvarSttUutien.ColumnName = "stt_uutien";
				colvarSttUutien.DataType = DbType.Int16;
				colvarSttUutien.MaxLength = 0;
				colvarSttUutien.AutoIncrement = false;
				colvarSttUutien.IsNullable = false;
				colvarSttUutien.IsPrimaryKey = false;
				colvarSttUutien.IsForeignKey = false;
				colvarSttUutien.IsReadOnly = false;
				colvarSttUutien.DefaultSetting = @"";
				colvarSttUutien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSttUutien);
				
				TableSchema.TableColumn colvarSttHienthi = new TableSchema.TableColumn(schema);
				colvarSttHienthi.ColumnName = "stt_hienthi";
				colvarSttHienthi.DataType = DbType.Int16;
				colvarSttHienthi.MaxLength = 0;
				colvarSttHienthi.AutoIncrement = false;
				colvarSttHienthi.IsNullable = true;
				colvarSttHienthi.IsPrimaryKey = false;
				colvarSttHienthi.IsForeignKey = false;
				colvarSttHienthi.IsReadOnly = false;
				colvarSttHienthi.DefaultSetting = @"";
				colvarSttHienthi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSttHienthi);
				
				TableSchema.TableColumn colvarTrangthai = new TableSchema.TableColumn(schema);
				colvarTrangthai.ColumnName = "trangthai";
				colvarTrangthai.DataType = DbType.Byte;
				colvarTrangthai.MaxLength = 0;
				colvarTrangthai.AutoIncrement = false;
				colvarTrangthai.IsNullable = true;
				colvarTrangthai.IsPrimaryKey = false;
				colvarTrangthai.IsForeignKey = false;
				colvarTrangthai.IsReadOnly = false;
				
						colvarTrangthai.DefaultSetting = @"((1))";
				colvarTrangthai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangthai);
				
				TableSchema.TableColumn colvarMaKhoa = new TableSchema.TableColumn(schema);
				colvarMaKhoa.ColumnName = "ma_khoa";
				colvarMaKhoa.DataType = DbType.String;
				colvarMaKhoa.MaxLength = 10;
				colvarMaKhoa.AutoIncrement = false;
				colvarMaKhoa.IsNullable = true;
				colvarMaKhoa.IsPrimaryKey = false;
				colvarMaKhoa.IsForeignKey = false;
				colvarMaKhoa.IsReadOnly = false;
				colvarMaKhoa.DefaultSetting = @"";
				colvarMaKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKhoa);
				
				TableSchema.TableColumn colvarMaDoituongKcb = new TableSchema.TableColumn(schema);
				colvarMaDoituongKcb.ColumnName = "ma_doituongKcb";
				colvarMaDoituongKcb.DataType = DbType.String;
				colvarMaDoituongKcb.MaxLength = 5;
				colvarMaDoituongKcb.AutoIncrement = false;
				colvarMaDoituongKcb.IsNullable = true;
				colvarMaDoituongKcb.IsPrimaryKey = false;
				colvarMaDoituongKcb.IsForeignKey = false;
				colvarMaDoituongKcb.IsReadOnly = false;
				
						colvarMaDoituongKcb.DefaultSetting = @"('ALL')";
				colvarMaDoituongKcb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDoituongKcb);
				
				TableSchema.TableColumn colvarUuTien = new TableSchema.TableColumn(schema);
				colvarUuTien.ColumnName = "UuTien";
				colvarUuTien.DataType = DbType.Byte;
				colvarUuTien.MaxLength = 0;
				colvarUuTien.AutoIncrement = false;
				colvarUuTien.IsNullable = true;
				colvarUuTien.IsPrimaryKey = false;
				colvarUuTien.IsForeignKey = false;
				colvarUuTien.IsReadOnly = false;
				colvarUuTien.DefaultSetting = @"";
				colvarUuTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUuTien);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("QMS_LOAI",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("NhomQms")]
		[Bindable(true)]
		public string NhomQms 
		{
			get { return GetColumnValue<string>(Columns.NhomQms); }
			set { SetColumnValue(Columns.NhomQms, value); }
		}
		  
		[XmlAttribute("LoaiQms")]
		[Bindable(true)]
		public string LoaiQms 
		{
			get { return GetColumnValue<string>(Columns.LoaiQms); }
			set { SetColumnValue(Columns.LoaiQms, value); }
		}
		  
		[XmlAttribute("TenQms")]
		[Bindable(true)]
		public string TenQms 
		{
			get { return GetColumnValue<string>(Columns.TenQms); }
			set { SetColumnValue(Columns.TenQms, value); }
		}
		  
		[XmlAttribute("GhiChu")]
		[Bindable(true)]
		public string GhiChu 
		{
			get { return GetColumnValue<string>(Columns.GhiChu); }
			set { SetColumnValue(Columns.GhiChu, value); }
		}
		  
		[XmlAttribute("SttUutien")]
		[Bindable(true)]
		public short SttUutien 
		{
			get { return GetColumnValue<short>(Columns.SttUutien); }
			set { SetColumnValue(Columns.SttUutien, value); }
		}
		  
		[XmlAttribute("SttHienthi")]
		[Bindable(true)]
		public short? SttHienthi 
		{
			get { return GetColumnValue<short?>(Columns.SttHienthi); }
			set { SetColumnValue(Columns.SttHienthi, value); }
		}
		  
		[XmlAttribute("Trangthai")]
		[Bindable(true)]
		public byte? Trangthai 
		{
			get { return GetColumnValue<byte?>(Columns.Trangthai); }
			set { SetColumnValue(Columns.Trangthai, value); }
		}
		  
		[XmlAttribute("MaKhoa")]
		[Bindable(true)]
		public string MaKhoa 
		{
			get { return GetColumnValue<string>(Columns.MaKhoa); }
			set { SetColumnValue(Columns.MaKhoa, value); }
		}
		  
		[XmlAttribute("MaDoituongKcb")]
		[Bindable(true)]
		public string MaDoituongKcb 
		{
			get { return GetColumnValue<string>(Columns.MaDoituongKcb); }
			set { SetColumnValue(Columns.MaDoituongKcb, value); }
		}
		  
		[XmlAttribute("UuTien")]
		[Bindable(true)]
		public byte? UuTien 
		{
			get { return GetColumnValue<byte?>(Columns.UuTien); }
			set { SetColumnValue(Columns.UuTien, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varNhomQms,string varLoaiQms,string varTenQms,string varGhiChu,short varSttUutien,short? varSttHienthi,byte? varTrangthai,string varMaKhoa,string varMaDoituongKcb,byte? varUuTien)
		{
			QmsLoai item = new QmsLoai();
			
			item.NhomQms = varNhomQms;
			
			item.LoaiQms = varLoaiQms;
			
			item.TenQms = varTenQms;
			
			item.GhiChu = varGhiChu;
			
			item.SttUutien = varSttUutien;
			
			item.SttHienthi = varSttHienthi;
			
			item.Trangthai = varTrangthai;
			
			item.MaKhoa = varMaKhoa;
			
			item.MaDoituongKcb = varMaDoituongKcb;
			
			item.UuTien = varUuTien;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,string varNhomQms,string varLoaiQms,string varTenQms,string varGhiChu,short varSttUutien,short? varSttHienthi,byte? varTrangthai,string varMaKhoa,string varMaDoituongKcb,byte? varUuTien)
		{
			QmsLoai item = new QmsLoai();
			
				item.Id = varId;
			
				item.NhomQms = varNhomQms;
			
				item.LoaiQms = varLoaiQms;
			
				item.TenQms = varTenQms;
			
				item.GhiChu = varGhiChu;
			
				item.SttUutien = varSttUutien;
			
				item.SttHienthi = varSttHienthi;
			
				item.Trangthai = varTrangthai;
			
				item.MaKhoa = varMaKhoa;
			
				item.MaDoituongKcb = varMaDoituongKcb;
			
				item.UuTien = varUuTien;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn NhomQmsColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiQmsColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TenQmsColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn SttUutienColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn SttHienthiColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangthaiColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhoaColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDoituongKcbColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn UuTienColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string NhomQms = @"nhom_qms";
			 public static string LoaiQms = @"loai_qms";
			 public static string TenQms = @"ten_qms";
			 public static string GhiChu = @"ghi_chu";
			 public static string SttUutien = @"stt_uutien";
			 public static string SttHienthi = @"stt_hienthi";
			 public static string Trangthai = @"trangthai";
			 public static string MaKhoa = @"ma_khoa";
			 public static string MaDoituongKcb = @"ma_doituongKcb";
			 public static string UuTien = @"UuTien";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
