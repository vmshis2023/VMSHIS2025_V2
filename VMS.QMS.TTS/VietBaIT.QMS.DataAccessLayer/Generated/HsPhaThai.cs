using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the HsPhaThai class.
	/// </summary>
    [Serializable]
	public partial class HsPhaThaiCollection : ActiveList<HsPhaThai, HsPhaThaiCollection>
	{	   
		public HsPhaThaiCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>HsPhaThaiCollection</returns>
		public HsPhaThaiCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                HsPhaThai o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the HS_PHA_THAI table.
	/// </summary>
	[Serializable]
	public partial class HsPhaThai : ActiveRecord<HsPhaThai>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public HsPhaThai()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public HsPhaThai(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public HsPhaThai(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public HsPhaThai(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("HS_PHA_THAI", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdHsPhaThai = new TableSchema.TableColumn(schema);
				colvarIdHsPhaThai.ColumnName = "ID_HS_PHA_THAI";
				colvarIdHsPhaThai.DataType = DbType.Int32;
				colvarIdHsPhaThai.MaxLength = 0;
				colvarIdHsPhaThai.AutoIncrement = false;
				colvarIdHsPhaThai.IsNullable = false;
				colvarIdHsPhaThai.IsPrimaryKey = true;
				colvarIdHsPhaThai.IsForeignKey = false;
				colvarIdHsPhaThai.IsReadOnly = false;
				colvarIdHsPhaThai.DefaultSetting = @"";
				colvarIdHsPhaThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdHsPhaThai);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.String;
				colvarPatientCode.MaxLength = 50;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = true;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int64;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = true;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarExamId = new TableSchema.TableColumn(schema);
				colvarExamId.ColumnName = "Exam_ID";
				colvarExamId.DataType = DbType.Int32;
				colvarExamId.MaxLength = 0;
				colvarExamId.AutoIncrement = false;
				colvarExamId.IsNullable = true;
				colvarExamId.IsPrimaryKey = false;
				colvarExamId.IsForeignKey = false;
				colvarExamId.IsReadOnly = false;
				colvarExamId.DefaultSetting = @"";
				colvarExamId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarExamId);
				
				TableSchema.TableColumn colvarIdPhieuVaovien = new TableSchema.TableColumn(schema);
				colvarIdPhieuVaovien.ColumnName = "ID_PHIEU_VAOVIEN";
				colvarIdPhieuVaovien.DataType = DbType.Int32;
				colvarIdPhieuVaovien.MaxLength = 0;
				colvarIdPhieuVaovien.AutoIncrement = false;
				colvarIdPhieuVaovien.IsNullable = true;
				colvarIdPhieuVaovien.IsPrimaryKey = false;
				colvarIdPhieuVaovien.IsForeignKey = false;
				colvarIdPhieuVaovien.IsReadOnly = false;
				colvarIdPhieuVaovien.DefaultSetting = @"";
				colvarIdPhieuVaovien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuVaovien);
				
				TableSchema.TableColumn colvarKhamKinhCcuoi = new TableSchema.TableColumn(schema);
				colvarKhamKinhCcuoi.ColumnName = "KHAM_KINH_CCUOI";
				colvarKhamKinhCcuoi.DataType = DbType.String;
				colvarKhamKinhCcuoi.MaxLength = 500;
				colvarKhamKinhCcuoi.AutoIncrement = false;
				colvarKhamKinhCcuoi.IsNullable = true;
				colvarKhamKinhCcuoi.IsPrimaryKey = false;
				colvarKhamKinhCcuoi.IsForeignKey = false;
				colvarKhamKinhCcuoi.IsReadOnly = false;
				colvarKhamKinhCcuoi.DefaultSetting = @"";
				colvarKhamKinhCcuoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamKinhCcuoi);
				
				TableSchema.TableColumn colvarKhamAmHo = new TableSchema.TableColumn(schema);
				colvarKhamAmHo.ColumnName = "KHAM_AM_HO";
				colvarKhamAmHo.DataType = DbType.String;
				colvarKhamAmHo.MaxLength = 500;
				colvarKhamAmHo.AutoIncrement = false;
				colvarKhamAmHo.IsNullable = true;
				colvarKhamAmHo.IsPrimaryKey = false;
				colvarKhamAmHo.IsForeignKey = false;
				colvarKhamAmHo.IsReadOnly = false;
				colvarKhamAmHo.DefaultSetting = @"";
				colvarKhamAmHo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamAmHo);
				
				TableSchema.TableColumn colvarKhamAmDao = new TableSchema.TableColumn(schema);
				colvarKhamAmDao.ColumnName = "KHAM_AM_DAO";
				colvarKhamAmDao.DataType = DbType.String;
				colvarKhamAmDao.MaxLength = 500;
				colvarKhamAmDao.AutoIncrement = false;
				colvarKhamAmDao.IsNullable = true;
				colvarKhamAmDao.IsPrimaryKey = false;
				colvarKhamAmDao.IsForeignKey = false;
				colvarKhamAmDao.IsReadOnly = false;
				colvarKhamAmDao.DefaultSetting = @"";
				colvarKhamAmDao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamAmDao);
				
				TableSchema.TableColumn colvarKhamCoTuCung = new TableSchema.TableColumn(schema);
				colvarKhamCoTuCung.ColumnName = "KHAM_CO_TU_CUNG";
				colvarKhamCoTuCung.DataType = DbType.String;
				colvarKhamCoTuCung.MaxLength = 500;
				colvarKhamCoTuCung.AutoIncrement = false;
				colvarKhamCoTuCung.IsNullable = true;
				colvarKhamCoTuCung.IsPrimaryKey = false;
				colvarKhamCoTuCung.IsForeignKey = false;
				colvarKhamCoTuCung.IsReadOnly = false;
				colvarKhamCoTuCung.DefaultSetting = @"";
				colvarKhamCoTuCung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamCoTuCung);
				
				TableSchema.TableColumn colvarKhamTuCung = new TableSchema.TableColumn(schema);
				colvarKhamTuCung.ColumnName = "KHAM_TU_CUNG";
				colvarKhamTuCung.DataType = DbType.String;
				colvarKhamTuCung.MaxLength = 1000;
				colvarKhamTuCung.AutoIncrement = false;
				colvarKhamTuCung.IsNullable = true;
				colvarKhamTuCung.IsPrimaryKey = false;
				colvarKhamTuCung.IsForeignKey = false;
				colvarKhamTuCung.IsReadOnly = false;
				colvarKhamTuCung.DefaultSetting = @"";
				colvarKhamTuCung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamTuCung);
				
				TableSchema.TableColumn colvarPphuPhai = new TableSchema.TableColumn(schema);
				colvarPphuPhai.ColumnName = "PPHU_PHAI";
				colvarPphuPhai.DataType = DbType.String;
				colvarPphuPhai.MaxLength = 500;
				colvarPphuPhai.AutoIncrement = false;
				colvarPphuPhai.IsNullable = true;
				colvarPphuPhai.IsPrimaryKey = false;
				colvarPphuPhai.IsForeignKey = false;
				colvarPphuPhai.IsReadOnly = false;
				colvarPphuPhai.DefaultSetting = @"";
				colvarPphuPhai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPphuPhai);
				
				TableSchema.TableColumn colvarPphuTrai = new TableSchema.TableColumn(schema);
				colvarPphuTrai.ColumnName = "PPHU_TRAI";
				colvarPphuTrai.DataType = DbType.String;
				colvarPphuTrai.MaxLength = 500;
				colvarPphuTrai.AutoIncrement = false;
				colvarPphuTrai.IsNullable = true;
				colvarPphuTrai.IsPrimaryKey = false;
				colvarPphuTrai.IsForeignKey = false;
				colvarPphuTrai.IsReadOnly = false;
				colvarPphuTrai.DefaultSetting = @"";
				colvarPphuTrai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPphuTrai);
				
				TableSchema.TableColumn colvarXnTestThuThai = new TableSchema.TableColumn(schema);
				colvarXnTestThuThai.ColumnName = "XN_TEST_THU_THAI";
				colvarXnTestThuThai.DataType = DbType.String;
				colvarXnTestThuThai.MaxLength = 1000;
				colvarXnTestThuThai.AutoIncrement = false;
				colvarXnTestThuThai.IsNullable = true;
				colvarXnTestThuThai.IsPrimaryKey = false;
				colvarXnTestThuThai.IsForeignKey = false;
				colvarXnTestThuThai.IsReadOnly = false;
				colvarXnTestThuThai.DefaultSetting = @"";
				colvarXnTestThuThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXnTestThuThai);
				
				TableSchema.TableColumn colvarXnSieuAm = new TableSchema.TableColumn(schema);
				colvarXnSieuAm.ColumnName = "XN_SIEU_AM";
				colvarXnSieuAm.DataType = DbType.String;
				colvarXnSieuAm.MaxLength = 1000;
				colvarXnSieuAm.AutoIncrement = false;
				colvarXnSieuAm.IsNullable = true;
				colvarXnSieuAm.IsPrimaryKey = false;
				colvarXnSieuAm.IsForeignKey = false;
				colvarXnSieuAm.IsReadOnly = false;
				colvarXnSieuAm.DefaultSetting = @"";
				colvarXnSieuAm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXnSieuAm);
				
				TableSchema.TableColumn colvarXnKhac = new TableSchema.TableColumn(schema);
				colvarXnKhac.ColumnName = "XN_KHAC";
				colvarXnKhac.DataType = DbType.String;
				colvarXnKhac.MaxLength = 1000;
				colvarXnKhac.AutoIncrement = false;
				colvarXnKhac.IsNullable = true;
				colvarXnKhac.IsPrimaryKey = false;
				colvarXnKhac.IsForeignKey = false;
				colvarXnKhac.IsReadOnly = false;
				colvarXnKhac.DefaultSetting = @"";
				colvarXnKhac.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXnKhac);
				
				TableSchema.TableColumn colvarChanDoan = new TableSchema.TableColumn(schema);
				colvarChanDoan.ColumnName = "CHAN_DOAN";
				colvarChanDoan.DataType = DbType.String;
				colvarChanDoan.MaxLength = 500;
				colvarChanDoan.AutoIncrement = false;
				colvarChanDoan.IsNullable = true;
				colvarChanDoan.IsPrimaryKey = false;
				colvarChanDoan.IsForeignKey = false;
				colvarChanDoan.IsReadOnly = false;
				colvarChanDoan.DefaultSetting = @"";
				colvarChanDoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChanDoan);
				
				TableSchema.TableColumn colvarPphapGiamDau = new TableSchema.TableColumn(schema);
				colvarPphapGiamDau.ColumnName = "PPHAP_GIAM_DAU";
				colvarPphapGiamDau.DataType = DbType.String;
				colvarPphapGiamDau.MaxLength = 1000;
				colvarPphapGiamDau.AutoIncrement = false;
				colvarPphapGiamDau.IsNullable = true;
				colvarPphapGiamDau.IsPrimaryKey = false;
				colvarPphapGiamDau.IsForeignKey = false;
				colvarPphapGiamDau.IsReadOnly = false;
				colvarPphapGiamDau.DefaultSetting = @"";
				colvarPphapGiamDau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPphapGiamDau);
				
				TableSchema.TableColumn colvarPphapPhaThai = new TableSchema.TableColumn(schema);
				colvarPphapPhaThai.ColumnName = "PPHAP_PHA_THAI";
				colvarPphapPhaThai.DataType = DbType.String;
				colvarPphapPhaThai.MaxLength = 1000;
				colvarPphapPhaThai.AutoIncrement = false;
				colvarPphapPhaThai.IsNullable = true;
				colvarPphapPhaThai.IsPrimaryKey = false;
				colvarPphapPhaThai.IsForeignKey = false;
				colvarPphapPhaThai.IsReadOnly = false;
				colvarPphapPhaThai.DefaultSetting = @"";
				colvarPphapPhaThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPphapPhaThai);
				
				TableSchema.TableColumn colvarKtraChutSluong = new TableSchema.TableColumn(schema);
				colvarKtraChutSluong.ColumnName = "KTRA_CHUT_SLUONG";
				colvarKtraChutSluong.DataType = DbType.String;
				colvarKtraChutSluong.MaxLength = 50;
				colvarKtraChutSluong.AutoIncrement = false;
				colvarKtraChutSluong.IsNullable = true;
				colvarKtraChutSluong.IsPrimaryKey = false;
				colvarKtraChutSluong.IsForeignKey = false;
				colvarKtraChutSluong.IsReadOnly = false;
				colvarKtraChutSluong.DefaultSetting = @"";
				colvarKtraChutSluong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKtraChutSluong);
				
				TableSchema.TableColumn colvarKtraChutCluong = new TableSchema.TableColumn(schema);
				colvarKtraChutCluong.ColumnName = "KTRA_CHUT_CLUONG";
				colvarKtraChutCluong.DataType = DbType.String;
				colvarKtraChutCluong.MaxLength = 500;
				colvarKtraChutCluong.AutoIncrement = false;
				colvarKtraChutCluong.IsNullable = true;
				colvarKtraChutCluong.IsPrimaryKey = false;
				colvarKtraChutCluong.IsForeignKey = false;
				colvarKtraChutCluong.IsReadOnly = false;
				colvarKtraChutCluong.DefaultSetting = @"";
				colvarKtraChutCluong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKtraChutCluong);
				
				TableSchema.TableColumn colvarKtrChutCtxVoiTthai = new TableSchema.TableColumn(schema);
				colvarKtrChutCtxVoiTthai.ColumnName = "KTR_CHUT_CTX_VOI_TTHAI";
				colvarKtrChutCtxVoiTthai.DataType = DbType.String;
				colvarKtrChutCtxVoiTthai.MaxLength = 200;
				colvarKtrChutCtxVoiTthai.AutoIncrement = false;
				colvarKtrChutCtxVoiTthai.IsNullable = true;
				colvarKtrChutCtxVoiTthai.IsPrimaryKey = false;
				colvarKtrChutCtxVoiTthai.IsForeignKey = false;
				colvarKtrChutCtxVoiTthai.IsReadOnly = false;
				colvarKtrChutCtxVoiTthai.DefaultSetting = @"";
				colvarKtrChutCtxVoiTthai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKtrChutCtxVoiTthai);
				
				TableSchema.TableColumn colvarThuoc = new TableSchema.TableColumn(schema);
				colvarThuoc.ColumnName = "THUOC";
				colvarThuoc.DataType = DbType.String;
				colvarThuoc.MaxLength = 2000;
				colvarThuoc.AutoIncrement = false;
				colvarThuoc.IsNullable = true;
				colvarThuoc.IsPrimaryKey = false;
				colvarThuoc.IsForeignKey = false;
				colvarThuoc.IsReadOnly = false;
				colvarThuoc.DefaultSetting = @"";
				colvarThuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThuoc);
				
				TableSchema.TableColumn colvarBienchungXuly = new TableSchema.TableColumn(schema);
				colvarBienchungXuly.ColumnName = "BIENCHUNG_XULY";
				colvarBienchungXuly.DataType = DbType.String;
				colvarBienchungXuly.MaxLength = 1000;
				colvarBienchungXuly.AutoIncrement = false;
				colvarBienchungXuly.IsNullable = true;
				colvarBienchungXuly.IsPrimaryKey = false;
				colvarBienchungXuly.IsForeignKey = false;
				colvarBienchungXuly.IsReadOnly = false;
				colvarBienchungXuly.DefaultSetting = @"";
				colvarBienchungXuly.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBienchungXuly);
				
				TableSchema.TableColumn colvarTdToantrang = new TableSchema.TableColumn(schema);
				colvarTdToantrang.ColumnName = "TD_TOANTRANG";
				colvarTdToantrang.DataType = DbType.String;
				colvarTdToantrang.MaxLength = 500;
				colvarTdToantrang.AutoIncrement = false;
				colvarTdToantrang.IsNullable = true;
				colvarTdToantrang.IsPrimaryKey = false;
				colvarTdToantrang.IsForeignKey = false;
				colvarTdToantrang.IsReadOnly = false;
				colvarTdToantrang.DefaultSetting = @"";
				colvarTdToantrang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTdToantrang);
				
				TableSchema.TableColumn colvarTdMach = new TableSchema.TableColumn(schema);
				colvarTdMach.ColumnName = "TD_MACH";
				colvarTdMach.DataType = DbType.Int32;
				colvarTdMach.MaxLength = 0;
				colvarTdMach.AutoIncrement = false;
				colvarTdMach.IsNullable = true;
				colvarTdMach.IsPrimaryKey = false;
				colvarTdMach.IsForeignKey = false;
				colvarTdMach.IsReadOnly = false;
				colvarTdMach.DefaultSetting = @"";
				colvarTdMach.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTdMach);
				
				TableSchema.TableColumn colvarTdHuyetap = new TableSchema.TableColumn(schema);
				colvarTdHuyetap.ColumnName = "TD_HUYETAP";
				colvarTdHuyetap.DataType = DbType.String;
				colvarTdHuyetap.MaxLength = 50;
				colvarTdHuyetap.AutoIncrement = false;
				colvarTdHuyetap.IsNullable = true;
				colvarTdHuyetap.IsPrimaryKey = false;
				colvarTdHuyetap.IsForeignKey = false;
				colvarTdHuyetap.IsReadOnly = false;
				colvarTdHuyetap.DefaultSetting = @"";
				colvarTdHuyetap.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTdHuyetap);
				
				TableSchema.TableColumn colvarTdDau = new TableSchema.TableColumn(schema);
				colvarTdDau.ColumnName = "TD_DAU";
				colvarTdDau.DataType = DbType.String;
				colvarTdDau.MaxLength = 200;
				colvarTdDau.AutoIncrement = false;
				colvarTdDau.IsNullable = true;
				colvarTdDau.IsPrimaryKey = false;
				colvarTdDau.IsForeignKey = false;
				colvarTdDau.IsReadOnly = false;
				colvarTdDau.DefaultSetting = @"";
				colvarTdDau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTdDau);
				
				TableSchema.TableColumn colvarTdRamau = new TableSchema.TableColumn(schema);
				colvarTdRamau.ColumnName = "TD_RAMAU";
				colvarTdRamau.DataType = DbType.String;
				colvarTdRamau.MaxLength = 200;
				colvarTdRamau.AutoIncrement = false;
				colvarTdRamau.IsNullable = true;
				colvarTdRamau.IsPrimaryKey = false;
				colvarTdRamau.IsForeignKey = false;
				colvarTdRamau.IsReadOnly = false;
				colvarTdRamau.DefaultSetting = @"";
				colvarTdRamau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTdRamau);
				
				TableSchema.TableColumn colvarPphaptranhthaiSautt = new TableSchema.TableColumn(schema);
				colvarPphaptranhthaiSautt.ColumnName = "PPHAPTRANHTHAI_SAUTT";
				colvarPphaptranhthaiSautt.DataType = DbType.String;
				colvarPphaptranhthaiSautt.MaxLength = 100;
				colvarPphaptranhthaiSautt.AutoIncrement = false;
				colvarPphaptranhthaiSautt.IsNullable = true;
				colvarPphaptranhthaiSautt.IsPrimaryKey = false;
				colvarPphaptranhthaiSautt.IsForeignKey = false;
				colvarPphaptranhthaiSautt.IsReadOnly = false;
				colvarPphaptranhthaiSautt.DefaultSetting = @"";
				colvarPphaptranhthaiSautt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPphaptranhthaiSautt);
				
				TableSchema.TableColumn colvarKhamlaiChandoan = new TableSchema.TableColumn(schema);
				colvarKhamlaiChandoan.ColumnName = "KHAMLAI_CHANDOAN";
				colvarKhamlaiChandoan.DataType = DbType.String;
				colvarKhamlaiChandoan.MaxLength = 500;
				colvarKhamlaiChandoan.AutoIncrement = false;
				colvarKhamlaiChandoan.IsNullable = true;
				colvarKhamlaiChandoan.IsPrimaryKey = false;
				colvarKhamlaiChandoan.IsForeignKey = false;
				colvarKhamlaiChandoan.IsReadOnly = false;
				colvarKhamlaiChandoan.DefaultSetting = @"";
				colvarKhamlaiChandoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamlaiChandoan);
				
				TableSchema.TableColumn colvarKhamlaiDieutri = new TableSchema.TableColumn(schema);
				colvarKhamlaiDieutri.ColumnName = "KHAMLAI_DIEUTRI";
				colvarKhamlaiDieutri.DataType = DbType.String;
				colvarKhamlaiDieutri.MaxLength = 1000;
				colvarKhamlaiDieutri.AutoIncrement = false;
				colvarKhamlaiDieutri.IsNullable = true;
				colvarKhamlaiDieutri.IsPrimaryKey = false;
				colvarKhamlaiDieutri.IsForeignKey = false;
				colvarKhamlaiDieutri.IsReadOnly = false;
				colvarKhamlaiDieutri.DefaultSetting = @"";
				colvarKhamlaiDieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamlaiDieutri);
				
				TableSchema.TableColumn colvarIdKhamSanphuKhoa = new TableSchema.TableColumn(schema);
				colvarIdKhamSanphuKhoa.ColumnName = "ID_KHAM_SANPHU_KHOA";
				colvarIdKhamSanphuKhoa.DataType = DbType.Int32;
				colvarIdKhamSanphuKhoa.MaxLength = 0;
				colvarIdKhamSanphuKhoa.AutoIncrement = false;
				colvarIdKhamSanphuKhoa.IsNullable = true;
				colvarIdKhamSanphuKhoa.IsPrimaryKey = false;
				colvarIdKhamSanphuKhoa.IsForeignKey = false;
				colvarIdKhamSanphuKhoa.IsReadOnly = false;
				colvarIdKhamSanphuKhoa.DefaultSetting = @"";
				colvarIdKhamSanphuKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhamSanphuKhoa);
				
				TableSchema.TableColumn colvarBptt = new TableSchema.TableColumn(schema);
				colvarBptt.ColumnName = "BPTT";
				colvarBptt.DataType = DbType.String;
				colvarBptt.MaxLength = 50;
				colvarBptt.AutoIncrement = false;
				colvarBptt.IsNullable = true;
				colvarBptt.IsPrimaryKey = false;
				colvarBptt.IsForeignKey = false;
				colvarBptt.IsReadOnly = false;
				colvarBptt.DefaultSetting = @"";
				colvarBptt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBptt);
				
				TableSchema.TableColumn colvarSuDungBptt = new TableSchema.TableColumn(schema);
				colvarSuDungBptt.ColumnName = "SuDung_BPTT";
				colvarSuDungBptt.DataType = DbType.Byte;
				colvarSuDungBptt.MaxLength = 0;
				colvarSuDungBptt.AutoIncrement = false;
				colvarSuDungBptt.IsNullable = true;
				colvarSuDungBptt.IsPrimaryKey = false;
				colvarSuDungBptt.IsForeignKey = false;
				colvarSuDungBptt.IsReadOnly = false;
				colvarSuDungBptt.DefaultSetting = @"";
				colvarSuDungBptt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSuDungBptt);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("HS_PHA_THAI",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdHsPhaThai")]
		[Bindable(true)]
		public int IdHsPhaThai 
		{
			get { return GetColumnValue<int>(Columns.IdHsPhaThai); }
			set { SetColumnValue(Columns.IdHsPhaThai, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public long? PatientId 
		{
			get { return GetColumnValue<long?>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("ExamId")]
		[Bindable(true)]
		public int? ExamId 
		{
			get { return GetColumnValue<int?>(Columns.ExamId); }
			set { SetColumnValue(Columns.ExamId, value); }
		}
		  
		[XmlAttribute("IdPhieuVaovien")]
		[Bindable(true)]
		public int? IdPhieuVaovien 
		{
			get { return GetColumnValue<int?>(Columns.IdPhieuVaovien); }
			set { SetColumnValue(Columns.IdPhieuVaovien, value); }
		}
		  
		[XmlAttribute("KhamKinhCcuoi")]
		[Bindable(true)]
		public string KhamKinhCcuoi 
		{
			get { return GetColumnValue<string>(Columns.KhamKinhCcuoi); }
			set { SetColumnValue(Columns.KhamKinhCcuoi, value); }
		}
		  
		[XmlAttribute("KhamAmHo")]
		[Bindable(true)]
		public string KhamAmHo 
		{
			get { return GetColumnValue<string>(Columns.KhamAmHo); }
			set { SetColumnValue(Columns.KhamAmHo, value); }
		}
		  
		[XmlAttribute("KhamAmDao")]
		[Bindable(true)]
		public string KhamAmDao 
		{
			get { return GetColumnValue<string>(Columns.KhamAmDao); }
			set { SetColumnValue(Columns.KhamAmDao, value); }
		}
		  
		[XmlAttribute("KhamCoTuCung")]
		[Bindable(true)]
		public string KhamCoTuCung 
		{
			get { return GetColumnValue<string>(Columns.KhamCoTuCung); }
			set { SetColumnValue(Columns.KhamCoTuCung, value); }
		}
		  
		[XmlAttribute("KhamTuCung")]
		[Bindable(true)]
		public string KhamTuCung 
		{
			get { return GetColumnValue<string>(Columns.KhamTuCung); }
			set { SetColumnValue(Columns.KhamTuCung, value); }
		}
		  
		[XmlAttribute("PphuPhai")]
		[Bindable(true)]
		public string PphuPhai 
		{
			get { return GetColumnValue<string>(Columns.PphuPhai); }
			set { SetColumnValue(Columns.PphuPhai, value); }
		}
		  
		[XmlAttribute("PphuTrai")]
		[Bindable(true)]
		public string PphuTrai 
		{
			get { return GetColumnValue<string>(Columns.PphuTrai); }
			set { SetColumnValue(Columns.PphuTrai, value); }
		}
		  
		[XmlAttribute("XnTestThuThai")]
		[Bindable(true)]
		public string XnTestThuThai 
		{
			get { return GetColumnValue<string>(Columns.XnTestThuThai); }
			set { SetColumnValue(Columns.XnTestThuThai, value); }
		}
		  
		[XmlAttribute("XnSieuAm")]
		[Bindable(true)]
		public string XnSieuAm 
		{
			get { return GetColumnValue<string>(Columns.XnSieuAm); }
			set { SetColumnValue(Columns.XnSieuAm, value); }
		}
		  
		[XmlAttribute("XnKhac")]
		[Bindable(true)]
		public string XnKhac 
		{
			get { return GetColumnValue<string>(Columns.XnKhac); }
			set { SetColumnValue(Columns.XnKhac, value); }
		}
		  
		[XmlAttribute("ChanDoan")]
		[Bindable(true)]
		public string ChanDoan 
		{
			get { return GetColumnValue<string>(Columns.ChanDoan); }
			set { SetColumnValue(Columns.ChanDoan, value); }
		}
		  
		[XmlAttribute("PphapGiamDau")]
		[Bindable(true)]
		public string PphapGiamDau 
		{
			get { return GetColumnValue<string>(Columns.PphapGiamDau); }
			set { SetColumnValue(Columns.PphapGiamDau, value); }
		}
		  
		[XmlAttribute("PphapPhaThai")]
		[Bindable(true)]
		public string PphapPhaThai 
		{
			get { return GetColumnValue<string>(Columns.PphapPhaThai); }
			set { SetColumnValue(Columns.PphapPhaThai, value); }
		}
		  
		[XmlAttribute("KtraChutSluong")]
		[Bindable(true)]
		public string KtraChutSluong 
		{
			get { return GetColumnValue<string>(Columns.KtraChutSluong); }
			set { SetColumnValue(Columns.KtraChutSluong, value); }
		}
		  
		[XmlAttribute("KtraChutCluong")]
		[Bindable(true)]
		public string KtraChutCluong 
		{
			get { return GetColumnValue<string>(Columns.KtraChutCluong); }
			set { SetColumnValue(Columns.KtraChutCluong, value); }
		}
		  
		[XmlAttribute("KtrChutCtxVoiTthai")]
		[Bindable(true)]
		public string KtrChutCtxVoiTthai 
		{
			get { return GetColumnValue<string>(Columns.KtrChutCtxVoiTthai); }
			set { SetColumnValue(Columns.KtrChutCtxVoiTthai, value); }
		}
		  
		[XmlAttribute("Thuoc")]
		[Bindable(true)]
		public string Thuoc 
		{
			get { return GetColumnValue<string>(Columns.Thuoc); }
			set { SetColumnValue(Columns.Thuoc, value); }
		}
		  
		[XmlAttribute("BienchungXuly")]
		[Bindable(true)]
		public string BienchungXuly 
		{
			get { return GetColumnValue<string>(Columns.BienchungXuly); }
			set { SetColumnValue(Columns.BienchungXuly, value); }
		}
		  
		[XmlAttribute("TdToantrang")]
		[Bindable(true)]
		public string TdToantrang 
		{
			get { return GetColumnValue<string>(Columns.TdToantrang); }
			set { SetColumnValue(Columns.TdToantrang, value); }
		}
		  
		[XmlAttribute("TdMach")]
		[Bindable(true)]
		public int? TdMach 
		{
			get { return GetColumnValue<int?>(Columns.TdMach); }
			set { SetColumnValue(Columns.TdMach, value); }
		}
		  
		[XmlAttribute("TdHuyetap")]
		[Bindable(true)]
		public string TdHuyetap 
		{
			get { return GetColumnValue<string>(Columns.TdHuyetap); }
			set { SetColumnValue(Columns.TdHuyetap, value); }
		}
		  
		[XmlAttribute("TdDau")]
		[Bindable(true)]
		public string TdDau 
		{
			get { return GetColumnValue<string>(Columns.TdDau); }
			set { SetColumnValue(Columns.TdDau, value); }
		}
		  
		[XmlAttribute("TdRamau")]
		[Bindable(true)]
		public string TdRamau 
		{
			get { return GetColumnValue<string>(Columns.TdRamau); }
			set { SetColumnValue(Columns.TdRamau, value); }
		}
		  
		[XmlAttribute("PphaptranhthaiSautt")]
		[Bindable(true)]
		public string PphaptranhthaiSautt 
		{
			get { return GetColumnValue<string>(Columns.PphaptranhthaiSautt); }
			set { SetColumnValue(Columns.PphaptranhthaiSautt, value); }
		}
		  
		[XmlAttribute("KhamlaiChandoan")]
		[Bindable(true)]
		public string KhamlaiChandoan 
		{
			get { return GetColumnValue<string>(Columns.KhamlaiChandoan); }
			set { SetColumnValue(Columns.KhamlaiChandoan, value); }
		}
		  
		[XmlAttribute("KhamlaiDieutri")]
		[Bindable(true)]
		public string KhamlaiDieutri 
		{
			get { return GetColumnValue<string>(Columns.KhamlaiDieutri); }
			set { SetColumnValue(Columns.KhamlaiDieutri, value); }
		}
		  
		[XmlAttribute("IdKhamSanphuKhoa")]
		[Bindable(true)]
		public int? IdKhamSanphuKhoa 
		{
			get { return GetColumnValue<int?>(Columns.IdKhamSanphuKhoa); }
			set { SetColumnValue(Columns.IdKhamSanphuKhoa, value); }
		}
		  
		[XmlAttribute("Bptt")]
		[Bindable(true)]
		public string Bptt 
		{
			get { return GetColumnValue<string>(Columns.Bptt); }
			set { SetColumnValue(Columns.Bptt, value); }
		}
		  
		[XmlAttribute("SuDungBptt")]
		[Bindable(true)]
		public byte? SuDungBptt 
		{
			get { return GetColumnValue<byte?>(Columns.SuDungBptt); }
			set { SetColumnValue(Columns.SuDungBptt, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varIdHsPhaThai,string varPatientCode,long? varPatientId,int? varExamId,int? varIdPhieuVaovien,string varKhamKinhCcuoi,string varKhamAmHo,string varKhamAmDao,string varKhamCoTuCung,string varKhamTuCung,string varPphuPhai,string varPphuTrai,string varXnTestThuThai,string varXnSieuAm,string varXnKhac,string varChanDoan,string varPphapGiamDau,string varPphapPhaThai,string varKtraChutSluong,string varKtraChutCluong,string varKtrChutCtxVoiTthai,string varThuoc,string varBienchungXuly,string varTdToantrang,int? varTdMach,string varTdHuyetap,string varTdDau,string varTdRamau,string varPphaptranhthaiSautt,string varKhamlaiChandoan,string varKhamlaiDieutri,int? varIdKhamSanphuKhoa,string varBptt,byte? varSuDungBptt,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua)
		{
			HsPhaThai item = new HsPhaThai();
			
			item.IdHsPhaThai = varIdHsPhaThai;
			
			item.PatientCode = varPatientCode;
			
			item.PatientId = varPatientId;
			
			item.ExamId = varExamId;
			
			item.IdPhieuVaovien = varIdPhieuVaovien;
			
			item.KhamKinhCcuoi = varKhamKinhCcuoi;
			
			item.KhamAmHo = varKhamAmHo;
			
			item.KhamAmDao = varKhamAmDao;
			
			item.KhamCoTuCung = varKhamCoTuCung;
			
			item.KhamTuCung = varKhamTuCung;
			
			item.PphuPhai = varPphuPhai;
			
			item.PphuTrai = varPphuTrai;
			
			item.XnTestThuThai = varXnTestThuThai;
			
			item.XnSieuAm = varXnSieuAm;
			
			item.XnKhac = varXnKhac;
			
			item.ChanDoan = varChanDoan;
			
			item.PphapGiamDau = varPphapGiamDau;
			
			item.PphapPhaThai = varPphapPhaThai;
			
			item.KtraChutSluong = varKtraChutSluong;
			
			item.KtraChutCluong = varKtraChutCluong;
			
			item.KtrChutCtxVoiTthai = varKtrChutCtxVoiTthai;
			
			item.Thuoc = varThuoc;
			
			item.BienchungXuly = varBienchungXuly;
			
			item.TdToantrang = varTdToantrang;
			
			item.TdMach = varTdMach;
			
			item.TdHuyetap = varTdHuyetap;
			
			item.TdDau = varTdDau;
			
			item.TdRamau = varTdRamau;
			
			item.PphaptranhthaiSautt = varPphaptranhthaiSautt;
			
			item.KhamlaiChandoan = varKhamlaiChandoan;
			
			item.KhamlaiDieutri = varKhamlaiDieutri;
			
			item.IdKhamSanphuKhoa = varIdKhamSanphuKhoa;
			
			item.Bptt = varBptt;
			
			item.SuDungBptt = varSuDungBptt;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdHsPhaThai,string varPatientCode,long? varPatientId,int? varExamId,int? varIdPhieuVaovien,string varKhamKinhCcuoi,string varKhamAmHo,string varKhamAmDao,string varKhamCoTuCung,string varKhamTuCung,string varPphuPhai,string varPphuTrai,string varXnTestThuThai,string varXnSieuAm,string varXnKhac,string varChanDoan,string varPphapGiamDau,string varPphapPhaThai,string varKtraChutSluong,string varKtraChutCluong,string varKtrChutCtxVoiTthai,string varThuoc,string varBienchungXuly,string varTdToantrang,int? varTdMach,string varTdHuyetap,string varTdDau,string varTdRamau,string varPphaptranhthaiSautt,string varKhamlaiChandoan,string varKhamlaiDieutri,int? varIdKhamSanphuKhoa,string varBptt,byte? varSuDungBptt,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua)
		{
			HsPhaThai item = new HsPhaThai();
			
				item.IdHsPhaThai = varIdHsPhaThai;
			
				item.PatientCode = varPatientCode;
			
				item.PatientId = varPatientId;
			
				item.ExamId = varExamId;
			
				item.IdPhieuVaovien = varIdPhieuVaovien;
			
				item.KhamKinhCcuoi = varKhamKinhCcuoi;
			
				item.KhamAmHo = varKhamAmHo;
			
				item.KhamAmDao = varKhamAmDao;
			
				item.KhamCoTuCung = varKhamCoTuCung;
			
				item.KhamTuCung = varKhamTuCung;
			
				item.PphuPhai = varPphuPhai;
			
				item.PphuTrai = varPphuTrai;
			
				item.XnTestThuThai = varXnTestThuThai;
			
				item.XnSieuAm = varXnSieuAm;
			
				item.XnKhac = varXnKhac;
			
				item.ChanDoan = varChanDoan;
			
				item.PphapGiamDau = varPphapGiamDau;
			
				item.PphapPhaThai = varPphapPhaThai;
			
				item.KtraChutSluong = varKtraChutSluong;
			
				item.KtraChutCluong = varKtraChutCluong;
			
				item.KtrChutCtxVoiTthai = varKtrChutCtxVoiTthai;
			
				item.Thuoc = varThuoc;
			
				item.BienchungXuly = varBienchungXuly;
			
				item.TdToantrang = varTdToantrang;
			
				item.TdMach = varTdMach;
			
				item.TdHuyetap = varTdHuyetap;
			
				item.TdDau = varTdDau;
			
				item.TdRamau = varTdRamau;
			
				item.PphaptranhthaiSautt = varPphaptranhthaiSautt;
			
				item.KhamlaiChandoan = varKhamlaiChandoan;
			
				item.KhamlaiDieutri = varKhamlaiDieutri;
			
				item.IdKhamSanphuKhoa = varIdKhamSanphuKhoa;
			
				item.Bptt = varBptt;
			
				item.SuDungBptt = varSuDungBptt;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdHsPhaThaiColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn ExamIdColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuVaovienColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamKinhCcuoiColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamAmHoColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamAmDaoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamCoTuCungColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamTuCungColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn PphuPhaiColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn PphuTraiColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn XnTestThuThaiColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn XnSieuAmColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn XnKhacColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn ChanDoanColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn PphapGiamDauColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn PphapPhaThaiColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn KtraChutSluongColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn KtraChutCluongColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn KtrChutCtxVoiTthaiColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn ThuocColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn BienchungXulyColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn TdToantrangColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn TdMachColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn TdHuyetapColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn TdDauColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn TdRamauColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn PphaptranhthaiSauttColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamlaiChandoanColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamlaiDieutriColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhamSanphuKhoaColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn BpttColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn SuDungBpttColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdHsPhaThai = @"ID_HS_PHA_THAI";
			 public static string PatientCode = @"Patient_Code";
			 public static string PatientId = @"Patient_ID";
			 public static string ExamId = @"Exam_ID";
			 public static string IdPhieuVaovien = @"ID_PHIEU_VAOVIEN";
			 public static string KhamKinhCcuoi = @"KHAM_KINH_CCUOI";
			 public static string KhamAmHo = @"KHAM_AM_HO";
			 public static string KhamAmDao = @"KHAM_AM_DAO";
			 public static string KhamCoTuCung = @"KHAM_CO_TU_CUNG";
			 public static string KhamTuCung = @"KHAM_TU_CUNG";
			 public static string PphuPhai = @"PPHU_PHAI";
			 public static string PphuTrai = @"PPHU_TRAI";
			 public static string XnTestThuThai = @"XN_TEST_THU_THAI";
			 public static string XnSieuAm = @"XN_SIEU_AM";
			 public static string XnKhac = @"XN_KHAC";
			 public static string ChanDoan = @"CHAN_DOAN";
			 public static string PphapGiamDau = @"PPHAP_GIAM_DAU";
			 public static string PphapPhaThai = @"PPHAP_PHA_THAI";
			 public static string KtraChutSluong = @"KTRA_CHUT_SLUONG";
			 public static string KtraChutCluong = @"KTRA_CHUT_CLUONG";
			 public static string KtrChutCtxVoiTthai = @"KTR_CHUT_CTX_VOI_TTHAI";
			 public static string Thuoc = @"THUOC";
			 public static string BienchungXuly = @"BIENCHUNG_XULY";
			 public static string TdToantrang = @"TD_TOANTRANG";
			 public static string TdMach = @"TD_MACH";
			 public static string TdHuyetap = @"TD_HUYETAP";
			 public static string TdDau = @"TD_DAU";
			 public static string TdRamau = @"TD_RAMAU";
			 public static string PphaptranhthaiSautt = @"PPHAPTRANHTHAI_SAUTT";
			 public static string KhamlaiChandoan = @"KHAMLAI_CHANDOAN";
			 public static string KhamlaiDieutri = @"KHAMLAI_DIEUTRI";
			 public static string IdKhamSanphuKhoa = @"ID_KHAM_SANPHU_KHOA";
			 public static string Bptt = @"BPTT";
			 public static string SuDungBptt = @"SuDung_BPTT";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string NgaySua = @"NGAY_SUA";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
