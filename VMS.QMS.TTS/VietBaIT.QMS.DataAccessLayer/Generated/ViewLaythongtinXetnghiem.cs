using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewLaythongtinXetnghiem class.
    /// </summary>
    [Serializable]
    public partial class ViewLaythongtinXetnghiemCollection : ReadOnlyList<ViewLaythongtinXetnghiem, ViewLaythongtinXetnghiemCollection>
    {        
        public ViewLaythongtinXetnghiemCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VIEW_LAYTHONGTIN_XETNGHIEM view.
    /// </summary>
    [Serializable]
    public partial class ViewLaythongtinXetnghiem : ReadOnlyRecord<ViewLaythongtinXetnghiem>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VIEW_LAYTHONGTIN_XETNGHIEM", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarInsuranceNum = new TableSchema.TableColumn(schema);
                colvarInsuranceNum.ColumnName = "Insurance_Num";
                colvarInsuranceNum.DataType = DbType.AnsiString;
                colvarInsuranceNum.MaxLength = 30;
                colvarInsuranceNum.AutoIncrement = false;
                colvarInsuranceNum.IsNullable = true;
                colvarInsuranceNum.IsPrimaryKey = false;
                colvarInsuranceNum.IsForeignKey = false;
                colvarInsuranceNum.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsuranceNum);
                
                TableSchema.TableColumn colvarToInsuranceDate = new TableSchema.TableColumn(schema);
                colvarToInsuranceDate.ColumnName = "ToInsurance_Date";
                colvarToInsuranceDate.DataType = DbType.AnsiString;
                colvarToInsuranceDate.MaxLength = 10;
                colvarToInsuranceDate.AutoIncrement = false;
                colvarToInsuranceDate.IsNullable = true;
                colvarToInsuranceDate.IsPrimaryKey = false;
                colvarToInsuranceDate.IsForeignKey = false;
                colvarToInsuranceDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarToInsuranceDate);
                
                TableSchema.TableColumn colvarObjectTypeCode = new TableSchema.TableColumn(schema);
                colvarObjectTypeCode.ColumnName = "ObjectType_Code";
                colvarObjectTypeCode.DataType = DbType.String;
                colvarObjectTypeCode.MaxLength = 50;
                colvarObjectTypeCode.AutoIncrement = false;
                colvarObjectTypeCode.IsNullable = true;
                colvarObjectTypeCode.IsPrimaryKey = false;
                colvarObjectTypeCode.IsForeignKey = false;
                colvarObjectTypeCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarObjectTypeCode);
                
                TableSchema.TableColumn colvarCorrectLine = new TableSchema.TableColumn(schema);
                colvarCorrectLine.ColumnName = "CorrectLine";
                colvarCorrectLine.DataType = DbType.Byte;
                colvarCorrectLine.MaxLength = 0;
                colvarCorrectLine.AutoIncrement = false;
                colvarCorrectLine.IsNullable = true;
                colvarCorrectLine.IsPrimaryKey = false;
                colvarCorrectLine.IsForeignKey = false;
                colvarCorrectLine.IsReadOnly = false;
                
                schema.Columns.Add(colvarCorrectLine);
                
                TableSchema.TableColumn colvarPatientName = new TableSchema.TableColumn(schema);
                colvarPatientName.ColumnName = "Patient_Name";
                colvarPatientName.DataType = DbType.String;
                colvarPatientName.MaxLength = 100;
                colvarPatientName.AutoIncrement = false;
                colvarPatientName.IsNullable = true;
                colvarPatientName.IsPrimaryKey = false;
                colvarPatientName.IsForeignKey = false;
                colvarPatientName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientName);
                
                TableSchema.TableColumn colvarPatientAddr = new TableSchema.TableColumn(schema);
                colvarPatientAddr.ColumnName = "Patient_Addr";
                colvarPatientAddr.DataType = DbType.String;
                colvarPatientAddr.MaxLength = 200;
                colvarPatientAddr.AutoIncrement = false;
                colvarPatientAddr.IsNullable = true;
                colvarPatientAddr.IsPrimaryKey = false;
                colvarPatientAddr.IsForeignKey = false;
                colvarPatientAddr.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientAddr);
                
                TableSchema.TableColumn colvarYearOfBirth = new TableSchema.TableColumn(schema);
                colvarYearOfBirth.ColumnName = "Year_Of_Birth";
                colvarYearOfBirth.DataType = DbType.Int16;
                colvarYearOfBirth.MaxLength = 0;
                colvarYearOfBirth.AutoIncrement = false;
                colvarYearOfBirth.IsNullable = true;
                colvarYearOfBirth.IsPrimaryKey = false;
                colvarYearOfBirth.IsForeignKey = false;
                colvarYearOfBirth.IsReadOnly = false;
                
                schema.Columns.Add(colvarYearOfBirth);
                
                TableSchema.TableColumn colvarPatientBirth = new TableSchema.TableColumn(schema);
                colvarPatientBirth.ColumnName = "Patient_Birth";
                colvarPatientBirth.DataType = DbType.AnsiString;
                colvarPatientBirth.MaxLength = 10;
                colvarPatientBirth.AutoIncrement = false;
                colvarPatientBirth.IsNullable = true;
                colvarPatientBirth.IsPrimaryKey = false;
                colvarPatientBirth.IsForeignKey = false;
                colvarPatientBirth.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientBirth);
                
                TableSchema.TableColumn colvarSPatientSex = new TableSchema.TableColumn(schema);
                colvarSPatientSex.ColumnName = "sPatientSex";
                colvarSPatientSex.DataType = DbType.String;
                colvarSPatientSex.MaxLength = 10;
                colvarSPatientSex.AutoIncrement = false;
                colvarSPatientSex.IsNullable = true;
                colvarSPatientSex.IsPrimaryKey = false;
                colvarSPatientSex.IsForeignKey = false;
                colvarSPatientSex.IsReadOnly = false;
                
                schema.Columns.Add(colvarSPatientSex);
                
                TableSchema.TableColumn colvarAge = new TableSchema.TableColumn(schema);
                colvarAge.ColumnName = "Age";
                colvarAge.DataType = DbType.Int32;
                colvarAge.MaxLength = 0;
                colvarAge.AutoIncrement = false;
                colvarAge.IsNullable = true;
                colvarAge.IsPrimaryKey = false;
                colvarAge.IsForeignKey = false;
                colvarAge.IsReadOnly = false;
                
                schema.Columns.Add(colvarAge);
                
                TableSchema.TableColumn colvarDepartmentName = new TableSchema.TableColumn(schema);
                colvarDepartmentName.ColumnName = "Department_Name";
                colvarDepartmentName.DataType = DbType.String;
                colvarDepartmentName.MaxLength = 100;
                colvarDepartmentName.AutoIncrement = false;
                colvarDepartmentName.IsNullable = true;
                colvarDepartmentName.IsPrimaryKey = false;
                colvarDepartmentName.IsForeignKey = false;
                colvarDepartmentName.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepartmentName);
                
                TableSchema.TableColumn colvarStaffName = new TableSchema.TableColumn(schema);
                colvarStaffName.ColumnName = "Staff_Name";
                colvarStaffName.DataType = DbType.String;
                colvarStaffName.MaxLength = 100;
                colvarStaffName.AutoIncrement = false;
                colvarStaffName.IsNullable = true;
                colvarStaffName.IsPrimaryKey = false;
                colvarStaffName.IsForeignKey = false;
                colvarStaffName.IsReadOnly = false;
                
                schema.Columns.Add(colvarStaffName);
                
                TableSchema.TableColumn colvarAssignDetailId = new TableSchema.TableColumn(schema);
                colvarAssignDetailId.ColumnName = "AssignDetail_ID";
                colvarAssignDetailId.DataType = DbType.Int64;
                colvarAssignDetailId.MaxLength = 0;
                colvarAssignDetailId.AutoIncrement = false;
                colvarAssignDetailId.IsNullable = false;
                colvarAssignDetailId.IsPrimaryKey = false;
                colvarAssignDetailId.IsForeignKey = false;
                colvarAssignDetailId.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignDetailId);
                
                TableSchema.TableColumn colvarExamId = new TableSchema.TableColumn(schema);
                colvarExamId.ColumnName = "Exam_ID";
                colvarExamId.DataType = DbType.Int64;
                colvarExamId.MaxLength = 0;
                colvarExamId.AutoIncrement = false;
                colvarExamId.IsNullable = true;
                colvarExamId.IsPrimaryKey = false;
                colvarExamId.IsForeignKey = false;
                colvarExamId.IsReadOnly = false;
                
                schema.Columns.Add(colvarExamId);
                
                TableSchema.TableColumn colvarAssignId = new TableSchema.TableColumn(schema);
                colvarAssignId.ColumnName = "Assign_ID";
                colvarAssignId.DataType = DbType.Int64;
                colvarAssignId.MaxLength = 0;
                colvarAssignId.AutoIncrement = false;
                colvarAssignId.IsNullable = false;
                colvarAssignId.IsPrimaryKey = false;
                colvarAssignId.IsForeignKey = false;
                colvarAssignId.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignId);
                
                TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
                colvarServiceId.ColumnName = "Service_ID";
                colvarServiceId.DataType = DbType.Int16;
                colvarServiceId.MaxLength = 0;
                colvarServiceId.AutoIncrement = false;
                colvarServiceId.IsNullable = true;
                colvarServiceId.IsPrimaryKey = false;
                colvarServiceId.IsForeignKey = false;
                colvarServiceId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceId);
                
                TableSchema.TableColumn colvarServiceDetailId = new TableSchema.TableColumn(schema);
                colvarServiceDetailId.ColumnName = "ServiceDetail_ID";
                colvarServiceDetailId.DataType = DbType.Int32;
                colvarServiceDetailId.MaxLength = 0;
                colvarServiceDetailId.AutoIncrement = false;
                colvarServiceDetailId.IsNullable = false;
                colvarServiceDetailId.IsPrimaryKey = false;
                colvarServiceDetailId.IsForeignKey = false;
                colvarServiceDetailId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceDetailId);
                
                TableSchema.TableColumn colvarDiagPerson = new TableSchema.TableColumn(schema);
                colvarDiagPerson.ColumnName = "Diag_Person";
                colvarDiagPerson.DataType = DbType.Int16;
                colvarDiagPerson.MaxLength = 0;
                colvarDiagPerson.AutoIncrement = false;
                colvarDiagPerson.IsNullable = true;
                colvarDiagPerson.IsPrimaryKey = false;
                colvarDiagPerson.IsForeignKey = false;
                colvarDiagPerson.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiagPerson);
                
                TableSchema.TableColumn colvarDiscountRate = new TableSchema.TableColumn(schema);
                colvarDiscountRate.ColumnName = "Discount_Rate";
                colvarDiscountRate.DataType = DbType.Decimal;
                colvarDiscountRate.MaxLength = 0;
                colvarDiscountRate.AutoIncrement = false;
                colvarDiscountRate.IsNullable = true;
                colvarDiscountRate.IsPrimaryKey = false;
                colvarDiscountRate.IsForeignKey = false;
                colvarDiscountRate.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiscountRate);
                
                TableSchema.TableColumn colvarDiscountType = new TableSchema.TableColumn(schema);
                colvarDiscountType.ColumnName = "Discount_Type";
                colvarDiscountType.DataType = DbType.Byte;
                colvarDiscountType.MaxLength = 0;
                colvarDiscountType.AutoIncrement = false;
                colvarDiscountType.IsNullable = true;
                colvarDiscountType.IsPrimaryKey = false;
                colvarDiscountType.IsForeignKey = false;
                colvarDiscountType.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiscountType);
                
                TableSchema.TableColumn colvarOriginPrice = new TableSchema.TableColumn(schema);
                colvarOriginPrice.ColumnName = "Origin_Price";
                colvarOriginPrice.DataType = DbType.Currency;
                colvarOriginPrice.MaxLength = 0;
                colvarOriginPrice.AutoIncrement = false;
                colvarOriginPrice.IsNullable = false;
                colvarOriginPrice.IsPrimaryKey = false;
                colvarOriginPrice.IsForeignKey = false;
                colvarOriginPrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginPrice);
                
                TableSchema.TableColumn colvarDiscountPrice = new TableSchema.TableColumn(schema);
                colvarDiscountPrice.ColumnName = "Discount_Price";
                colvarDiscountPrice.DataType = DbType.Currency;
                colvarDiscountPrice.MaxLength = 0;
                colvarDiscountPrice.AutoIncrement = false;
                colvarDiscountPrice.IsNullable = true;
                colvarDiscountPrice.IsPrimaryKey = false;
                colvarDiscountPrice.IsForeignKey = false;
                colvarDiscountPrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiscountPrice);
                
                TableSchema.TableColumn colvarSurchargePrice = new TableSchema.TableColumn(schema);
                colvarSurchargePrice.ColumnName = "Surcharge_Price";
                colvarSurchargePrice.DataType = DbType.Currency;
                colvarSurchargePrice.MaxLength = 0;
                colvarSurchargePrice.AutoIncrement = false;
                colvarSurchargePrice.IsNullable = true;
                colvarSurchargePrice.IsPrimaryKey = false;
                colvarSurchargePrice.IsForeignKey = false;
                colvarSurchargePrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarSurchargePrice);
                
                TableSchema.TableColumn colvarUserId = new TableSchema.TableColumn(schema);
                colvarUserId.ColumnName = "User_ID";
                colvarUserId.DataType = DbType.AnsiString;
                colvarUserId.MaxLength = 50;
                colvarUserId.AutoIncrement = false;
                colvarUserId.IsNullable = true;
                colvarUserId.IsPrimaryKey = false;
                colvarUserId.IsForeignKey = false;
                colvarUserId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserId);
                
                TableSchema.TableColumn colvarAssignTypeId = new TableSchema.TableColumn(schema);
                colvarAssignTypeId.ColumnName = "Assign_Type_ID";
                colvarAssignTypeId.DataType = DbType.Byte;
                colvarAssignTypeId.MaxLength = 0;
                colvarAssignTypeId.AutoIncrement = false;
                colvarAssignTypeId.IsNullable = true;
                colvarAssignTypeId.IsPrimaryKey = false;
                colvarAssignTypeId.IsForeignKey = false;
                colvarAssignTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignTypeId);
                
                TableSchema.TableColumn colvarInputDate = new TableSchema.TableColumn(schema);
                colvarInputDate.ColumnName = "Input_Date";
                colvarInputDate.DataType = DbType.DateTime;
                colvarInputDate.MaxLength = 0;
                colvarInputDate.AutoIncrement = false;
                colvarInputDate.IsNullable = true;
                colvarInputDate.IsPrimaryKey = false;
                colvarInputDate.IsForeignKey = false;
                colvarInputDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInputDate);
                
                TableSchema.TableColumn colvarModifyDate = new TableSchema.TableColumn(schema);
                colvarModifyDate.ColumnName = "Modify_Date";
                colvarModifyDate.DataType = DbType.DateTime;
                colvarModifyDate.MaxLength = 0;
                colvarModifyDate.AutoIncrement = false;
                colvarModifyDate.IsNullable = true;
                colvarModifyDate.IsPrimaryKey = false;
                colvarModifyDate.IsForeignKey = false;
                colvarModifyDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifyDate);
                
                TableSchema.TableColumn colvarModifyBy = new TableSchema.TableColumn(schema);
                colvarModifyBy.ColumnName = "Modify_By";
                colvarModifyBy.DataType = DbType.String;
                colvarModifyBy.MaxLength = 50;
                colvarModifyBy.AutoIncrement = false;
                colvarModifyBy.IsNullable = true;
                colvarModifyBy.IsPrimaryKey = false;
                colvarModifyBy.IsForeignKey = false;
                colvarModifyBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifyBy);
                
                TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
                colvarPaymentStatus.ColumnName = "Payment_Status";
                colvarPaymentStatus.DataType = DbType.Byte;
                colvarPaymentStatus.MaxLength = 0;
                colvarPaymentStatus.AutoIncrement = false;
                colvarPaymentStatus.IsNullable = true;
                colvarPaymentStatus.IsPrimaryKey = false;
                colvarPaymentStatus.IsForeignKey = false;
                colvarPaymentStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentStatus);
                
                TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
                colvarPaymentDate.ColumnName = "Payment_Date";
                colvarPaymentDate.DataType = DbType.DateTime;
                colvarPaymentDate.MaxLength = 0;
                colvarPaymentDate.AutoIncrement = false;
                colvarPaymentDate.IsNullable = true;
                colvarPaymentDate.IsPrimaryKey = false;
                colvarPaymentDate.IsForeignKey = false;
                colvarPaymentDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentDate);
                
                TableSchema.TableColumn colvarIsCancel = new TableSchema.TableColumn(schema);
                colvarIsCancel.ColumnName = "IsCancel";
                colvarIsCancel.DataType = DbType.Int32;
                colvarIsCancel.MaxLength = 0;
                colvarIsCancel.AutoIncrement = false;
                colvarIsCancel.IsNullable = true;
                colvarIsCancel.IsPrimaryKey = false;
                colvarIsCancel.IsForeignKey = false;
                colvarIsCancel.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsCancel);
                
                TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
                colvarIsPayment.ColumnName = "IsPayment";
                colvarIsPayment.DataType = DbType.Int32;
                colvarIsPayment.MaxLength = 0;
                colvarIsPayment.AutoIncrement = false;
                colvarIsPayment.IsNullable = true;
                colvarIsPayment.IsPrimaryKey = false;
                colvarIsPayment.IsForeignKey = false;
                colvarIsPayment.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsPayment);
                
                TableSchema.TableColumn colvarObjectTypeId = new TableSchema.TableColumn(schema);
                colvarObjectTypeId.ColumnName = "ObjectType_ID";
                colvarObjectTypeId.DataType = DbType.Int32;
                colvarObjectTypeId.MaxLength = 0;
                colvarObjectTypeId.AutoIncrement = false;
                colvarObjectTypeId.IsNullable = true;
                colvarObjectTypeId.IsPrimaryKey = false;
                colvarObjectTypeId.IsForeignKey = false;
                colvarObjectTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarObjectTypeId);
                
                TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
                colvarQuantity.ColumnName = "Quantity";
                colvarQuantity.DataType = DbType.Int32;
                colvarQuantity.MaxLength = 0;
                colvarQuantity.AutoIncrement = false;
                colvarQuantity.IsNullable = true;
                colvarQuantity.IsPrimaryKey = false;
                colvarQuantity.IsForeignKey = false;
                colvarQuantity.IsReadOnly = false;
                
                schema.Columns.Add(colvarQuantity);
                
                TableSchema.TableColumn colvarSummary = new TableSchema.TableColumn(schema);
                colvarSummary.ColumnName = "Summary";
                colvarSummary.DataType = DbType.String;
                colvarSummary.MaxLength = 500;
                colvarSummary.AutoIncrement = false;
                colvarSummary.IsNullable = true;
                colvarSummary.IsPrimaryKey = false;
                colvarSummary.IsForeignKey = false;
                colvarSummary.IsReadOnly = false;
                
                schema.Columns.Add(colvarSummary);
                
                TableSchema.TableColumn colvarAssignDetailStatus = new TableSchema.TableColumn(schema);
                colvarAssignDetailStatus.ColumnName = "AssignDetail_Status";
                colvarAssignDetailStatus.DataType = DbType.Int32;
                colvarAssignDetailStatus.MaxLength = 0;
                colvarAssignDetailStatus.AutoIncrement = false;
                colvarAssignDetailStatus.IsNullable = true;
                colvarAssignDetailStatus.IsPrimaryKey = false;
                colvarAssignDetailStatus.IsForeignKey = false;
                colvarAssignDetailStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignDetailStatus);
                
                TableSchema.TableColumn colvarSDesc = new TableSchema.TableColumn(schema);
                colvarSDesc.ColumnName = "sDesc";
                colvarSDesc.DataType = DbType.String;
                colvarSDesc.MaxLength = 1073741823;
                colvarSDesc.AutoIncrement = false;
                colvarSDesc.IsNullable = true;
                colvarSDesc.IsPrimaryKey = false;
                colvarSDesc.IsForeignKey = false;
                colvarSDesc.IsReadOnly = false;
                
                schema.Columns.Add(colvarSDesc);
                
                TableSchema.TableColumn colvarSPathImage1 = new TableSchema.TableColumn(schema);
                colvarSPathImage1.ColumnName = "sPathImage1";
                colvarSPathImage1.DataType = DbType.String;
                colvarSPathImage1.MaxLength = 200;
                colvarSPathImage1.AutoIncrement = false;
                colvarSPathImage1.IsNullable = true;
                colvarSPathImage1.IsPrimaryKey = false;
                colvarSPathImage1.IsForeignKey = false;
                colvarSPathImage1.IsReadOnly = false;
                
                schema.Columns.Add(colvarSPathImage1);
                
                TableSchema.TableColumn colvarSPathImage2 = new TableSchema.TableColumn(schema);
                colvarSPathImage2.ColumnName = "sPathImage2";
                colvarSPathImage2.DataType = DbType.String;
                colvarSPathImage2.MaxLength = 200;
                colvarSPathImage2.AutoIncrement = false;
                colvarSPathImage2.IsNullable = true;
                colvarSPathImage2.IsPrimaryKey = false;
                colvarSPathImage2.IsForeignKey = false;
                colvarSPathImage2.IsReadOnly = false;
                
                schema.Columns.Add(colvarSPathImage2);
                
                TableSchema.TableColumn colvarBhytStatus = new TableSchema.TableColumn(schema);
                colvarBhytStatus.ColumnName = "BHYT_Status";
                colvarBhytStatus.DataType = DbType.Int32;
                colvarBhytStatus.MaxLength = 0;
                colvarBhytStatus.AutoIncrement = false;
                colvarBhytStatus.IsNullable = true;
                colvarBhytStatus.IsPrimaryKey = false;
                colvarBhytStatus.IsForeignKey = false;
                colvarBhytStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarBhytStatus);
                
                TableSchema.TableColumn colvarProposal = new TableSchema.TableColumn(schema);
                colvarProposal.ColumnName = "Proposal";
                colvarProposal.DataType = DbType.String;
                colvarProposal.MaxLength = 500;
                colvarProposal.AutoIncrement = false;
                colvarProposal.IsNullable = true;
                colvarProposal.IsPrimaryKey = false;
                colvarProposal.IsForeignKey = false;
                colvarProposal.IsReadOnly = false;
                
                schema.Columns.Add(colvarProposal);
                
                TableSchema.TableColumn colvarVungKs = new TableSchema.TableColumn(schema);
                colvarVungKs.ColumnName = "Vung_KS";
                colvarVungKs.DataType = DbType.String;
                colvarVungKs.MaxLength = 500;
                colvarVungKs.AutoIncrement = false;
                colvarVungKs.IsNullable = true;
                colvarVungKs.IsPrimaryKey = false;
                colvarVungKs.IsForeignKey = false;
                colvarVungKs.IsReadOnly = false;
                
                schema.Columns.Add(colvarVungKs);
                
                TableSchema.TableColumn colvarBsThucHien = new TableSchema.TableColumn(schema);
                colvarBsThucHien.ColumnName = "BS_ThucHien";
                colvarBsThucHien.DataType = DbType.String;
                colvarBsThucHien.MaxLength = 50;
                colvarBsThucHien.AutoIncrement = false;
                colvarBsThucHien.IsNullable = true;
                colvarBsThucHien.IsPrimaryKey = false;
                colvarBsThucHien.IsForeignKey = false;
                colvarBsThucHien.IsReadOnly = false;
                
                schema.Columns.Add(colvarBsThucHien);
                
                TableSchema.TableColumn colvarNgayThucHien = new TableSchema.TableColumn(schema);
                colvarNgayThucHien.ColumnName = "Ngay_ThucHien";
                colvarNgayThucHien.DataType = DbType.DateTime;
                colvarNgayThucHien.MaxLength = 0;
                colvarNgayThucHien.AutoIncrement = false;
                colvarNgayThucHien.IsNullable = true;
                colvarNgayThucHien.IsPrimaryKey = false;
                colvarNgayThucHien.IsForeignKey = false;
                colvarNgayThucHien.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgayThucHien);
                
                TableSchema.TableColumn colvarAssignDetailCode = new TableSchema.TableColumn(schema);
                colvarAssignDetailCode.ColumnName = "AssignDetailCode";
                colvarAssignDetailCode.DataType = DbType.String;
                colvarAssignDetailCode.MaxLength = 50;
                colvarAssignDetailCode.AutoIncrement = false;
                colvarAssignDetailCode.IsNullable = true;
                colvarAssignDetailCode.IsPrimaryKey = false;
                colvarAssignDetailCode.IsForeignKey = false;
                colvarAssignDetailCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignDetailCode);
                
                TableSchema.TableColumn colvarTestId = new TableSchema.TableColumn(schema);
                colvarTestId.ColumnName = "Test_ID";
                colvarTestId.DataType = DbType.Int32;
                colvarTestId.MaxLength = 0;
                colvarTestId.AutoIncrement = false;
                colvarTestId.IsNullable = true;
                colvarTestId.IsPrimaryKey = false;
                colvarTestId.IsForeignKey = false;
                colvarTestId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTestId);
                
                TableSchema.TableColumn colvarDisplayOnReport = new TableSchema.TableColumn(schema);
                colvarDisplayOnReport.ColumnName = "DisplayOnReport";
                colvarDisplayOnReport.DataType = DbType.Byte;
                colvarDisplayOnReport.MaxLength = 0;
                colvarDisplayOnReport.AutoIncrement = false;
                colvarDisplayOnReport.IsNullable = false;
                colvarDisplayOnReport.IsPrimaryKey = false;
                colvarDisplayOnReport.IsForeignKey = false;
                colvarDisplayOnReport.IsReadOnly = false;
                
                schema.Columns.Add(colvarDisplayOnReport);
                
                TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
                colvarGhiChu.ColumnName = "Ghi_Chu";
                colvarGhiChu.DataType = DbType.String;
                colvarGhiChu.MaxLength = 500;
                colvarGhiChu.AutoIncrement = false;
                colvarGhiChu.IsNullable = true;
                colvarGhiChu.IsPrimaryKey = false;
                colvarGhiChu.IsForeignKey = false;
                colvarGhiChu.IsReadOnly = false;
                
                schema.Columns.Add(colvarGhiChu);
                
                TableSchema.TableColumn colvarGiaBhytCt = new TableSchema.TableColumn(schema);
                colvarGiaBhytCt.ColumnName = "Gia_BHYT_CT";
                colvarGiaBhytCt.DataType = DbType.Decimal;
                colvarGiaBhytCt.MaxLength = 0;
                colvarGiaBhytCt.AutoIncrement = false;
                colvarGiaBhytCt.IsNullable = true;
                colvarGiaBhytCt.IsPrimaryKey = false;
                colvarGiaBhytCt.IsForeignKey = false;
                colvarGiaBhytCt.IsReadOnly = false;
                
                schema.Columns.Add(colvarGiaBhytCt);
                
                TableSchema.TableColumn colvarGiaBnct = new TableSchema.TableColumn(schema);
                colvarGiaBnct.ColumnName = "Gia_BNCT";
                colvarGiaBnct.DataType = DbType.Decimal;
                colvarGiaBnct.MaxLength = 0;
                colvarGiaBnct.AutoIncrement = false;
                colvarGiaBnct.IsNullable = true;
                colvarGiaBnct.IsPrimaryKey = false;
                colvarGiaBnct.IsForeignKey = false;
                colvarGiaBnct.IsReadOnly = false;
                
                schema.Columns.Add(colvarGiaBnct);
                
                TableSchema.TableColumn colvarXacNhan = new TableSchema.TableColumn(schema);
                colvarXacNhan.ColumnName = "XAC_NHAN";
                colvarXacNhan.DataType = DbType.Int32;
                colvarXacNhan.MaxLength = 0;
                colvarXacNhan.AutoIncrement = false;
                colvarXacNhan.IsNullable = true;
                colvarXacNhan.IsPrimaryKey = false;
                colvarXacNhan.IsForeignKey = false;
                colvarXacNhan.IsReadOnly = false;
                
                schema.Columns.Add(colvarXacNhan);
                
                TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
                colvarPaymentId.ColumnName = "Payment_ID";
                colvarPaymentId.DataType = DbType.Int32;
                colvarPaymentId.MaxLength = 0;
                colvarPaymentId.AutoIncrement = false;
                colvarPaymentId.IsNullable = true;
                colvarPaymentId.IsPrimaryKey = false;
                colvarPaymentId.IsForeignKey = false;
                colvarPaymentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentId);
                
                TableSchema.TableColumn colvarComfirmDeposit = new TableSchema.TableColumn(schema);
                colvarComfirmDeposit.ColumnName = "ComfirmDeposit";
                colvarComfirmDeposit.DataType = DbType.Int32;
                colvarComfirmDeposit.MaxLength = 0;
                colvarComfirmDeposit.AutoIncrement = false;
                colvarComfirmDeposit.IsNullable = true;
                colvarComfirmDeposit.IsPrimaryKey = false;
                colvarComfirmDeposit.IsForeignKey = false;
                colvarComfirmDeposit.IsReadOnly = false;
                
                schema.Columns.Add(colvarComfirmDeposit);
                
                TableSchema.TableColumn colvarIdGoiDvu = new TableSchema.TableColumn(schema);
                colvarIdGoiDvu.ColumnName = "ID_GOI_DVU";
                colvarIdGoiDvu.DataType = DbType.Int32;
                colvarIdGoiDvu.MaxLength = 0;
                colvarIdGoiDvu.AutoIncrement = false;
                colvarIdGoiDvu.IsNullable = true;
                colvarIdGoiDvu.IsPrimaryKey = false;
                colvarIdGoiDvu.IsForeignKey = false;
                colvarIdGoiDvu.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdGoiDvu);
                
                TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
                colvarTrongGoi.ColumnName = "TRONG_GOI";
                colvarTrongGoi.DataType = DbType.Int32;
                colvarTrongGoi.MaxLength = 0;
                colvarTrongGoi.AutoIncrement = false;
                colvarTrongGoi.IsNullable = true;
                colvarTrongGoi.IsPrimaryKey = false;
                colvarTrongGoi.IsForeignKey = false;
                colvarTrongGoi.IsReadOnly = false;
                
                schema.Columns.Add(colvarTrongGoi);
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_Code";
                colvarPatientCode.DataType = DbType.AnsiString;
                colvarPatientCode.MaxLength = 20;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = false;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarNoiTru = new TableSchema.TableColumn(schema);
                colvarNoiTru.ColumnName = "Noi_Tru";
                colvarNoiTru.DataType = DbType.Int32;
                colvarNoiTru.MaxLength = 0;
                colvarNoiTru.AutoIncrement = false;
                colvarNoiTru.IsNullable = true;
                colvarNoiTru.IsPrimaryKey = false;
                colvarNoiTru.IsForeignKey = false;
                colvarNoiTru.IsReadOnly = false;
                
                schema.Columns.Add(colvarNoiTru);
                
                TableSchema.TableColumn colvarTt = new TableSchema.TableColumn(schema);
                colvarTt.ColumnName = "TT";
                colvarTt.DataType = DbType.Int32;
                colvarTt.MaxLength = 0;
                colvarTt.AutoIncrement = false;
                colvarTt.IsNullable = false;
                colvarTt.IsPrimaryKey = false;
                colvarTt.IsForeignKey = false;
                colvarTt.IsReadOnly = false;
                
                schema.Columns.Add(colvarTt);
                
                TableSchema.TableColumn colvarServiceName = new TableSchema.TableColumn(schema);
                colvarServiceName.ColumnName = "SERVICE_NAME";
                colvarServiceName.DataType = DbType.String;
                colvarServiceName.MaxLength = 300;
                colvarServiceName.AutoIncrement = false;
                colvarServiceName.IsNullable = true;
                colvarServiceName.IsPrimaryKey = false;
                colvarServiceName.IsForeignKey = false;
                colvarServiceName.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceName);
                
                TableSchema.TableColumn colvarIntOrder = new TableSchema.TableColumn(schema);
                colvarIntOrder.ColumnName = "intOrder";
                colvarIntOrder.DataType = DbType.Int16;
                colvarIntOrder.MaxLength = 0;
                colvarIntOrder.AutoIncrement = false;
                colvarIntOrder.IsNullable = true;
                colvarIntOrder.IsPrimaryKey = false;
                colvarIntOrder.IsForeignKey = false;
                colvarIntOrder.IsReadOnly = false;
                
                schema.Columns.Add(colvarIntOrder);
                
                TableSchema.TableColumn colvarServiceDetailName = new TableSchema.TableColumn(schema);
                colvarServiceDetailName.ColumnName = "ServiceDetail_Name";
                colvarServiceDetailName.DataType = DbType.String;
                colvarServiceDetailName.MaxLength = 300;
                colvarServiceDetailName.AutoIncrement = false;
                colvarServiceDetailName.IsNullable = true;
                colvarServiceDetailName.IsPrimaryKey = false;
                colvarServiceDetailName.IsForeignKey = false;
                colvarServiceDetailName.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceDetailName);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("VIEW_LAYTHONGTIN_XETNGHIEM",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewLaythongtinXetnghiem()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewLaythongtinXetnghiem(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewLaythongtinXetnghiem(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewLaythongtinXetnghiem(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("InsuranceNum")]
        [Bindable(true)]
        public string InsuranceNum 
	    {
		    get
		    {
			    return GetColumnValue<string>("Insurance_Num");
		    }
            set 
		    {
			    SetColumnValue("Insurance_Num", value);
            }
        }
	      
        [XmlAttribute("ToInsuranceDate")]
        [Bindable(true)]
        public string ToInsuranceDate 
	    {
		    get
		    {
			    return GetColumnValue<string>("ToInsurance_Date");
		    }
            set 
		    {
			    SetColumnValue("ToInsurance_Date", value);
            }
        }
	      
        [XmlAttribute("ObjectTypeCode")]
        [Bindable(true)]
        public string ObjectTypeCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("ObjectType_Code");
		    }
            set 
		    {
			    SetColumnValue("ObjectType_Code", value);
            }
        }
	      
        [XmlAttribute("CorrectLine")]
        [Bindable(true)]
        public byte? CorrectLine 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("CorrectLine");
		    }
            set 
		    {
			    SetColumnValue("CorrectLine", value);
            }
        }
	      
        [XmlAttribute("PatientName")]
        [Bindable(true)]
        public string PatientName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Name");
		    }
            set 
		    {
			    SetColumnValue("Patient_Name", value);
            }
        }
	      
        [XmlAttribute("PatientAddr")]
        [Bindable(true)]
        public string PatientAddr 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Addr");
		    }
            set 
		    {
			    SetColumnValue("Patient_Addr", value);
            }
        }
	      
        [XmlAttribute("YearOfBirth")]
        [Bindable(true)]
        public short? YearOfBirth 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Year_Of_Birth");
		    }
            set 
		    {
			    SetColumnValue("Year_Of_Birth", value);
            }
        }
	      
        [XmlAttribute("PatientBirth")]
        [Bindable(true)]
        public string PatientBirth 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Birth");
		    }
            set 
		    {
			    SetColumnValue("Patient_Birth", value);
            }
        }
	      
        [XmlAttribute("SPatientSex")]
        [Bindable(true)]
        public string SPatientSex 
	    {
		    get
		    {
			    return GetColumnValue<string>("sPatientSex");
		    }
            set 
		    {
			    SetColumnValue("sPatientSex", value);
            }
        }
	      
        [XmlAttribute("Age")]
        [Bindable(true)]
        public int? Age 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Age");
		    }
            set 
		    {
			    SetColumnValue("Age", value);
            }
        }
	      
        [XmlAttribute("DepartmentName")]
        [Bindable(true)]
        public string DepartmentName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Department_Name");
		    }
            set 
		    {
			    SetColumnValue("Department_Name", value);
            }
        }
	      
        [XmlAttribute("StaffName")]
        [Bindable(true)]
        public string StaffName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Staff_Name");
		    }
            set 
		    {
			    SetColumnValue("Staff_Name", value);
            }
        }
	      
        [XmlAttribute("AssignDetailId")]
        [Bindable(true)]
        public long AssignDetailId 
	    {
		    get
		    {
			    return GetColumnValue<long>("AssignDetail_ID");
		    }
            set 
		    {
			    SetColumnValue("AssignDetail_ID", value);
            }
        }
	      
        [XmlAttribute("ExamId")]
        [Bindable(true)]
        public long? ExamId 
	    {
		    get
		    {
			    return GetColumnValue<long?>("Exam_ID");
		    }
            set 
		    {
			    SetColumnValue("Exam_ID", value);
            }
        }
	      
        [XmlAttribute("AssignId")]
        [Bindable(true)]
        public long AssignId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Assign_ID");
		    }
            set 
		    {
			    SetColumnValue("Assign_ID", value);
            }
        }
	      
        [XmlAttribute("ServiceId")]
        [Bindable(true)]
        public short? ServiceId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Service_ID");
		    }
            set 
		    {
			    SetColumnValue("Service_ID", value);
            }
        }
	      
        [XmlAttribute("ServiceDetailId")]
        [Bindable(true)]
        public int ServiceDetailId 
	    {
		    get
		    {
			    return GetColumnValue<int>("ServiceDetail_ID");
		    }
            set 
		    {
			    SetColumnValue("ServiceDetail_ID", value);
            }
        }
	      
        [XmlAttribute("DiagPerson")]
        [Bindable(true)]
        public short? DiagPerson 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Diag_Person");
		    }
            set 
		    {
			    SetColumnValue("Diag_Person", value);
            }
        }
	      
        [XmlAttribute("DiscountRate")]
        [Bindable(true)]
        public decimal? DiscountRate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Discount_Rate");
		    }
            set 
		    {
			    SetColumnValue("Discount_Rate", value);
            }
        }
	      
        [XmlAttribute("DiscountType")]
        [Bindable(true)]
        public byte? DiscountType 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Discount_Type");
		    }
            set 
		    {
			    SetColumnValue("Discount_Type", value);
            }
        }
	      
        [XmlAttribute("OriginPrice")]
        [Bindable(true)]
        public decimal OriginPrice 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("Origin_Price");
		    }
            set 
		    {
			    SetColumnValue("Origin_Price", value);
            }
        }
	      
        [XmlAttribute("DiscountPrice")]
        [Bindable(true)]
        public decimal? DiscountPrice 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Discount_Price");
		    }
            set 
		    {
			    SetColumnValue("Discount_Price", value);
            }
        }
	      
        [XmlAttribute("SurchargePrice")]
        [Bindable(true)]
        public decimal? SurchargePrice 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Surcharge_Price");
		    }
            set 
		    {
			    SetColumnValue("Surcharge_Price", value);
            }
        }
	      
        [XmlAttribute("UserId")]
        [Bindable(true)]
        public string UserId 
	    {
		    get
		    {
			    return GetColumnValue<string>("User_ID");
		    }
            set 
		    {
			    SetColumnValue("User_ID", value);
            }
        }
	      
        [XmlAttribute("AssignTypeId")]
        [Bindable(true)]
        public byte? AssignTypeId 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Assign_Type_ID");
		    }
            set 
		    {
			    SetColumnValue("Assign_Type_ID", value);
            }
        }
	      
        [XmlAttribute("InputDate")]
        [Bindable(true)]
        public DateTime? InputDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Input_Date");
		    }
            set 
		    {
			    SetColumnValue("Input_Date", value);
            }
        }
	      
        [XmlAttribute("ModifyDate")]
        [Bindable(true)]
        public DateTime? ModifyDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Modify_Date");
		    }
            set 
		    {
			    SetColumnValue("Modify_Date", value);
            }
        }
	      
        [XmlAttribute("ModifyBy")]
        [Bindable(true)]
        public string ModifyBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("Modify_By");
		    }
            set 
		    {
			    SetColumnValue("Modify_By", value);
            }
        }
	      
        [XmlAttribute("PaymentStatus")]
        [Bindable(true)]
        public byte? PaymentStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Payment_Status");
		    }
            set 
		    {
			    SetColumnValue("Payment_Status", value);
            }
        }
	      
        [XmlAttribute("PaymentDate")]
        [Bindable(true)]
        public DateTime? PaymentDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Payment_Date");
		    }
            set 
		    {
			    SetColumnValue("Payment_Date", value);
            }
        }
	      
        [XmlAttribute("IsCancel")]
        [Bindable(true)]
        public int? IsCancel 
	    {
		    get
		    {
			    return GetColumnValue<int?>("IsCancel");
		    }
            set 
		    {
			    SetColumnValue("IsCancel", value);
            }
        }
	      
        [XmlAttribute("IsPayment")]
        [Bindable(true)]
        public int? IsPayment 
	    {
		    get
		    {
			    return GetColumnValue<int?>("IsPayment");
		    }
            set 
		    {
			    SetColumnValue("IsPayment", value);
            }
        }
	      
        [XmlAttribute("ObjectTypeId")]
        [Bindable(true)]
        public int? ObjectTypeId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ObjectType_ID");
		    }
            set 
		    {
			    SetColumnValue("ObjectType_ID", value);
            }
        }
	      
        [XmlAttribute("Quantity")]
        [Bindable(true)]
        public int? Quantity 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Quantity");
		    }
            set 
		    {
			    SetColumnValue("Quantity", value);
            }
        }
	      
        [XmlAttribute("Summary")]
        [Bindable(true)]
        public string Summary 
	    {
		    get
		    {
			    return GetColumnValue<string>("Summary");
		    }
            set 
		    {
			    SetColumnValue("Summary", value);
            }
        }
	      
        [XmlAttribute("AssignDetailStatus")]
        [Bindable(true)]
        public int? AssignDetailStatus 
	    {
		    get
		    {
			    return GetColumnValue<int?>("AssignDetail_Status");
		    }
            set 
		    {
			    SetColumnValue("AssignDetail_Status", value);
            }
        }
	      
        [XmlAttribute("SDesc")]
        [Bindable(true)]
        public string SDesc 
	    {
		    get
		    {
			    return GetColumnValue<string>("sDesc");
		    }
            set 
		    {
			    SetColumnValue("sDesc", value);
            }
        }
	      
        [XmlAttribute("SPathImage1")]
        [Bindable(true)]
        public string SPathImage1 
	    {
		    get
		    {
			    return GetColumnValue<string>("sPathImage1");
		    }
            set 
		    {
			    SetColumnValue("sPathImage1", value);
            }
        }
	      
        [XmlAttribute("SPathImage2")]
        [Bindable(true)]
        public string SPathImage2 
	    {
		    get
		    {
			    return GetColumnValue<string>("sPathImage2");
		    }
            set 
		    {
			    SetColumnValue("sPathImage2", value);
            }
        }
	      
        [XmlAttribute("BhytStatus")]
        [Bindable(true)]
        public int? BhytStatus 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BHYT_Status");
		    }
            set 
		    {
			    SetColumnValue("BHYT_Status", value);
            }
        }
	      
        [XmlAttribute("Proposal")]
        [Bindable(true)]
        public string Proposal 
	    {
		    get
		    {
			    return GetColumnValue<string>("Proposal");
		    }
            set 
		    {
			    SetColumnValue("Proposal", value);
            }
        }
	      
        [XmlAttribute("VungKs")]
        [Bindable(true)]
        public string VungKs 
	    {
		    get
		    {
			    return GetColumnValue<string>("Vung_KS");
		    }
            set 
		    {
			    SetColumnValue("Vung_KS", value);
            }
        }
	      
        [XmlAttribute("BsThucHien")]
        [Bindable(true)]
        public string BsThucHien 
	    {
		    get
		    {
			    return GetColumnValue<string>("BS_ThucHien");
		    }
            set 
		    {
			    SetColumnValue("BS_ThucHien", value);
            }
        }
	      
        [XmlAttribute("NgayThucHien")]
        [Bindable(true)]
        public DateTime? NgayThucHien 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Ngay_ThucHien");
		    }
            set 
		    {
			    SetColumnValue("Ngay_ThucHien", value);
            }
        }
	      
        [XmlAttribute("AssignDetailCode")]
        [Bindable(true)]
        public string AssignDetailCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("AssignDetailCode");
		    }
            set 
		    {
			    SetColumnValue("AssignDetailCode", value);
            }
        }
	      
        [XmlAttribute("TestId")]
        [Bindable(true)]
        public int? TestId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Test_ID");
		    }
            set 
		    {
			    SetColumnValue("Test_ID", value);
            }
        }
	      
        [XmlAttribute("DisplayOnReport")]
        [Bindable(true)]
        public byte DisplayOnReport 
	    {
		    get
		    {
			    return GetColumnValue<byte>("DisplayOnReport");
		    }
            set 
		    {
			    SetColumnValue("DisplayOnReport", value);
            }
        }
	      
        [XmlAttribute("GhiChu")]
        [Bindable(true)]
        public string GhiChu 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ghi_Chu");
		    }
            set 
		    {
			    SetColumnValue("Ghi_Chu", value);
            }
        }
	      
        [XmlAttribute("GiaBhytCt")]
        [Bindable(true)]
        public decimal? GiaBhytCt 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Gia_BHYT_CT");
		    }
            set 
		    {
			    SetColumnValue("Gia_BHYT_CT", value);
            }
        }
	      
        [XmlAttribute("GiaBnct")]
        [Bindable(true)]
        public decimal? GiaBnct 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Gia_BNCT");
		    }
            set 
		    {
			    SetColumnValue("Gia_BNCT", value);
            }
        }
	      
        [XmlAttribute("XacNhan")]
        [Bindable(true)]
        public int? XacNhan 
	    {
		    get
		    {
			    return GetColumnValue<int?>("XAC_NHAN");
		    }
            set 
		    {
			    SetColumnValue("XAC_NHAN", value);
            }
        }
	      
        [XmlAttribute("PaymentId")]
        [Bindable(true)]
        public int? PaymentId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Payment_ID");
		    }
            set 
		    {
			    SetColumnValue("Payment_ID", value);
            }
        }
	      
        [XmlAttribute("ComfirmDeposit")]
        [Bindable(true)]
        public int? ComfirmDeposit 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ComfirmDeposit");
		    }
            set 
		    {
			    SetColumnValue("ComfirmDeposit", value);
            }
        }
	      
        [XmlAttribute("IdGoiDvu")]
        [Bindable(true)]
        public int? IdGoiDvu 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ID_GOI_DVU");
		    }
            set 
		    {
			    SetColumnValue("ID_GOI_DVU", value);
            }
        }
	      
        [XmlAttribute("TrongGoi")]
        [Bindable(true)]
        public int? TrongGoi 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TRONG_GOI");
		    }
            set 
		    {
			    SetColumnValue("TRONG_GOI", value);
            }
        }
	      
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Code");
		    }
            set 
		    {
			    SetColumnValue("Patient_Code", value);
            }
        }
	      
        [XmlAttribute("NoiTru")]
        [Bindable(true)]
        public int? NoiTru 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Noi_Tru");
		    }
            set 
		    {
			    SetColumnValue("Noi_Tru", value);
            }
        }
	      
        [XmlAttribute("Tt")]
        [Bindable(true)]
        public int Tt 
	    {
		    get
		    {
			    return GetColumnValue<int>("TT");
		    }
            set 
		    {
			    SetColumnValue("TT", value);
            }
        }
	      
        [XmlAttribute("ServiceName")]
        [Bindable(true)]
        public string ServiceName 
	    {
		    get
		    {
			    return GetColumnValue<string>("SERVICE_NAME");
		    }
            set 
		    {
			    SetColumnValue("SERVICE_NAME", value);
            }
        }
	      
        [XmlAttribute("IntOrder")]
        [Bindable(true)]
        public short? IntOrder 
	    {
		    get
		    {
			    return GetColumnValue<short?>("intOrder");
		    }
            set 
		    {
			    SetColumnValue("intOrder", value);
            }
        }
	      
        [XmlAttribute("ServiceDetailName")]
        [Bindable(true)]
        public string ServiceDetailName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ServiceDetail_Name");
		    }
            set 
		    {
			    SetColumnValue("ServiceDetail_Name", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string InsuranceNum = @"Insurance_Num";
            
            public static string ToInsuranceDate = @"ToInsurance_Date";
            
            public static string ObjectTypeCode = @"ObjectType_Code";
            
            public static string CorrectLine = @"CorrectLine";
            
            public static string PatientName = @"Patient_Name";
            
            public static string PatientAddr = @"Patient_Addr";
            
            public static string YearOfBirth = @"Year_Of_Birth";
            
            public static string PatientBirth = @"Patient_Birth";
            
            public static string SPatientSex = @"sPatientSex";
            
            public static string Age = @"Age";
            
            public static string DepartmentName = @"Department_Name";
            
            public static string StaffName = @"Staff_Name";
            
            public static string AssignDetailId = @"AssignDetail_ID";
            
            public static string ExamId = @"Exam_ID";
            
            public static string AssignId = @"Assign_ID";
            
            public static string ServiceId = @"Service_ID";
            
            public static string ServiceDetailId = @"ServiceDetail_ID";
            
            public static string DiagPerson = @"Diag_Person";
            
            public static string DiscountRate = @"Discount_Rate";
            
            public static string DiscountType = @"Discount_Type";
            
            public static string OriginPrice = @"Origin_Price";
            
            public static string DiscountPrice = @"Discount_Price";
            
            public static string SurchargePrice = @"Surcharge_Price";
            
            public static string UserId = @"User_ID";
            
            public static string AssignTypeId = @"Assign_Type_ID";
            
            public static string InputDate = @"Input_Date";
            
            public static string ModifyDate = @"Modify_Date";
            
            public static string ModifyBy = @"Modify_By";
            
            public static string PaymentStatus = @"Payment_Status";
            
            public static string PaymentDate = @"Payment_Date";
            
            public static string IsCancel = @"IsCancel";
            
            public static string IsPayment = @"IsPayment";
            
            public static string ObjectTypeId = @"ObjectType_ID";
            
            public static string Quantity = @"Quantity";
            
            public static string Summary = @"Summary";
            
            public static string AssignDetailStatus = @"AssignDetail_Status";
            
            public static string SDesc = @"sDesc";
            
            public static string SPathImage1 = @"sPathImage1";
            
            public static string SPathImage2 = @"sPathImage2";
            
            public static string BhytStatus = @"BHYT_Status";
            
            public static string Proposal = @"Proposal";
            
            public static string VungKs = @"Vung_KS";
            
            public static string BsThucHien = @"BS_ThucHien";
            
            public static string NgayThucHien = @"Ngay_ThucHien";
            
            public static string AssignDetailCode = @"AssignDetailCode";
            
            public static string TestId = @"Test_ID";
            
            public static string DisplayOnReport = @"DisplayOnReport";
            
            public static string GhiChu = @"Ghi_Chu";
            
            public static string GiaBhytCt = @"Gia_BHYT_CT";
            
            public static string GiaBnct = @"Gia_BNCT";
            
            public static string XacNhan = @"XAC_NHAN";
            
            public static string PaymentId = @"Payment_ID";
            
            public static string ComfirmDeposit = @"ComfirmDeposit";
            
            public static string IdGoiDvu = @"ID_GOI_DVU";
            
            public static string TrongGoi = @"TRONG_GOI";
            
            public static string PatientCode = @"Patient_Code";
            
            public static string NoiTru = @"Noi_Tru";
            
            public static string Tt = @"TT";
            
            public static string ServiceName = @"SERVICE_NAME";
            
            public static string IntOrder = @"intOrder";
            
            public static string ServiceDetailName = @"ServiceDetail_Name";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
