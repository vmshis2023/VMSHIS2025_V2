using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for L_Group_Services
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class LGroupServiceController
    {
        // Preload our schema..
        LGroupService thisSchemaLoad = new LGroupService();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public LGroupServiceCollection FetchAll()
        {
            LGroupServiceCollection coll = new LGroupServiceCollection();
            Query qry = new Query(LGroupService.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public LGroupServiceCollection FetchByID(object GroupServiceId)
        {
            LGroupServiceCollection coll = new LGroupServiceCollection().Where("GroupService_ID", GroupServiceId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public LGroupServiceCollection FetchByQuery(Query qry)
        {
            LGroupServiceCollection coll = new LGroupServiceCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object GroupServiceId)
        {
            return (LGroupService.Delete(GroupServiceId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object GroupServiceId)
        {
            return (LGroupService.Destroy(GroupServiceId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string GroupCode,string GroupName,short? ParentId,short? ServiceId,short? ServiceDetailId,int? IntOrder,int? IsView,string CreatedBy,DateTime? CreateDate)
	    {
		    LGroupService item = new LGroupService();
		    
            item.GroupCode = GroupCode;
            
            item.GroupName = GroupName;
            
            item.ParentId = ParentId;
            
            item.ServiceId = ServiceId;
            
            item.ServiceDetailId = ServiceDetailId;
            
            item.IntOrder = IntOrder;
            
            item.IsView = IsView;
            
            item.CreatedBy = CreatedBy;
            
            item.CreateDate = CreateDate;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int GroupServiceId,string GroupCode,string GroupName,short? ParentId,short? ServiceId,short? ServiceDetailId,int? IntOrder,int? IsView,string CreatedBy,DateTime? CreateDate)
	    {
		    LGroupService item = new LGroupService();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.GroupServiceId = GroupServiceId;
				
			item.GroupCode = GroupCode;
				
			item.GroupName = GroupName;
				
			item.ParentId = ParentId;
				
			item.ServiceId = ServiceId;
				
			item.ServiceDetailId = ServiceDetailId;
				
			item.IntOrder = IntOrder;
				
			item.IsView = IsView;
				
			item.CreatedBy = CreatedBy;
				
			item.CreateDate = CreateDate;
				
	        item.Save(UserName);
	    }
    }
}
