using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the LDrugObjectPolicy class.
	/// </summary>
    [Serializable]
	public partial class LDrugObjectPolicyCollection : ActiveList<LDrugObjectPolicy, LDrugObjectPolicyCollection>
	{	   
		public LDrugObjectPolicyCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>LDrugObjectPolicyCollection</returns>
		public LDrugObjectPolicyCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                LDrugObjectPolicy o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the L_Drug_Object_Policies table.
	/// </summary>
	[Serializable]
	public partial class LDrugObjectPolicy : ActiveRecord<LDrugObjectPolicy>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public LDrugObjectPolicy()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public LDrugObjectPolicy(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public LDrugObjectPolicy(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public LDrugObjectPolicy(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("L_Drug_Object_Policies", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarDrugId = new TableSchema.TableColumn(schema);
				colvarDrugId.ColumnName = "Drug_ID";
				colvarDrugId.DataType = DbType.Int32;
				colvarDrugId.MaxLength = 0;
				colvarDrugId.AutoIncrement = false;
				colvarDrugId.IsNullable = false;
				colvarDrugId.IsPrimaryKey = true;
				colvarDrugId.IsForeignKey = false;
				colvarDrugId.IsReadOnly = false;
				colvarDrugId.DefaultSetting = @"";
				colvarDrugId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDrugId);
				
				TableSchema.TableColumn colvarObjectTypeId = new TableSchema.TableColumn(schema);
				colvarObjectTypeId.ColumnName = "ObjectType_ID";
				colvarObjectTypeId.DataType = DbType.Int32;
				colvarObjectTypeId.MaxLength = 0;
				colvarObjectTypeId.AutoIncrement = false;
				colvarObjectTypeId.IsNullable = true;
				colvarObjectTypeId.IsPrimaryKey = false;
				colvarObjectTypeId.IsForeignKey = false;
				colvarObjectTypeId.IsReadOnly = false;
				colvarObjectTypeId.DefaultSetting = @"";
				colvarObjectTypeId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObjectTypeId);
				
				TableSchema.TableColumn colvarDiscountType = new TableSchema.TableColumn(schema);
				colvarDiscountType.ColumnName = "Discount_type";
				colvarDiscountType.DataType = DbType.String;
				colvarDiscountType.MaxLength = 50;
				colvarDiscountType.AutoIncrement = false;
				colvarDiscountType.IsNullable = false;
				colvarDiscountType.IsPrimaryKey = false;
				colvarDiscountType.IsForeignKey = false;
				colvarDiscountType.IsReadOnly = false;
				colvarDiscountType.DefaultSetting = @"";
				colvarDiscountType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountType);
				
				TableSchema.TableColumn colvarDiscountRate = new TableSchema.TableColumn(schema);
				colvarDiscountRate.ColumnName = "Discount_Rate";
				colvarDiscountRate.DataType = DbType.Currency;
				colvarDiscountRate.MaxLength = 0;
				colvarDiscountRate.AutoIncrement = false;
				colvarDiscountRate.IsNullable = false;
				colvarDiscountRate.IsPrimaryKey = false;
				colvarDiscountRate.IsForeignKey = false;
				colvarDiscountRate.IsReadOnly = false;
				colvarDiscountRate.DefaultSetting = @"";
				colvarDiscountRate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountRate);
				
				TableSchema.TableColumn colvarOriginalPrice = new TableSchema.TableColumn(schema);
				colvarOriginalPrice.ColumnName = "Original_Price";
				colvarOriginalPrice.DataType = DbType.Decimal;
				colvarOriginalPrice.MaxLength = 0;
				colvarOriginalPrice.AutoIncrement = false;
				colvarOriginalPrice.IsNullable = false;
				colvarOriginalPrice.IsPrimaryKey = false;
				colvarOriginalPrice.IsForeignKey = false;
				colvarOriginalPrice.IsReadOnly = false;
				colvarOriginalPrice.DefaultSetting = @"";
				colvarOriginalPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOriginalPrice);
				
				TableSchema.TableColumn colvarLastPrice = new TableSchema.TableColumn(schema);
				colvarLastPrice.ColumnName = "Last_Price";
				colvarLastPrice.DataType = DbType.Decimal;
				colvarLastPrice.MaxLength = 0;
				colvarLastPrice.AutoIncrement = false;
				colvarLastPrice.IsNullable = false;
				colvarLastPrice.IsPrimaryKey = false;
				colvarLastPrice.IsForeignKey = false;
				colvarLastPrice.IsReadOnly = false;
				colvarLastPrice.DefaultSetting = @"";
				colvarLastPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLastPrice);
				
				TableSchema.TableColumn colvarSurcharge = new TableSchema.TableColumn(schema);
				colvarSurcharge.ColumnName = "Surcharge";
				colvarSurcharge.DataType = DbType.Decimal;
				colvarSurcharge.MaxLength = 0;
				colvarSurcharge.AutoIncrement = false;
				colvarSurcharge.IsNullable = true;
				colvarSurcharge.IsPrimaryKey = false;
				colvarSurcharge.IsForeignKey = false;
				colvarSurcharge.IsReadOnly = false;
				
						colvarSurcharge.DefaultSetting = @"((0))";
				colvarSurcharge.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSurcharge);
				
				TableSchema.TableColumn colvarObjectTypeType = new TableSchema.TableColumn(schema);
				colvarObjectTypeType.ColumnName = "ObjectTypeType";
				colvarObjectTypeType.DataType = DbType.Int32;
				colvarObjectTypeType.MaxLength = 0;
				colvarObjectTypeType.AutoIncrement = false;
				colvarObjectTypeType.IsNullable = false;
				colvarObjectTypeType.IsPrimaryKey = true;
				colvarObjectTypeType.IsForeignKey = false;
				colvarObjectTypeType.IsReadOnly = false;
				colvarObjectTypeType.DefaultSetting = @"";
				colvarObjectTypeType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObjectTypeType);
				
				TableSchema.TableColumn colvarPhuThuTraiTuyen = new TableSchema.TableColumn(schema);
				colvarPhuThuTraiTuyen.ColumnName = "PhuThu_TraiTuyen";
				colvarPhuThuTraiTuyen.DataType = DbType.Decimal;
				colvarPhuThuTraiTuyen.MaxLength = 0;
				colvarPhuThuTraiTuyen.AutoIncrement = false;
				colvarPhuThuTraiTuyen.IsNullable = true;
				colvarPhuThuTraiTuyen.IsPrimaryKey = false;
				colvarPhuThuTraiTuyen.IsForeignKey = false;
				colvarPhuThuTraiTuyen.IsReadOnly = false;
				colvarPhuThuTraiTuyen.DefaultSetting = @"";
				colvarPhuThuTraiTuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhuThuTraiTuyen);
				
				TableSchema.TableColumn colvarObjectTypeCode = new TableSchema.TableColumn(schema);
				colvarObjectTypeCode.ColumnName = "ObjectType_Code";
				colvarObjectTypeCode.DataType = DbType.String;
				colvarObjectTypeCode.MaxLength = 20;
				colvarObjectTypeCode.AutoIncrement = false;
				colvarObjectTypeCode.IsNullable = false;
				colvarObjectTypeCode.IsPrimaryKey = true;
				colvarObjectTypeCode.IsForeignKey = false;
				colvarObjectTypeCode.IsReadOnly = false;
				colvarObjectTypeCode.DefaultSetting = @"";
				colvarObjectTypeCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObjectTypeCode);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.String;
				colvarNgaySua.MaxLength = 50;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarMaKhoaThien = new TableSchema.TableColumn(schema);
				colvarMaKhoaThien.ColumnName = "MA_KHOA_THIEN";
				colvarMaKhoaThien.DataType = DbType.String;
				colvarMaKhoaThien.MaxLength = 10;
				colvarMaKhoaThien.AutoIncrement = false;
				colvarMaKhoaThien.IsNullable = false;
				colvarMaKhoaThien.IsPrimaryKey = true;
				colvarMaKhoaThien.IsForeignKey = false;
				colvarMaKhoaThien.IsReadOnly = false;
				colvarMaKhoaThien.DefaultSetting = @"";
				colvarMaKhoaThien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKhoaThien);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("L_Drug_Object_Policies",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("DrugId")]
		[Bindable(true)]
		public int DrugId 
		{
			get { return GetColumnValue<int>(Columns.DrugId); }
			set { SetColumnValue(Columns.DrugId, value); }
		}
		  
		[XmlAttribute("ObjectTypeId")]
		[Bindable(true)]
		public int? ObjectTypeId 
		{
			get { return GetColumnValue<int?>(Columns.ObjectTypeId); }
			set { SetColumnValue(Columns.ObjectTypeId, value); }
		}
		  
		[XmlAttribute("DiscountType")]
		[Bindable(true)]
		public string DiscountType 
		{
			get { return GetColumnValue<string>(Columns.DiscountType); }
			set { SetColumnValue(Columns.DiscountType, value); }
		}
		  
		[XmlAttribute("DiscountRate")]
		[Bindable(true)]
		public decimal DiscountRate 
		{
			get { return GetColumnValue<decimal>(Columns.DiscountRate); }
			set { SetColumnValue(Columns.DiscountRate, value); }
		}
		  
		[XmlAttribute("OriginalPrice")]
		[Bindable(true)]
		public decimal OriginalPrice 
		{
			get { return GetColumnValue<decimal>(Columns.OriginalPrice); }
			set { SetColumnValue(Columns.OriginalPrice, value); }
		}
		  
		[XmlAttribute("LastPrice")]
		[Bindable(true)]
		public decimal LastPrice 
		{
			get { return GetColumnValue<decimal>(Columns.LastPrice); }
			set { SetColumnValue(Columns.LastPrice, value); }
		}
		  
		[XmlAttribute("Surcharge")]
		[Bindable(true)]
		public decimal? Surcharge 
		{
			get { return GetColumnValue<decimal?>(Columns.Surcharge); }
			set { SetColumnValue(Columns.Surcharge, value); }
		}
		  
		[XmlAttribute("ObjectTypeType")]
		[Bindable(true)]
		public int ObjectTypeType 
		{
			get { return GetColumnValue<int>(Columns.ObjectTypeType); }
			set { SetColumnValue(Columns.ObjectTypeType, value); }
		}
		  
		[XmlAttribute("PhuThuTraiTuyen")]
		[Bindable(true)]
		public decimal? PhuThuTraiTuyen 
		{
			get { return GetColumnValue<decimal?>(Columns.PhuThuTraiTuyen); }
			set { SetColumnValue(Columns.PhuThuTraiTuyen, value); }
		}
		  
		[XmlAttribute("ObjectTypeCode")]
		[Bindable(true)]
		public string ObjectTypeCode 
		{
			get { return GetColumnValue<string>(Columns.ObjectTypeCode); }
			set { SetColumnValue(Columns.ObjectTypeCode, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public string NgaySua 
		{
			get { return GetColumnValue<string>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("MaKhoaThien")]
		[Bindable(true)]
		public string MaKhoaThien 
		{
			get { return GetColumnValue<string>(Columns.MaKhoaThien); }
			set { SetColumnValue(Columns.MaKhoaThien, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varDrugId,int? varObjectTypeId,string varDiscountType,decimal varDiscountRate,decimal varOriginalPrice,decimal varLastPrice,decimal? varSurcharge,int varObjectTypeType,decimal? varPhuThuTraiTuyen,string varObjectTypeCode,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,string varNgaySua,string varMaKhoaThien)
		{
			LDrugObjectPolicy item = new LDrugObjectPolicy();
			
			item.DrugId = varDrugId;
			
			item.ObjectTypeId = varObjectTypeId;
			
			item.DiscountType = varDiscountType;
			
			item.DiscountRate = varDiscountRate;
			
			item.OriginalPrice = varOriginalPrice;
			
			item.LastPrice = varLastPrice;
			
			item.Surcharge = varSurcharge;
			
			item.ObjectTypeType = varObjectTypeType;
			
			item.PhuThuTraiTuyen = varPhuThuTraiTuyen;
			
			item.ObjectTypeCode = varObjectTypeCode;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.MaKhoaThien = varMaKhoaThien;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varDrugId,int? varObjectTypeId,string varDiscountType,decimal varDiscountRate,decimal varOriginalPrice,decimal varLastPrice,decimal? varSurcharge,int varObjectTypeType,decimal? varPhuThuTraiTuyen,string varObjectTypeCode,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,string varNgaySua,string varMaKhoaThien)
		{
			LDrugObjectPolicy item = new LDrugObjectPolicy();
			
				item.DrugId = varDrugId;
			
				item.ObjectTypeId = varObjectTypeId;
			
				item.DiscountType = varDiscountType;
			
				item.DiscountRate = varDiscountRate;
			
				item.OriginalPrice = varOriginalPrice;
			
				item.LastPrice = varLastPrice;
			
				item.Surcharge = varSurcharge;
			
				item.ObjectTypeType = varObjectTypeType;
			
				item.PhuThuTraiTuyen = varPhuThuTraiTuyen;
			
				item.ObjectTypeCode = varObjectTypeCode;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.MaKhoaThien = varMaKhoaThien;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn DrugIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn ObjectTypeIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountTypeColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountRateColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn OriginalPriceColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn LastPriceColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn SurchargeColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn ObjectTypeTypeColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn PhuThuTraiTuyenColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn ObjectTypeCodeColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhoaThienColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string DrugId = @"Drug_ID";
			 public static string ObjectTypeId = @"ObjectType_ID";
			 public static string DiscountType = @"Discount_type";
			 public static string DiscountRate = @"Discount_Rate";
			 public static string OriginalPrice = @"Original_Price";
			 public static string LastPrice = @"Last_Price";
			 public static string Surcharge = @"Surcharge";
			 public static string ObjectTypeType = @"ObjectTypeType";
			 public static string PhuThuTraiTuyen = @"PhuThu_TraiTuyen";
			 public static string ObjectTypeCode = @"ObjectType_Code";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string MaKhoaThien = @"MA_KHOA_THIEN";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
