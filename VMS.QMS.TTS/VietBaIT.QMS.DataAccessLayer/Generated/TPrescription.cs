using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TPrescription class.
	/// </summary>
    [Serializable]
	public partial class TPrescriptionCollection : ActiveList<TPrescription, TPrescriptionCollection>
	{	   
		public TPrescriptionCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TPrescriptionCollection</returns>
		public TPrescriptionCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TPrescription o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_Prescriptions table.
	/// </summary>
	[Serializable]
	public partial class TPrescription : ActiveRecord<TPrescription>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TPrescription()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TPrescription(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TPrescription(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TPrescription(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_Prescriptions", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarPresId = new TableSchema.TableColumn(schema);
				colvarPresId.ColumnName = "Pres_ID";
				colvarPresId.DataType = DbType.Int32;
				colvarPresId.MaxLength = 0;
				colvarPresId.AutoIncrement = true;
				colvarPresId.IsNullable = false;
				colvarPresId.IsPrimaryKey = true;
				colvarPresId.IsForeignKey = false;
				colvarPresId.IsReadOnly = false;
				colvarPresId.DefaultSetting = @"";
				colvarPresId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPresId);
				
				TableSchema.TableColumn colvarTreatId = new TableSchema.TableColumn(schema);
				colvarTreatId.ColumnName = "Treat_ID";
				colvarTreatId.DataType = DbType.Int32;
				colvarTreatId.MaxLength = 0;
				colvarTreatId.AutoIncrement = false;
				colvarTreatId.IsNullable = true;
				colvarTreatId.IsPrimaryKey = false;
				colvarTreatId.IsForeignKey = false;
				colvarTreatId.IsReadOnly = false;
				
						colvarTreatId.DefaultSetting = @"((-1))";
				colvarTreatId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTreatId);
				
				TableSchema.TableColumn colvarPatientDeptId = new TableSchema.TableColumn(schema);
				colvarPatientDeptId.ColumnName = "PatientDept_ID";
				colvarPatientDeptId.DataType = DbType.Int32;
				colvarPatientDeptId.MaxLength = 0;
				colvarPatientDeptId.AutoIncrement = false;
				colvarPatientDeptId.IsNullable = true;
				colvarPatientDeptId.IsPrimaryKey = false;
				colvarPatientDeptId.IsForeignKey = false;
				colvarPatientDeptId.IsReadOnly = false;
				colvarPatientDeptId.DefaultSetting = @"";
				colvarPatientDeptId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientDeptId);
				
				TableSchema.TableColumn colvarReplacePresId = new TableSchema.TableColumn(schema);
				colvarReplacePresId.ColumnName = "ReplacePres_ID";
				colvarReplacePresId.DataType = DbType.Int32;
				colvarReplacePresId.MaxLength = 0;
				colvarReplacePresId.AutoIncrement = false;
				colvarReplacePresId.IsNullable = true;
				colvarReplacePresId.IsPrimaryKey = false;
				colvarReplacePresId.IsForeignKey = false;
				colvarReplacePresId.IsReadOnly = false;
				colvarReplacePresId.DefaultSetting = @"";
				colvarReplacePresId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarReplacePresId);
				
				TableSchema.TableColumn colvarExamId = new TableSchema.TableColumn(schema);
				colvarExamId.ColumnName = "Exam_ID";
				colvarExamId.DataType = DbType.Int64;
				colvarExamId.MaxLength = 0;
				colvarExamId.AutoIncrement = false;
				colvarExamId.IsNullable = true;
				colvarExamId.IsPrimaryKey = false;
				colvarExamId.IsForeignKey = false;
				colvarExamId.IsReadOnly = false;
				colvarExamId.DefaultSetting = @"";
				colvarExamId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarExamId);
				
				TableSchema.TableColumn colvarStockId = new TableSchema.TableColumn(schema);
				colvarStockId.ColumnName = "Stock_ID";
				colvarStockId.DataType = DbType.Int16;
				colvarStockId.MaxLength = 0;
				colvarStockId.AutoIncrement = false;
				colvarStockId.IsNullable = true;
				colvarStockId.IsPrimaryKey = false;
				colvarStockId.IsForeignKey = false;
				colvarStockId.IsReadOnly = false;
				colvarStockId.DefaultSetting = @"";
				colvarStockId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStockId);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int64;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = true;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.AnsiString;
				colvarPatientCode.MaxLength = 20;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = true;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPresDate = new TableSchema.TableColumn(schema);
				colvarPresDate.ColumnName = "Pres_Date";
				colvarPresDate.DataType = DbType.DateTime;
				colvarPresDate.MaxLength = 0;
				colvarPresDate.AutoIncrement = false;
				colvarPresDate.IsNullable = false;
				colvarPresDate.IsPrimaryKey = false;
				colvarPresDate.IsForeignKey = false;
				colvarPresDate.IsReadOnly = false;
				colvarPresDate.DefaultSetting = @"";
				colvarPresDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPresDate);
				
				TableSchema.TableColumn colvarAssignId = new TableSchema.TableColumn(schema);
				colvarAssignId.ColumnName = "Assign_ID";
				colvarAssignId.DataType = DbType.Int16;
				colvarAssignId.MaxLength = 0;
				colvarAssignId.AutoIncrement = false;
				colvarAssignId.IsNullable = true;
				colvarAssignId.IsPrimaryKey = false;
				colvarAssignId.IsForeignKey = false;
				colvarAssignId.IsReadOnly = false;
				colvarAssignId.DefaultSetting = @"";
				colvarAssignId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAssignId);
				
				TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
				colvarStatus.ColumnName = "Status";
				colvarStatus.DataType = DbType.Byte;
				colvarStatus.MaxLength = 0;
				colvarStatus.AutoIncrement = false;
				colvarStatus.IsNullable = false;
				colvarStatus.IsPrimaryKey = false;
				colvarStatus.IsForeignKey = false;
				colvarStatus.IsReadOnly = false;
				colvarStatus.DefaultSetting = @"";
				colvarStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStatus);
				
				TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
				colvarPaymentStatus.ColumnName = "Payment_Status";
				colvarPaymentStatus.DataType = DbType.Byte;
				colvarPaymentStatus.MaxLength = 0;
				colvarPaymentStatus.AutoIncrement = false;
				colvarPaymentStatus.IsNullable = false;
				colvarPaymentStatus.IsPrimaryKey = false;
				colvarPaymentStatus.IsForeignKey = false;
				colvarPaymentStatus.IsReadOnly = false;
				colvarPaymentStatus.DefaultSetting = @"";
				colvarPaymentStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentStatus);
				
				TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
				colvarPaymentDate.ColumnName = "Payment_Date";
				colvarPaymentDate.DataType = DbType.DateTime;
				colvarPaymentDate.MaxLength = 0;
				colvarPaymentDate.AutoIncrement = false;
				colvarPaymentDate.IsNullable = true;
				colvarPaymentDate.IsPrimaryKey = false;
				colvarPaymentDate.IsForeignKey = false;
				colvarPaymentDate.IsReadOnly = false;
				colvarPaymentDate.DefaultSetting = @"";
				colvarPaymentDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentDate);
				
				TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);
				colvarCreatedBy.ColumnName = "Created_by";
				colvarCreatedBy.DataType = DbType.String;
				colvarCreatedBy.MaxLength = 20;
				colvarCreatedBy.AutoIncrement = false;
				colvarCreatedBy.IsNullable = false;
				colvarCreatedBy.IsPrimaryKey = false;
				colvarCreatedBy.IsForeignKey = false;
				colvarCreatedBy.IsReadOnly = false;
				colvarCreatedBy.DefaultSetting = @"";
				colvarCreatedBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreatedBy);
				
				TableSchema.TableColumn colvarCreatedDate = new TableSchema.TableColumn(schema);
				colvarCreatedDate.ColumnName = "CreatedDate";
				colvarCreatedDate.DataType = DbType.DateTime;
				colvarCreatedDate.MaxLength = 0;
				colvarCreatedDate.AutoIncrement = false;
				colvarCreatedDate.IsNullable = false;
				colvarCreatedDate.IsPrimaryKey = false;
				colvarCreatedDate.IsForeignKey = false;
				colvarCreatedDate.IsReadOnly = false;
				colvarCreatedDate.DefaultSetting = @"";
				colvarCreatedDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreatedDate);
				
				TableSchema.TableColumn colvarModifiedby = new TableSchema.TableColumn(schema);
				colvarModifiedby.ColumnName = "Modifiedby";
				colvarModifiedby.DataType = DbType.String;
				colvarModifiedby.MaxLength = 20;
				colvarModifiedby.AutoIncrement = false;
				colvarModifiedby.IsNullable = true;
				colvarModifiedby.IsPrimaryKey = false;
				colvarModifiedby.IsForeignKey = false;
				colvarModifiedby.IsReadOnly = false;
				colvarModifiedby.DefaultSetting = @"";
				colvarModifiedby.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModifiedby);
				
				TableSchema.TableColumn colvarModifiedDate = new TableSchema.TableColumn(schema);
				colvarModifiedDate.ColumnName = "ModifiedDate";
				colvarModifiedDate.DataType = DbType.DateTime;
				colvarModifiedDate.MaxLength = 0;
				colvarModifiedDate.AutoIncrement = false;
				colvarModifiedDate.IsNullable = true;
				colvarModifiedDate.IsPrimaryKey = false;
				colvarModifiedDate.IsForeignKey = false;
				colvarModifiedDate.IsReadOnly = false;
				colvarModifiedDate.DefaultSetting = @"";
				colvarModifiedDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModifiedDate);
				
				TableSchema.TableColumn colvarSDesc = new TableSchema.TableColumn(schema);
				colvarSDesc.ColumnName = "sDesc";
				colvarSDesc.DataType = DbType.String;
				colvarSDesc.MaxLength = 255;
				colvarSDesc.AutoIncrement = false;
				colvarSDesc.IsNullable = true;
				colvarSDesc.IsPrimaryKey = false;
				colvarSDesc.IsForeignKey = false;
				colvarSDesc.IsReadOnly = false;
				colvarSDesc.DefaultSetting = @"";
				colvarSDesc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSDesc);
				
				TableSchema.TableColumn colvarPresName = new TableSchema.TableColumn(schema);
				colvarPresName.ColumnName = "Pres_Name";
				colvarPresName.DataType = DbType.String;
				colvarPresName.MaxLength = 255;
				colvarPresName.AutoIncrement = false;
				colvarPresName.IsNullable = true;
				colvarPresName.IsPrimaryKey = false;
				colvarPresName.IsForeignKey = false;
				colvarPresName.IsReadOnly = false;
				colvarPresName.DefaultSetting = @"";
				colvarPresName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPresName);
				
				TableSchema.TableColumn colvarPresCode = new TableSchema.TableColumn(schema);
				colvarPresCode.ColumnName = "Pres_Code";
				colvarPresCode.DataType = DbType.String;
				colvarPresCode.MaxLength = 50;
				colvarPresCode.AutoIncrement = false;
				colvarPresCode.IsNullable = true;
				colvarPresCode.IsPrimaryKey = false;
				colvarPresCode.IsForeignKey = false;
				colvarPresCode.IsReadOnly = false;
				colvarPresCode.DefaultSetting = @"";
				colvarPresCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPresCode);
				
				TableSchema.TableColumn colvarSigner = new TableSchema.TableColumn(schema);
				colvarSigner.ColumnName = "Signer";
				colvarSigner.DataType = DbType.Int16;
				colvarSigner.MaxLength = 0;
				colvarSigner.AutoIncrement = false;
				colvarSigner.IsNullable = true;
				colvarSigner.IsPrimaryKey = false;
				colvarSigner.IsForeignKey = false;
				colvarSigner.IsReadOnly = false;
				colvarSigner.DefaultSetting = @"";
				colvarSigner.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSigner);
				
				TableSchema.TableColumn colvarSignedDate = new TableSchema.TableColumn(schema);
				colvarSignedDate.ColumnName = "Signed_Date";
				colvarSignedDate.DataType = DbType.DateTime;
				colvarSignedDate.MaxLength = 0;
				colvarSignedDate.AutoIncrement = false;
				colvarSignedDate.IsNullable = true;
				colvarSignedDate.IsPrimaryKey = false;
				colvarSignedDate.IsForeignKey = false;
				colvarSignedDate.IsReadOnly = false;
				colvarSignedDate.DefaultSetting = @"";
				colvarSignedDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSignedDate);
				
				TableSchema.TableColumn colvarPreHos = new TableSchema.TableColumn(schema);
				colvarPreHos.ColumnName = "Pre_Hos";
				colvarPreHos.DataType = DbType.Byte;
				colvarPreHos.MaxLength = 0;
				colvarPreHos.AutoIncrement = false;
				colvarPreHos.IsNullable = true;
				colvarPreHos.IsPrimaryKey = false;
				colvarPreHos.IsForeignKey = false;
				colvarPreHos.IsReadOnly = false;
				
						colvarPreHos.DefaultSetting = @"((0))";
				colvarPreHos.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPreHos);
				
				TableSchema.TableColumn colvarPresType = new TableSchema.TableColumn(schema);
				colvarPresType.ColumnName = "Pres_Type";
				colvarPresType.DataType = DbType.Byte;
				colvarPresType.MaxLength = 0;
				colvarPresType.AutoIncrement = false;
				colvarPresType.IsNullable = true;
				colvarPresType.IsPrimaryKey = false;
				colvarPresType.IsForeignKey = false;
				colvarPresType.IsReadOnly = false;
				colvarPresType.DefaultSetting = @"";
				colvarPresType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPresType);
				
				TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
				colvarDepartmentId.ColumnName = "Department_ID";
				colvarDepartmentId.DataType = DbType.Int16;
				colvarDepartmentId.MaxLength = 0;
				colvarDepartmentId.AutoIncrement = false;
				colvarDepartmentId.IsNullable = true;
				colvarDepartmentId.IsPrimaryKey = false;
				colvarDepartmentId.IsForeignKey = false;
				colvarDepartmentId.IsReadOnly = false;
				colvarDepartmentId.DefaultSetting = @"";
				colvarDepartmentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDepartmentId);
				
				TableSchema.TableColumn colvarRoomId = new TableSchema.TableColumn(schema);
				colvarRoomId.ColumnName = "Room_ID";
				colvarRoomId.DataType = DbType.Int16;
				colvarRoomId.MaxLength = 0;
				colvarRoomId.AutoIncrement = false;
				colvarRoomId.IsNullable = true;
				colvarRoomId.IsPrimaryKey = false;
				colvarRoomId.IsForeignKey = false;
				colvarRoomId.IsReadOnly = false;
				colvarRoomId.DefaultSetting = @"";
				colvarRoomId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRoomId);
				
				TableSchema.TableColumn colvarBedId = new TableSchema.TableColumn(schema);
				colvarBedId.ColumnName = "Bed_ID";
				colvarBedId.DataType = DbType.Int16;
				colvarBedId.MaxLength = 0;
				colvarBedId.AutoIncrement = false;
				colvarBedId.IsNullable = true;
				colvarBedId.IsPrimaryKey = false;
				colvarBedId.IsForeignKey = false;
				colvarBedId.IsReadOnly = false;
				colvarBedId.DefaultSetting = @"";
				colvarBedId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBedId);
				
				TableSchema.TableColumn colvarPresStatus = new TableSchema.TableColumn(schema);
				colvarPresStatus.ColumnName = "Pres_Status";
				colvarPresStatus.DataType = DbType.Byte;
				colvarPresStatus.MaxLength = 0;
				colvarPresStatus.AutoIncrement = false;
				colvarPresStatus.IsNullable = true;
				colvarPresStatus.IsPrimaryKey = false;
				colvarPresStatus.IsForeignKey = false;
				colvarPresStatus.IsReadOnly = false;
				colvarPresStatus.DefaultSetting = @"";
				colvarPresStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPresStatus);
				
				TableSchema.TableColumn colvarKieuDonthuoc = new TableSchema.TableColumn(schema);
				colvarKieuDonthuoc.ColumnName = "KIEU_DONTHUOC";
				colvarKieuDonthuoc.DataType = DbType.String;
				colvarKieuDonthuoc.MaxLength = 50;
				colvarKieuDonthuoc.AutoIncrement = false;
				colvarKieuDonthuoc.IsNullable = true;
				colvarKieuDonthuoc.IsPrimaryKey = false;
				colvarKieuDonthuoc.IsForeignKey = false;
				colvarKieuDonthuoc.IsReadOnly = false;
				colvarKieuDonthuoc.DefaultSetting = @"";
				colvarKieuDonthuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuDonthuoc);
				
				TableSchema.TableColumn colvarLoiDanBsy = new TableSchema.TableColumn(schema);
				colvarLoiDanBsy.ColumnName = "LOI_DAN_BSY";
				colvarLoiDanBsy.DataType = DbType.String;
				colvarLoiDanBsy.MaxLength = 500;
				colvarLoiDanBsy.AutoIncrement = false;
				colvarLoiDanBsy.IsNullable = true;
				colvarLoiDanBsy.IsPrimaryKey = false;
				colvarLoiDanBsy.IsForeignKey = false;
				colvarLoiDanBsy.IsReadOnly = false;
				colvarLoiDanBsy.DefaultSetting = @"";
				colvarLoiDanBsy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoiDanBsy);
				
				TableSchema.TableColumn colvarTaiKham = new TableSchema.TableColumn(schema);
				colvarTaiKham.ColumnName = "TAI_KHAM";
				colvarTaiKham.DataType = DbType.String;
				colvarTaiKham.MaxLength = 500;
				colvarTaiKham.AutoIncrement = false;
				colvarTaiKham.IsNullable = true;
				colvarTaiKham.IsPrimaryKey = false;
				colvarTaiKham.IsForeignKey = false;
				colvarTaiKham.IsReadOnly = false;
				colvarTaiKham.DefaultSetting = @"";
				colvarTaiKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTaiKham);
				
				TableSchema.TableColumn colvarNgayTaiKham = new TableSchema.TableColumn(schema);
				colvarNgayTaiKham.ColumnName = "NGAY_TAI_KHAM";
				colvarNgayTaiKham.DataType = DbType.DateTime;
				colvarNgayTaiKham.MaxLength = 0;
				colvarNgayTaiKham.AutoIncrement = false;
				colvarNgayTaiKham.IsNullable = true;
				colvarNgayTaiKham.IsPrimaryKey = false;
				colvarNgayTaiKham.IsForeignKey = false;
				colvarNgayTaiKham.IsReadOnly = false;
				colvarNgayTaiKham.DefaultSetting = @"";
				colvarNgayTaiKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTaiKham);
				
				TableSchema.TableColumn colvarMaKhoaThien = new TableSchema.TableColumn(schema);
				colvarMaKhoaThien.ColumnName = "MA_KHOA_THIEN";
				colvarMaKhoaThien.DataType = DbType.String;
				colvarMaKhoaThien.MaxLength = 10;
				colvarMaKhoaThien.AutoIncrement = false;
				colvarMaKhoaThien.IsNullable = true;
				colvarMaKhoaThien.IsPrimaryKey = false;
				colvarMaKhoaThien.IsForeignKey = false;
				colvarMaKhoaThien.IsReadOnly = false;
				colvarMaKhoaThien.DefaultSetting = @"";
				colvarMaKhoaThien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKhoaThien);
				
				TableSchema.TableColumn colvarKeDonTquay = new TableSchema.TableColumn(schema);
				colvarKeDonTquay.ColumnName = "KE_DON_TQUAY";
				colvarKeDonTquay.DataType = DbType.Byte;
				colvarKeDonTquay.MaxLength = 0;
				colvarKeDonTquay.AutoIncrement = false;
				colvarKeDonTquay.IsNullable = true;
				colvarKeDonTquay.IsPrimaryKey = false;
				colvarKeDonTquay.IsForeignKey = false;
				colvarKeDonTquay.IsReadOnly = false;
				
						colvarKeDonTquay.DefaultSetting = @"((0))";
				colvarKeDonTquay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKeDonTquay);
				
				TableSchema.TableColumn colvarNgayPhatThuoc = new TableSchema.TableColumn(schema);
				colvarNgayPhatThuoc.ColumnName = "Ngay_Phat_Thuoc";
				colvarNgayPhatThuoc.DataType = DbType.DateTime;
				colvarNgayPhatThuoc.MaxLength = 0;
				colvarNgayPhatThuoc.AutoIncrement = false;
				colvarNgayPhatThuoc.IsNullable = true;
				colvarNgayPhatThuoc.IsPrimaryKey = false;
				colvarNgayPhatThuoc.IsForeignKey = false;
				colvarNgayPhatThuoc.IsReadOnly = false;
				colvarNgayPhatThuoc.DefaultSetting = @"";
				colvarNgayPhatThuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayPhatThuoc);
				
				TableSchema.TableColumn colvarNguoiPhatThuoc = new TableSchema.TableColumn(schema);
				colvarNguoiPhatThuoc.ColumnName = "Nguoi_Phat_Thuoc";
				colvarNguoiPhatThuoc.DataType = DbType.String;
				colvarNguoiPhatThuoc.MaxLength = 20;
				colvarNguoiPhatThuoc.AutoIncrement = false;
				colvarNguoiPhatThuoc.IsNullable = true;
				colvarNguoiPhatThuoc.IsPrimaryKey = false;
				colvarNguoiPhatThuoc.IsForeignKey = false;
				colvarNguoiPhatThuoc.IsReadOnly = false;
				colvarNguoiPhatThuoc.DefaultSetting = @"";
				colvarNguoiPhatThuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiPhatThuoc);
				
				TableSchema.TableColumn colvarIdChot = new TableSchema.TableColumn(schema);
				colvarIdChot.ColumnName = "ID_CHOT";
				colvarIdChot.DataType = DbType.Int32;
				colvarIdChot.MaxLength = 0;
				colvarIdChot.AutoIncrement = false;
				colvarIdChot.IsNullable = true;
				colvarIdChot.IsPrimaryKey = false;
				colvarIdChot.IsForeignKey = false;
				colvarIdChot.IsReadOnly = false;
				colvarIdChot.DefaultSetting = @"";
				colvarIdChot.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdChot);
				
				TableSchema.TableColumn colvarNgayChot = new TableSchema.TableColumn(schema);
				colvarNgayChot.ColumnName = "NGAY_CHOT";
				colvarNgayChot.DataType = DbType.DateTime;
				colvarNgayChot.MaxLength = 0;
				colvarNgayChot.AutoIncrement = false;
				colvarNgayChot.IsNullable = true;
				colvarNgayChot.IsPrimaryKey = false;
				colvarNgayChot.IsForeignKey = false;
				colvarNgayChot.IsReadOnly = false;
				colvarNgayChot.DefaultSetting = @"";
				colvarNgayChot.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayChot);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_Prescriptions",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("PresId")]
		[Bindable(true)]
		public int PresId 
		{
			get { return GetColumnValue<int>(Columns.PresId); }
			set { SetColumnValue(Columns.PresId, value); }
		}
		  
		[XmlAttribute("TreatId")]
		[Bindable(true)]
		public int? TreatId 
		{
			get { return GetColumnValue<int?>(Columns.TreatId); }
			set { SetColumnValue(Columns.TreatId, value); }
		}
		  
		[XmlAttribute("PatientDeptId")]
		[Bindable(true)]
		public int? PatientDeptId 
		{
			get { return GetColumnValue<int?>(Columns.PatientDeptId); }
			set { SetColumnValue(Columns.PatientDeptId, value); }
		}
		  
		[XmlAttribute("ReplacePresId")]
		[Bindable(true)]
		public int? ReplacePresId 
		{
			get { return GetColumnValue<int?>(Columns.ReplacePresId); }
			set { SetColumnValue(Columns.ReplacePresId, value); }
		}
		  
		[XmlAttribute("ExamId")]
		[Bindable(true)]
		public long? ExamId 
		{
			get { return GetColumnValue<long?>(Columns.ExamId); }
			set { SetColumnValue(Columns.ExamId, value); }
		}
		  
		[XmlAttribute("StockId")]
		[Bindable(true)]
		public short? StockId 
		{
			get { return GetColumnValue<short?>(Columns.StockId); }
			set { SetColumnValue(Columns.StockId, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public long? PatientId 
		{
			get { return GetColumnValue<long?>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PresDate")]
		[Bindable(true)]
		public DateTime PresDate 
		{
			get { return GetColumnValue<DateTime>(Columns.PresDate); }
			set { SetColumnValue(Columns.PresDate, value); }
		}
		  
		[XmlAttribute("AssignId")]
		[Bindable(true)]
		public short? AssignId 
		{
			get { return GetColumnValue<short?>(Columns.AssignId); }
			set { SetColumnValue(Columns.AssignId, value); }
		}
		  
		[XmlAttribute("Status")]
		[Bindable(true)]
		public byte Status 
		{
			get { return GetColumnValue<byte>(Columns.Status); }
			set { SetColumnValue(Columns.Status, value); }
		}
		  
		[XmlAttribute("PaymentStatus")]
		[Bindable(true)]
		public byte PaymentStatus 
		{
			get { return GetColumnValue<byte>(Columns.PaymentStatus); }
			set { SetColumnValue(Columns.PaymentStatus, value); }
		}
		  
		[XmlAttribute("PaymentDate")]
		[Bindable(true)]
		public DateTime? PaymentDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.PaymentDate); }
			set { SetColumnValue(Columns.PaymentDate, value); }
		}
		  
		[XmlAttribute("CreatedBy")]
		[Bindable(true)]
		public string CreatedBy 
		{
			get { return GetColumnValue<string>(Columns.CreatedBy); }
			set { SetColumnValue(Columns.CreatedBy, value); }
		}
		  
		[XmlAttribute("CreatedDate")]
		[Bindable(true)]
		public DateTime CreatedDate 
		{
			get { return GetColumnValue<DateTime>(Columns.CreatedDate); }
			set { SetColumnValue(Columns.CreatedDate, value); }
		}
		  
		[XmlAttribute("Modifiedby")]
		[Bindable(true)]
		public string Modifiedby 
		{
			get { return GetColumnValue<string>(Columns.Modifiedby); }
			set { SetColumnValue(Columns.Modifiedby, value); }
		}
		  
		[XmlAttribute("ModifiedDate")]
		[Bindable(true)]
		public DateTime? ModifiedDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.ModifiedDate); }
			set { SetColumnValue(Columns.ModifiedDate, value); }
		}
		  
		[XmlAttribute("SDesc")]
		[Bindable(true)]
		public string SDesc 
		{
			get { return GetColumnValue<string>(Columns.SDesc); }
			set { SetColumnValue(Columns.SDesc, value); }
		}
		  
		[XmlAttribute("PresName")]
		[Bindable(true)]
		public string PresName 
		{
			get { return GetColumnValue<string>(Columns.PresName); }
			set { SetColumnValue(Columns.PresName, value); }
		}
		  
		[XmlAttribute("PresCode")]
		[Bindable(true)]
		public string PresCode 
		{
			get { return GetColumnValue<string>(Columns.PresCode); }
			set { SetColumnValue(Columns.PresCode, value); }
		}
		  
		[XmlAttribute("Signer")]
		[Bindable(true)]
		public short? Signer 
		{
			get { return GetColumnValue<short?>(Columns.Signer); }
			set { SetColumnValue(Columns.Signer, value); }
		}
		  
		[XmlAttribute("SignedDate")]
		[Bindable(true)]
		public DateTime? SignedDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.SignedDate); }
			set { SetColumnValue(Columns.SignedDate, value); }
		}
		  
		[XmlAttribute("PreHos")]
		[Bindable(true)]
		public byte? PreHos 
		{
			get { return GetColumnValue<byte?>(Columns.PreHos); }
			set { SetColumnValue(Columns.PreHos, value); }
		}
		  
		[XmlAttribute("PresType")]
		[Bindable(true)]
		public byte? PresType 
		{
			get { return GetColumnValue<byte?>(Columns.PresType); }
			set { SetColumnValue(Columns.PresType, value); }
		}
		  
		[XmlAttribute("DepartmentId")]
		[Bindable(true)]
		public short? DepartmentId 
		{
			get { return GetColumnValue<short?>(Columns.DepartmentId); }
			set { SetColumnValue(Columns.DepartmentId, value); }
		}
		  
		[XmlAttribute("RoomId")]
		[Bindable(true)]
		public short? RoomId 
		{
			get { return GetColumnValue<short?>(Columns.RoomId); }
			set { SetColumnValue(Columns.RoomId, value); }
		}
		  
		[XmlAttribute("BedId")]
		[Bindable(true)]
		public short? BedId 
		{
			get { return GetColumnValue<short?>(Columns.BedId); }
			set { SetColumnValue(Columns.BedId, value); }
		}
		  
		[XmlAttribute("PresStatus")]
		[Bindable(true)]
		public byte? PresStatus 
		{
			get { return GetColumnValue<byte?>(Columns.PresStatus); }
			set { SetColumnValue(Columns.PresStatus, value); }
		}
		  
		[XmlAttribute("KieuDonthuoc")]
		[Bindable(true)]
		public string KieuDonthuoc 
		{
			get { return GetColumnValue<string>(Columns.KieuDonthuoc); }
			set { SetColumnValue(Columns.KieuDonthuoc, value); }
		}
		  
		[XmlAttribute("LoiDanBsy")]
		[Bindable(true)]
		public string LoiDanBsy 
		{
			get { return GetColumnValue<string>(Columns.LoiDanBsy); }
			set { SetColumnValue(Columns.LoiDanBsy, value); }
		}
		  
		[XmlAttribute("TaiKham")]
		[Bindable(true)]
		public string TaiKham 
		{
			get { return GetColumnValue<string>(Columns.TaiKham); }
			set { SetColumnValue(Columns.TaiKham, value); }
		}
		  
		[XmlAttribute("NgayTaiKham")]
		[Bindable(true)]
		public DateTime? NgayTaiKham 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTaiKham); }
			set { SetColumnValue(Columns.NgayTaiKham, value); }
		}
		  
		[XmlAttribute("MaKhoaThien")]
		[Bindable(true)]
		public string MaKhoaThien 
		{
			get { return GetColumnValue<string>(Columns.MaKhoaThien); }
			set { SetColumnValue(Columns.MaKhoaThien, value); }
		}
		  
		[XmlAttribute("KeDonTquay")]
		[Bindable(true)]
		public byte? KeDonTquay 
		{
			get { return GetColumnValue<byte?>(Columns.KeDonTquay); }
			set { SetColumnValue(Columns.KeDonTquay, value); }
		}
		  
		[XmlAttribute("NgayPhatThuoc")]
		[Bindable(true)]
		public DateTime? NgayPhatThuoc 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayPhatThuoc); }
			set { SetColumnValue(Columns.NgayPhatThuoc, value); }
		}
		  
		[XmlAttribute("NguoiPhatThuoc")]
		[Bindable(true)]
		public string NguoiPhatThuoc 
		{
			get { return GetColumnValue<string>(Columns.NguoiPhatThuoc); }
			set { SetColumnValue(Columns.NguoiPhatThuoc, value); }
		}
		  
		[XmlAttribute("IdChot")]
		[Bindable(true)]
		public int? IdChot 
		{
			get { return GetColumnValue<int?>(Columns.IdChot); }
			set { SetColumnValue(Columns.IdChot, value); }
		}
		  
		[XmlAttribute("NgayChot")]
		[Bindable(true)]
		public DateTime? NgayChot 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayChot); }
			set { SetColumnValue(Columns.NgayChot, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int? varTreatId,int? varPatientDeptId,int? varReplacePresId,long? varExamId,short? varStockId,long? varPatientId,string varPatientCode,DateTime varPresDate,short? varAssignId,byte varStatus,byte varPaymentStatus,DateTime? varPaymentDate,string varCreatedBy,DateTime varCreatedDate,string varModifiedby,DateTime? varModifiedDate,string varSDesc,string varPresName,string varPresCode,short? varSigner,DateTime? varSignedDate,byte? varPreHos,byte? varPresType,short? varDepartmentId,short? varRoomId,short? varBedId,byte? varPresStatus,string varKieuDonthuoc,string varLoiDanBsy,string varTaiKham,DateTime? varNgayTaiKham,string varMaKhoaThien,byte? varKeDonTquay,DateTime? varNgayPhatThuoc,string varNguoiPhatThuoc,int? varIdChot,DateTime? varNgayChot)
		{
			TPrescription item = new TPrescription();
			
			item.TreatId = varTreatId;
			
			item.PatientDeptId = varPatientDeptId;
			
			item.ReplacePresId = varReplacePresId;
			
			item.ExamId = varExamId;
			
			item.StockId = varStockId;
			
			item.PatientId = varPatientId;
			
			item.PatientCode = varPatientCode;
			
			item.PresDate = varPresDate;
			
			item.AssignId = varAssignId;
			
			item.Status = varStatus;
			
			item.PaymentStatus = varPaymentStatus;
			
			item.PaymentDate = varPaymentDate;
			
			item.CreatedBy = varCreatedBy;
			
			item.CreatedDate = varCreatedDate;
			
			item.Modifiedby = varModifiedby;
			
			item.ModifiedDate = varModifiedDate;
			
			item.SDesc = varSDesc;
			
			item.PresName = varPresName;
			
			item.PresCode = varPresCode;
			
			item.Signer = varSigner;
			
			item.SignedDate = varSignedDate;
			
			item.PreHos = varPreHos;
			
			item.PresType = varPresType;
			
			item.DepartmentId = varDepartmentId;
			
			item.RoomId = varRoomId;
			
			item.BedId = varBedId;
			
			item.PresStatus = varPresStatus;
			
			item.KieuDonthuoc = varKieuDonthuoc;
			
			item.LoiDanBsy = varLoiDanBsy;
			
			item.TaiKham = varTaiKham;
			
			item.NgayTaiKham = varNgayTaiKham;
			
			item.MaKhoaThien = varMaKhoaThien;
			
			item.KeDonTquay = varKeDonTquay;
			
			item.NgayPhatThuoc = varNgayPhatThuoc;
			
			item.NguoiPhatThuoc = varNguoiPhatThuoc;
			
			item.IdChot = varIdChot;
			
			item.NgayChot = varNgayChot;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varPresId,int? varTreatId,int? varPatientDeptId,int? varReplacePresId,long? varExamId,short? varStockId,long? varPatientId,string varPatientCode,DateTime varPresDate,short? varAssignId,byte varStatus,byte varPaymentStatus,DateTime? varPaymentDate,string varCreatedBy,DateTime varCreatedDate,string varModifiedby,DateTime? varModifiedDate,string varSDesc,string varPresName,string varPresCode,short? varSigner,DateTime? varSignedDate,byte? varPreHos,byte? varPresType,short? varDepartmentId,short? varRoomId,short? varBedId,byte? varPresStatus,string varKieuDonthuoc,string varLoiDanBsy,string varTaiKham,DateTime? varNgayTaiKham,string varMaKhoaThien,byte? varKeDonTquay,DateTime? varNgayPhatThuoc,string varNguoiPhatThuoc,int? varIdChot,DateTime? varNgayChot)
		{
			TPrescription item = new TPrescription();
			
				item.PresId = varPresId;
			
				item.TreatId = varTreatId;
			
				item.PatientDeptId = varPatientDeptId;
			
				item.ReplacePresId = varReplacePresId;
			
				item.ExamId = varExamId;
			
				item.StockId = varStockId;
			
				item.PatientId = varPatientId;
			
				item.PatientCode = varPatientCode;
			
				item.PresDate = varPresDate;
			
				item.AssignId = varAssignId;
			
				item.Status = varStatus;
			
				item.PaymentStatus = varPaymentStatus;
			
				item.PaymentDate = varPaymentDate;
			
				item.CreatedBy = varCreatedBy;
			
				item.CreatedDate = varCreatedDate;
			
				item.Modifiedby = varModifiedby;
			
				item.ModifiedDate = varModifiedDate;
			
				item.SDesc = varSDesc;
			
				item.PresName = varPresName;
			
				item.PresCode = varPresCode;
			
				item.Signer = varSigner;
			
				item.SignedDate = varSignedDate;
			
				item.PreHos = varPreHos;
			
				item.PresType = varPresType;
			
				item.DepartmentId = varDepartmentId;
			
				item.RoomId = varRoomId;
			
				item.BedId = varBedId;
			
				item.PresStatus = varPresStatus;
			
				item.KieuDonthuoc = varKieuDonthuoc;
			
				item.LoiDanBsy = varLoiDanBsy;
			
				item.TaiKham = varTaiKham;
			
				item.NgayTaiKham = varNgayTaiKham;
			
				item.MaKhoaThien = varMaKhoaThien;
			
				item.KeDonTquay = varKeDonTquay;
			
				item.NgayPhatThuoc = varNgayPhatThuoc;
			
				item.NguoiPhatThuoc = varNguoiPhatThuoc;
			
				item.IdChot = varIdChot;
			
				item.NgayChot = varNgayChot;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn PresIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn TreatIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientDeptIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn ReplacePresIdColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn ExamIdColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn StockIdColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn PresDateColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn AssignIdColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn StatusColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentStatusColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentDateColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedByColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedDateColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifiedbyColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifiedDateColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn SDescColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn PresNameColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn PresCodeColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn SignerColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn SignedDateColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn PreHosColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn PresTypeColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn DepartmentIdColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn RoomIdColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn BedIdColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn PresStatusColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuDonthuocColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn LoiDanBsyColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn TaiKhamColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaiKhamColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhoaThienColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn KeDonTquayColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayPhatThuocColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiPhatThuocColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn IdChotColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayChotColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string PresId = @"Pres_ID";
			 public static string TreatId = @"Treat_ID";
			 public static string PatientDeptId = @"PatientDept_ID";
			 public static string ReplacePresId = @"ReplacePres_ID";
			 public static string ExamId = @"Exam_ID";
			 public static string StockId = @"Stock_ID";
			 public static string PatientId = @"Patient_ID";
			 public static string PatientCode = @"Patient_Code";
			 public static string PresDate = @"Pres_Date";
			 public static string AssignId = @"Assign_ID";
			 public static string Status = @"Status";
			 public static string PaymentStatus = @"Payment_Status";
			 public static string PaymentDate = @"Payment_Date";
			 public static string CreatedBy = @"Created_by";
			 public static string CreatedDate = @"CreatedDate";
			 public static string Modifiedby = @"Modifiedby";
			 public static string ModifiedDate = @"ModifiedDate";
			 public static string SDesc = @"sDesc";
			 public static string PresName = @"Pres_Name";
			 public static string PresCode = @"Pres_Code";
			 public static string Signer = @"Signer";
			 public static string SignedDate = @"Signed_Date";
			 public static string PreHos = @"Pre_Hos";
			 public static string PresType = @"Pres_Type";
			 public static string DepartmentId = @"Department_ID";
			 public static string RoomId = @"Room_ID";
			 public static string BedId = @"Bed_ID";
			 public static string PresStatus = @"Pres_Status";
			 public static string KieuDonthuoc = @"KIEU_DONTHUOC";
			 public static string LoiDanBsy = @"LOI_DAN_BSY";
			 public static string TaiKham = @"TAI_KHAM";
			 public static string NgayTaiKham = @"NGAY_TAI_KHAM";
			 public static string MaKhoaThien = @"MA_KHOA_THIEN";
			 public static string KeDonTquay = @"KE_DON_TQUAY";
			 public static string NgayPhatThuoc = @"Ngay_Phat_Thuoc";
			 public static string NguoiPhatThuoc = @"Nguoi_Phat_Thuoc";
			 public static string IdChot = @"ID_CHOT";
			 public static string NgayChot = @"NGAY_CHOT";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
