using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TThanhtoanNoitru class.
	/// </summary>
    [Serializable]
	public partial class TThanhtoanNoitruCollection : ActiveList<TThanhtoanNoitru, TThanhtoanNoitruCollection>
	{	   
		public TThanhtoanNoitruCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TThanhtoanNoitruCollection</returns>
		public TThanhtoanNoitruCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TThanhtoanNoitru o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_THANHTOAN_NOITRU table.
	/// </summary>
	[Serializable]
	public partial class TThanhtoanNoitru : ActiveRecord<TThanhtoanNoitru>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TThanhtoanNoitru()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TThanhtoanNoitru(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TThanhtoanNoitru(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TThanhtoanNoitru(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_THANHTOAN_NOITRU", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
				colvarPaymentId.ColumnName = "Payment_ID";
				colvarPaymentId.DataType = DbType.Int32;
				colvarPaymentId.MaxLength = 0;
				colvarPaymentId.AutoIncrement = false;
				colvarPaymentId.IsNullable = false;
				colvarPaymentId.IsPrimaryKey = true;
				colvarPaymentId.IsForeignKey = false;
				colvarPaymentId.IsReadOnly = false;
				colvarPaymentId.DefaultSetting = @"";
				colvarPaymentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentId);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.String;
				colvarPatientCode.MaxLength = 50;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = false;
				colvarPatientCode.IsPrimaryKey = true;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int32;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = false;
				colvarPatientId.IsPrimaryKey = true;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
				colvarPaymentDate.ColumnName = "Payment_Date";
				colvarPaymentDate.DataType = DbType.DateTime;
				colvarPaymentDate.MaxLength = 0;
				colvarPaymentDate.AutoIncrement = false;
				colvarPaymentDate.IsNullable = true;
				colvarPaymentDate.IsPrimaryKey = false;
				colvarPaymentDate.IsForeignKey = false;
				colvarPaymentDate.IsReadOnly = false;
				colvarPaymentDate.DefaultSetting = @"";
				colvarPaymentDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentDate);
				
				TableSchema.TableColumn colvarIdBenhly = new TableSchema.TableColumn(schema);
				colvarIdBenhly.ColumnName = "ID_BENHLY";
				colvarIdBenhly.DataType = DbType.Int32;
				colvarIdBenhly.MaxLength = 0;
				colvarIdBenhly.AutoIncrement = false;
				colvarIdBenhly.IsNullable = false;
				colvarIdBenhly.IsPrimaryKey = false;
				colvarIdBenhly.IsForeignKey = false;
				colvarIdBenhly.IsReadOnly = false;
				colvarIdBenhly.DefaultSetting = @"";
				colvarIdBenhly.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhly);
				
				TableSchema.TableColumn colvarMaDtuong = new TableSchema.TableColumn(schema);
				colvarMaDtuong.ColumnName = "MA_DTUONG";
				colvarMaDtuong.DataType = DbType.String;
				colvarMaDtuong.MaxLength = 50;
				colvarMaDtuong.AutoIncrement = false;
				colvarMaDtuong.IsNullable = false;
				colvarMaDtuong.IsPrimaryKey = false;
				colvarMaDtuong.IsForeignKey = false;
				colvarMaDtuong.IsReadOnly = false;
				colvarMaDtuong.DefaultSetting = @"";
				colvarMaDtuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDtuong);
				
				TableSchema.TableColumn colvarIdGoiDvu = new TableSchema.TableColumn(schema);
				colvarIdGoiDvu.ColumnName = "ID_GOI_DVU";
				colvarIdGoiDvu.DataType = DbType.Int32;
				colvarIdGoiDvu.MaxLength = 0;
				colvarIdGoiDvu.AutoIncrement = false;
				colvarIdGoiDvu.IsNullable = false;
				colvarIdGoiDvu.IsPrimaryKey = false;
				colvarIdGoiDvu.IsForeignKey = false;
				colvarIdGoiDvu.IsReadOnly = false;
				colvarIdGoiDvu.DefaultSetting = @"";
				colvarIdGoiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGoiDvu);
				
				TableSchema.TableColumn colvarSoTienGoi = new TableSchema.TableColumn(schema);
				colvarSoTienGoi.ColumnName = "SO_TIEN_GOI";
				colvarSoTienGoi.DataType = DbType.Decimal;
				colvarSoTienGoi.MaxLength = 0;
				colvarSoTienGoi.AutoIncrement = false;
				colvarSoTienGoi.IsNullable = false;
				colvarSoTienGoi.IsPrimaryKey = false;
				colvarSoTienGoi.IsForeignKey = false;
				colvarSoTienGoi.IsReadOnly = false;
				colvarSoTienGoi.DefaultSetting = @"";
				colvarSoTienGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoTienGoi);
				
				TableSchema.TableColumn colvarTongDongia = new TableSchema.TableColumn(schema);
				colvarTongDongia.ColumnName = "TONG_DONGIA";
				colvarTongDongia.DataType = DbType.Decimal;
				colvarTongDongia.MaxLength = 0;
				colvarTongDongia.AutoIncrement = false;
				colvarTongDongia.IsNullable = true;
				colvarTongDongia.IsPrimaryKey = false;
				colvarTongDongia.IsForeignKey = false;
				colvarTongDongia.IsReadOnly = false;
				colvarTongDongia.DefaultSetting = @"";
				colvarTongDongia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongDongia);
				
				TableSchema.TableColumn colvarTongPhuthu = new TableSchema.TableColumn(schema);
				colvarTongPhuthu.ColumnName = "TONG_PHUTHU";
				colvarTongPhuthu.DataType = DbType.Decimal;
				colvarTongPhuthu.MaxLength = 0;
				colvarTongPhuthu.AutoIncrement = false;
				colvarTongPhuthu.IsNullable = true;
				colvarTongPhuthu.IsPrimaryKey = false;
				colvarTongPhuthu.IsForeignKey = false;
				colvarTongPhuthu.IsReadOnly = false;
				colvarTongPhuthu.DefaultSetting = @"";
				colvarTongPhuthu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongPhuthu);
				
				TableSchema.TableColumn colvarTongBhct = new TableSchema.TableColumn(schema);
				colvarTongBhct.ColumnName = "TONG_BHCT";
				colvarTongBhct.DataType = DbType.Decimal;
				colvarTongBhct.MaxLength = 0;
				colvarTongBhct.AutoIncrement = false;
				colvarTongBhct.IsNullable = true;
				colvarTongBhct.IsPrimaryKey = false;
				colvarTongBhct.IsForeignKey = false;
				colvarTongBhct.IsReadOnly = false;
				colvarTongBhct.DefaultSetting = @"";
				colvarTongBhct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongBhct);
				
				TableSchema.TableColumn colvarTongBnct = new TableSchema.TableColumn(schema);
				colvarTongBnct.ColumnName = "TONG_BNCT";
				colvarTongBnct.DataType = DbType.Decimal;
				colvarTongBnct.MaxLength = 0;
				colvarTongBnct.AutoIncrement = false;
				colvarTongBnct.IsNullable = true;
				colvarTongBnct.IsPrimaryKey = false;
				colvarTongBnct.IsForeignKey = false;
				colvarTongBnct.IsReadOnly = false;
				colvarTongBnct.DefaultSetting = @"";
				colvarTongBnct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongBnct);
				
				TableSchema.TableColumn colvarTongTamung = new TableSchema.TableColumn(schema);
				colvarTongTamung.ColumnName = "TONG_TAMUNG";
				colvarTongTamung.DataType = DbType.Decimal;
				colvarTongTamung.MaxLength = 0;
				colvarTongTamung.AutoIncrement = false;
				colvarTongTamung.IsNullable = true;
				colvarTongTamung.IsPrimaryKey = false;
				colvarTongTamung.IsForeignKey = false;
				colvarTongTamung.IsReadOnly = false;
				colvarTongTamung.DefaultSetting = @"";
				colvarTongTamung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongTamung);
				
				TableSchema.TableColumn colvarTongBnPtra = new TableSchema.TableColumn(schema);
				colvarTongBnPtra.ColumnName = "TONG_BN_PTRA";
				colvarTongBnPtra.DataType = DbType.Decimal;
				colvarTongBnPtra.MaxLength = 0;
				colvarTongBnPtra.AutoIncrement = false;
				colvarTongBnPtra.IsNullable = true;
				colvarTongBnPtra.IsPrimaryKey = false;
				colvarTongBnPtra.IsForeignKey = false;
				colvarTongBnPtra.IsReadOnly = false;
				colvarTongBnPtra.DefaultSetting = @"";
				colvarTongBnPtra.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongBnPtra);
				
				TableSchema.TableColumn colvarSoTienTraLai = new TableSchema.TableColumn(schema);
				colvarSoTienTraLai.ColumnName = "SO_TIEN_TRA_LAI";
				colvarSoTienTraLai.DataType = DbType.Decimal;
				colvarSoTienTraLai.MaxLength = 0;
				colvarSoTienTraLai.AutoIncrement = false;
				colvarSoTienTraLai.IsNullable = true;
				colvarSoTienTraLai.IsPrimaryKey = false;
				colvarSoTienTraLai.IsForeignKey = false;
				colvarSoTienTraLai.IsReadOnly = false;
				colvarSoTienTraLai.DefaultSetting = @"";
				colvarSoTienTraLai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoTienTraLai);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = false;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarKieuPhieu = new TableSchema.TableColumn(schema);
				colvarKieuPhieu.ColumnName = "KIEU_PHIEU";
				colvarKieuPhieu.DataType = DbType.Int32;
				colvarKieuPhieu.MaxLength = 0;
				colvarKieuPhieu.AutoIncrement = false;
				colvarKieuPhieu.IsNullable = false;
				colvarKieuPhieu.IsPrimaryKey = true;
				colvarKieuPhieu.IsForeignKey = false;
				colvarKieuPhieu.IsReadOnly = false;
				
						colvarKieuPhieu.DefaultSetting = @"((0))";
				colvarKieuPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuPhieu);
				
				TableSchema.TableColumn colvarDaTraLaitien = new TableSchema.TableColumn(schema);
				colvarDaTraLaitien.ColumnName = "DA_TRA_LAITIEN";
				colvarDaTraLaitien.DataType = DbType.Int32;
				colvarDaTraLaitien.MaxLength = 0;
				colvarDaTraLaitien.AutoIncrement = false;
				colvarDaTraLaitien.IsNullable = true;
				colvarDaTraLaitien.IsPrimaryKey = false;
				colvarDaTraLaitien.IsForeignKey = false;
				colvarDaTraLaitien.IsReadOnly = false;
				
						colvarDaTraLaitien.DefaultSetting = @"((0))";
				colvarDaTraLaitien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaTraLaitien);
				
				TableSchema.TableColumn colvarTongTutuc = new TableSchema.TableColumn(schema);
				colvarTongTutuc.ColumnName = "TONG_TUTUC";
				colvarTongTutuc.DataType = DbType.Decimal;
				colvarTongTutuc.MaxLength = 0;
				colvarTongTutuc.AutoIncrement = false;
				colvarTongTutuc.IsNullable = true;
				colvarTongTutuc.IsPrimaryKey = false;
				colvarTongTutuc.IsForeignKey = false;
				colvarTongTutuc.IsReadOnly = false;
				colvarTongTutuc.DefaultSetting = @"";
				colvarTongTutuc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongTutuc);
				
				TableSchema.TableColumn colvarLyDoCkhau = new TableSchema.TableColumn(schema);
				colvarLyDoCkhau.ColumnName = "LY_DO_CKHAU";
				colvarLyDoCkhau.DataType = DbType.String;
				colvarLyDoCkhau.MaxLength = 500;
				colvarLyDoCkhau.AutoIncrement = false;
				colvarLyDoCkhau.IsNullable = true;
				colvarLyDoCkhau.IsPrimaryKey = false;
				colvarLyDoCkhau.IsForeignKey = false;
				colvarLyDoCkhau.IsReadOnly = false;
				colvarLyDoCkhau.DefaultSetting = @"";
				colvarLyDoCkhau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLyDoCkhau);
				
				TableSchema.TableColumn colvarNgayCkhau = new TableSchema.TableColumn(schema);
				colvarNgayCkhau.ColumnName = "NGAY_CKHAU";
				colvarNgayCkhau.DataType = DbType.DateTime;
				colvarNgayCkhau.MaxLength = 0;
				colvarNgayCkhau.AutoIncrement = false;
				colvarNgayCkhau.IsNullable = true;
				colvarNgayCkhau.IsPrimaryKey = false;
				colvarNgayCkhau.IsForeignKey = false;
				colvarNgayCkhau.IsReadOnly = false;
				colvarNgayCkhau.DefaultSetting = @"";
				colvarNgayCkhau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayCkhau);
				
				TableSchema.TableColumn colvarSoTienCkhau = new TableSchema.TableColumn(schema);
				colvarSoTienCkhau.ColumnName = "SO_TIEN_CKHAU";
				colvarSoTienCkhau.DataType = DbType.Decimal;
				colvarSoTienCkhau.MaxLength = 0;
				colvarSoTienCkhau.AutoIncrement = false;
				colvarSoTienCkhau.IsNullable = true;
				colvarSoTienCkhau.IsPrimaryKey = false;
				colvarSoTienCkhau.IsForeignKey = false;
				colvarSoTienCkhau.IsReadOnly = false;
				
						colvarSoTienCkhau.DefaultSetting = @"((0))";
				colvarSoTienCkhau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoTienCkhau);
				
				TableSchema.TableColumn colvarTongBhctNgoaiGoi = new TableSchema.TableColumn(schema);
				colvarTongBhctNgoaiGoi.ColumnName = "TONG_BHCT_NGOAI_GOI";
				colvarTongBhctNgoaiGoi.DataType = DbType.Decimal;
				colvarTongBhctNgoaiGoi.MaxLength = 0;
				colvarTongBhctNgoaiGoi.AutoIncrement = false;
				colvarTongBhctNgoaiGoi.IsNullable = true;
				colvarTongBhctNgoaiGoi.IsPrimaryKey = false;
				colvarTongBhctNgoaiGoi.IsForeignKey = false;
				colvarTongBhctNgoaiGoi.IsReadOnly = false;
				
						colvarTongBhctNgoaiGoi.DefaultSetting = @"((0))";
				colvarTongBhctNgoaiGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongBhctNgoaiGoi);
				
				TableSchema.TableColumn colvarTongBhctTrongGoi = new TableSchema.TableColumn(schema);
				colvarTongBhctTrongGoi.ColumnName = "TONG_BHCT_TRONG_GOI";
				colvarTongBhctTrongGoi.DataType = DbType.Decimal;
				colvarTongBhctTrongGoi.MaxLength = 0;
				colvarTongBhctTrongGoi.AutoIncrement = false;
				colvarTongBhctTrongGoi.IsNullable = true;
				colvarTongBhctTrongGoi.IsPrimaryKey = false;
				colvarTongBhctTrongGoi.IsForeignKey = false;
				colvarTongBhctTrongGoi.IsReadOnly = false;
				
						colvarTongBhctTrongGoi.DefaultSetting = @"((0))";
				colvarTongBhctTrongGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongBhctTrongGoi);
				
				TableSchema.TableColumn colvarTongBnctPsinhNgoaiGoi = new TableSchema.TableColumn(schema);
				colvarTongBnctPsinhNgoaiGoi.ColumnName = "TONG_BNCT_PSINH_NGOAI_GOI";
				colvarTongBnctPsinhNgoaiGoi.DataType = DbType.Decimal;
				colvarTongBnctPsinhNgoaiGoi.MaxLength = 0;
				colvarTongBnctPsinhNgoaiGoi.AutoIncrement = false;
				colvarTongBnctPsinhNgoaiGoi.IsNullable = true;
				colvarTongBnctPsinhNgoaiGoi.IsPrimaryKey = false;
				colvarTongBnctPsinhNgoaiGoi.IsForeignKey = false;
				colvarTongBnctPsinhNgoaiGoi.IsReadOnly = false;
				
						colvarTongBnctPsinhNgoaiGoi.DefaultSetting = @"((0))";
				colvarTongBnctPsinhNgoaiGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongBnctPsinhNgoaiGoi);
				
				TableSchema.TableColumn colvarTongBnctTrongGoi = new TableSchema.TableColumn(schema);
				colvarTongBnctTrongGoi.ColumnName = "TONG_BNCT_TRONG_GOI";
				colvarTongBnctTrongGoi.DataType = DbType.Decimal;
				colvarTongBnctTrongGoi.MaxLength = 0;
				colvarTongBnctTrongGoi.AutoIncrement = false;
				colvarTongBnctTrongGoi.IsNullable = true;
				colvarTongBnctTrongGoi.IsPrimaryKey = false;
				colvarTongBnctTrongGoi.IsForeignKey = false;
				colvarTongBnctTrongGoi.IsReadOnly = false;
				colvarTongBnctTrongGoi.DefaultSetting = @"";
				colvarTongBnctTrongGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongBnctTrongGoi);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_THANHTOAN_NOITRU",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("PaymentId")]
		[Bindable(true)]
		public int PaymentId 
		{
			get { return GetColumnValue<int>(Columns.PaymentId); }
			set { SetColumnValue(Columns.PaymentId, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public int PatientId 
		{
			get { return GetColumnValue<int>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("PaymentDate")]
		[Bindable(true)]
		public DateTime? PaymentDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.PaymentDate); }
			set { SetColumnValue(Columns.PaymentDate, value); }
		}
		  
		[XmlAttribute("IdBenhly")]
		[Bindable(true)]
		public int IdBenhly 
		{
			get { return GetColumnValue<int>(Columns.IdBenhly); }
			set { SetColumnValue(Columns.IdBenhly, value); }
		}
		  
		[XmlAttribute("MaDtuong")]
		[Bindable(true)]
		public string MaDtuong 
		{
			get { return GetColumnValue<string>(Columns.MaDtuong); }
			set { SetColumnValue(Columns.MaDtuong, value); }
		}
		  
		[XmlAttribute("IdGoiDvu")]
		[Bindable(true)]
		public int IdGoiDvu 
		{
			get { return GetColumnValue<int>(Columns.IdGoiDvu); }
			set { SetColumnValue(Columns.IdGoiDvu, value); }
		}
		  
		[XmlAttribute("SoTienGoi")]
		[Bindable(true)]
		public decimal SoTienGoi 
		{
			get { return GetColumnValue<decimal>(Columns.SoTienGoi); }
			set { SetColumnValue(Columns.SoTienGoi, value); }
		}
		  
		[XmlAttribute("TongDongia")]
		[Bindable(true)]
		public decimal? TongDongia 
		{
			get { return GetColumnValue<decimal?>(Columns.TongDongia); }
			set { SetColumnValue(Columns.TongDongia, value); }
		}
		  
		[XmlAttribute("TongPhuthu")]
		[Bindable(true)]
		public decimal? TongPhuthu 
		{
			get { return GetColumnValue<decimal?>(Columns.TongPhuthu); }
			set { SetColumnValue(Columns.TongPhuthu, value); }
		}
		  
		[XmlAttribute("TongBhct")]
		[Bindable(true)]
		public decimal? TongBhct 
		{
			get { return GetColumnValue<decimal?>(Columns.TongBhct); }
			set { SetColumnValue(Columns.TongBhct, value); }
		}
		  
		[XmlAttribute("TongBnct")]
		[Bindable(true)]
		public decimal? TongBnct 
		{
			get { return GetColumnValue<decimal?>(Columns.TongBnct); }
			set { SetColumnValue(Columns.TongBnct, value); }
		}
		  
		[XmlAttribute("TongTamung")]
		[Bindable(true)]
		public decimal? TongTamung 
		{
			get { return GetColumnValue<decimal?>(Columns.TongTamung); }
			set { SetColumnValue(Columns.TongTamung, value); }
		}
		  
		[XmlAttribute("TongBnPtra")]
		[Bindable(true)]
		public decimal? TongBnPtra 
		{
			get { return GetColumnValue<decimal?>(Columns.TongBnPtra); }
			set { SetColumnValue(Columns.TongBnPtra, value); }
		}
		  
		[XmlAttribute("SoTienTraLai")]
		[Bindable(true)]
		public decimal? SoTienTraLai 
		{
			get { return GetColumnValue<decimal?>(Columns.SoTienTraLai); }
			set { SetColumnValue(Columns.SoTienTraLai, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime NgayTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("KieuPhieu")]
		[Bindable(true)]
		public int KieuPhieu 
		{
			get { return GetColumnValue<int>(Columns.KieuPhieu); }
			set { SetColumnValue(Columns.KieuPhieu, value); }
		}
		  
		[XmlAttribute("DaTraLaitien")]
		[Bindable(true)]
		public int? DaTraLaitien 
		{
			get { return GetColumnValue<int?>(Columns.DaTraLaitien); }
			set { SetColumnValue(Columns.DaTraLaitien, value); }
		}
		  
		[XmlAttribute("TongTutuc")]
		[Bindable(true)]
		public decimal? TongTutuc 
		{
			get { return GetColumnValue<decimal?>(Columns.TongTutuc); }
			set { SetColumnValue(Columns.TongTutuc, value); }
		}
		  
		[XmlAttribute("LyDoCkhau")]
		[Bindable(true)]
		public string LyDoCkhau 
		{
			get { return GetColumnValue<string>(Columns.LyDoCkhau); }
			set { SetColumnValue(Columns.LyDoCkhau, value); }
		}
		  
		[XmlAttribute("NgayCkhau")]
		[Bindable(true)]
		public DateTime? NgayCkhau 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayCkhau); }
			set { SetColumnValue(Columns.NgayCkhau, value); }
		}
		  
		[XmlAttribute("SoTienCkhau")]
		[Bindable(true)]
		public decimal? SoTienCkhau 
		{
			get { return GetColumnValue<decimal?>(Columns.SoTienCkhau); }
			set { SetColumnValue(Columns.SoTienCkhau, value); }
		}
		  
		[XmlAttribute("TongBhctNgoaiGoi")]
		[Bindable(true)]
		public decimal? TongBhctNgoaiGoi 
		{
			get { return GetColumnValue<decimal?>(Columns.TongBhctNgoaiGoi); }
			set { SetColumnValue(Columns.TongBhctNgoaiGoi, value); }
		}
		  
		[XmlAttribute("TongBhctTrongGoi")]
		[Bindable(true)]
		public decimal? TongBhctTrongGoi 
		{
			get { return GetColumnValue<decimal?>(Columns.TongBhctTrongGoi); }
			set { SetColumnValue(Columns.TongBhctTrongGoi, value); }
		}
		  
		[XmlAttribute("TongBnctPsinhNgoaiGoi")]
		[Bindable(true)]
		public decimal? TongBnctPsinhNgoaiGoi 
		{
			get { return GetColumnValue<decimal?>(Columns.TongBnctPsinhNgoaiGoi); }
			set { SetColumnValue(Columns.TongBnctPsinhNgoaiGoi, value); }
		}
		  
		[XmlAttribute("TongBnctTrongGoi")]
		[Bindable(true)]
		public decimal? TongBnctTrongGoi 
		{
			get { return GetColumnValue<decimal?>(Columns.TongBnctTrongGoi); }
			set { SetColumnValue(Columns.TongBnctTrongGoi, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varPaymentId,string varPatientCode,int varPatientId,DateTime? varPaymentDate,int varIdBenhly,string varMaDtuong,int varIdGoiDvu,decimal varSoTienGoi,decimal? varTongDongia,decimal? varTongPhuthu,decimal? varTongBhct,decimal? varTongBnct,decimal? varTongTamung,decimal? varTongBnPtra,decimal? varSoTienTraLai,string varNguoiTao,DateTime varNgayTao,string varNguoiSua,DateTime? varNgaySua,int varKieuPhieu,int? varDaTraLaitien,decimal? varTongTutuc,string varLyDoCkhau,DateTime? varNgayCkhau,decimal? varSoTienCkhau,decimal? varTongBhctNgoaiGoi,decimal? varTongBhctTrongGoi,decimal? varTongBnctPsinhNgoaiGoi,decimal? varTongBnctTrongGoi)
		{
			TThanhtoanNoitru item = new TThanhtoanNoitru();
			
			item.PaymentId = varPaymentId;
			
			item.PatientCode = varPatientCode;
			
			item.PatientId = varPatientId;
			
			item.PaymentDate = varPaymentDate;
			
			item.IdBenhly = varIdBenhly;
			
			item.MaDtuong = varMaDtuong;
			
			item.IdGoiDvu = varIdGoiDvu;
			
			item.SoTienGoi = varSoTienGoi;
			
			item.TongDongia = varTongDongia;
			
			item.TongPhuthu = varTongPhuthu;
			
			item.TongBhct = varTongBhct;
			
			item.TongBnct = varTongBnct;
			
			item.TongTamung = varTongTamung;
			
			item.TongBnPtra = varTongBnPtra;
			
			item.SoTienTraLai = varSoTienTraLai;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.KieuPhieu = varKieuPhieu;
			
			item.DaTraLaitien = varDaTraLaitien;
			
			item.TongTutuc = varTongTutuc;
			
			item.LyDoCkhau = varLyDoCkhau;
			
			item.NgayCkhau = varNgayCkhau;
			
			item.SoTienCkhau = varSoTienCkhau;
			
			item.TongBhctNgoaiGoi = varTongBhctNgoaiGoi;
			
			item.TongBhctTrongGoi = varTongBhctTrongGoi;
			
			item.TongBnctPsinhNgoaiGoi = varTongBnctPsinhNgoaiGoi;
			
			item.TongBnctTrongGoi = varTongBnctTrongGoi;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varPaymentId,string varPatientCode,int varPatientId,DateTime? varPaymentDate,int varIdBenhly,string varMaDtuong,int varIdGoiDvu,decimal varSoTienGoi,decimal? varTongDongia,decimal? varTongPhuthu,decimal? varTongBhct,decimal? varTongBnct,decimal? varTongTamung,decimal? varTongBnPtra,decimal? varSoTienTraLai,string varNguoiTao,DateTime varNgayTao,string varNguoiSua,DateTime? varNgaySua,int varKieuPhieu,int? varDaTraLaitien,decimal? varTongTutuc,string varLyDoCkhau,DateTime? varNgayCkhau,decimal? varSoTienCkhau,decimal? varTongBhctNgoaiGoi,decimal? varTongBhctTrongGoi,decimal? varTongBnctPsinhNgoaiGoi,decimal? varTongBnctTrongGoi)
		{
			TThanhtoanNoitru item = new TThanhtoanNoitru();
			
				item.PaymentId = varPaymentId;
			
				item.PatientCode = varPatientCode;
			
				item.PatientId = varPatientId;
			
				item.PaymentDate = varPaymentDate;
			
				item.IdBenhly = varIdBenhly;
			
				item.MaDtuong = varMaDtuong;
			
				item.IdGoiDvu = varIdGoiDvu;
			
				item.SoTienGoi = varSoTienGoi;
			
				item.TongDongia = varTongDongia;
			
				item.TongPhuthu = varTongPhuthu;
			
				item.TongBhct = varTongBhct;
			
				item.TongBnct = varTongBnct;
			
				item.TongTamung = varTongTamung;
			
				item.TongBnPtra = varTongBnPtra;
			
				item.SoTienTraLai = varSoTienTraLai;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.KieuPhieu = varKieuPhieu;
			
				item.DaTraLaitien = varDaTraLaitien;
			
				item.TongTutuc = varTongTutuc;
			
				item.LyDoCkhau = varLyDoCkhau;
			
				item.NgayCkhau = varNgayCkhau;
			
				item.SoTienCkhau = varSoTienCkhau;
			
				item.TongBhctNgoaiGoi = varTongBhctNgoaiGoi;
			
				item.TongBhctTrongGoi = varTongBhctTrongGoi;
			
				item.TongBnctPsinhNgoaiGoi = varTongBnctPsinhNgoaiGoi;
			
				item.TongBnctTrongGoi = varTongBnctTrongGoi;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn PaymentIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentDateColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhlyColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDtuongColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGoiDvuColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn SoTienGoiColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn TongDongiaColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn TongPhuthuColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn TongBhctColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn TongBnctColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn TongTamungColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn TongBnPtraColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn SoTienTraLaiColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuPhieuColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn DaTraLaitienColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn TongTutucColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn LyDoCkhauColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayCkhauColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn SoTienCkhauColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn TongBhctNgoaiGoiColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn TongBhctTrongGoiColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn TongBnctPsinhNgoaiGoiColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn TongBnctTrongGoiColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string PaymentId = @"Payment_ID";
			 public static string PatientCode = @"Patient_Code";
			 public static string PatientId = @"Patient_ID";
			 public static string PaymentDate = @"Payment_Date";
			 public static string IdBenhly = @"ID_BENHLY";
			 public static string MaDtuong = @"MA_DTUONG";
			 public static string IdGoiDvu = @"ID_GOI_DVU";
			 public static string SoTienGoi = @"SO_TIEN_GOI";
			 public static string TongDongia = @"TONG_DONGIA";
			 public static string TongPhuthu = @"TONG_PHUTHU";
			 public static string TongBhct = @"TONG_BHCT";
			 public static string TongBnct = @"TONG_BNCT";
			 public static string TongTamung = @"TONG_TAMUNG";
			 public static string TongBnPtra = @"TONG_BN_PTRA";
			 public static string SoTienTraLai = @"SO_TIEN_TRA_LAI";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string KieuPhieu = @"KIEU_PHIEU";
			 public static string DaTraLaitien = @"DA_TRA_LAITIEN";
			 public static string TongTutuc = @"TONG_TUTUC";
			 public static string LyDoCkhau = @"LY_DO_CKHAU";
			 public static string NgayCkhau = @"NGAY_CKHAU";
			 public static string SoTienCkhau = @"SO_TIEN_CKHAU";
			 public static string TongBhctNgoaiGoi = @"TONG_BHCT_NGOAI_GOI";
			 public static string TongBhctTrongGoi = @"TONG_BHCT_TRONG_GOI";
			 public static string TongBnctPsinhNgoaiGoi = @"TONG_BNCT_PSINH_NGOAI_GOI";
			 public static string TongBnctTrongGoi = @"TONG_BNCT_TRONG_GOI";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
