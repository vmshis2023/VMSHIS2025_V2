using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the LInsObjectDiscountRate class.
	/// </summary>
    [Serializable]
	public partial class LInsObjectDiscountRateCollection : ActiveList<LInsObjectDiscountRate, LInsObjectDiscountRateCollection>
	{	   
		public LInsObjectDiscountRateCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>LInsObjectDiscountRateCollection</returns>
		public LInsObjectDiscountRateCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                LInsObjectDiscountRate o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the L_InsObject_DiscountRate table.
	/// </summary>
	[Serializable]
	public partial class LInsObjectDiscountRate : ActiveRecord<LInsObjectDiscountRate>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public LInsObjectDiscountRate()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public LInsObjectDiscountRate(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public LInsObjectDiscountRate(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public LInsObjectDiscountRate(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("L_InsObject_DiscountRate", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarInsObjectCodeNumber = new TableSchema.TableColumn(schema);
				colvarInsObjectCodeNumber.ColumnName = "InsObject_CodeNumber";
				colvarInsObjectCodeNumber.DataType = DbType.Int32;
				colvarInsObjectCodeNumber.MaxLength = 0;
				colvarInsObjectCodeNumber.AutoIncrement = false;
				colvarInsObjectCodeNumber.IsNullable = false;
				colvarInsObjectCodeNumber.IsPrimaryKey = true;
				colvarInsObjectCodeNumber.IsForeignKey = false;
				colvarInsObjectCodeNumber.IsReadOnly = false;
				colvarInsObjectCodeNumber.DefaultSetting = @"";
				colvarInsObjectCodeNumber.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInsObjectCodeNumber);
				
				TableSchema.TableColumn colvarInsObjectId = new TableSchema.TableColumn(schema);
				colvarInsObjectId.ColumnName = "InsObject_ID";
				colvarInsObjectId.DataType = DbType.Int32;
				colvarInsObjectId.MaxLength = 0;
				colvarInsObjectId.AutoIncrement = false;
				colvarInsObjectId.IsNullable = false;
				colvarInsObjectId.IsPrimaryKey = true;
				colvarInsObjectId.IsForeignKey = false;
				colvarInsObjectId.IsReadOnly = false;
				colvarInsObjectId.DefaultSetting = @"";
				colvarInsObjectId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInsObjectId);
				
				TableSchema.TableColumn colvarDiscountRate = new TableSchema.TableColumn(schema);
				colvarDiscountRate.ColumnName = "Discount_Rate";
				colvarDiscountRate.DataType = DbType.Decimal;
				colvarDiscountRate.MaxLength = 0;
				colvarDiscountRate.AutoIncrement = false;
				colvarDiscountRate.IsNullable = true;
				colvarDiscountRate.IsPrimaryKey = false;
				colvarDiscountRate.IsForeignKey = false;
				colvarDiscountRate.IsReadOnly = false;
				colvarDiscountRate.DefaultSetting = @"";
				colvarDiscountRate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountRate);
				
				TableSchema.TableColumn colvarDiscountTypeId = new TableSchema.TableColumn(schema);
				colvarDiscountTypeId.ColumnName = "Discount_Type_ID";
				colvarDiscountTypeId.DataType = DbType.AnsiStringFixedLength;
				colvarDiscountTypeId.MaxLength = 10;
				colvarDiscountTypeId.AutoIncrement = false;
				colvarDiscountTypeId.IsNullable = true;
				colvarDiscountTypeId.IsPrimaryKey = false;
				colvarDiscountTypeId.IsForeignKey = false;
				colvarDiscountTypeId.IsReadOnly = false;
				colvarDiscountTypeId.DefaultSetting = @"";
				colvarDiscountTypeId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountTypeId);
				
				TableSchema.TableColumn colvarIsSpecialDiscount = new TableSchema.TableColumn(schema);
				colvarIsSpecialDiscount.ColumnName = "IsSpecial_Discount";
				colvarIsSpecialDiscount.DataType = DbType.Int32;
				colvarIsSpecialDiscount.MaxLength = 0;
				colvarIsSpecialDiscount.AutoIncrement = false;
				colvarIsSpecialDiscount.IsNullable = true;
				colvarIsSpecialDiscount.IsPrimaryKey = false;
				colvarIsSpecialDiscount.IsForeignKey = false;
				colvarIsSpecialDiscount.IsReadOnly = false;
				colvarIsSpecialDiscount.DefaultSetting = @"";
				colvarIsSpecialDiscount.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsSpecialDiscount);
				
				TableSchema.TableColumn colvarMaximum = new TableSchema.TableColumn(schema);
				colvarMaximum.ColumnName = "Maximum";
				colvarMaximum.DataType = DbType.Currency;
				colvarMaximum.MaxLength = 0;
				colvarMaximum.AutoIncrement = false;
				colvarMaximum.IsNullable = true;
				colvarMaximum.IsPrimaryKey = false;
				colvarMaximum.IsForeignKey = false;
				colvarMaximum.IsReadOnly = false;
				colvarMaximum.DefaultSetting = @"";
				colvarMaximum.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaximum);
				
				TableSchema.TableColumn colvarMinimum = new TableSchema.TableColumn(schema);
				colvarMinimum.ColumnName = "Minimum";
				colvarMinimum.DataType = DbType.Currency;
				colvarMinimum.MaxLength = 0;
				colvarMinimum.AutoIncrement = false;
				colvarMinimum.IsNullable = true;
				colvarMinimum.IsPrimaryKey = false;
				colvarMinimum.IsForeignKey = false;
				colvarMinimum.IsReadOnly = false;
				colvarMinimum.DefaultSetting = @"";
				colvarMinimum.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMinimum);
				
				TableSchema.TableColumn colvarSDesc = new TableSchema.TableColumn(schema);
				colvarSDesc.ColumnName = "sDesc";
				colvarSDesc.DataType = DbType.String;
				colvarSDesc.MaxLength = 300;
				colvarSDesc.AutoIncrement = false;
				colvarSDesc.IsNullable = true;
				colvarSDesc.IsPrimaryKey = false;
				colvarSDesc.IsForeignKey = false;
				colvarSDesc.IsReadOnly = false;
				colvarSDesc.DefaultSetting = @"";
				colvarSDesc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSDesc);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("L_InsObject_DiscountRate",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("InsObjectCodeNumber")]
		[Bindable(true)]
		public int InsObjectCodeNumber 
		{
			get { return GetColumnValue<int>(Columns.InsObjectCodeNumber); }
			set { SetColumnValue(Columns.InsObjectCodeNumber, value); }
		}
		  
		[XmlAttribute("InsObjectId")]
		[Bindable(true)]
		public int InsObjectId 
		{
			get { return GetColumnValue<int>(Columns.InsObjectId); }
			set { SetColumnValue(Columns.InsObjectId, value); }
		}
		  
		[XmlAttribute("DiscountRate")]
		[Bindable(true)]
		public decimal? DiscountRate 
		{
			get { return GetColumnValue<decimal?>(Columns.DiscountRate); }
			set { SetColumnValue(Columns.DiscountRate, value); }
		}
		  
		[XmlAttribute("DiscountTypeId")]
		[Bindable(true)]
		public string DiscountTypeId 
		{
			get { return GetColumnValue<string>(Columns.DiscountTypeId); }
			set { SetColumnValue(Columns.DiscountTypeId, value); }
		}
		  
		[XmlAttribute("IsSpecialDiscount")]
		[Bindable(true)]
		public int? IsSpecialDiscount 
		{
			get { return GetColumnValue<int?>(Columns.IsSpecialDiscount); }
			set { SetColumnValue(Columns.IsSpecialDiscount, value); }
		}
		  
		[XmlAttribute("Maximum")]
		[Bindable(true)]
		public decimal? Maximum 
		{
			get { return GetColumnValue<decimal?>(Columns.Maximum); }
			set { SetColumnValue(Columns.Maximum, value); }
		}
		  
		[XmlAttribute("Minimum")]
		[Bindable(true)]
		public decimal? Minimum 
		{
			get { return GetColumnValue<decimal?>(Columns.Minimum); }
			set { SetColumnValue(Columns.Minimum, value); }
		}
		  
		[XmlAttribute("SDesc")]
		[Bindable(true)]
		public string SDesc 
		{
			get { return GetColumnValue<string>(Columns.SDesc); }
			set { SetColumnValue(Columns.SDesc, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varInsObjectCodeNumber,int varInsObjectId,decimal? varDiscountRate,string varDiscountTypeId,int? varIsSpecialDiscount,decimal? varMaximum,decimal? varMinimum,string varSDesc)
		{
			LInsObjectDiscountRate item = new LInsObjectDiscountRate();
			
			item.InsObjectCodeNumber = varInsObjectCodeNumber;
			
			item.InsObjectId = varInsObjectId;
			
			item.DiscountRate = varDiscountRate;
			
			item.DiscountTypeId = varDiscountTypeId;
			
			item.IsSpecialDiscount = varIsSpecialDiscount;
			
			item.Maximum = varMaximum;
			
			item.Minimum = varMinimum;
			
			item.SDesc = varSDesc;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varInsObjectCodeNumber,int varInsObjectId,decimal? varDiscountRate,string varDiscountTypeId,int? varIsSpecialDiscount,decimal? varMaximum,decimal? varMinimum,string varSDesc)
		{
			LInsObjectDiscountRate item = new LInsObjectDiscountRate();
			
				item.InsObjectCodeNumber = varInsObjectCodeNumber;
			
				item.InsObjectId = varInsObjectId;
			
				item.DiscountRate = varDiscountRate;
			
				item.DiscountTypeId = varDiscountTypeId;
			
				item.IsSpecialDiscount = varIsSpecialDiscount;
			
				item.Maximum = varMaximum;
			
				item.Minimum = varMinimum;
			
				item.SDesc = varSDesc;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn InsObjectCodeNumberColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn InsObjectIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountRateColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountTypeIdColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IsSpecialDiscountColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn MaximumColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn MinimumColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn SDescColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string InsObjectCodeNumber = @"InsObject_CodeNumber";
			 public static string InsObjectId = @"InsObject_ID";
			 public static string DiscountRate = @"Discount_Rate";
			 public static string DiscountTypeId = @"Discount_Type_ID";
			 public static string IsSpecialDiscount = @"IsSpecial_Discount";
			 public static string Maximum = @"Maximum";
			 public static string Minimum = @"Minimum";
			 public static string SDesc = @"sDesc";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
