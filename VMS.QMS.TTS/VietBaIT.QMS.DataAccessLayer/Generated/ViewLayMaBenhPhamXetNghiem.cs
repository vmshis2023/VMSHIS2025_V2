using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewLayMaBenhPhamXetNghiem class.
    /// </summary>
    [Serializable]
    public partial class ViewLayMaBenhPhamXetNghiemCollection : ReadOnlyList<ViewLayMaBenhPhamXetNghiem, ViewLayMaBenhPhamXetNghiemCollection>
    {        
        public ViewLayMaBenhPhamXetNghiemCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_LayMaBenhPham_XetNghiem view.
    /// </summary>
    [Serializable]
    public partial class ViewLayMaBenhPhamXetNghiem : ReadOnlyRecord<ViewLayMaBenhPhamXetNghiem>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_LayMaBenhPham_XetNghiem", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarAssignDetailId = new TableSchema.TableColumn(schema);
                colvarAssignDetailId.ColumnName = "AssignDetail_ID";
                colvarAssignDetailId.DataType = DbType.Int64;
                colvarAssignDetailId.MaxLength = 0;
                colvarAssignDetailId.AutoIncrement = false;
                colvarAssignDetailId.IsNullable = false;
                colvarAssignDetailId.IsPrimaryKey = false;
                colvarAssignDetailId.IsForeignKey = false;
                colvarAssignDetailId.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignDetailId);
                
                TableSchema.TableColumn colvarExamId = new TableSchema.TableColumn(schema);
                colvarExamId.ColumnName = "Exam_ID";
                colvarExamId.DataType = DbType.Int64;
                colvarExamId.MaxLength = 0;
                colvarExamId.AutoIncrement = false;
                colvarExamId.IsNullable = true;
                colvarExamId.IsPrimaryKey = false;
                colvarExamId.IsForeignKey = false;
                colvarExamId.IsReadOnly = false;
                
                schema.Columns.Add(colvarExamId);
                
                TableSchema.TableColumn colvarAssignId = new TableSchema.TableColumn(schema);
                colvarAssignId.ColumnName = "Assign_ID";
                colvarAssignId.DataType = DbType.Int64;
                colvarAssignId.MaxLength = 0;
                colvarAssignId.AutoIncrement = false;
                colvarAssignId.IsNullable = false;
                colvarAssignId.IsPrimaryKey = false;
                colvarAssignId.IsForeignKey = false;
                colvarAssignId.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignId);
                
                TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
                colvarServiceId.ColumnName = "Service_ID";
                colvarServiceId.DataType = DbType.Int16;
                colvarServiceId.MaxLength = 0;
                colvarServiceId.AutoIncrement = false;
                colvarServiceId.IsNullable = true;
                colvarServiceId.IsPrimaryKey = false;
                colvarServiceId.IsForeignKey = false;
                colvarServiceId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceId);
                
                TableSchema.TableColumn colvarServiceDetailId = new TableSchema.TableColumn(schema);
                colvarServiceDetailId.ColumnName = "ServiceDetail_ID";
                colvarServiceDetailId.DataType = DbType.Int32;
                colvarServiceDetailId.MaxLength = 0;
                colvarServiceDetailId.AutoIncrement = false;
                colvarServiceDetailId.IsNullable = false;
                colvarServiceDetailId.IsPrimaryKey = false;
                colvarServiceDetailId.IsForeignKey = false;
                colvarServiceDetailId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceDetailId);
                
                TableSchema.TableColumn colvarDiagPerson = new TableSchema.TableColumn(schema);
                colvarDiagPerson.ColumnName = "Diag_Person";
                colvarDiagPerson.DataType = DbType.Int16;
                colvarDiagPerson.MaxLength = 0;
                colvarDiagPerson.AutoIncrement = false;
                colvarDiagPerson.IsNullable = true;
                colvarDiagPerson.IsPrimaryKey = false;
                colvarDiagPerson.IsForeignKey = false;
                colvarDiagPerson.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiagPerson);
                
                TableSchema.TableColumn colvarUserId = new TableSchema.TableColumn(schema);
                colvarUserId.ColumnName = "User_ID";
                colvarUserId.DataType = DbType.AnsiString;
                colvarUserId.MaxLength = 20;
                colvarUserId.AutoIncrement = false;
                colvarUserId.IsNullable = true;
                colvarUserId.IsPrimaryKey = false;
                colvarUserId.IsForeignKey = false;
                colvarUserId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserId);
                
                TableSchema.TableColumn colvarInputDate = new TableSchema.TableColumn(schema);
                colvarInputDate.ColumnName = "Input_Date";
                colvarInputDate.DataType = DbType.DateTime;
                colvarInputDate.MaxLength = 0;
                colvarInputDate.AutoIncrement = false;
                colvarInputDate.IsNullable = true;
                colvarInputDate.IsPrimaryKey = false;
                colvarInputDate.IsForeignKey = false;
                colvarInputDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInputDate);
                
                TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
                colvarPaymentStatus.ColumnName = "Payment_Status";
                colvarPaymentStatus.DataType = DbType.Byte;
                colvarPaymentStatus.MaxLength = 0;
                colvarPaymentStatus.AutoIncrement = false;
                colvarPaymentStatus.IsNullable = false;
                colvarPaymentStatus.IsPrimaryKey = false;
                colvarPaymentStatus.IsForeignKey = false;
                colvarPaymentStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentStatus);
                
                TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
                colvarPaymentDate.ColumnName = "Payment_Date";
                colvarPaymentDate.DataType = DbType.DateTime;
                colvarPaymentDate.MaxLength = 0;
                colvarPaymentDate.AutoIncrement = false;
                colvarPaymentDate.IsNullable = true;
                colvarPaymentDate.IsPrimaryKey = false;
                colvarPaymentDate.IsForeignKey = false;
                colvarPaymentDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentDate);
                
                TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
                colvarIsPayment.ColumnName = "IsPayment";
                colvarIsPayment.DataType = DbType.Byte;
                colvarIsPayment.MaxLength = 0;
                colvarIsPayment.AutoIncrement = false;
                colvarIsPayment.IsNullable = true;
                colvarIsPayment.IsPrimaryKey = false;
                colvarIsPayment.IsForeignKey = false;
                colvarIsPayment.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsPayment);
                
                TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
                colvarQuantity.ColumnName = "Quantity";
                colvarQuantity.DataType = DbType.Int32;
                colvarQuantity.MaxLength = 0;
                colvarQuantity.AutoIncrement = false;
                colvarQuantity.IsNullable = true;
                colvarQuantity.IsPrimaryKey = false;
                colvarQuantity.IsForeignKey = false;
                colvarQuantity.IsReadOnly = false;
                
                schema.Columns.Add(colvarQuantity);
                
                TableSchema.TableColumn colvarAssignDetailStatus = new TableSchema.TableColumn(schema);
                colvarAssignDetailStatus.ColumnName = "AssignDetail_Status";
                colvarAssignDetailStatus.DataType = DbType.Byte;
                colvarAssignDetailStatus.MaxLength = 0;
                colvarAssignDetailStatus.AutoIncrement = false;
                colvarAssignDetailStatus.IsNullable = true;
                colvarAssignDetailStatus.IsPrimaryKey = false;
                colvarAssignDetailStatus.IsForeignKey = false;
                colvarAssignDetailStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignDetailStatus);
                
                TableSchema.TableColumn colvarAssignDetailCode = new TableSchema.TableColumn(schema);
                colvarAssignDetailCode.ColumnName = "AssignDetailCode";
                colvarAssignDetailCode.DataType = DbType.String;
                colvarAssignDetailCode.MaxLength = 50;
                colvarAssignDetailCode.AutoIncrement = false;
                colvarAssignDetailCode.IsNullable = true;
                colvarAssignDetailCode.IsPrimaryKey = false;
                colvarAssignDetailCode.IsForeignKey = false;
                colvarAssignDetailCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignDetailCode);
                
                TableSchema.TableColumn colvarTestId = new TableSchema.TableColumn(schema);
                colvarTestId.ColumnName = "Test_ID";
                colvarTestId.DataType = DbType.Int32;
                colvarTestId.MaxLength = 0;
                colvarTestId.AutoIncrement = false;
                colvarTestId.IsNullable = true;
                colvarTestId.IsPrimaryKey = false;
                colvarTestId.IsForeignKey = false;
                colvarTestId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTestId);
                
                TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
                colvarGhiChu.ColumnName = "Ghi_Chu";
                colvarGhiChu.DataType = DbType.String;
                colvarGhiChu.MaxLength = 255;
                colvarGhiChu.AutoIncrement = false;
                colvarGhiChu.IsNullable = true;
                colvarGhiChu.IsPrimaryKey = false;
                colvarGhiChu.IsForeignKey = false;
                colvarGhiChu.IsReadOnly = false;
                
                schema.Columns.Add(colvarGhiChu);
                
                TableSchema.TableColumn colvarXacNhan = new TableSchema.TableColumn(schema);
                colvarXacNhan.ColumnName = "XAC_NHAN";
                colvarXacNhan.DataType = DbType.Byte;
                colvarXacNhan.MaxLength = 0;
                colvarXacNhan.AutoIncrement = false;
                colvarXacNhan.IsNullable = true;
                colvarXacNhan.IsPrimaryKey = false;
                colvarXacNhan.IsForeignKey = false;
                colvarXacNhan.IsReadOnly = false;
                
                schema.Columns.Add(colvarXacNhan);
                
                TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
                colvarPaymentId.ColumnName = "Payment_ID";
                colvarPaymentId.DataType = DbType.Int32;
                colvarPaymentId.MaxLength = 0;
                colvarPaymentId.AutoIncrement = false;
                colvarPaymentId.IsNullable = true;
                colvarPaymentId.IsPrimaryKey = false;
                colvarPaymentId.IsForeignKey = false;
                colvarPaymentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentId);
                
                TableSchema.TableColumn colvarStt = new TableSchema.TableColumn(schema);
                colvarStt.ColumnName = "STT";
                colvarStt.DataType = DbType.Int16;
                colvarStt.MaxLength = 0;
                colvarStt.AutoIncrement = false;
                colvarStt.IsNullable = true;
                colvarStt.IsPrimaryKey = false;
                colvarStt.IsForeignKey = false;
                colvarStt.IsReadOnly = false;
                
                schema.Columns.Add(colvarStt);
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_Code";
                colvarPatientCode.DataType = DbType.AnsiString;
                colvarPatientCode.MaxLength = 20;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = false;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarServiceName = new TableSchema.TableColumn(schema);
                colvarServiceName.ColumnName = "Service_Name";
                colvarServiceName.DataType = DbType.String;
                colvarServiceName.MaxLength = 300;
                colvarServiceName.AutoIncrement = false;
                colvarServiceName.IsNullable = false;
                colvarServiceName.IsPrimaryKey = false;
                colvarServiceName.IsForeignKey = false;
                colvarServiceName.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceName);
                
                TableSchema.TableColumn colvarAssignCode = new TableSchema.TableColumn(schema);
                colvarAssignCode.ColumnName = "Assign_Code";
                colvarAssignCode.DataType = DbType.AnsiString;
                colvarAssignCode.MaxLength = 50;
                colvarAssignCode.AutoIncrement = false;
                colvarAssignCode.IsNullable = true;
                colvarAssignCode.IsPrimaryKey = false;
                colvarAssignCode.IsForeignKey = false;
                colvarAssignCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignCode);
                
                TableSchema.TableColumn colvarMaChidinh = new TableSchema.TableColumn(schema);
                colvarMaChidinh.ColumnName = "MA_CHIDINH";
                colvarMaChidinh.DataType = DbType.AnsiString;
                colvarMaChidinh.MaxLength = 30;
                colvarMaChidinh.AutoIncrement = false;
                colvarMaChidinh.IsNullable = true;
                colvarMaChidinh.IsPrimaryKey = false;
                colvarMaChidinh.IsForeignKey = false;
                colvarMaChidinh.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaChidinh);
                
                TableSchema.TableColumn colvarBarcode = new TableSchema.TableColumn(schema);
                colvarBarcode.ColumnName = "Barcode";
                colvarBarcode.DataType = DbType.String;
                colvarBarcode.MaxLength = 20;
                colvarBarcode.AutoIncrement = false;
                colvarBarcode.IsNullable = true;
                colvarBarcode.IsPrimaryKey = false;
                colvarBarcode.IsForeignKey = false;
                colvarBarcode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBarcode);
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Int64;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = false;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarGroupOrder = new TableSchema.TableColumn(schema);
                colvarGroupOrder.ColumnName = "GroupOrder";
                colvarGroupOrder.DataType = DbType.Int16;
                colvarGroupOrder.MaxLength = 0;
                colvarGroupOrder.AutoIncrement = false;
                colvarGroupOrder.IsNullable = false;
                colvarGroupOrder.IsPrimaryKey = false;
                colvarGroupOrder.IsForeignKey = false;
                colvarGroupOrder.IsReadOnly = false;
                
                schema.Columns.Add(colvarGroupOrder);
                
                TableSchema.TableColumn colvarServiceDetailName = new TableSchema.TableColumn(schema);
                colvarServiceDetailName.ColumnName = "ServiceDetail_Name";
                colvarServiceDetailName.DataType = DbType.String;
                colvarServiceDetailName.MaxLength = 300;
                colvarServiceDetailName.AutoIncrement = false;
                colvarServiceDetailName.IsNullable = true;
                colvarServiceDetailName.IsPrimaryKey = false;
                colvarServiceDetailName.IsForeignKey = false;
                colvarServiceDetailName.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceDetailName);
                
                TableSchema.TableColumn colvarIntOrder = new TableSchema.TableColumn(schema);
                colvarIntOrder.ColumnName = "IntOrder";
                colvarIntOrder.DataType = DbType.Int32;
                colvarIntOrder.MaxLength = 0;
                colvarIntOrder.AutoIncrement = false;
                colvarIntOrder.IsNullable = true;
                colvarIntOrder.IsPrimaryKey = false;
                colvarIntOrder.IsForeignKey = false;
                colvarIntOrder.IsReadOnly = false;
                
                schema.Columns.Add(colvarIntOrder);
                
                TableSchema.TableColumn colvarServiceTypeId = new TableSchema.TableColumn(schema);
                colvarServiceTypeId.ColumnName = "ServiceType_ID";
                colvarServiceTypeId.DataType = DbType.Int16;
                colvarServiceTypeId.MaxLength = 0;
                colvarServiceTypeId.AutoIncrement = false;
                colvarServiceTypeId.IsNullable = false;
                colvarServiceTypeId.IsPrimaryKey = false;
                colvarServiceTypeId.IsForeignKey = false;
                colvarServiceTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceTypeId);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("view_LayMaBenhPham_XetNghiem",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewLayMaBenhPhamXetNghiem()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewLayMaBenhPhamXetNghiem(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewLayMaBenhPhamXetNghiem(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewLayMaBenhPhamXetNghiem(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("AssignDetailId")]
        [Bindable(true)]
        public long AssignDetailId 
	    {
		    get
		    {
			    return GetColumnValue<long>("AssignDetail_ID");
		    }
            set 
		    {
			    SetColumnValue("AssignDetail_ID", value);
            }
        }
	      
        [XmlAttribute("ExamId")]
        [Bindable(true)]
        public long? ExamId 
	    {
		    get
		    {
			    return GetColumnValue<long?>("Exam_ID");
		    }
            set 
		    {
			    SetColumnValue("Exam_ID", value);
            }
        }
	      
        [XmlAttribute("AssignId")]
        [Bindable(true)]
        public long AssignId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Assign_ID");
		    }
            set 
		    {
			    SetColumnValue("Assign_ID", value);
            }
        }
	      
        [XmlAttribute("ServiceId")]
        [Bindable(true)]
        public short? ServiceId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Service_ID");
		    }
            set 
		    {
			    SetColumnValue("Service_ID", value);
            }
        }
	      
        [XmlAttribute("ServiceDetailId")]
        [Bindable(true)]
        public int ServiceDetailId 
	    {
		    get
		    {
			    return GetColumnValue<int>("ServiceDetail_ID");
		    }
            set 
		    {
			    SetColumnValue("ServiceDetail_ID", value);
            }
        }
	      
        [XmlAttribute("DiagPerson")]
        [Bindable(true)]
        public short? DiagPerson 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Diag_Person");
		    }
            set 
		    {
			    SetColumnValue("Diag_Person", value);
            }
        }
	      
        [XmlAttribute("UserId")]
        [Bindable(true)]
        public string UserId 
	    {
		    get
		    {
			    return GetColumnValue<string>("User_ID");
		    }
            set 
		    {
			    SetColumnValue("User_ID", value);
            }
        }
	      
        [XmlAttribute("InputDate")]
        [Bindable(true)]
        public DateTime? InputDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Input_Date");
		    }
            set 
		    {
			    SetColumnValue("Input_Date", value);
            }
        }
	      
        [XmlAttribute("PaymentStatus")]
        [Bindable(true)]
        public byte PaymentStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Payment_Status");
		    }
            set 
		    {
			    SetColumnValue("Payment_Status", value);
            }
        }
	      
        [XmlAttribute("PaymentDate")]
        [Bindable(true)]
        public DateTime? PaymentDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Payment_Date");
		    }
            set 
		    {
			    SetColumnValue("Payment_Date", value);
            }
        }
	      
        [XmlAttribute("IsPayment")]
        [Bindable(true)]
        public byte? IsPayment 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("IsPayment");
		    }
            set 
		    {
			    SetColumnValue("IsPayment", value);
            }
        }
	      
        [XmlAttribute("Quantity")]
        [Bindable(true)]
        public int? Quantity 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Quantity");
		    }
            set 
		    {
			    SetColumnValue("Quantity", value);
            }
        }
	      
        [XmlAttribute("AssignDetailStatus")]
        [Bindable(true)]
        public byte? AssignDetailStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("AssignDetail_Status");
		    }
            set 
		    {
			    SetColumnValue("AssignDetail_Status", value);
            }
        }
	      
        [XmlAttribute("AssignDetailCode")]
        [Bindable(true)]
        public string AssignDetailCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("AssignDetailCode");
		    }
            set 
		    {
			    SetColumnValue("AssignDetailCode", value);
            }
        }
	      
        [XmlAttribute("TestId")]
        [Bindable(true)]
        public int? TestId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Test_ID");
		    }
            set 
		    {
			    SetColumnValue("Test_ID", value);
            }
        }
	      
        [XmlAttribute("GhiChu")]
        [Bindable(true)]
        public string GhiChu 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ghi_Chu");
		    }
            set 
		    {
			    SetColumnValue("Ghi_Chu", value);
            }
        }
	      
        [XmlAttribute("XacNhan")]
        [Bindable(true)]
        public byte? XacNhan 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("XAC_NHAN");
		    }
            set 
		    {
			    SetColumnValue("XAC_NHAN", value);
            }
        }
	      
        [XmlAttribute("PaymentId")]
        [Bindable(true)]
        public int? PaymentId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Payment_ID");
		    }
            set 
		    {
			    SetColumnValue("Payment_ID", value);
            }
        }
	      
        [XmlAttribute("Stt")]
        [Bindable(true)]
        public short? Stt 
	    {
		    get
		    {
			    return GetColumnValue<short?>("STT");
		    }
            set 
		    {
			    SetColumnValue("STT", value);
            }
        }
	      
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Code");
		    }
            set 
		    {
			    SetColumnValue("Patient_Code", value);
            }
        }
	      
        [XmlAttribute("ServiceName")]
        [Bindable(true)]
        public string ServiceName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Service_Name");
		    }
            set 
		    {
			    SetColumnValue("Service_Name", value);
            }
        }
	      
        [XmlAttribute("AssignCode")]
        [Bindable(true)]
        public string AssignCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Assign_Code");
		    }
            set 
		    {
			    SetColumnValue("Assign_Code", value);
            }
        }
	      
        [XmlAttribute("MaChidinh")]
        [Bindable(true)]
        public string MaChidinh 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_CHIDINH");
		    }
            set 
		    {
			    SetColumnValue("MA_CHIDINH", value);
            }
        }
	      
        [XmlAttribute("Barcode")]
        [Bindable(true)]
        public string Barcode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Barcode");
		    }
            set 
		    {
			    SetColumnValue("Barcode", value);
            }
        }
	      
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public long PatientId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("GroupOrder")]
        [Bindable(true)]
        public short GroupOrder 
	    {
		    get
		    {
			    return GetColumnValue<short>("GroupOrder");
		    }
            set 
		    {
			    SetColumnValue("GroupOrder", value);
            }
        }
	      
        [XmlAttribute("ServiceDetailName")]
        [Bindable(true)]
        public string ServiceDetailName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ServiceDetail_Name");
		    }
            set 
		    {
			    SetColumnValue("ServiceDetail_Name", value);
            }
        }
	      
        [XmlAttribute("IntOrder")]
        [Bindable(true)]
        public int? IntOrder 
	    {
		    get
		    {
			    return GetColumnValue<int?>("IntOrder");
		    }
            set 
		    {
			    SetColumnValue("IntOrder", value);
            }
        }
	      
        [XmlAttribute("ServiceTypeId")]
        [Bindable(true)]
        public short ServiceTypeId 
	    {
		    get
		    {
			    return GetColumnValue<short>("ServiceType_ID");
		    }
            set 
		    {
			    SetColumnValue("ServiceType_ID", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string AssignDetailId = @"AssignDetail_ID";
            
            public static string ExamId = @"Exam_ID";
            
            public static string AssignId = @"Assign_ID";
            
            public static string ServiceId = @"Service_ID";
            
            public static string ServiceDetailId = @"ServiceDetail_ID";
            
            public static string DiagPerson = @"Diag_Person";
            
            public static string UserId = @"User_ID";
            
            public static string InputDate = @"Input_Date";
            
            public static string PaymentStatus = @"Payment_Status";
            
            public static string PaymentDate = @"Payment_Date";
            
            public static string IsPayment = @"IsPayment";
            
            public static string Quantity = @"Quantity";
            
            public static string AssignDetailStatus = @"AssignDetail_Status";
            
            public static string AssignDetailCode = @"AssignDetailCode";
            
            public static string TestId = @"Test_ID";
            
            public static string GhiChu = @"Ghi_Chu";
            
            public static string XacNhan = @"XAC_NHAN";
            
            public static string PaymentId = @"Payment_ID";
            
            public static string Stt = @"STT";
            
            public static string PatientCode = @"Patient_Code";
            
            public static string ServiceName = @"Service_Name";
            
            public static string AssignCode = @"Assign_Code";
            
            public static string MaChidinh = @"MA_CHIDINH";
            
            public static string Barcode = @"Barcode";
            
            public static string PatientId = @"Patient_ID";
            
            public static string GroupOrder = @"GroupOrder";
            
            public static string ServiceDetailName = @"ServiceDetail_Name";
            
            public static string IntOrder = @"IntOrder";
            
            public static string ServiceTypeId = @"ServiceType_ID";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
