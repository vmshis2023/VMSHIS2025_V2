using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewLoadthongtinPhieudieutri class.
    /// </summary>
    [Serializable]
    public partial class ViewLoadthongtinPhieudieutriCollection : ReadOnlyList<ViewLoadthongtinPhieudieutri, ViewLoadthongtinPhieudieutriCollection>
    {        
        public ViewLoadthongtinPhieudieutriCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VIEW_LOADTHONGTIN_PHIEUDIEUTRI view.
    /// </summary>
    [Serializable]
    public partial class ViewLoadthongtinPhieudieutri : ReadOnlyRecord<ViewLoadthongtinPhieudieutri>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VIEW_LOADTHONGTIN_PHIEUDIEUTRI", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarTreatId = new TableSchema.TableColumn(schema);
                colvarTreatId.ColumnName = "Treat_ID";
                colvarTreatId.DataType = DbType.Int32;
                colvarTreatId.MaxLength = 0;
                colvarTreatId.AutoIncrement = false;
                colvarTreatId.IsNullable = false;
                colvarTreatId.IsPrimaryKey = false;
                colvarTreatId.IsForeignKey = false;
                colvarTreatId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTreatId);
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_Code";
                colvarPatientCode.DataType = DbType.AnsiString;
                colvarPatientCode.MaxLength = 20;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = true;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Int32;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = true;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarPatientDeptId = new TableSchema.TableColumn(schema);
                colvarPatientDeptId.ColumnName = "PatientDept_ID";
                colvarPatientDeptId.DataType = DbType.Int32;
                colvarPatientDeptId.MaxLength = 0;
                colvarPatientDeptId.AutoIncrement = false;
                colvarPatientDeptId.IsNullable = true;
                colvarPatientDeptId.IsPrimaryKey = false;
                colvarPatientDeptId.IsForeignKey = false;
                colvarPatientDeptId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientDeptId);
                
                TableSchema.TableColumn colvarDoctorId = new TableSchema.TableColumn(schema);
                colvarDoctorId.ColumnName = "Doctor_ID";
                colvarDoctorId.DataType = DbType.Int16;
                colvarDoctorId.MaxLength = 0;
                colvarDoctorId.AutoIncrement = false;
                colvarDoctorId.IsNullable = true;
                colvarDoctorId.IsPrimaryKey = false;
                colvarDoctorId.IsForeignKey = false;
                colvarDoctorId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDoctorId);
                
                TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
                colvarDepartmentId.ColumnName = "Department_ID";
                colvarDepartmentId.DataType = DbType.Int16;
                colvarDepartmentId.MaxLength = 0;
                colvarDepartmentId.AutoIncrement = false;
                colvarDepartmentId.IsNullable = true;
                colvarDepartmentId.IsPrimaryKey = false;
                colvarDepartmentId.IsForeignKey = false;
                colvarDepartmentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepartmentId);
                
                TableSchema.TableColumn colvarDay = new TableSchema.TableColumn(schema);
                colvarDay.ColumnName = "Day";
                colvarDay.DataType = DbType.String;
                colvarDay.MaxLength = 20;
                colvarDay.AutoIncrement = false;
                colvarDay.IsNullable = true;
                colvarDay.IsPrimaryKey = false;
                colvarDay.IsForeignKey = false;
                colvarDay.IsReadOnly = false;
                
                schema.Columns.Add(colvarDay);
                
                TableSchema.TableColumn colvarAdditionalStatus = new TableSchema.TableColumn(schema);
                colvarAdditionalStatus.ColumnName = "Additional_Status";
                colvarAdditionalStatus.DataType = DbType.Int32;
                colvarAdditionalStatus.MaxLength = 0;
                colvarAdditionalStatus.AutoIncrement = false;
                colvarAdditionalStatus.IsNullable = true;
                colvarAdditionalStatus.IsPrimaryKey = false;
                colvarAdditionalStatus.IsForeignKey = false;
                colvarAdditionalStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarAdditionalStatus);
                
                TableSchema.TableColumn colvarEvents = new TableSchema.TableColumn(schema);
                colvarEvents.ColumnName = "Events";
                colvarEvents.DataType = DbType.String;
                colvarEvents.MaxLength = 1000;
                colvarEvents.AutoIncrement = false;
                colvarEvents.IsNullable = true;
                colvarEvents.IsPrimaryKey = false;
                colvarEvents.IsForeignKey = false;
                colvarEvents.IsReadOnly = false;
                
                schema.Columns.Add(colvarEvents);
                
                TableSchema.TableColumn colvarDaIn = new TableSchema.TableColumn(schema);
                colvarDaIn.ColumnName = "Da_In";
                colvarDaIn.DataType = DbType.Byte;
                colvarDaIn.MaxLength = 0;
                colvarDaIn.AutoIncrement = false;
                colvarDaIn.IsNullable = false;
                colvarDaIn.IsPrimaryKey = false;
                colvarDaIn.IsForeignKey = false;
                colvarDaIn.IsReadOnly = false;
                
                schema.Columns.Add(colvarDaIn);
                
                TableSchema.TableColumn colvarOrders = new TableSchema.TableColumn(schema);
                colvarOrders.ColumnName = "Orders";
                colvarOrders.DataType = DbType.String;
                colvarOrders.MaxLength = 1000;
                colvarOrders.AutoIncrement = false;
                colvarOrders.IsNullable = true;
                colvarOrders.IsPrimaryKey = false;
                colvarOrders.IsForeignKey = false;
                colvarOrders.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrders);
                
                TableSchema.TableColumn colvarCreateDate = new TableSchema.TableColumn(schema);
                colvarCreateDate.ColumnName = "Create_Date";
                colvarCreateDate.DataType = DbType.DateTime;
                colvarCreateDate.MaxLength = 0;
                colvarCreateDate.AutoIncrement = false;
                colvarCreateDate.IsNullable = true;
                colvarCreateDate.IsPrimaryKey = false;
                colvarCreateDate.IsForeignKey = false;
                colvarCreateDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreateDate);
                
                TableSchema.TableColumn colvarCreateBy = new TableSchema.TableColumn(schema);
                colvarCreateBy.ColumnName = "Create_by";
                colvarCreateBy.DataType = DbType.String;
                colvarCreateBy.MaxLength = 20;
                colvarCreateBy.AutoIncrement = false;
                colvarCreateBy.IsNullable = true;
                colvarCreateBy.IsPrimaryKey = false;
                colvarCreateBy.IsForeignKey = false;
                colvarCreateBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreateBy);
                
                TableSchema.TableColumn colvarModifyBy = new TableSchema.TableColumn(schema);
                colvarModifyBy.ColumnName = "Modify_by";
                colvarModifyBy.DataType = DbType.String;
                colvarModifyBy.MaxLength = 20;
                colvarModifyBy.AutoIncrement = false;
                colvarModifyBy.IsNullable = true;
                colvarModifyBy.IsPrimaryKey = false;
                colvarModifyBy.IsForeignKey = false;
                colvarModifyBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifyBy);
                
                TableSchema.TableColumn colvarModifyDate = new TableSchema.TableColumn(schema);
                colvarModifyDate.ColumnName = "Modify_Date";
                colvarModifyDate.DataType = DbType.DateTime;
                colvarModifyDate.MaxLength = 0;
                colvarModifyDate.AutoIncrement = false;
                colvarModifyDate.IsNullable = true;
                colvarModifyDate.IsPrimaryKey = false;
                colvarModifyDate.IsForeignKey = false;
                colvarModifyDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifyDate);
                
                TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
                colvarStatus.ColumnName = "Status";
                colvarStatus.DataType = DbType.Byte;
                colvarStatus.MaxLength = 0;
                colvarStatus.AutoIncrement = false;
                colvarStatus.IsNullable = true;
                colvarStatus.IsPrimaryKey = false;
                colvarStatus.IsForeignKey = false;
                colvarStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarStatus);
                
                TableSchema.TableColumn colvarNurseCreatedDate = new TableSchema.TableColumn(schema);
                colvarNurseCreatedDate.ColumnName = "Nurse_Created_Date";
                colvarNurseCreatedDate.DataType = DbType.DateTime;
                colvarNurseCreatedDate.MaxLength = 0;
                colvarNurseCreatedDate.AutoIncrement = false;
                colvarNurseCreatedDate.IsNullable = true;
                colvarNurseCreatedDate.IsPrimaryKey = false;
                colvarNurseCreatedDate.IsForeignKey = false;
                colvarNurseCreatedDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarNurseCreatedDate);
                
                TableSchema.TableColumn colvarNurseCreatedBy = new TableSchema.TableColumn(schema);
                colvarNurseCreatedBy.ColumnName = "Nurse_Created_By";
                colvarNurseCreatedBy.DataType = DbType.String;
                colvarNurseCreatedBy.MaxLength = 20;
                colvarNurseCreatedBy.AutoIncrement = false;
                colvarNurseCreatedBy.IsNullable = true;
                colvarNurseCreatedBy.IsPrimaryKey = false;
                colvarNurseCreatedBy.IsForeignKey = false;
                colvarNurseCreatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarNurseCreatedBy);
                
                TableSchema.TableColumn colvarNgayLapPhieu = new TableSchema.TableColumn(schema);
                colvarNgayLapPhieu.ColumnName = "NgayLapPhieu";
                colvarNgayLapPhieu.DataType = DbType.DateTime;
                colvarNgayLapPhieu.MaxLength = 0;
                colvarNgayLapPhieu.AutoIncrement = false;
                colvarNgayLapPhieu.IsNullable = true;
                colvarNgayLapPhieu.IsPrimaryKey = false;
                colvarNgayLapPhieu.IsForeignKey = false;
                colvarNgayLapPhieu.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgayLapPhieu);
                
                TableSchema.TableColumn colvarSNgayLapPhieu = new TableSchema.TableColumn(schema);
                colvarSNgayLapPhieu.ColumnName = "sNgayLapPhieu";
                colvarSNgayLapPhieu.DataType = DbType.AnsiString;
                colvarSNgayLapPhieu.MaxLength = 10;
                colvarSNgayLapPhieu.AutoIncrement = false;
                colvarSNgayLapPhieu.IsNullable = true;
                colvarSNgayLapPhieu.IsPrimaryKey = false;
                colvarSNgayLapPhieu.IsForeignKey = false;
                colvarSNgayLapPhieu.IsReadOnly = false;
                
                schema.Columns.Add(colvarSNgayLapPhieu);
                
                TableSchema.TableColumn colvarStt = new TableSchema.TableColumn(schema);
                colvarStt.ColumnName = "STT";
                colvarStt.DataType = DbType.Int64;
                colvarStt.MaxLength = 0;
                colvarStt.AutoIncrement = false;
                colvarStt.IsNullable = true;
                colvarStt.IsPrimaryKey = false;
                colvarStt.IsForeignKey = false;
                colvarStt.IsReadOnly = false;
                
                schema.Columns.Add(colvarStt);
                
                TableSchema.TableColumn colvarGioLapPhieu = new TableSchema.TableColumn(schema);
                colvarGioLapPhieu.ColumnName = "GioLapPhieu";
                colvarGioLapPhieu.DataType = DbType.String;
                colvarGioLapPhieu.MaxLength = 10;
                colvarGioLapPhieu.AutoIncrement = false;
                colvarGioLapPhieu.IsNullable = true;
                colvarGioLapPhieu.IsPrimaryKey = false;
                colvarGioLapPhieu.IsForeignKey = false;
                colvarGioLapPhieu.IsReadOnly = false;
                
                schema.Columns.Add(colvarGioLapPhieu);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("VIEW_LOADTHONGTIN_PHIEUDIEUTRI",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewLoadthongtinPhieudieutri()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewLoadthongtinPhieudieutri(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewLoadthongtinPhieudieutri(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewLoadthongtinPhieudieutri(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("TreatId")]
        [Bindable(true)]
        public int TreatId 
	    {
		    get
		    {
			    return GetColumnValue<int>("Treat_ID");
		    }
            set 
		    {
			    SetColumnValue("Treat_ID", value);
            }
        }
	      
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Code");
		    }
            set 
		    {
			    SetColumnValue("Patient_Code", value);
            }
        }
	      
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public int? PatientId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("PatientDeptId")]
        [Bindable(true)]
        public int? PatientDeptId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PatientDept_ID");
		    }
            set 
		    {
			    SetColumnValue("PatientDept_ID", value);
            }
        }
	      
        [XmlAttribute("DoctorId")]
        [Bindable(true)]
        public short? DoctorId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Doctor_ID");
		    }
            set 
		    {
			    SetColumnValue("Doctor_ID", value);
            }
        }
	      
        [XmlAttribute("DepartmentId")]
        [Bindable(true)]
        public short? DepartmentId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Department_ID");
		    }
            set 
		    {
			    SetColumnValue("Department_ID", value);
            }
        }
	      
        [XmlAttribute("Day")]
        [Bindable(true)]
        public string Day 
	    {
		    get
		    {
			    return GetColumnValue<string>("Day");
		    }
            set 
		    {
			    SetColumnValue("Day", value);
            }
        }
	      
        [XmlAttribute("AdditionalStatus")]
        [Bindable(true)]
        public int? AdditionalStatus 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Additional_Status");
		    }
            set 
		    {
			    SetColumnValue("Additional_Status", value);
            }
        }
	      
        [XmlAttribute("Events")]
        [Bindable(true)]
        public string Events 
	    {
		    get
		    {
			    return GetColumnValue<string>("Events");
		    }
            set 
		    {
			    SetColumnValue("Events", value);
            }
        }
	      
        [XmlAttribute("DaIn")]
        [Bindable(true)]
        public byte DaIn 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Da_In");
		    }
            set 
		    {
			    SetColumnValue("Da_In", value);
            }
        }
	      
        [XmlAttribute("Orders")]
        [Bindable(true)]
        public string Orders 
	    {
		    get
		    {
			    return GetColumnValue<string>("Orders");
		    }
            set 
		    {
			    SetColumnValue("Orders", value);
            }
        }
	      
        [XmlAttribute("CreateDate")]
        [Bindable(true)]
        public DateTime? CreateDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Create_Date");
		    }
            set 
		    {
			    SetColumnValue("Create_Date", value);
            }
        }
	      
        [XmlAttribute("CreateBy")]
        [Bindable(true)]
        public string CreateBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("Create_by");
		    }
            set 
		    {
			    SetColumnValue("Create_by", value);
            }
        }
	      
        [XmlAttribute("ModifyBy")]
        [Bindable(true)]
        public string ModifyBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("Modify_by");
		    }
            set 
		    {
			    SetColumnValue("Modify_by", value);
            }
        }
	      
        [XmlAttribute("ModifyDate")]
        [Bindable(true)]
        public DateTime? ModifyDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Modify_Date");
		    }
            set 
		    {
			    SetColumnValue("Modify_Date", value);
            }
        }
	      
        [XmlAttribute("Status")]
        [Bindable(true)]
        public byte? Status 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Status");
		    }
            set 
		    {
			    SetColumnValue("Status", value);
            }
        }
	      
        [XmlAttribute("NurseCreatedDate")]
        [Bindable(true)]
        public DateTime? NurseCreatedDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Nurse_Created_Date");
		    }
            set 
		    {
			    SetColumnValue("Nurse_Created_Date", value);
            }
        }
	      
        [XmlAttribute("NurseCreatedBy")]
        [Bindable(true)]
        public string NurseCreatedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("Nurse_Created_By");
		    }
            set 
		    {
			    SetColumnValue("Nurse_Created_By", value);
            }
        }
	      
        [XmlAttribute("NgayLapPhieu")]
        [Bindable(true)]
        public DateTime? NgayLapPhieu 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("NgayLapPhieu");
		    }
            set 
		    {
			    SetColumnValue("NgayLapPhieu", value);
            }
        }
	      
        [XmlAttribute("SNgayLapPhieu")]
        [Bindable(true)]
        public string SNgayLapPhieu 
	    {
		    get
		    {
			    return GetColumnValue<string>("sNgayLapPhieu");
		    }
            set 
		    {
			    SetColumnValue("sNgayLapPhieu", value);
            }
        }
	      
        [XmlAttribute("Stt")]
        [Bindable(true)]
        public long? Stt 
	    {
		    get
		    {
			    return GetColumnValue<long?>("STT");
		    }
            set 
		    {
			    SetColumnValue("STT", value);
            }
        }
	      
        [XmlAttribute("GioLapPhieu")]
        [Bindable(true)]
        public string GioLapPhieu 
	    {
		    get
		    {
			    return GetColumnValue<string>("GioLapPhieu");
		    }
            set 
		    {
			    SetColumnValue("GioLapPhieu", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string TreatId = @"Treat_ID";
            
            public static string PatientCode = @"Patient_Code";
            
            public static string PatientId = @"Patient_ID";
            
            public static string PatientDeptId = @"PatientDept_ID";
            
            public static string DoctorId = @"Doctor_ID";
            
            public static string DepartmentId = @"Department_ID";
            
            public static string Day = @"Day";
            
            public static string AdditionalStatus = @"Additional_Status";
            
            public static string Events = @"Events";
            
            public static string DaIn = @"Da_In";
            
            public static string Orders = @"Orders";
            
            public static string CreateDate = @"Create_Date";
            
            public static string CreateBy = @"Create_by";
            
            public static string ModifyBy = @"Modify_by";
            
            public static string ModifyDate = @"Modify_Date";
            
            public static string Status = @"Status";
            
            public static string NurseCreatedDate = @"Nurse_Created_Date";
            
            public static string NurseCreatedBy = @"Nurse_Created_By";
            
            public static string NgayLapPhieu = @"NgayLapPhieu";
            
            public static string SNgayLapPhieu = @"sNgayLapPhieu";
            
            public static string Stt = @"STT";
            
            public static string GioLapPhieu = @"GioLapPhieu";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
