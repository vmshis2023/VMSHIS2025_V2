using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewLoadThongtinThuocvtTronggoi class.
    /// </summary>
    [Serializable]
    public partial class ViewLoadThongtinThuocvtTronggoiCollection : ReadOnlyList<ViewLoadThongtinThuocvtTronggoi, ViewLoadThongtinThuocvtTronggoiCollection>
    {        
        public ViewLoadThongtinThuocvtTronggoiCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VIEW_LOAD_THONGTIN_THUOCVT_TRONGGOI view.
    /// </summary>
    [Serializable]
    public partial class ViewLoadThongtinThuocvtTronggoi : ReadOnlyRecord<ViewLoadThongtinThuocvtTronggoi>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VIEW_LOAD_THONGTIN_THUOCVT_TRONGGOI", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarLastPrice = new TableSchema.TableColumn(schema);
                colvarLastPrice.ColumnName = "Last_Price";
                colvarLastPrice.DataType = DbType.Decimal;
                colvarLastPrice.MaxLength = 0;
                colvarLastPrice.AutoIncrement = false;
                colvarLastPrice.IsNullable = true;
                colvarLastPrice.IsPrimaryKey = false;
                colvarLastPrice.IsForeignKey = false;
                colvarLastPrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarLastPrice);
                
                TableSchema.TableColumn colvarSurcharge = new TableSchema.TableColumn(schema);
                colvarSurcharge.ColumnName = "Surcharge";
                colvarSurcharge.DataType = DbType.Decimal;
                colvarSurcharge.MaxLength = 0;
                colvarSurcharge.AutoIncrement = false;
                colvarSurcharge.IsNullable = true;
                colvarSurcharge.IsPrimaryKey = false;
                colvarSurcharge.IsForeignKey = false;
                colvarSurcharge.IsReadOnly = false;
                
                schema.Columns.Add(colvarSurcharge);
                
                TableSchema.TableColumn colvarDrugId = new TableSchema.TableColumn(schema);
                colvarDrugId.ColumnName = "Drug_ID";
                colvarDrugId.DataType = DbType.Int32;
                colvarDrugId.MaxLength = 0;
                colvarDrugId.AutoIncrement = false;
                colvarDrugId.IsNullable = false;
                colvarDrugId.IsPrimaryKey = false;
                colvarDrugId.IsForeignKey = false;
                colvarDrugId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugId);
                
                TableSchema.TableColumn colvarDrugTypeId = new TableSchema.TableColumn(schema);
                colvarDrugTypeId.ColumnName = "DrugType_ID";
                colvarDrugTypeId.DataType = DbType.Int32;
                colvarDrugTypeId.MaxLength = 0;
                colvarDrugTypeId.AutoIncrement = false;
                colvarDrugTypeId.IsNullable = false;
                colvarDrugTypeId.IsPrimaryKey = false;
                colvarDrugTypeId.IsForeignKey = false;
                colvarDrugTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugTypeId);
                
                TableSchema.TableColumn colvarDrugCode = new TableSchema.TableColumn(schema);
                colvarDrugCode.ColumnName = "Drug_Code";
                colvarDrugCode.DataType = DbType.AnsiString;
                colvarDrugCode.MaxLength = 20;
                colvarDrugCode.AutoIncrement = false;
                colvarDrugCode.IsNullable = false;
                colvarDrugCode.IsPrimaryKey = false;
                colvarDrugCode.IsForeignKey = false;
                colvarDrugCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugCode);
                
                TableSchema.TableColumn colvarDrugNature = new TableSchema.TableColumn(schema);
                colvarDrugNature.ColumnName = "Drug_Nature";
                colvarDrugNature.DataType = DbType.Byte;
                colvarDrugNature.MaxLength = 0;
                colvarDrugNature.AutoIncrement = false;
                colvarDrugNature.IsNullable = false;
                colvarDrugNature.IsPrimaryKey = false;
                colvarDrugNature.IsForeignKey = false;
                colvarDrugNature.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugNature);
                
                TableSchema.TableColumn colvarDrugName = new TableSchema.TableColumn(schema);
                colvarDrugName.ColumnName = "Drug_Name";
                colvarDrugName.DataType = DbType.String;
                colvarDrugName.MaxLength = 200;
                colvarDrugName.AutoIncrement = false;
                colvarDrugName.IsNullable = false;
                colvarDrugName.IsPrimaryKey = false;
                colvarDrugName.IsForeignKey = false;
                colvarDrugName.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugName);
                
                TableSchema.TableColumn colvarPrice = new TableSchema.TableColumn(schema);
                colvarPrice.ColumnName = "Price";
                colvarPrice.DataType = DbType.Decimal;
                colvarPrice.MaxLength = 0;
                colvarPrice.AutoIncrement = false;
                colvarPrice.IsNullable = false;
                colvarPrice.IsPrimaryKey = false;
                colvarPrice.IsForeignKey = false;
                colvarPrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrice);
                
                TableSchema.TableColumn colvarUnitId = new TableSchema.TableColumn(schema);
                colvarUnitId.ColumnName = "Unit_ID";
                colvarUnitId.DataType = DbType.Int16;
                colvarUnitId.MaxLength = 0;
                colvarUnitId.AutoIncrement = false;
                colvarUnitId.IsNullable = false;
                colvarUnitId.IsPrimaryKey = false;
                colvarUnitId.IsForeignKey = false;
                colvarUnitId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitId);
                
                TableSchema.TableColumn colvarSDesc = new TableSchema.TableColumn(schema);
                colvarSDesc.ColumnName = "sDesc";
                colvarSDesc.DataType = DbType.String;
                colvarSDesc.MaxLength = 255;
                colvarSDesc.AutoIncrement = false;
                colvarSDesc.IsNullable = true;
                colvarSDesc.IsPrimaryKey = false;
                colvarSDesc.IsForeignKey = false;
                colvarSDesc.IsReadOnly = false;
                
                schema.Columns.Add(colvarSDesc);
                
                TableSchema.TableColumn colvarActive = new TableSchema.TableColumn(schema);
                colvarActive.ColumnName = "active";
                colvarActive.DataType = DbType.String;
                colvarActive.MaxLength = 255;
                colvarActive.AutoIncrement = false;
                colvarActive.IsNullable = true;
                colvarActive.IsPrimaryKey = false;
                colvarActive.IsForeignKey = false;
                colvarActive.IsReadOnly = false;
                
                schema.Columns.Add(colvarActive);
                
                TableSchema.TableColumn colvarContent = new TableSchema.TableColumn(schema);
                colvarContent.ColumnName = "Content";
                colvarContent.DataType = DbType.String;
                colvarContent.MaxLength = 255;
                colvarContent.AutoIncrement = false;
                colvarContent.IsNullable = true;
                colvarContent.IsPrimaryKey = false;
                colvarContent.IsForeignKey = false;
                colvarContent.IsReadOnly = false;
                
                schema.Columns.Add(colvarContent);
                
                TableSchema.TableColumn colvarManufacturers = new TableSchema.TableColumn(schema);
                colvarManufacturers.ColumnName = "Manufacturers";
                colvarManufacturers.DataType = DbType.String;
                colvarManufacturers.MaxLength = 100;
                colvarManufacturers.AutoIncrement = false;
                colvarManufacturers.IsNullable = true;
                colvarManufacturers.IsPrimaryKey = false;
                colvarManufacturers.IsForeignKey = false;
                colvarManufacturers.IsReadOnly = false;
                
                schema.Columns.Add(colvarManufacturers);
                
                TableSchema.TableColumn colvarNumberRegister = new TableSchema.TableColumn(schema);
                colvarNumberRegister.ColumnName = "Number_Register";
                colvarNumberRegister.DataType = DbType.String;
                colvarNumberRegister.MaxLength = 50;
                colvarNumberRegister.AutoIncrement = false;
                colvarNumberRegister.IsNullable = true;
                colvarNumberRegister.IsPrimaryKey = false;
                colvarNumberRegister.IsForeignKey = false;
                colvarNumberRegister.IsReadOnly = false;
                
                schema.Columns.Add(colvarNumberRegister);
                
                TableSchema.TableColumn colvarProducer = new TableSchema.TableColumn(schema);
                colvarProducer.ColumnName = "Producer";
                colvarProducer.DataType = DbType.String;
                colvarProducer.MaxLength = 100;
                colvarProducer.AutoIncrement = false;
                colvarProducer.IsNullable = true;
                colvarProducer.IsPrimaryKey = false;
                colvarProducer.IsForeignKey = false;
                colvarProducer.IsReadOnly = false;
                
                schema.Columns.Add(colvarProducer);
                
                TableSchema.TableColumn colvarListBHYT = new TableSchema.TableColumn(schema);
                colvarListBHYT.ColumnName = "ListBHYT";
                colvarListBHYT.DataType = DbType.String;
                colvarListBHYT.MaxLength = 255;
                colvarListBHYT.AutoIncrement = false;
                colvarListBHYT.IsNullable = true;
                colvarListBHYT.IsPrimaryKey = false;
                colvarListBHYT.IsForeignKey = false;
                colvarListBHYT.IsReadOnly = false;
                
                schema.Columns.Add(colvarListBHYT);
                
                TableSchema.TableColumn colvarHieuLuc = new TableSchema.TableColumn(schema);
                colvarHieuLuc.ColumnName = "HieuLuc";
                colvarHieuLuc.DataType = DbType.Byte;
                colvarHieuLuc.MaxLength = 0;
                colvarHieuLuc.AutoIncrement = false;
                colvarHieuLuc.IsNullable = false;
                colvarHieuLuc.IsPrimaryKey = false;
                colvarHieuLuc.IsForeignKey = false;
                colvarHieuLuc.IsReadOnly = false;
                
                schema.Columns.Add(colvarHieuLuc);
                
                TableSchema.TableColumn colvarDangBche = new TableSchema.TableColumn(schema);
                colvarDangBche.ColumnName = "Dang_BCHE";
                colvarDangBche.DataType = DbType.String;
                colvarDangBche.MaxLength = 100;
                colvarDangBche.AutoIncrement = false;
                colvarDangBche.IsNullable = true;
                colvarDangBche.IsPrimaryKey = false;
                colvarDangBche.IsForeignKey = false;
                colvarDangBche.IsReadOnly = false;
                
                schema.Columns.Add(colvarDangBche);
                
                TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
                colvarNguoiTao.ColumnName = "NGUOI_TAO";
                colvarNguoiTao.DataType = DbType.String;
                colvarNguoiTao.MaxLength = 50;
                colvarNguoiTao.AutoIncrement = false;
                colvarNguoiTao.IsNullable = true;
                colvarNguoiTao.IsPrimaryKey = false;
                colvarNguoiTao.IsForeignKey = false;
                colvarNguoiTao.IsReadOnly = false;
                
                schema.Columns.Add(colvarNguoiTao);
                
                TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
                colvarNgayTao.ColumnName = "NGAY_TAO";
                colvarNgayTao.DataType = DbType.DateTime;
                colvarNgayTao.MaxLength = 0;
                colvarNgayTao.AutoIncrement = false;
                colvarNgayTao.IsNullable = true;
                colvarNgayTao.IsPrimaryKey = false;
                colvarNgayTao.IsForeignKey = false;
                colvarNgayTao.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgayTao);
                
                TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
                colvarNgaySua.ColumnName = "NGAY_SUA";
                colvarNgaySua.DataType = DbType.DateTime;
                colvarNgaySua.MaxLength = 0;
                colvarNgaySua.AutoIncrement = false;
                colvarNgaySua.IsNullable = true;
                colvarNgaySua.IsPrimaryKey = false;
                colvarNgaySua.IsForeignKey = false;
                colvarNgaySua.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgaySua);
                
                TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
                colvarNguoiSua.ColumnName = "NGUOI_SUA";
                colvarNguoiSua.DataType = DbType.String;
                colvarNguoiSua.MaxLength = 50;
                colvarNguoiSua.AutoIncrement = false;
                colvarNguoiSua.IsNullable = true;
                colvarNguoiSua.IsPrimaryKey = false;
                colvarNguoiSua.IsForeignKey = false;
                colvarNguoiSua.IsReadOnly = false;
                
                schema.Columns.Add(colvarNguoiSua);
                
                TableSchema.TableColumn colvarBnNgoaiTru = new TableSchema.TableColumn(schema);
                colvarBnNgoaiTru.ColumnName = "BN_NGOAI_TRU";
                colvarBnNgoaiTru.DataType = DbType.Int32;
                colvarBnNgoaiTru.MaxLength = 0;
                colvarBnNgoaiTru.AutoIncrement = false;
                colvarBnNgoaiTru.IsNullable = true;
                colvarBnNgoaiTru.IsPrimaryKey = false;
                colvarBnNgoaiTru.IsForeignKey = false;
                colvarBnNgoaiTru.IsReadOnly = false;
                
                schema.Columns.Add(colvarBnNgoaiTru);
                
                TableSchema.TableColumn colvarBnNoiTru = new TableSchema.TableColumn(schema);
                colvarBnNoiTru.ColumnName = "BN_NOI_TRU";
                colvarBnNoiTru.DataType = DbType.Int32;
                colvarBnNoiTru.MaxLength = 0;
                colvarBnNoiTru.AutoIncrement = false;
                colvarBnNoiTru.IsNullable = true;
                colvarBnNoiTru.IsPrimaryKey = false;
                colvarBnNoiTru.IsForeignKey = false;
                colvarBnNoiTru.IsReadOnly = false;
                
                schema.Columns.Add(colvarBnNoiTru);
                
                TableSchema.TableColumn colvarObjectTypeCode = new TableSchema.TableColumn(schema);
                colvarObjectTypeCode.ColumnName = "ObjectType_Code";
                colvarObjectTypeCode.DataType = DbType.String;
                colvarObjectTypeCode.MaxLength = 50;
                colvarObjectTypeCode.AutoIncrement = false;
                colvarObjectTypeCode.IsNullable = false;
                colvarObjectTypeCode.IsPrimaryKey = false;
                colvarObjectTypeCode.IsForeignKey = false;
                colvarObjectTypeCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarObjectTypeCode);
                
                TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
                colvarQuantity.ColumnName = "Quantity";
                colvarQuantity.DataType = DbType.Int32;
                colvarQuantity.MaxLength = 0;
                colvarQuantity.AutoIncrement = false;
                colvarQuantity.IsNullable = false;
                colvarQuantity.IsPrimaryKey = false;
                colvarQuantity.IsForeignKey = false;
                colvarQuantity.IsReadOnly = false;
                
                schema.Columns.Add(colvarQuantity);
                
                TableSchema.TableColumn colvarIdGoiDvu = new TableSchema.TableColumn(schema);
                colvarIdGoiDvu.ColumnName = "ID_GOI_DVU";
                colvarIdGoiDvu.DataType = DbType.Int32;
                colvarIdGoiDvu.MaxLength = 0;
                colvarIdGoiDvu.AutoIncrement = false;
                colvarIdGoiDvu.IsNullable = true;
                colvarIdGoiDvu.IsPrimaryKey = false;
                colvarIdGoiDvu.IsForeignKey = false;
                colvarIdGoiDvu.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdGoiDvu);
                
                TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
                colvarTrongGoi.ColumnName = "TRONG_GOI";
                colvarTrongGoi.DataType = DbType.Int32;
                colvarTrongGoi.MaxLength = 0;
                colvarTrongGoi.AutoIncrement = false;
                colvarTrongGoi.IsNullable = false;
                colvarTrongGoi.IsPrimaryKey = false;
                colvarTrongGoi.IsForeignKey = false;
                colvarTrongGoi.IsReadOnly = false;
                
                schema.Columns.Add(colvarTrongGoi);
                
                TableSchema.TableColumn colvarMaGoiDvu = new TableSchema.TableColumn(schema);
                colvarMaGoiDvu.ColumnName = "MA_GOI_DVU";
                colvarMaGoiDvu.DataType = DbType.String;
                colvarMaGoiDvu.MaxLength = 50;
                colvarMaGoiDvu.AutoIncrement = false;
                colvarMaGoiDvu.IsNullable = false;
                colvarMaGoiDvu.IsPrimaryKey = false;
                colvarMaGoiDvu.IsForeignKey = false;
                colvarMaGoiDvu.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaGoiDvu);
                
                TableSchema.TableColumn colvarMaDtuong = new TableSchema.TableColumn(schema);
                colvarMaDtuong.ColumnName = "MA_DTUONG";
                colvarMaDtuong.DataType = DbType.String;
                colvarMaDtuong.MaxLength = 50;
                colvarMaDtuong.AutoIncrement = false;
                colvarMaDtuong.IsNullable = false;
                colvarMaDtuong.IsPrimaryKey = false;
                colvarMaDtuong.IsForeignKey = false;
                colvarMaDtuong.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaDtuong);
                
                TableSchema.TableColumn colvarMaKieuDvu = new TableSchema.TableColumn(schema);
                colvarMaKieuDvu.ColumnName = "MA_KIEU_DVU";
                colvarMaKieuDvu.DataType = DbType.String;
                colvarMaKieuDvu.MaxLength = 50;
                colvarMaKieuDvu.AutoIncrement = false;
                colvarMaKieuDvu.IsNullable = true;
                colvarMaKieuDvu.IsPrimaryKey = false;
                colvarMaKieuDvu.IsForeignKey = false;
                colvarMaKieuDvu.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaKieuDvu);
                
                TableSchema.TableColumn colvarIdDvu = new TableSchema.TableColumn(schema);
                colvarIdDvu.ColumnName = "ID_DVU";
                colvarIdDvu.DataType = DbType.Int32;
                colvarIdDvu.MaxLength = 0;
                colvarIdDvu.AutoIncrement = false;
                colvarIdDvu.IsNullable = false;
                colvarIdDvu.IsPrimaryKey = false;
                colvarIdDvu.IsForeignKey = false;
                colvarIdDvu.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdDvu);
                
                TableSchema.TableColumn colvarIdLoaiDvu = new TableSchema.TableColumn(schema);
                colvarIdLoaiDvu.ColumnName = "ID_LOAI_DVU";
                colvarIdLoaiDvu.DataType = DbType.Int32;
                colvarIdLoaiDvu.MaxLength = 0;
                colvarIdLoaiDvu.AutoIncrement = false;
                colvarIdLoaiDvu.IsNullable = false;
                colvarIdLoaiDvu.IsPrimaryKey = false;
                colvarIdLoaiDvu.IsForeignKey = false;
                colvarIdLoaiDvu.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdLoaiDvu);
                
                TableSchema.TableColumn colvarUnitName = new TableSchema.TableColumn(schema);
                colvarUnitName.ColumnName = "Unit_Name";
                colvarUnitName.DataType = DbType.String;
                colvarUnitName.MaxLength = 100;
                colvarUnitName.AutoIncrement = false;
                colvarUnitName.IsNullable = true;
                colvarUnitName.IsPrimaryKey = false;
                colvarUnitName.IsForeignKey = false;
                colvarUnitName.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitName);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("VIEW_LOAD_THONGTIN_THUOCVT_TRONGGOI",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewLoadThongtinThuocvtTronggoi()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewLoadThongtinThuocvtTronggoi(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewLoadThongtinThuocvtTronggoi(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewLoadThongtinThuocvtTronggoi(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("LastPrice")]
        [Bindable(true)]
        public decimal? LastPrice 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Last_Price");
		    }
            set 
		    {
			    SetColumnValue("Last_Price", value);
            }
        }
	      
        [XmlAttribute("Surcharge")]
        [Bindable(true)]
        public decimal? Surcharge 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Surcharge");
		    }
            set 
		    {
			    SetColumnValue("Surcharge", value);
            }
        }
	      
        [XmlAttribute("DrugId")]
        [Bindable(true)]
        public int DrugId 
	    {
		    get
		    {
			    return GetColumnValue<int>("Drug_ID");
		    }
            set 
		    {
			    SetColumnValue("Drug_ID", value);
            }
        }
	      
        [XmlAttribute("DrugTypeId")]
        [Bindable(true)]
        public int DrugTypeId 
	    {
		    get
		    {
			    return GetColumnValue<int>("DrugType_ID");
		    }
            set 
		    {
			    SetColumnValue("DrugType_ID", value);
            }
        }
	      
        [XmlAttribute("DrugCode")]
        [Bindable(true)]
        public string DrugCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Drug_Code");
		    }
            set 
		    {
			    SetColumnValue("Drug_Code", value);
            }
        }
	      
        [XmlAttribute("DrugNature")]
        [Bindable(true)]
        public byte DrugNature 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Drug_Nature");
		    }
            set 
		    {
			    SetColumnValue("Drug_Nature", value);
            }
        }
	      
        [XmlAttribute("DrugName")]
        [Bindable(true)]
        public string DrugName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Drug_Name");
		    }
            set 
		    {
			    SetColumnValue("Drug_Name", value);
            }
        }
	      
        [XmlAttribute("Price")]
        [Bindable(true)]
        public decimal Price 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("Price");
		    }
            set 
		    {
			    SetColumnValue("Price", value);
            }
        }
	      
        [XmlAttribute("UnitId")]
        [Bindable(true)]
        public short UnitId 
	    {
		    get
		    {
			    return GetColumnValue<short>("Unit_ID");
		    }
            set 
		    {
			    SetColumnValue("Unit_ID", value);
            }
        }
	      
        [XmlAttribute("SDesc")]
        [Bindable(true)]
        public string SDesc 
	    {
		    get
		    {
			    return GetColumnValue<string>("sDesc");
		    }
            set 
		    {
			    SetColumnValue("sDesc", value);
            }
        }
	      
        [XmlAttribute("Active")]
        [Bindable(true)]
        public string Active 
	    {
		    get
		    {
			    return GetColumnValue<string>("active");
		    }
            set 
		    {
			    SetColumnValue("active", value);
            }
        }
	      
        [XmlAttribute("Content")]
        [Bindable(true)]
        public string Content 
	    {
		    get
		    {
			    return GetColumnValue<string>("Content");
		    }
            set 
		    {
			    SetColumnValue("Content", value);
            }
        }
	      
        [XmlAttribute("Manufacturers")]
        [Bindable(true)]
        public string Manufacturers 
	    {
		    get
		    {
			    return GetColumnValue<string>("Manufacturers");
		    }
            set 
		    {
			    SetColumnValue("Manufacturers", value);
            }
        }
	      
        [XmlAttribute("NumberRegister")]
        [Bindable(true)]
        public string NumberRegister 
	    {
		    get
		    {
			    return GetColumnValue<string>("Number_Register");
		    }
            set 
		    {
			    SetColumnValue("Number_Register", value);
            }
        }
	      
        [XmlAttribute("Producer")]
        [Bindable(true)]
        public string Producer 
	    {
		    get
		    {
			    return GetColumnValue<string>("Producer");
		    }
            set 
		    {
			    SetColumnValue("Producer", value);
            }
        }
	      
        [XmlAttribute("ListBHYT")]
        [Bindable(true)]
        public string ListBHYT 
	    {
		    get
		    {
			    return GetColumnValue<string>("ListBHYT");
		    }
            set 
		    {
			    SetColumnValue("ListBHYT", value);
            }
        }
	      
        [XmlAttribute("HieuLuc")]
        [Bindable(true)]
        public byte HieuLuc 
	    {
		    get
		    {
			    return GetColumnValue<byte>("HieuLuc");
		    }
            set 
		    {
			    SetColumnValue("HieuLuc", value);
            }
        }
	      
        [XmlAttribute("DangBche")]
        [Bindable(true)]
        public string DangBche 
	    {
		    get
		    {
			    return GetColumnValue<string>("Dang_BCHE");
		    }
            set 
		    {
			    SetColumnValue("Dang_BCHE", value);
            }
        }
	      
        [XmlAttribute("NguoiTao")]
        [Bindable(true)]
        public string NguoiTao 
	    {
		    get
		    {
			    return GetColumnValue<string>("NGUOI_TAO");
		    }
            set 
		    {
			    SetColumnValue("NGUOI_TAO", value);
            }
        }
	      
        [XmlAttribute("NgayTao")]
        [Bindable(true)]
        public DateTime? NgayTao 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("NGAY_TAO");
		    }
            set 
		    {
			    SetColumnValue("NGAY_TAO", value);
            }
        }
	      
        [XmlAttribute("NgaySua")]
        [Bindable(true)]
        public DateTime? NgaySua 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("NGAY_SUA");
		    }
            set 
		    {
			    SetColumnValue("NGAY_SUA", value);
            }
        }
	      
        [XmlAttribute("NguoiSua")]
        [Bindable(true)]
        public string NguoiSua 
	    {
		    get
		    {
			    return GetColumnValue<string>("NGUOI_SUA");
		    }
            set 
		    {
			    SetColumnValue("NGUOI_SUA", value);
            }
        }
	      
        [XmlAttribute("BnNgoaiTru")]
        [Bindable(true)]
        public int? BnNgoaiTru 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BN_NGOAI_TRU");
		    }
            set 
		    {
			    SetColumnValue("BN_NGOAI_TRU", value);
            }
        }
	      
        [XmlAttribute("BnNoiTru")]
        [Bindable(true)]
        public int? BnNoiTru 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BN_NOI_TRU");
		    }
            set 
		    {
			    SetColumnValue("BN_NOI_TRU", value);
            }
        }
	      
        [XmlAttribute("ObjectTypeCode")]
        [Bindable(true)]
        public string ObjectTypeCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("ObjectType_Code");
		    }
            set 
		    {
			    SetColumnValue("ObjectType_Code", value);
            }
        }
	      
        [XmlAttribute("Quantity")]
        [Bindable(true)]
        public int Quantity 
	    {
		    get
		    {
			    return GetColumnValue<int>("Quantity");
		    }
            set 
		    {
			    SetColumnValue("Quantity", value);
            }
        }
	      
        [XmlAttribute("IdGoiDvu")]
        [Bindable(true)]
        public int? IdGoiDvu 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ID_GOI_DVU");
		    }
            set 
		    {
			    SetColumnValue("ID_GOI_DVU", value);
            }
        }
	      
        [XmlAttribute("TrongGoi")]
        [Bindable(true)]
        public int TrongGoi 
	    {
		    get
		    {
			    return GetColumnValue<int>("TRONG_GOI");
		    }
            set 
		    {
			    SetColumnValue("TRONG_GOI", value);
            }
        }
	      
        [XmlAttribute("MaGoiDvu")]
        [Bindable(true)]
        public string MaGoiDvu 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_GOI_DVU");
		    }
            set 
		    {
			    SetColumnValue("MA_GOI_DVU", value);
            }
        }
	      
        [XmlAttribute("MaDtuong")]
        [Bindable(true)]
        public string MaDtuong 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_DTUONG");
		    }
            set 
		    {
			    SetColumnValue("MA_DTUONG", value);
            }
        }
	      
        [XmlAttribute("MaKieuDvu")]
        [Bindable(true)]
        public string MaKieuDvu 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_KIEU_DVU");
		    }
            set 
		    {
			    SetColumnValue("MA_KIEU_DVU", value);
            }
        }
	      
        [XmlAttribute("IdDvu")]
        [Bindable(true)]
        public int IdDvu 
	    {
		    get
		    {
			    return GetColumnValue<int>("ID_DVU");
		    }
            set 
		    {
			    SetColumnValue("ID_DVU", value);
            }
        }
	      
        [XmlAttribute("IdLoaiDvu")]
        [Bindable(true)]
        public int IdLoaiDvu 
	    {
		    get
		    {
			    return GetColumnValue<int>("ID_LOAI_DVU");
		    }
            set 
		    {
			    SetColumnValue("ID_LOAI_DVU", value);
            }
        }
	      
        [XmlAttribute("UnitName")]
        [Bindable(true)]
        public string UnitName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Unit_Name");
		    }
            set 
		    {
			    SetColumnValue("Unit_Name", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string LastPrice = @"Last_Price";
            
            public static string Surcharge = @"Surcharge";
            
            public static string DrugId = @"Drug_ID";
            
            public static string DrugTypeId = @"DrugType_ID";
            
            public static string DrugCode = @"Drug_Code";
            
            public static string DrugNature = @"Drug_Nature";
            
            public static string DrugName = @"Drug_Name";
            
            public static string Price = @"Price";
            
            public static string UnitId = @"Unit_ID";
            
            public static string SDesc = @"sDesc";
            
            public static string Active = @"active";
            
            public static string Content = @"Content";
            
            public static string Manufacturers = @"Manufacturers";
            
            public static string NumberRegister = @"Number_Register";
            
            public static string Producer = @"Producer";
            
            public static string ListBHYT = @"ListBHYT";
            
            public static string HieuLuc = @"HieuLuc";
            
            public static string DangBche = @"Dang_BCHE";
            
            public static string NguoiTao = @"NGUOI_TAO";
            
            public static string NgayTao = @"NGAY_TAO";
            
            public static string NgaySua = @"NGAY_SUA";
            
            public static string NguoiSua = @"NGUOI_SUA";
            
            public static string BnNgoaiTru = @"BN_NGOAI_TRU";
            
            public static string BnNoiTru = @"BN_NOI_TRU";
            
            public static string ObjectTypeCode = @"ObjectType_Code";
            
            public static string Quantity = @"Quantity";
            
            public static string IdGoiDvu = @"ID_GOI_DVU";
            
            public static string TrongGoi = @"TRONG_GOI";
            
            public static string MaGoiDvu = @"MA_GOI_DVU";
            
            public static string MaDtuong = @"MA_DTUONG";
            
            public static string MaKieuDvu = @"MA_KIEU_DVU";
            
            public static string IdDvu = @"ID_DVU";
            
            public static string IdLoaiDvu = @"ID_LOAI_DVU";
            
            public static string UnitName = @"Unit_Name";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
