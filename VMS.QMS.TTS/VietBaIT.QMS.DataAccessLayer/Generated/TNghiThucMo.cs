using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TNghiThucMo class.
	/// </summary>
    [Serializable]
	public partial class TNghiThucMoCollection : ActiveList<TNghiThucMo, TNghiThucMoCollection>
	{	   
		public TNghiThucMoCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TNghiThucMoCollection</returns>
		public TNghiThucMoCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TNghiThucMo o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_NghiThuc_Mo table.
	/// </summary>
	[Serializable]
	public partial class TNghiThucMo : ActiveRecord<TNghiThucMo>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TNghiThucMo()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TNghiThucMo(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TNghiThucMo(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TNghiThucMo(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_NghiThuc_Mo", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.String;
				colvarPatientCode.MaxLength = 50;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = false;
				colvarPatientCode.IsPrimaryKey = true;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int32;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = false;
				colvarPatientId.IsPrimaryKey = true;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarNgayLapPhieu = new TableSchema.TableColumn(schema);
				colvarNgayLapPhieu.ColumnName = "Ngay_LapPhieu";
				colvarNgayLapPhieu.DataType = DbType.DateTime;
				colvarNgayLapPhieu.MaxLength = 0;
				colvarNgayLapPhieu.AutoIncrement = false;
				colvarNgayLapPhieu.IsNullable = false;
				colvarNgayLapPhieu.IsPrimaryKey = false;
				colvarNgayLapPhieu.IsForeignKey = false;
				colvarNgayLapPhieu.IsReadOnly = false;
				
						colvarNgayLapPhieu.DefaultSetting = @"(getdate())";
				colvarNgayLapPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayLapPhieu);
				
				TableSchema.TableColumn colvarSoLuu = new TableSchema.TableColumn(schema);
				colvarSoLuu.ColumnName = "So_Luu";
				colvarSoLuu.DataType = DbType.String;
				colvarSoLuu.MaxLength = 10;
				colvarSoLuu.AutoIncrement = false;
				colvarSoLuu.IsNullable = true;
				colvarSoLuu.IsPrimaryKey = false;
				colvarSoLuu.IsForeignKey = false;
				colvarSoLuu.IsReadOnly = false;
				colvarSoLuu.DefaultSetting = @"";
				colvarSoLuu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuu);
				
				TableSchema.TableColumn colvarPThuatVien = new TableSchema.TableColumn(schema);
				colvarPThuatVien.ColumnName = "PThuat_Vien";
				colvarPThuatVien.DataType = DbType.String;
				colvarPThuatVien.MaxLength = 50;
				colvarPThuatVien.AutoIncrement = false;
				colvarPThuatVien.IsNullable = true;
				colvarPThuatVien.IsPrimaryKey = false;
				colvarPThuatVien.IsForeignKey = false;
				colvarPThuatVien.IsReadOnly = false;
				colvarPThuatVien.DefaultSetting = @"";
				colvarPThuatVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPThuatVien);
				
				TableSchema.TableColumn colvarTroThuVien = new TableSchema.TableColumn(schema);
				colvarTroThuVien.ColumnName = "Tro_ThuVien";
				colvarTroThuVien.DataType = DbType.String;
				colvarTroThuVien.MaxLength = 50;
				colvarTroThuVien.AutoIncrement = false;
				colvarTroThuVien.IsNullable = true;
				colvarTroThuVien.IsPrimaryKey = false;
				colvarTroThuVien.IsForeignKey = false;
				colvarTroThuVien.IsReadOnly = false;
				colvarTroThuVien.DefaultSetting = @"";
				colvarTroThuVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTroThuVien);
				
				TableSchema.TableColumn colvarNguoiGMeHSuc = new TableSchema.TableColumn(schema);
				colvarNguoiGMeHSuc.ColumnName = "Nguoi_GMe_HSuc";
				colvarNguoiGMeHSuc.DataType = DbType.String;
				colvarNguoiGMeHSuc.MaxLength = 50;
				colvarNguoiGMeHSuc.AutoIncrement = false;
				colvarNguoiGMeHSuc.IsNullable = true;
				colvarNguoiGMeHSuc.IsPrimaryKey = false;
				colvarNguoiGMeHSuc.IsForeignKey = false;
				colvarNguoiGMeHSuc.IsReadOnly = false;
				colvarNguoiGMeHSuc.DefaultSetting = @"";
				colvarNguoiGMeHSuc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiGMeHSuc);
				
				TableSchema.TableColumn colvarNguoiDCuVien = new TableSchema.TableColumn(schema);
				colvarNguoiDCuVien.ColumnName = "Nguoi_DCu_Vien";
				colvarNguoiDCuVien.DataType = DbType.String;
				colvarNguoiDCuVien.MaxLength = 50;
				colvarNguoiDCuVien.AutoIncrement = false;
				colvarNguoiDCuVien.IsNullable = true;
				colvarNguoiDCuVien.IsPrimaryKey = false;
				colvarNguoiDCuVien.IsForeignKey = false;
				colvarNguoiDCuVien.IsReadOnly = false;
				colvarNguoiDCuVien.DefaultSetting = @"";
				colvarNguoiDCuVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiDCuVien);
				
				TableSchema.TableColumn colvarNguoiCDoanTruocMo = new TableSchema.TableColumn(schema);
				colvarNguoiCDoanTruocMo.ColumnName = "Nguoi_CDoan_Truoc_Mo";
				colvarNguoiCDoanTruocMo.DataType = DbType.String;
				colvarNguoiCDoanTruocMo.MaxLength = 200;
				colvarNguoiCDoanTruocMo.AutoIncrement = false;
				colvarNguoiCDoanTruocMo.IsNullable = true;
				colvarNguoiCDoanTruocMo.IsPrimaryKey = false;
				colvarNguoiCDoanTruocMo.IsForeignKey = false;
				colvarNguoiCDoanTruocMo.IsReadOnly = false;
				colvarNguoiCDoanTruocMo.DefaultSetting = @"";
				colvarNguoiCDoanTruocMo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiCDoanTruocMo);
				
				TableSchema.TableColumn colvarNguoiCDoanMo = new TableSchema.TableColumn(schema);
				colvarNguoiCDoanMo.ColumnName = "Nguoi_CDoan_Mo";
				colvarNguoiCDoanMo.DataType = DbType.String;
				colvarNguoiCDoanMo.MaxLength = 50;
				colvarNguoiCDoanMo.AutoIncrement = false;
				colvarNguoiCDoanMo.IsNullable = true;
				colvarNguoiCDoanMo.IsPrimaryKey = false;
				colvarNguoiCDoanMo.IsForeignKey = false;
				colvarNguoiCDoanMo.IsReadOnly = false;
				colvarNguoiCDoanMo.DefaultSetting = @"";
				colvarNguoiCDoanMo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiCDoanMo);
				
				TableSchema.TableColumn colvarNguoiPPhapMo = new TableSchema.TableColumn(schema);
				colvarNguoiPPhapMo.ColumnName = "Nguoi_PPhap_Mo";
				colvarNguoiPPhapMo.DataType = DbType.String;
				colvarNguoiPPhapMo.MaxLength = 3000;
				colvarNguoiPPhapMo.AutoIncrement = false;
				colvarNguoiPPhapMo.IsNullable = true;
				colvarNguoiPPhapMo.IsPrimaryKey = false;
				colvarNguoiPPhapMo.IsForeignKey = false;
				colvarNguoiPPhapMo.IsReadOnly = false;
				colvarNguoiPPhapMo.DefaultSetting = @"";
				colvarNguoiPPhapMo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiPPhapMo);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "Nguoi_Tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "Ngay_Tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				
						colvarNgayTao.DefaultSetting = @"(getdate())";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "Nguoi_Sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 20;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "Ngay_Sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_NghiThuc_Mo",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public int PatientId 
		{
			get { return GetColumnValue<int>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("NgayLapPhieu")]
		[Bindable(true)]
		public DateTime NgayLapPhieu 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayLapPhieu); }
			set { SetColumnValue(Columns.NgayLapPhieu, value); }
		}
		  
		[XmlAttribute("SoLuu")]
		[Bindable(true)]
		public string SoLuu 
		{
			get { return GetColumnValue<string>(Columns.SoLuu); }
			set { SetColumnValue(Columns.SoLuu, value); }
		}
		  
		[XmlAttribute("PThuatVien")]
		[Bindable(true)]
		public string PThuatVien 
		{
			get { return GetColumnValue<string>(Columns.PThuatVien); }
			set { SetColumnValue(Columns.PThuatVien, value); }
		}
		  
		[XmlAttribute("TroThuVien")]
		[Bindable(true)]
		public string TroThuVien 
		{
			get { return GetColumnValue<string>(Columns.TroThuVien); }
			set { SetColumnValue(Columns.TroThuVien, value); }
		}
		  
		[XmlAttribute("NguoiGMeHSuc")]
		[Bindable(true)]
		public string NguoiGMeHSuc 
		{
			get { return GetColumnValue<string>(Columns.NguoiGMeHSuc); }
			set { SetColumnValue(Columns.NguoiGMeHSuc, value); }
		}
		  
		[XmlAttribute("NguoiDCuVien")]
		[Bindable(true)]
		public string NguoiDCuVien 
		{
			get { return GetColumnValue<string>(Columns.NguoiDCuVien); }
			set { SetColumnValue(Columns.NguoiDCuVien, value); }
		}
		  
		[XmlAttribute("NguoiCDoanTruocMo")]
		[Bindable(true)]
		public string NguoiCDoanTruocMo 
		{
			get { return GetColumnValue<string>(Columns.NguoiCDoanTruocMo); }
			set { SetColumnValue(Columns.NguoiCDoanTruocMo, value); }
		}
		  
		[XmlAttribute("NguoiCDoanMo")]
		[Bindable(true)]
		public string NguoiCDoanMo 
		{
			get { return GetColumnValue<string>(Columns.NguoiCDoanMo); }
			set { SetColumnValue(Columns.NguoiCDoanMo, value); }
		}
		  
		[XmlAttribute("NguoiPPhapMo")]
		[Bindable(true)]
		public string NguoiPPhapMo 
		{
			get { return GetColumnValue<string>(Columns.NguoiPPhapMo); }
			set { SetColumnValue(Columns.NguoiPPhapMo, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varPatientCode,int varPatientId,DateTime varNgayLapPhieu,string varSoLuu,string varPThuatVien,string varTroThuVien,string varNguoiGMeHSuc,string varNguoiDCuVien,string varNguoiCDoanTruocMo,string varNguoiCDoanMo,string varNguoiPPhapMo,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua)
		{
			TNghiThucMo item = new TNghiThucMo();
			
			item.PatientCode = varPatientCode;
			
			item.PatientId = varPatientId;
			
			item.NgayLapPhieu = varNgayLapPhieu;
			
			item.SoLuu = varSoLuu;
			
			item.PThuatVien = varPThuatVien;
			
			item.TroThuVien = varTroThuVien;
			
			item.NguoiGMeHSuc = varNguoiGMeHSuc;
			
			item.NguoiDCuVien = varNguoiDCuVien;
			
			item.NguoiCDoanTruocMo = varNguoiCDoanTruocMo;
			
			item.NguoiCDoanMo = varNguoiCDoanMo;
			
			item.NguoiPPhapMo = varNguoiPPhapMo;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(string varPatientCode,int varPatientId,DateTime varNgayLapPhieu,string varSoLuu,string varPThuatVien,string varTroThuVien,string varNguoiGMeHSuc,string varNguoiDCuVien,string varNguoiCDoanTruocMo,string varNguoiCDoanMo,string varNguoiPPhapMo,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua)
		{
			TNghiThucMo item = new TNghiThucMo();
			
				item.PatientCode = varPatientCode;
			
				item.PatientId = varPatientId;
			
				item.NgayLapPhieu = varNgayLapPhieu;
			
				item.SoLuu = varSoLuu;
			
				item.PThuatVien = varPThuatVien;
			
				item.TroThuVien = varTroThuVien;
			
				item.NguoiGMeHSuc = varNguoiGMeHSuc;
			
				item.NguoiDCuVien = varNguoiDCuVien;
			
				item.NguoiCDoanTruocMo = varNguoiCDoanTruocMo;
			
				item.NguoiCDoanMo = varNguoiCDoanMo;
			
				item.NguoiPPhapMo = varNguoiPPhapMo;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayLapPhieuColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuuColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn PThuatVienColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TroThuVienColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiGMeHSucColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiDCuVienColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiCDoanTruocMoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiCDoanMoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiPPhapMoColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string PatientCode = @"Patient_Code";
			 public static string PatientId = @"Patient_ID";
			 public static string NgayLapPhieu = @"Ngay_LapPhieu";
			 public static string SoLuu = @"So_Luu";
			 public static string PThuatVien = @"PThuat_Vien";
			 public static string TroThuVien = @"Tro_ThuVien";
			 public static string NguoiGMeHSuc = @"Nguoi_GMe_HSuc";
			 public static string NguoiDCuVien = @"Nguoi_DCu_Vien";
			 public static string NguoiCDoanTruocMo = @"Nguoi_CDoan_Truoc_Mo";
			 public static string NguoiCDoanMo = @"Nguoi_CDoan_Mo";
			 public static string NguoiPPhapMo = @"Nguoi_PPhap_Mo";
			 public static string NguoiTao = @"Nguoi_Tao";
			 public static string NgayTao = @"Ngay_Tao";
			 public static string NguoiSua = @"Nguoi_Sua";
			 public static string NgaySua = @"Ngay_Sua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
