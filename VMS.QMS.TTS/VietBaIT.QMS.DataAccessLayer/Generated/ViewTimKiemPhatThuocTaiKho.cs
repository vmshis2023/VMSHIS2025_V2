using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewTimKiemPhatThuocTaiKho class.
    /// </summary>
    [Serializable]
    public partial class ViewTimKiemPhatThuocTaiKhoCollection : ReadOnlyList<ViewTimKiemPhatThuocTaiKho, ViewTimKiemPhatThuocTaiKhoCollection>
    {        
        public ViewTimKiemPhatThuocTaiKhoCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_TimKiemPhatThuocTaiKho view.
    /// </summary>
    [Serializable]
    public partial class ViewTimKiemPhatThuocTaiKho : ReadOnlyRecord<ViewTimKiemPhatThuocTaiKho>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_TimKiemPhatThuocTaiKho", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarPresId = new TableSchema.TableColumn(schema);
                colvarPresId.ColumnName = "Pres_ID";
                colvarPresId.DataType = DbType.Int32;
                colvarPresId.MaxLength = 0;
                colvarPresId.AutoIncrement = false;
                colvarPresId.IsNullable = false;
                colvarPresId.IsPrimaryKey = false;
                colvarPresId.IsForeignKey = false;
                colvarPresId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPresId);
                
                TableSchema.TableColumn colvarTreatId = new TableSchema.TableColumn(schema);
                colvarTreatId.ColumnName = "Treat_ID";
                colvarTreatId.DataType = DbType.Int32;
                colvarTreatId.MaxLength = 0;
                colvarTreatId.AutoIncrement = false;
                colvarTreatId.IsNullable = true;
                colvarTreatId.IsPrimaryKey = false;
                colvarTreatId.IsForeignKey = false;
                colvarTreatId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTreatId);
                
                TableSchema.TableColumn colvarPatientDeptId = new TableSchema.TableColumn(schema);
                colvarPatientDeptId.ColumnName = "PatientDept_ID";
                colvarPatientDeptId.DataType = DbType.Int32;
                colvarPatientDeptId.MaxLength = 0;
                colvarPatientDeptId.AutoIncrement = false;
                colvarPatientDeptId.IsNullable = true;
                colvarPatientDeptId.IsPrimaryKey = false;
                colvarPatientDeptId.IsForeignKey = false;
                colvarPatientDeptId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientDeptId);
                
                TableSchema.TableColumn colvarReplacePresId = new TableSchema.TableColumn(schema);
                colvarReplacePresId.ColumnName = "ReplacePres_ID";
                colvarReplacePresId.DataType = DbType.Int32;
                colvarReplacePresId.MaxLength = 0;
                colvarReplacePresId.AutoIncrement = false;
                colvarReplacePresId.IsNullable = true;
                colvarReplacePresId.IsPrimaryKey = false;
                colvarReplacePresId.IsForeignKey = false;
                colvarReplacePresId.IsReadOnly = false;
                
                schema.Columns.Add(colvarReplacePresId);
                
                TableSchema.TableColumn colvarExamId = new TableSchema.TableColumn(schema);
                colvarExamId.ColumnName = "Exam_ID";
                colvarExamId.DataType = DbType.Int64;
                colvarExamId.MaxLength = 0;
                colvarExamId.AutoIncrement = false;
                colvarExamId.IsNullable = true;
                colvarExamId.IsPrimaryKey = false;
                colvarExamId.IsForeignKey = false;
                colvarExamId.IsReadOnly = false;
                
                schema.Columns.Add(colvarExamId);
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Int64;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = true;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_Code";
                colvarPatientCode.DataType = DbType.AnsiString;
                colvarPatientCode.MaxLength = 20;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = true;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarPresDate = new TableSchema.TableColumn(schema);
                colvarPresDate.ColumnName = "Pres_Date";
                colvarPresDate.DataType = DbType.DateTime;
                colvarPresDate.MaxLength = 0;
                colvarPresDate.AutoIncrement = false;
                colvarPresDate.IsNullable = false;
                colvarPresDate.IsPrimaryKey = false;
                colvarPresDate.IsForeignKey = false;
                colvarPresDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarPresDate);
                
                TableSchema.TableColumn colvarAssignId = new TableSchema.TableColumn(schema);
                colvarAssignId.ColumnName = "Assign_ID";
                colvarAssignId.DataType = DbType.Int16;
                colvarAssignId.MaxLength = 0;
                colvarAssignId.AutoIncrement = false;
                colvarAssignId.IsNullable = true;
                colvarAssignId.IsPrimaryKey = false;
                colvarAssignId.IsForeignKey = false;
                colvarAssignId.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignId);
                
                TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
                colvarStatus.ColumnName = "Status";
                colvarStatus.DataType = DbType.Byte;
                colvarStatus.MaxLength = 0;
                colvarStatus.AutoIncrement = false;
                colvarStatus.IsNullable = false;
                colvarStatus.IsPrimaryKey = false;
                colvarStatus.IsForeignKey = false;
                colvarStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarStatus);
                
                TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
                colvarPaymentStatus.ColumnName = "Payment_Status";
                colvarPaymentStatus.DataType = DbType.Byte;
                colvarPaymentStatus.MaxLength = 0;
                colvarPaymentStatus.AutoIncrement = false;
                colvarPaymentStatus.IsNullable = false;
                colvarPaymentStatus.IsPrimaryKey = false;
                colvarPaymentStatus.IsForeignKey = false;
                colvarPaymentStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentStatus);
                
                TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
                colvarPaymentDate.ColumnName = "Payment_Date";
                colvarPaymentDate.DataType = DbType.DateTime;
                colvarPaymentDate.MaxLength = 0;
                colvarPaymentDate.AutoIncrement = false;
                colvarPaymentDate.IsNullable = true;
                colvarPaymentDate.IsPrimaryKey = false;
                colvarPaymentDate.IsForeignKey = false;
                colvarPaymentDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentDate);
                
                TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);
                colvarCreatedBy.ColumnName = "Created_by";
                colvarCreatedBy.DataType = DbType.String;
                colvarCreatedBy.MaxLength = 20;
                colvarCreatedBy.AutoIncrement = false;
                colvarCreatedBy.IsNullable = false;
                colvarCreatedBy.IsPrimaryKey = false;
                colvarCreatedBy.IsForeignKey = false;
                colvarCreatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreatedBy);
                
                TableSchema.TableColumn colvarCreatedDate = new TableSchema.TableColumn(schema);
                colvarCreatedDate.ColumnName = "CreatedDate";
                colvarCreatedDate.DataType = DbType.DateTime;
                colvarCreatedDate.MaxLength = 0;
                colvarCreatedDate.AutoIncrement = false;
                colvarCreatedDate.IsNullable = false;
                colvarCreatedDate.IsPrimaryKey = false;
                colvarCreatedDate.IsForeignKey = false;
                colvarCreatedDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreatedDate);
                
                TableSchema.TableColumn colvarSDesc = new TableSchema.TableColumn(schema);
                colvarSDesc.ColumnName = "sDesc";
                colvarSDesc.DataType = DbType.String;
                colvarSDesc.MaxLength = 255;
                colvarSDesc.AutoIncrement = false;
                colvarSDesc.IsNullable = true;
                colvarSDesc.IsPrimaryKey = false;
                colvarSDesc.IsForeignKey = false;
                colvarSDesc.IsReadOnly = false;
                
                schema.Columns.Add(colvarSDesc);
                
                TableSchema.TableColumn colvarPresName = new TableSchema.TableColumn(schema);
                colvarPresName.ColumnName = "Pres_Name";
                colvarPresName.DataType = DbType.String;
                colvarPresName.MaxLength = 255;
                colvarPresName.AutoIncrement = false;
                colvarPresName.IsNullable = true;
                colvarPresName.IsPrimaryKey = false;
                colvarPresName.IsForeignKey = false;
                colvarPresName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPresName);
                
                TableSchema.TableColumn colvarPresCode = new TableSchema.TableColumn(schema);
                colvarPresCode.ColumnName = "Pres_Code";
                colvarPresCode.DataType = DbType.String;
                colvarPresCode.MaxLength = 50;
                colvarPresCode.AutoIncrement = false;
                colvarPresCode.IsNullable = true;
                colvarPresCode.IsPrimaryKey = false;
                colvarPresCode.IsForeignKey = false;
                colvarPresCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPresCode);
                
                TableSchema.TableColumn colvarSigner = new TableSchema.TableColumn(schema);
                colvarSigner.ColumnName = "Signer";
                colvarSigner.DataType = DbType.Int16;
                colvarSigner.MaxLength = 0;
                colvarSigner.AutoIncrement = false;
                colvarSigner.IsNullable = true;
                colvarSigner.IsPrimaryKey = false;
                colvarSigner.IsForeignKey = false;
                colvarSigner.IsReadOnly = false;
                
                schema.Columns.Add(colvarSigner);
                
                TableSchema.TableColumn colvarSignedDate = new TableSchema.TableColumn(schema);
                colvarSignedDate.ColumnName = "Signed_Date";
                colvarSignedDate.DataType = DbType.DateTime;
                colvarSignedDate.MaxLength = 0;
                colvarSignedDate.AutoIncrement = false;
                colvarSignedDate.IsNullable = true;
                colvarSignedDate.IsPrimaryKey = false;
                colvarSignedDate.IsForeignKey = false;
                colvarSignedDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarSignedDate);
                
                TableSchema.TableColumn colvarPreHos = new TableSchema.TableColumn(schema);
                colvarPreHos.ColumnName = "Pre_Hos";
                colvarPreHos.DataType = DbType.Byte;
                colvarPreHos.MaxLength = 0;
                colvarPreHos.AutoIncrement = false;
                colvarPreHos.IsNullable = true;
                colvarPreHos.IsPrimaryKey = false;
                colvarPreHos.IsForeignKey = false;
                colvarPreHos.IsReadOnly = false;
                
                schema.Columns.Add(colvarPreHos);
                
                TableSchema.TableColumn colvarPresType = new TableSchema.TableColumn(schema);
                colvarPresType.ColumnName = "Pres_Type";
                colvarPresType.DataType = DbType.Byte;
                colvarPresType.MaxLength = 0;
                colvarPresType.AutoIncrement = false;
                colvarPresType.IsNullable = true;
                colvarPresType.IsPrimaryKey = false;
                colvarPresType.IsForeignKey = false;
                colvarPresType.IsReadOnly = false;
                
                schema.Columns.Add(colvarPresType);
                
                TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
                colvarDepartmentId.ColumnName = "Department_ID";
                colvarDepartmentId.DataType = DbType.Int16;
                colvarDepartmentId.MaxLength = 0;
                colvarDepartmentId.AutoIncrement = false;
                colvarDepartmentId.IsNullable = true;
                colvarDepartmentId.IsPrimaryKey = false;
                colvarDepartmentId.IsForeignKey = false;
                colvarDepartmentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepartmentId);
                
                TableSchema.TableColumn colvarRoomId = new TableSchema.TableColumn(schema);
                colvarRoomId.ColumnName = "Room_ID";
                colvarRoomId.DataType = DbType.Int16;
                colvarRoomId.MaxLength = 0;
                colvarRoomId.AutoIncrement = false;
                colvarRoomId.IsNullable = true;
                colvarRoomId.IsPrimaryKey = false;
                colvarRoomId.IsForeignKey = false;
                colvarRoomId.IsReadOnly = false;
                
                schema.Columns.Add(colvarRoomId);
                
                TableSchema.TableColumn colvarBedId = new TableSchema.TableColumn(schema);
                colvarBedId.ColumnName = "Bed_ID";
                colvarBedId.DataType = DbType.Int16;
                colvarBedId.MaxLength = 0;
                colvarBedId.AutoIncrement = false;
                colvarBedId.IsNullable = true;
                colvarBedId.IsPrimaryKey = false;
                colvarBedId.IsForeignKey = false;
                colvarBedId.IsReadOnly = false;
                
                schema.Columns.Add(colvarBedId);
                
                TableSchema.TableColumn colvarPresStatus = new TableSchema.TableColumn(schema);
                colvarPresStatus.ColumnName = "Pres_Status";
                colvarPresStatus.DataType = DbType.Byte;
                colvarPresStatus.MaxLength = 0;
                colvarPresStatus.AutoIncrement = false;
                colvarPresStatus.IsNullable = true;
                colvarPresStatus.IsPrimaryKey = false;
                colvarPresStatus.IsForeignKey = false;
                colvarPresStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarPresStatus);
                
                TableSchema.TableColumn colvarKieuDonthuoc = new TableSchema.TableColumn(schema);
                colvarKieuDonthuoc.ColumnName = "KIEU_DONTHUOC";
                colvarKieuDonthuoc.DataType = DbType.String;
                colvarKieuDonthuoc.MaxLength = 50;
                colvarKieuDonthuoc.AutoIncrement = false;
                colvarKieuDonthuoc.IsNullable = true;
                colvarKieuDonthuoc.IsPrimaryKey = false;
                colvarKieuDonthuoc.IsForeignKey = false;
                colvarKieuDonthuoc.IsReadOnly = false;
                
                schema.Columns.Add(colvarKieuDonthuoc);
                
                TableSchema.TableColumn colvarLoiDanBsy = new TableSchema.TableColumn(schema);
                colvarLoiDanBsy.ColumnName = "LOI_DAN_BSY";
                colvarLoiDanBsy.DataType = DbType.String;
                colvarLoiDanBsy.MaxLength = 500;
                colvarLoiDanBsy.AutoIncrement = false;
                colvarLoiDanBsy.IsNullable = true;
                colvarLoiDanBsy.IsPrimaryKey = false;
                colvarLoiDanBsy.IsForeignKey = false;
                colvarLoiDanBsy.IsReadOnly = false;
                
                schema.Columns.Add(colvarLoiDanBsy);
                
                TableSchema.TableColumn colvarNgayTaiKham = new TableSchema.TableColumn(schema);
                colvarNgayTaiKham.ColumnName = "NGAY_TAI_KHAM";
                colvarNgayTaiKham.DataType = DbType.DateTime;
                colvarNgayTaiKham.MaxLength = 0;
                colvarNgayTaiKham.AutoIncrement = false;
                colvarNgayTaiKham.IsNullable = true;
                colvarNgayTaiKham.IsPrimaryKey = false;
                colvarNgayTaiKham.IsForeignKey = false;
                colvarNgayTaiKham.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgayTaiKham);
                
                TableSchema.TableColumn colvarTaiKham = new TableSchema.TableColumn(schema);
                colvarTaiKham.ColumnName = "TAI_KHAM";
                colvarTaiKham.DataType = DbType.String;
                colvarTaiKham.MaxLength = 500;
                colvarTaiKham.AutoIncrement = false;
                colvarTaiKham.IsNullable = true;
                colvarTaiKham.IsPrimaryKey = false;
                colvarTaiKham.IsForeignKey = false;
                colvarTaiKham.IsReadOnly = false;
                
                schema.Columns.Add(colvarTaiKham);
                
                TableSchema.TableColumn colvarMaKhoaThien = new TableSchema.TableColumn(schema);
                colvarMaKhoaThien.ColumnName = "MA_KHOA_THIEN";
                colvarMaKhoaThien.DataType = DbType.String;
                colvarMaKhoaThien.MaxLength = 10;
                colvarMaKhoaThien.AutoIncrement = false;
                colvarMaKhoaThien.IsNullable = true;
                colvarMaKhoaThien.IsPrimaryKey = false;
                colvarMaKhoaThien.IsForeignKey = false;
                colvarMaKhoaThien.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaKhoaThien);
                
                TableSchema.TableColumn colvarKeDonTquay = new TableSchema.TableColumn(schema);
                colvarKeDonTquay.ColumnName = "KE_DON_TQUAY";
                colvarKeDonTquay.DataType = DbType.Byte;
                colvarKeDonTquay.MaxLength = 0;
                colvarKeDonTquay.AutoIncrement = false;
                colvarKeDonTquay.IsNullable = true;
                colvarKeDonTquay.IsPrimaryKey = false;
                colvarKeDonTquay.IsForeignKey = false;
                colvarKeDonTquay.IsReadOnly = false;
                
                schema.Columns.Add(colvarKeDonTquay);
                
                TableSchema.TableColumn colvarPatientName = new TableSchema.TableColumn(schema);
                colvarPatientName.ColumnName = "Patient_Name";
                colvarPatientName.DataType = DbType.String;
                colvarPatientName.MaxLength = 100;
                colvarPatientName.AutoIncrement = false;
                colvarPatientName.IsNullable = true;
                colvarPatientName.IsPrimaryKey = false;
                colvarPatientName.IsForeignKey = false;
                colvarPatientName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientName);
                
                TableSchema.TableColumn colvarPatientAddr = new TableSchema.TableColumn(schema);
                colvarPatientAddr.ColumnName = "Patient_Addr";
                colvarPatientAddr.DataType = DbType.String;
                colvarPatientAddr.MaxLength = 200;
                colvarPatientAddr.AutoIncrement = false;
                colvarPatientAddr.IsNullable = true;
                colvarPatientAddr.IsPrimaryKey = false;
                colvarPatientAddr.IsForeignKey = false;
                colvarPatientAddr.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientAddr);
                
                TableSchema.TableColumn colvarProvinceId = new TableSchema.TableColumn(schema);
                colvarProvinceId.ColumnName = "Province_ID";
                colvarProvinceId.DataType = DbType.AnsiString;
                colvarProvinceId.MaxLength = 50;
                colvarProvinceId.AutoIncrement = false;
                colvarProvinceId.IsNullable = true;
                colvarProvinceId.IsPrimaryKey = false;
                colvarProvinceId.IsForeignKey = false;
                colvarProvinceId.IsReadOnly = false;
                
                schema.Columns.Add(colvarProvinceId);
                
                TableSchema.TableColumn colvarDistrictId = new TableSchema.TableColumn(schema);
                colvarDistrictId.ColumnName = "District_ID";
                colvarDistrictId.DataType = DbType.AnsiString;
                colvarDistrictId.MaxLength = 50;
                colvarDistrictId.AutoIncrement = false;
                colvarDistrictId.IsNullable = true;
                colvarDistrictId.IsPrimaryKey = false;
                colvarDistrictId.IsForeignKey = false;
                colvarDistrictId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDistrictId);
                
                TableSchema.TableColumn colvarPatientBirth = new TableSchema.TableColumn(schema);
                colvarPatientBirth.ColumnName = "Patient_Birth";
                colvarPatientBirth.DataType = DbType.DateTime;
                colvarPatientBirth.MaxLength = 0;
                colvarPatientBirth.AutoIncrement = false;
                colvarPatientBirth.IsNullable = true;
                colvarPatientBirth.IsPrimaryKey = false;
                colvarPatientBirth.IsForeignKey = false;
                colvarPatientBirth.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientBirth);
                
                TableSchema.TableColumn colvarYearOfBirth = new TableSchema.TableColumn(schema);
                colvarYearOfBirth.ColumnName = "Year_Of_Birth";
                colvarYearOfBirth.DataType = DbType.Int16;
                colvarYearOfBirth.MaxLength = 0;
                colvarYearOfBirth.AutoIncrement = false;
                colvarYearOfBirth.IsNullable = true;
                colvarYearOfBirth.IsPrimaryKey = false;
                colvarYearOfBirth.IsForeignKey = false;
                colvarYearOfBirth.IsReadOnly = false;
                
                schema.Columns.Add(colvarYearOfBirth);
                
                TableSchema.TableColumn colvarPatientSex = new TableSchema.TableColumn(schema);
                colvarPatientSex.ColumnName = "Patient_Sex";
                colvarPatientSex.DataType = DbType.Byte;
                colvarPatientSex.MaxLength = 0;
                colvarPatientSex.AutoIncrement = false;
                colvarPatientSex.IsNullable = false;
                colvarPatientSex.IsPrimaryKey = false;
                colvarPatientSex.IsForeignKey = false;
                colvarPatientSex.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientSex);
                
                TableSchema.TableColumn colvarPatientJob = new TableSchema.TableColumn(schema);
                colvarPatientJob.ColumnName = "Patient_Job";
                colvarPatientJob.DataType = DbType.String;
                colvarPatientJob.MaxLength = 100;
                colvarPatientJob.AutoIncrement = false;
                colvarPatientJob.IsNullable = true;
                colvarPatientJob.IsPrimaryKey = false;
                colvarPatientJob.IsForeignKey = false;
                colvarPatientJob.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientJob);
                
                TableSchema.TableColumn colvarOffices = new TableSchema.TableColumn(schema);
                colvarOffices.ColumnName = "Offices";
                colvarOffices.DataType = DbType.String;
                colvarOffices.MaxLength = 100;
                colvarOffices.AutoIncrement = false;
                colvarOffices.IsNullable = true;
                colvarOffices.IsPrimaryKey = false;
                colvarOffices.IsForeignKey = false;
                colvarOffices.IsReadOnly = false;
                
                schema.Columns.Add(colvarOffices);
                
                TableSchema.TableColumn colvarTenKhongDau = new TableSchema.TableColumn(schema);
                colvarTenKhongDau.ColumnName = "TEN_KHONG_DAU";
                colvarTenKhongDau.DataType = DbType.String;
                colvarTenKhongDau.MaxLength = 100;
                colvarTenKhongDau.AutoIncrement = false;
                colvarTenKhongDau.IsNullable = true;
                colvarTenKhongDau.IsPrimaryKey = false;
                colvarTenKhongDau.IsForeignKey = false;
                colvarTenKhongDau.IsReadOnly = false;
                
                schema.Columns.Add(colvarTenKhongDau);
                
                TableSchema.TableColumn colvarIdentifyNum = new TableSchema.TableColumn(schema);
                colvarIdentifyNum.ColumnName = "Identify_Num";
                colvarIdentifyNum.DataType = DbType.AnsiString;
                colvarIdentifyNum.MaxLength = 50;
                colvarIdentifyNum.AutoIncrement = false;
                colvarIdentifyNum.IsNullable = true;
                colvarIdentifyNum.IsPrimaryKey = false;
                colvarIdentifyNum.IsForeignKey = false;
                colvarIdentifyNum.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdentifyNum);
                
                TableSchema.TableColumn colvarObjectTypeId = new TableSchema.TableColumn(schema);
                colvarObjectTypeId.ColumnName = "ObjectType_ID";
                colvarObjectTypeId.DataType = DbType.Int16;
                colvarObjectTypeId.MaxLength = 0;
                colvarObjectTypeId.AutoIncrement = false;
                colvarObjectTypeId.IsNullable = false;
                colvarObjectTypeId.IsPrimaryKey = false;
                colvarObjectTypeId.IsForeignKey = false;
                colvarObjectTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarObjectTypeId);
                
                TableSchema.TableColumn colvarInsuranceNum = new TableSchema.TableColumn(schema);
                colvarInsuranceNum.ColumnName = "Insurance_Num";
                colvarInsuranceNum.DataType = DbType.AnsiString;
                colvarInsuranceNum.MaxLength = 30;
                colvarInsuranceNum.AutoIncrement = false;
                colvarInsuranceNum.IsNullable = true;
                colvarInsuranceNum.IsPrimaryKey = false;
                colvarInsuranceNum.IsForeignKey = false;
                colvarInsuranceNum.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsuranceNum);
                
                TableSchema.TableColumn colvarMaDoiTuong = new TableSchema.TableColumn(schema);
                colvarMaDoiTuong.ColumnName = "Ma_DoiTuong";
                colvarMaDoiTuong.DataType = DbType.String;
                colvarMaDoiTuong.MaxLength = 50;
                colvarMaDoiTuong.AutoIncrement = false;
                colvarMaDoiTuong.IsNullable = true;
                colvarMaDoiTuong.IsPrimaryKey = false;
                colvarMaDoiTuong.IsForeignKey = false;
                colvarMaDoiTuong.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaDoiTuong);
                
                TableSchema.TableColumn colvarSPresDate = new TableSchema.TableColumn(schema);
                colvarSPresDate.ColumnName = "sPresDate";
                colvarSPresDate.DataType = DbType.AnsiString;
                colvarSPresDate.MaxLength = 10;
                colvarSPresDate.AutoIncrement = false;
                colvarSPresDate.IsNullable = true;
                colvarSPresDate.IsPrimaryKey = false;
                colvarSPresDate.IsForeignKey = false;
                colvarSPresDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarSPresDate);
                
                TableSchema.TableColumn colvarAge = new TableSchema.TableColumn(schema);
                colvarAge.ColumnName = "Age";
                colvarAge.DataType = DbType.Int32;
                colvarAge.MaxLength = 0;
                colvarAge.AutoIncrement = false;
                colvarAge.IsNullable = true;
                colvarAge.IsPrimaryKey = false;
                colvarAge.IsForeignKey = false;
                colvarAge.IsReadOnly = false;
                
                schema.Columns.Add(colvarAge);
                
                TableSchema.TableColumn colvarMaDTuong = new TableSchema.TableColumn(schema);
                colvarMaDTuong.ColumnName = "Ma_DTuong";
                colvarMaDTuong.DataType = DbType.String;
                colvarMaDTuong.MaxLength = 50;
                colvarMaDTuong.AutoIncrement = false;
                colvarMaDTuong.IsNullable = true;
                colvarMaDTuong.IsPrimaryKey = false;
                colvarMaDTuong.IsForeignKey = false;
                colvarMaDTuong.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaDTuong);
                
                TableSchema.TableColumn colvarStaffName = new TableSchema.TableColumn(schema);
                colvarStaffName.ColumnName = "Staff_name";
                colvarStaffName.DataType = DbType.String;
                colvarStaffName.MaxLength = 100;
                colvarStaffName.AutoIncrement = false;
                colvarStaffName.IsNullable = true;
                colvarStaffName.IsPrimaryKey = false;
                colvarStaffName.IsForeignKey = false;
                colvarStaffName.IsReadOnly = false;
                
                schema.Columns.Add(colvarStaffName);
                
                TableSchema.TableColumn colvarDepartmentName = new TableSchema.TableColumn(schema);
                colvarDepartmentName.ColumnName = "Department_Name";
                colvarDepartmentName.DataType = DbType.String;
                colvarDepartmentName.MaxLength = 100;
                colvarDepartmentName.AutoIncrement = false;
                colvarDepartmentName.IsNullable = true;
                colvarDepartmentName.IsPrimaryKey = false;
                colvarDepartmentName.IsForeignKey = false;
                colvarDepartmentName.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepartmentName);
                
                TableSchema.TableColumn colvarStockId = new TableSchema.TableColumn(schema);
                colvarStockId.ColumnName = "Stock_ID";
                colvarStockId.DataType = DbType.Int16;
                colvarStockId.MaxLength = 0;
                colvarStockId.AutoIncrement = false;
                colvarStockId.IsNullable = true;
                colvarStockId.IsPrimaryKey = false;
                colvarStockId.IsForeignKey = false;
                colvarStockId.IsReadOnly = false;
                
                schema.Columns.Add(colvarStockId);
                
                TableSchema.TableColumn colvarStockName = new TableSchema.TableColumn(schema);
                colvarStockName.ColumnName = "Stock_name";
                colvarStockName.DataType = DbType.String;
                colvarStockName.MaxLength = 50;
                colvarStockName.AutoIncrement = false;
                colvarStockName.IsNullable = true;
                colvarStockName.IsPrimaryKey = false;
                colvarStockName.IsForeignKey = false;
                colvarStockName.IsReadOnly = false;
                
                schema.Columns.Add(colvarStockName);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("view_TimKiemPhatThuocTaiKho",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewTimKiemPhatThuocTaiKho()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewTimKiemPhatThuocTaiKho(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewTimKiemPhatThuocTaiKho(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewTimKiemPhatThuocTaiKho(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("PresId")]
        [Bindable(true)]
        public int PresId 
	    {
		    get
		    {
			    return GetColumnValue<int>("Pres_ID");
		    }
            set 
		    {
			    SetColumnValue("Pres_ID", value);
            }
        }
	      
        [XmlAttribute("TreatId")]
        [Bindable(true)]
        public int? TreatId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Treat_ID");
		    }
            set 
		    {
			    SetColumnValue("Treat_ID", value);
            }
        }
	      
        [XmlAttribute("PatientDeptId")]
        [Bindable(true)]
        public int? PatientDeptId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PatientDept_ID");
		    }
            set 
		    {
			    SetColumnValue("PatientDept_ID", value);
            }
        }
	      
        [XmlAttribute("ReplacePresId")]
        [Bindable(true)]
        public int? ReplacePresId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ReplacePres_ID");
		    }
            set 
		    {
			    SetColumnValue("ReplacePres_ID", value);
            }
        }
	      
        [XmlAttribute("ExamId")]
        [Bindable(true)]
        public long? ExamId 
	    {
		    get
		    {
			    return GetColumnValue<long?>("Exam_ID");
		    }
            set 
		    {
			    SetColumnValue("Exam_ID", value);
            }
        }
	      
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public long? PatientId 
	    {
		    get
		    {
			    return GetColumnValue<long?>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Code");
		    }
            set 
		    {
			    SetColumnValue("Patient_Code", value);
            }
        }
	      
        [XmlAttribute("PresDate")]
        [Bindable(true)]
        public DateTime PresDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("Pres_Date");
		    }
            set 
		    {
			    SetColumnValue("Pres_Date", value);
            }
        }
	      
        [XmlAttribute("AssignId")]
        [Bindable(true)]
        public short? AssignId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Assign_ID");
		    }
            set 
		    {
			    SetColumnValue("Assign_ID", value);
            }
        }
	      
        [XmlAttribute("Status")]
        [Bindable(true)]
        public byte Status 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Status");
		    }
            set 
		    {
			    SetColumnValue("Status", value);
            }
        }
	      
        [XmlAttribute("PaymentStatus")]
        [Bindable(true)]
        public byte PaymentStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Payment_Status");
		    }
            set 
		    {
			    SetColumnValue("Payment_Status", value);
            }
        }
	      
        [XmlAttribute("PaymentDate")]
        [Bindable(true)]
        public DateTime? PaymentDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Payment_Date");
		    }
            set 
		    {
			    SetColumnValue("Payment_Date", value);
            }
        }
	      
        [XmlAttribute("CreatedBy")]
        [Bindable(true)]
        public string CreatedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("Created_by");
		    }
            set 
		    {
			    SetColumnValue("Created_by", value);
            }
        }
	      
        [XmlAttribute("CreatedDate")]
        [Bindable(true)]
        public DateTime CreatedDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("CreatedDate");
		    }
            set 
		    {
			    SetColumnValue("CreatedDate", value);
            }
        }
	      
        [XmlAttribute("SDesc")]
        [Bindable(true)]
        public string SDesc 
	    {
		    get
		    {
			    return GetColumnValue<string>("sDesc");
		    }
            set 
		    {
			    SetColumnValue("sDesc", value);
            }
        }
	      
        [XmlAttribute("PresName")]
        [Bindable(true)]
        public string PresName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Pres_Name");
		    }
            set 
		    {
			    SetColumnValue("Pres_Name", value);
            }
        }
	      
        [XmlAttribute("PresCode")]
        [Bindable(true)]
        public string PresCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Pres_Code");
		    }
            set 
		    {
			    SetColumnValue("Pres_Code", value);
            }
        }
	      
        [XmlAttribute("Signer")]
        [Bindable(true)]
        public short? Signer 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Signer");
		    }
            set 
		    {
			    SetColumnValue("Signer", value);
            }
        }
	      
        [XmlAttribute("SignedDate")]
        [Bindable(true)]
        public DateTime? SignedDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Signed_Date");
		    }
            set 
		    {
			    SetColumnValue("Signed_Date", value);
            }
        }
	      
        [XmlAttribute("PreHos")]
        [Bindable(true)]
        public byte? PreHos 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Pre_Hos");
		    }
            set 
		    {
			    SetColumnValue("Pre_Hos", value);
            }
        }
	      
        [XmlAttribute("PresType")]
        [Bindable(true)]
        public byte? PresType 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Pres_Type");
		    }
            set 
		    {
			    SetColumnValue("Pres_Type", value);
            }
        }
	      
        [XmlAttribute("DepartmentId")]
        [Bindable(true)]
        public short? DepartmentId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Department_ID");
		    }
            set 
		    {
			    SetColumnValue("Department_ID", value);
            }
        }
	      
        [XmlAttribute("RoomId")]
        [Bindable(true)]
        public short? RoomId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Room_ID");
		    }
            set 
		    {
			    SetColumnValue("Room_ID", value);
            }
        }
	      
        [XmlAttribute("BedId")]
        [Bindable(true)]
        public short? BedId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Bed_ID");
		    }
            set 
		    {
			    SetColumnValue("Bed_ID", value);
            }
        }
	      
        [XmlAttribute("PresStatus")]
        [Bindable(true)]
        public byte? PresStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Pres_Status");
		    }
            set 
		    {
			    SetColumnValue("Pres_Status", value);
            }
        }
	      
        [XmlAttribute("KieuDonthuoc")]
        [Bindable(true)]
        public string KieuDonthuoc 
	    {
		    get
		    {
			    return GetColumnValue<string>("KIEU_DONTHUOC");
		    }
            set 
		    {
			    SetColumnValue("KIEU_DONTHUOC", value);
            }
        }
	      
        [XmlAttribute("LoiDanBsy")]
        [Bindable(true)]
        public string LoiDanBsy 
	    {
		    get
		    {
			    return GetColumnValue<string>("LOI_DAN_BSY");
		    }
            set 
		    {
			    SetColumnValue("LOI_DAN_BSY", value);
            }
        }
	      
        [XmlAttribute("NgayTaiKham")]
        [Bindable(true)]
        public DateTime? NgayTaiKham 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("NGAY_TAI_KHAM");
		    }
            set 
		    {
			    SetColumnValue("NGAY_TAI_KHAM", value);
            }
        }
	      
        [XmlAttribute("TaiKham")]
        [Bindable(true)]
        public string TaiKham 
	    {
		    get
		    {
			    return GetColumnValue<string>("TAI_KHAM");
		    }
            set 
		    {
			    SetColumnValue("TAI_KHAM", value);
            }
        }
	      
        [XmlAttribute("MaKhoaThien")]
        [Bindable(true)]
        public string MaKhoaThien 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_KHOA_THIEN");
		    }
            set 
		    {
			    SetColumnValue("MA_KHOA_THIEN", value);
            }
        }
	      
        [XmlAttribute("KeDonTquay")]
        [Bindable(true)]
        public byte? KeDonTquay 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("KE_DON_TQUAY");
		    }
            set 
		    {
			    SetColumnValue("KE_DON_TQUAY", value);
            }
        }
	      
        [XmlAttribute("PatientName")]
        [Bindable(true)]
        public string PatientName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Name");
		    }
            set 
		    {
			    SetColumnValue("Patient_Name", value);
            }
        }
	      
        [XmlAttribute("PatientAddr")]
        [Bindable(true)]
        public string PatientAddr 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Addr");
		    }
            set 
		    {
			    SetColumnValue("Patient_Addr", value);
            }
        }
	      
        [XmlAttribute("ProvinceId")]
        [Bindable(true)]
        public string ProvinceId 
	    {
		    get
		    {
			    return GetColumnValue<string>("Province_ID");
		    }
            set 
		    {
			    SetColumnValue("Province_ID", value);
            }
        }
	      
        [XmlAttribute("DistrictId")]
        [Bindable(true)]
        public string DistrictId 
	    {
		    get
		    {
			    return GetColumnValue<string>("District_ID");
		    }
            set 
		    {
			    SetColumnValue("District_ID", value);
            }
        }
	      
        [XmlAttribute("PatientBirth")]
        [Bindable(true)]
        public DateTime? PatientBirth 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Patient_Birth");
		    }
            set 
		    {
			    SetColumnValue("Patient_Birth", value);
            }
        }
	      
        [XmlAttribute("YearOfBirth")]
        [Bindable(true)]
        public short? YearOfBirth 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Year_Of_Birth");
		    }
            set 
		    {
			    SetColumnValue("Year_Of_Birth", value);
            }
        }
	      
        [XmlAttribute("PatientSex")]
        [Bindable(true)]
        public byte PatientSex 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Patient_Sex");
		    }
            set 
		    {
			    SetColumnValue("Patient_Sex", value);
            }
        }
	      
        [XmlAttribute("PatientJob")]
        [Bindable(true)]
        public string PatientJob 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Job");
		    }
            set 
		    {
			    SetColumnValue("Patient_Job", value);
            }
        }
	      
        [XmlAttribute("Offices")]
        [Bindable(true)]
        public string Offices 
	    {
		    get
		    {
			    return GetColumnValue<string>("Offices");
		    }
            set 
		    {
			    SetColumnValue("Offices", value);
            }
        }
	      
        [XmlAttribute("TenKhongDau")]
        [Bindable(true)]
        public string TenKhongDau 
	    {
		    get
		    {
			    return GetColumnValue<string>("TEN_KHONG_DAU");
		    }
            set 
		    {
			    SetColumnValue("TEN_KHONG_DAU", value);
            }
        }
	      
        [XmlAttribute("IdentifyNum")]
        [Bindable(true)]
        public string IdentifyNum 
	    {
		    get
		    {
			    return GetColumnValue<string>("Identify_Num");
		    }
            set 
		    {
			    SetColumnValue("Identify_Num", value);
            }
        }
	      
        [XmlAttribute("ObjectTypeId")]
        [Bindable(true)]
        public short ObjectTypeId 
	    {
		    get
		    {
			    return GetColumnValue<short>("ObjectType_ID");
		    }
            set 
		    {
			    SetColumnValue("ObjectType_ID", value);
            }
        }
	      
        [XmlAttribute("InsuranceNum")]
        [Bindable(true)]
        public string InsuranceNum 
	    {
		    get
		    {
			    return GetColumnValue<string>("Insurance_Num");
		    }
            set 
		    {
			    SetColumnValue("Insurance_Num", value);
            }
        }
	      
        [XmlAttribute("MaDoiTuong")]
        [Bindable(true)]
        public string MaDoiTuong 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ma_DoiTuong");
		    }
            set 
		    {
			    SetColumnValue("Ma_DoiTuong", value);
            }
        }
	      
        [XmlAttribute("SPresDate")]
        [Bindable(true)]
        public string SPresDate 
	    {
		    get
		    {
			    return GetColumnValue<string>("sPresDate");
		    }
            set 
		    {
			    SetColumnValue("sPresDate", value);
            }
        }
	      
        [XmlAttribute("Age")]
        [Bindable(true)]
        public int? Age 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Age");
		    }
            set 
		    {
			    SetColumnValue("Age", value);
            }
        }
	      
        [XmlAttribute("MaDTuong")]
        [Bindable(true)]
        public string MaDTuong 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ma_DTuong");
		    }
            set 
		    {
			    SetColumnValue("Ma_DTuong", value);
            }
        }
	      
        [XmlAttribute("StaffName")]
        [Bindable(true)]
        public string StaffName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Staff_name");
		    }
            set 
		    {
			    SetColumnValue("Staff_name", value);
            }
        }
	      
        [XmlAttribute("DepartmentName")]
        [Bindable(true)]
        public string DepartmentName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Department_Name");
		    }
            set 
		    {
			    SetColumnValue("Department_Name", value);
            }
        }
	      
        [XmlAttribute("StockId")]
        [Bindable(true)]
        public short? StockId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Stock_ID");
		    }
            set 
		    {
			    SetColumnValue("Stock_ID", value);
            }
        }
	      
        [XmlAttribute("StockName")]
        [Bindable(true)]
        public string StockName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Stock_name");
		    }
            set 
		    {
			    SetColumnValue("Stock_name", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string PresId = @"Pres_ID";
            
            public static string TreatId = @"Treat_ID";
            
            public static string PatientDeptId = @"PatientDept_ID";
            
            public static string ReplacePresId = @"ReplacePres_ID";
            
            public static string ExamId = @"Exam_ID";
            
            public static string PatientId = @"Patient_ID";
            
            public static string PatientCode = @"Patient_Code";
            
            public static string PresDate = @"Pres_Date";
            
            public static string AssignId = @"Assign_ID";
            
            public static string Status = @"Status";
            
            public static string PaymentStatus = @"Payment_Status";
            
            public static string PaymentDate = @"Payment_Date";
            
            public static string CreatedBy = @"Created_by";
            
            public static string CreatedDate = @"CreatedDate";
            
            public static string SDesc = @"sDesc";
            
            public static string PresName = @"Pres_Name";
            
            public static string PresCode = @"Pres_Code";
            
            public static string Signer = @"Signer";
            
            public static string SignedDate = @"Signed_Date";
            
            public static string PreHos = @"Pre_Hos";
            
            public static string PresType = @"Pres_Type";
            
            public static string DepartmentId = @"Department_ID";
            
            public static string RoomId = @"Room_ID";
            
            public static string BedId = @"Bed_ID";
            
            public static string PresStatus = @"Pres_Status";
            
            public static string KieuDonthuoc = @"KIEU_DONTHUOC";
            
            public static string LoiDanBsy = @"LOI_DAN_BSY";
            
            public static string NgayTaiKham = @"NGAY_TAI_KHAM";
            
            public static string TaiKham = @"TAI_KHAM";
            
            public static string MaKhoaThien = @"MA_KHOA_THIEN";
            
            public static string KeDonTquay = @"KE_DON_TQUAY";
            
            public static string PatientName = @"Patient_Name";
            
            public static string PatientAddr = @"Patient_Addr";
            
            public static string ProvinceId = @"Province_ID";
            
            public static string DistrictId = @"District_ID";
            
            public static string PatientBirth = @"Patient_Birth";
            
            public static string YearOfBirth = @"Year_Of_Birth";
            
            public static string PatientSex = @"Patient_Sex";
            
            public static string PatientJob = @"Patient_Job";
            
            public static string Offices = @"Offices";
            
            public static string TenKhongDau = @"TEN_KHONG_DAU";
            
            public static string IdentifyNum = @"Identify_Num";
            
            public static string ObjectTypeId = @"ObjectType_ID";
            
            public static string InsuranceNum = @"Insurance_Num";
            
            public static string MaDoiTuong = @"Ma_DoiTuong";
            
            public static string SPresDate = @"sPresDate";
            
            public static string Age = @"Age";
            
            public static string MaDTuong = @"Ma_DTuong";
            
            public static string StaffName = @"Staff_name";
            
            public static string DepartmentName = @"Department_Name";
            
            public static string StockId = @"Stock_ID";
            
            public static string StockName = @"Stock_name";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
