using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewThongTinTongHopChiPhi class.
    /// </summary>
    [Serializable]
    public partial class ViewThongTinTongHopChiPhiCollection : ReadOnlyList<ViewThongTinTongHopChiPhi, ViewThongTinTongHopChiPhiCollection>
    {        
        public ViewThongTinTongHopChiPhiCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_ThongTinTongHop_ChiPhi view.
    /// </summary>
    [Serializable]
    public partial class ViewThongTinTongHopChiPhi : ReadOnlyRecord<ViewThongTinTongHopChiPhi>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_ThongTinTongHop_ChiPhi", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarPaymentTypeId = new TableSchema.TableColumn(schema);
                colvarPaymentTypeId.ColumnName = "PaymentType_ID";
                colvarPaymentTypeId.DataType = DbType.Int32;
                colvarPaymentTypeId.MaxLength = 0;
                colvarPaymentTypeId.AutoIncrement = false;
                colvarPaymentTypeId.IsNullable = false;
                colvarPaymentTypeId.IsPrimaryKey = false;
                colvarPaymentTypeId.IsForeignKey = false;
                colvarPaymentTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentTypeId);
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Int64;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = true;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_Code";
                colvarPatientCode.DataType = DbType.String;
                colvarPatientCode.MaxLength = 20;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = true;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
                colvarId.ColumnName = "ID";
                colvarId.DataType = DbType.Int64;
                colvarId.MaxLength = 0;
                colvarId.AutoIncrement = false;
                colvarId.IsNullable = false;
                colvarId.IsPrimaryKey = false;
                colvarId.IsForeignKey = false;
                colvarId.IsReadOnly = false;
                
                schema.Columns.Add(colvarId);
                
                TableSchema.TableColumn colvarIdDetail = new TableSchema.TableColumn(schema);
                colvarIdDetail.ColumnName = "ID_Detail";
                colvarIdDetail.DataType = DbType.Int64;
                colvarIdDetail.MaxLength = 0;
                colvarIdDetail.AutoIncrement = false;
                colvarIdDetail.IsNullable = false;
                colvarIdDetail.IsPrimaryKey = false;
                colvarIdDetail.IsForeignKey = false;
                colvarIdDetail.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdDetail);
                
                TableSchema.TableColumn colvarOriginPrice = new TableSchema.TableColumn(schema);
                colvarOriginPrice.ColumnName = "Origin_Price";
                colvarOriginPrice.DataType = DbType.Decimal;
                colvarOriginPrice.MaxLength = 0;
                colvarOriginPrice.AutoIncrement = false;
                colvarOriginPrice.IsNullable = true;
                colvarOriginPrice.IsPrimaryKey = false;
                colvarOriginPrice.IsForeignKey = false;
                colvarOriginPrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginPrice);
                
                TableSchema.TableColumn colvarSurchargePrice = new TableSchema.TableColumn(schema);
                colvarSurchargePrice.ColumnName = "Surcharge_Price";
                colvarSurchargePrice.DataType = DbType.Decimal;
                colvarSurchargePrice.MaxLength = 0;
                colvarSurchargePrice.AutoIncrement = false;
                colvarSurchargePrice.IsNullable = true;
                colvarSurchargePrice.IsPrimaryKey = false;
                colvarSurchargePrice.IsForeignKey = false;
                colvarSurchargePrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarSurchargePrice);
                
                TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
                colvarQuantity.ColumnName = "Quantity";
                colvarQuantity.DataType = DbType.Int32;
                colvarQuantity.MaxLength = 0;
                colvarQuantity.AutoIncrement = false;
                colvarQuantity.IsNullable = true;
                colvarQuantity.IsPrimaryKey = false;
                colvarQuantity.IsForeignKey = false;
                colvarQuantity.IsReadOnly = false;
                
                schema.Columns.Add(colvarQuantity);
                
                TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
                colvarServiceId.ColumnName = "Service_ID";
                colvarServiceId.DataType = DbType.Int32;
                colvarServiceId.MaxLength = 0;
                colvarServiceId.AutoIncrement = false;
                colvarServiceId.IsNullable = true;
                colvarServiceId.IsPrimaryKey = false;
                colvarServiceId.IsForeignKey = false;
                colvarServiceId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceId);
                
                TableSchema.TableColumn colvarServiceDetailId = new TableSchema.TableColumn(schema);
                colvarServiceDetailId.ColumnName = "ServiceDetail_ID";
                colvarServiceDetailId.DataType = DbType.Int32;
                colvarServiceDetailId.MaxLength = 0;
                colvarServiceDetailId.AutoIncrement = false;
                colvarServiceDetailId.IsNullable = true;
                colvarServiceDetailId.IsPrimaryKey = false;
                colvarServiceDetailId.IsForeignKey = false;
                colvarServiceDetailId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceDetailId);
                
                TableSchema.TableColumn colvarServiceDetailName = new TableSchema.TableColumn(schema);
                colvarServiceDetailName.ColumnName = "ServiceDetail_Name";
                colvarServiceDetailName.DataType = DbType.String;
                colvarServiceDetailName.MaxLength = 300;
                colvarServiceDetailName.AutoIncrement = false;
                colvarServiceDetailName.IsNullable = true;
                colvarServiceDetailName.IsPrimaryKey = false;
                colvarServiceDetailName.IsForeignKey = false;
                colvarServiceDetailName.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceDetailName);
                
                TableSchema.TableColumn colvarTenHienThi = new TableSchema.TableColumn(schema);
                colvarTenHienThi.ColumnName = "TEN_HIEN_THI";
                colvarTenHienThi.DataType = DbType.String;
                colvarTenHienThi.MaxLength = 300;
                colvarTenHienThi.AutoIncrement = false;
                colvarTenHienThi.IsNullable = true;
                colvarTenHienThi.IsPrimaryKey = false;
                colvarTenHienThi.IsForeignKey = false;
                colvarTenHienThi.IsReadOnly = false;
                
                schema.Columns.Add(colvarTenHienThi);
                
                TableSchema.TableColumn colvarDonViTinh = new TableSchema.TableColumn(schema);
                colvarDonViTinh.ColumnName = "DonVi_Tinh";
                colvarDonViTinh.DataType = DbType.String;
                colvarDonViTinh.MaxLength = 100;
                colvarDonViTinh.AutoIncrement = false;
                colvarDonViTinh.IsNullable = true;
                colvarDonViTinh.IsPrimaryKey = false;
                colvarDonViTinh.IsForeignKey = false;
                colvarDonViTinh.IsReadOnly = false;
                
                schema.Columns.Add(colvarDonViTinh);
                
                TableSchema.TableColumn colvarDoctorId = new TableSchema.TableColumn(schema);
                colvarDoctorId.ColumnName = "Doctor_ID";
                colvarDoctorId.DataType = DbType.Int16;
                colvarDoctorId.MaxLength = 0;
                colvarDoctorId.AutoIncrement = false;
                colvarDoctorId.IsNullable = true;
                colvarDoctorId.IsPrimaryKey = false;
                colvarDoctorId.IsForeignKey = false;
                colvarDoctorId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDoctorId);
                
                TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
                colvarPaymentStatus.ColumnName = "Payment_Status";
                colvarPaymentStatus.DataType = DbType.Int32;
                colvarPaymentStatus.MaxLength = 0;
                colvarPaymentStatus.AutoIncrement = false;
                colvarPaymentStatus.IsNullable = true;
                colvarPaymentStatus.IsPrimaryKey = false;
                colvarPaymentStatus.IsForeignKey = false;
                colvarPaymentStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentStatus);
                
                TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
                colvarIsPayment.ColumnName = "IsPayment";
                colvarIsPayment.DataType = DbType.Int32;
                colvarIsPayment.MaxLength = 0;
                colvarIsPayment.AutoIncrement = false;
                colvarIsPayment.IsNullable = true;
                colvarIsPayment.IsPrimaryKey = false;
                colvarIsPayment.IsForeignKey = false;
                colvarIsPayment.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsPayment);
                
                TableSchema.TableColumn colvarNgayDky = new TableSchema.TableColumn(schema);
                colvarNgayDky.ColumnName = "NGAY_DKY";
                colvarNgayDky.DataType = DbType.DateTime;
                colvarNgayDky.MaxLength = 0;
                colvarNgayDky.AutoIncrement = false;
                colvarNgayDky.IsNullable = true;
                colvarNgayDky.IsPrimaryKey = false;
                colvarNgayDky.IsForeignKey = false;
                colvarNgayDky.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgayDky);
                
                TableSchema.TableColumn colvarNoiTru = new TableSchema.TableColumn(schema);
                colvarNoiTru.ColumnName = "NoiTru";
                colvarNoiTru.DataType = DbType.Int32;
                colvarNoiTru.MaxLength = 0;
                colvarNoiTru.AutoIncrement = false;
                colvarNoiTru.IsNullable = false;
                colvarNoiTru.IsPrimaryKey = false;
                colvarNoiTru.IsForeignKey = false;
                colvarNoiTru.IsReadOnly = false;
                
                schema.Columns.Add(colvarNoiTru);
                
                TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
                colvarTrongGoi.ColumnName = "trong_goi";
                colvarTrongGoi.DataType = DbType.Int32;
                colvarTrongGoi.MaxLength = 0;
                colvarTrongGoi.AutoIncrement = false;
                colvarTrongGoi.IsNullable = false;
                colvarTrongGoi.IsPrimaryKey = false;
                colvarTrongGoi.IsForeignKey = false;
                colvarTrongGoi.IsReadOnly = false;
                
                schema.Columns.Add(colvarTrongGoi);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("view_ThongTinTongHop_ChiPhi",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewThongTinTongHopChiPhi()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewThongTinTongHopChiPhi(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewThongTinTongHopChiPhi(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewThongTinTongHopChiPhi(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("PaymentTypeId")]
        [Bindable(true)]
        public int PaymentTypeId 
	    {
		    get
		    {
			    return GetColumnValue<int>("PaymentType_ID");
		    }
            set 
		    {
			    SetColumnValue("PaymentType_ID", value);
            }
        }
	      
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public long? PatientId 
	    {
		    get
		    {
			    return GetColumnValue<long?>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Code");
		    }
            set 
		    {
			    SetColumnValue("Patient_Code", value);
            }
        }
	      
        [XmlAttribute("Id")]
        [Bindable(true)]
        public long Id 
	    {
		    get
		    {
			    return GetColumnValue<long>("ID");
		    }
            set 
		    {
			    SetColumnValue("ID", value);
            }
        }
	      
        [XmlAttribute("IdDetail")]
        [Bindable(true)]
        public long IdDetail 
	    {
		    get
		    {
			    return GetColumnValue<long>("ID_Detail");
		    }
            set 
		    {
			    SetColumnValue("ID_Detail", value);
            }
        }
	      
        [XmlAttribute("OriginPrice")]
        [Bindable(true)]
        public decimal? OriginPrice 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Origin_Price");
		    }
            set 
		    {
			    SetColumnValue("Origin_Price", value);
            }
        }
	      
        [XmlAttribute("SurchargePrice")]
        [Bindable(true)]
        public decimal? SurchargePrice 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Surcharge_Price");
		    }
            set 
		    {
			    SetColumnValue("Surcharge_Price", value);
            }
        }
	      
        [XmlAttribute("Quantity")]
        [Bindable(true)]
        public int? Quantity 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Quantity");
		    }
            set 
		    {
			    SetColumnValue("Quantity", value);
            }
        }
	      
        [XmlAttribute("ServiceId")]
        [Bindable(true)]
        public int? ServiceId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Service_ID");
		    }
            set 
		    {
			    SetColumnValue("Service_ID", value);
            }
        }
	      
        [XmlAttribute("ServiceDetailId")]
        [Bindable(true)]
        public int? ServiceDetailId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ServiceDetail_ID");
		    }
            set 
		    {
			    SetColumnValue("ServiceDetail_ID", value);
            }
        }
	      
        [XmlAttribute("ServiceDetailName")]
        [Bindable(true)]
        public string ServiceDetailName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ServiceDetail_Name");
		    }
            set 
		    {
			    SetColumnValue("ServiceDetail_Name", value);
            }
        }
	      
        [XmlAttribute("TenHienThi")]
        [Bindable(true)]
        public string TenHienThi 
	    {
		    get
		    {
			    return GetColumnValue<string>("TEN_HIEN_THI");
		    }
            set 
		    {
			    SetColumnValue("TEN_HIEN_THI", value);
            }
        }
	      
        [XmlAttribute("DonViTinh")]
        [Bindable(true)]
        public string DonViTinh 
	    {
		    get
		    {
			    return GetColumnValue<string>("DonVi_Tinh");
		    }
            set 
		    {
			    SetColumnValue("DonVi_Tinh", value);
            }
        }
	      
        [XmlAttribute("DoctorId")]
        [Bindable(true)]
        public short? DoctorId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Doctor_ID");
		    }
            set 
		    {
			    SetColumnValue("Doctor_ID", value);
            }
        }
	      
        [XmlAttribute("PaymentStatus")]
        [Bindable(true)]
        public int? PaymentStatus 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Payment_Status");
		    }
            set 
		    {
			    SetColumnValue("Payment_Status", value);
            }
        }
	      
        [XmlAttribute("IsPayment")]
        [Bindable(true)]
        public int? IsPayment 
	    {
		    get
		    {
			    return GetColumnValue<int?>("IsPayment");
		    }
            set 
		    {
			    SetColumnValue("IsPayment", value);
            }
        }
	      
        [XmlAttribute("NgayDky")]
        [Bindable(true)]
        public DateTime? NgayDky 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("NGAY_DKY");
		    }
            set 
		    {
			    SetColumnValue("NGAY_DKY", value);
            }
        }
	      
        [XmlAttribute("NoiTru")]
        [Bindable(true)]
        public int NoiTru 
	    {
		    get
		    {
			    return GetColumnValue<int>("NoiTru");
		    }
            set 
		    {
			    SetColumnValue("NoiTru", value);
            }
        }
	      
        [XmlAttribute("TrongGoi")]
        [Bindable(true)]
        public int TrongGoi 
	    {
		    get
		    {
			    return GetColumnValue<int>("trong_goi");
		    }
            set 
		    {
			    SetColumnValue("trong_goi", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string PaymentTypeId = @"PaymentType_ID";
            
            public static string PatientId = @"Patient_ID";
            
            public static string PatientCode = @"Patient_Code";
            
            public static string Id = @"ID";
            
            public static string IdDetail = @"ID_Detail";
            
            public static string OriginPrice = @"Origin_Price";
            
            public static string SurchargePrice = @"Surcharge_Price";
            
            public static string Quantity = @"Quantity";
            
            public static string ServiceId = @"Service_ID";
            
            public static string ServiceDetailId = @"ServiceDetail_ID";
            
            public static string ServiceDetailName = @"ServiceDetail_Name";
            
            public static string TenHienThi = @"TEN_HIEN_THI";
            
            public static string DonViTinh = @"DonVi_Tinh";
            
            public static string DoctorId = @"Doctor_ID";
            
            public static string PaymentStatus = @"Payment_Status";
            
            public static string IsPayment = @"IsPayment";
            
            public static string NgayDky = @"NGAY_DKY";
            
            public static string NoiTru = @"NoiTru";
            
            public static string TrongGoi = @"trong_goi";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
