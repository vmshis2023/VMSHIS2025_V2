using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the LNhomDvuCl class.
	/// </summary>
    [Serializable]
	public partial class LNhomDvuClCollection : ActiveList<LNhomDvuCl, LNhomDvuClCollection>
	{	   
		public LNhomDvuClCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>LNhomDvuClCollection</returns>
		public LNhomDvuClCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                LNhomDvuCl o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the L_NHOM_DVU_CLS table.
	/// </summary>
	[Serializable]
	public partial class LNhomDvuCl : ActiveRecord<LNhomDvuCl>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public LNhomDvuCl()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public LNhomDvuCl(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public LNhomDvuCl(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public LNhomDvuCl(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("L_NHOM_DVU_CLS", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdNhomcls = new TableSchema.TableColumn(schema);
				colvarIdNhomcls.ColumnName = "ID_NHOMCLS";
				colvarIdNhomcls.DataType = DbType.Int32;
				colvarIdNhomcls.MaxLength = 0;
				colvarIdNhomcls.AutoIncrement = true;
				colvarIdNhomcls.IsNullable = false;
				colvarIdNhomcls.IsPrimaryKey = true;
				colvarIdNhomcls.IsForeignKey = false;
				colvarIdNhomcls.IsReadOnly = false;
				colvarIdNhomcls.DefaultSetting = @"";
				colvarIdNhomcls.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhomcls);
				
				TableSchema.TableColumn colvarMaNhomcls = new TableSchema.TableColumn(schema);
				colvarMaNhomcls.ColumnName = "MA_NHOMCLS";
				colvarMaNhomcls.DataType = DbType.String;
				colvarMaNhomcls.MaxLength = 50;
				colvarMaNhomcls.AutoIncrement = false;
				colvarMaNhomcls.IsNullable = true;
				colvarMaNhomcls.IsPrimaryKey = false;
				colvarMaNhomcls.IsForeignKey = false;
				colvarMaNhomcls.IsReadOnly = false;
				colvarMaNhomcls.DefaultSetting = @"";
				colvarMaNhomcls.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNhomcls);
				
				TableSchema.TableColumn colvarTenNhomcls = new TableSchema.TableColumn(schema);
				colvarTenNhomcls.ColumnName = "TEN_NHOMCLS";
				colvarTenNhomcls.DataType = DbType.String;
				colvarTenNhomcls.MaxLength = 200;
				colvarTenNhomcls.AutoIncrement = false;
				colvarTenNhomcls.IsNullable = true;
				colvarTenNhomcls.IsPrimaryKey = false;
				colvarTenNhomcls.IsForeignKey = false;
				colvarTenNhomcls.IsReadOnly = false;
				colvarTenNhomcls.DefaultSetting = @"";
				colvarTenNhomcls.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenNhomcls);
				
				TableSchema.TableColumn colvarIdLoaiDvu = new TableSchema.TableColumn(schema);
				colvarIdLoaiDvu.ColumnName = "ID_LOAI_DVU";
				colvarIdLoaiDvu.DataType = DbType.Int32;
				colvarIdLoaiDvu.MaxLength = 0;
				colvarIdLoaiDvu.AutoIncrement = false;
				colvarIdLoaiDvu.IsNullable = true;
				colvarIdLoaiDvu.IsPrimaryKey = false;
				colvarIdLoaiDvu.IsForeignKey = false;
				colvarIdLoaiDvu.IsReadOnly = false;
				colvarIdLoaiDvu.DefaultSetting = @"";
				colvarIdLoaiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdLoaiDvu);
				
				TableSchema.TableColumn colvarIdDvu = new TableSchema.TableColumn(schema);
				colvarIdDvu.ColumnName = "ID_DVU";
				colvarIdDvu.DataType = DbType.Int32;
				colvarIdDvu.MaxLength = 0;
				colvarIdDvu.AutoIncrement = false;
				colvarIdDvu.IsNullable = true;
				colvarIdDvu.IsPrimaryKey = false;
				colvarIdDvu.IsForeignKey = false;
				colvarIdDvu.IsReadOnly = false;
				colvarIdDvu.DefaultSetting = @"";
				colvarIdDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDvu);
				
				TableSchema.TableColumn colvarIdNhomCha = new TableSchema.TableColumn(schema);
				colvarIdNhomCha.ColumnName = "ID_NHOM_CHA";
				colvarIdNhomCha.DataType = DbType.Int32;
				colvarIdNhomCha.MaxLength = 0;
				colvarIdNhomCha.AutoIncrement = false;
				colvarIdNhomCha.IsNullable = true;
				colvarIdNhomCha.IsPrimaryKey = false;
				colvarIdNhomCha.IsForeignKey = false;
				colvarIdNhomCha.IsReadOnly = false;
				colvarIdNhomCha.DefaultSetting = @"";
				colvarIdNhomCha.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhomCha);
				
				TableSchema.TableColumn colvarMaDtuong = new TableSchema.TableColumn(schema);
				colvarMaDtuong.ColumnName = "MA_DTUONG";
				colvarMaDtuong.DataType = DbType.String;
				colvarMaDtuong.MaxLength = 50;
				colvarMaDtuong.AutoIncrement = false;
				colvarMaDtuong.IsNullable = true;
				colvarMaDtuong.IsPrimaryKey = false;
				colvarMaDtuong.IsForeignKey = false;
				colvarMaDtuong.IsReadOnly = false;
				colvarMaDtuong.DefaultSetting = @"";
				colvarMaDtuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDtuong);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarSoThuTu = new TableSchema.TableColumn(schema);
				colvarSoThuTu.ColumnName = "SO_THU_TU";
				colvarSoThuTu.DataType = DbType.Int32;
				colvarSoThuTu.MaxLength = 0;
				colvarSoThuTu.AutoIncrement = false;
				colvarSoThuTu.IsNullable = true;
				colvarSoThuTu.IsPrimaryKey = false;
				colvarSoThuTu.IsForeignKey = false;
				colvarSoThuTu.IsReadOnly = false;
				colvarSoThuTu.DefaultSetting = @"";
				colvarSoThuTu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoThuTu);
				
				TableSchema.TableColumn colvarSoLuong = new TableSchema.TableColumn(schema);
				colvarSoLuong.ColumnName = "SO_LUONG";
				colvarSoLuong.DataType = DbType.Int32;
				colvarSoLuong.MaxLength = 0;
				colvarSoLuong.AutoIncrement = false;
				colvarSoLuong.IsNullable = true;
				colvarSoLuong.IsPrimaryKey = false;
				colvarSoLuong.IsForeignKey = false;
				colvarSoLuong.IsReadOnly = false;
				
						colvarSoLuong.DefaultSetting = @"((1))";
				colvarSoLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuong);
				
				TableSchema.TableColumn colvarMaKhoaThien = new TableSchema.TableColumn(schema);
				colvarMaKhoaThien.ColumnName = "MA_KHOA_THIEN";
				colvarMaKhoaThien.DataType = DbType.String;
				colvarMaKhoaThien.MaxLength = 50;
				colvarMaKhoaThien.AutoIncrement = false;
				colvarMaKhoaThien.IsNullable = true;
				colvarMaKhoaThien.IsPrimaryKey = false;
				colvarMaKhoaThien.IsForeignKey = false;
				colvarMaKhoaThien.IsReadOnly = false;
				colvarMaKhoaThien.DefaultSetting = @"";
				colvarMaKhoaThien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKhoaThien);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("L_NHOM_DVU_CLS",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdNhomcls")]
		[Bindable(true)]
		public int IdNhomcls 
		{
			get { return GetColumnValue<int>(Columns.IdNhomcls); }
			set { SetColumnValue(Columns.IdNhomcls, value); }
		}
		  
		[XmlAttribute("MaNhomcls")]
		[Bindable(true)]
		public string MaNhomcls 
		{
			get { return GetColumnValue<string>(Columns.MaNhomcls); }
			set { SetColumnValue(Columns.MaNhomcls, value); }
		}
		  
		[XmlAttribute("TenNhomcls")]
		[Bindable(true)]
		public string TenNhomcls 
		{
			get { return GetColumnValue<string>(Columns.TenNhomcls); }
			set { SetColumnValue(Columns.TenNhomcls, value); }
		}
		  
		[XmlAttribute("IdLoaiDvu")]
		[Bindable(true)]
		public int? IdLoaiDvu 
		{
			get { return GetColumnValue<int?>(Columns.IdLoaiDvu); }
			set { SetColumnValue(Columns.IdLoaiDvu, value); }
		}
		  
		[XmlAttribute("IdDvu")]
		[Bindable(true)]
		public int? IdDvu 
		{
			get { return GetColumnValue<int?>(Columns.IdDvu); }
			set { SetColumnValue(Columns.IdDvu, value); }
		}
		  
		[XmlAttribute("IdNhomCha")]
		[Bindable(true)]
		public int? IdNhomCha 
		{
			get { return GetColumnValue<int?>(Columns.IdNhomCha); }
			set { SetColumnValue(Columns.IdNhomCha, value); }
		}
		  
		[XmlAttribute("MaDtuong")]
		[Bindable(true)]
		public string MaDtuong 
		{
			get { return GetColumnValue<string>(Columns.MaDtuong); }
			set { SetColumnValue(Columns.MaDtuong, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("SoThuTu")]
		[Bindable(true)]
		public int? SoThuTu 
		{
			get { return GetColumnValue<int?>(Columns.SoThuTu); }
			set { SetColumnValue(Columns.SoThuTu, value); }
		}
		  
		[XmlAttribute("SoLuong")]
		[Bindable(true)]
		public int? SoLuong 
		{
			get { return GetColumnValue<int?>(Columns.SoLuong); }
			set { SetColumnValue(Columns.SoLuong, value); }
		}
		  
		[XmlAttribute("MaKhoaThien")]
		[Bindable(true)]
		public string MaKhoaThien 
		{
			get { return GetColumnValue<string>(Columns.MaKhoaThien); }
			set { SetColumnValue(Columns.MaKhoaThien, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaNhomcls,string varTenNhomcls,int? varIdLoaiDvu,int? varIdDvu,int? varIdNhomCha,string varMaDtuong,DateTime? varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,int? varSoThuTu,int? varSoLuong,string varMaKhoaThien)
		{
			LNhomDvuCl item = new LNhomDvuCl();
			
			item.MaNhomcls = varMaNhomcls;
			
			item.TenNhomcls = varTenNhomcls;
			
			item.IdLoaiDvu = varIdLoaiDvu;
			
			item.IdDvu = varIdDvu;
			
			item.IdNhomCha = varIdNhomCha;
			
			item.MaDtuong = varMaDtuong;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
			item.SoThuTu = varSoThuTu;
			
			item.SoLuong = varSoLuong;
			
			item.MaKhoaThien = varMaKhoaThien;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdNhomcls,string varMaNhomcls,string varTenNhomcls,int? varIdLoaiDvu,int? varIdDvu,int? varIdNhomCha,string varMaDtuong,DateTime? varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,int? varSoThuTu,int? varSoLuong,string varMaKhoaThien)
		{
			LNhomDvuCl item = new LNhomDvuCl();
			
				item.IdNhomcls = varIdNhomcls;
			
				item.MaNhomcls = varMaNhomcls;
			
				item.TenNhomcls = varTenNhomcls;
			
				item.IdLoaiDvu = varIdLoaiDvu;
			
				item.IdDvu = varIdDvu;
			
				item.IdNhomCha = varIdNhomCha;
			
				item.MaDtuong = varMaDtuong;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
				item.SoThuTu = varSoThuTu;
			
				item.SoLuong = varSoLuong;
			
				item.MaKhoaThien = varMaKhoaThien;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdNhomclsColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNhomclsColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TenNhomclsColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdLoaiDvuColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDvuColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhomChaColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDtuongColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn SoThuTuColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhoaThienColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdNhomcls = @"ID_NHOMCLS";
			 public static string MaNhomcls = @"MA_NHOMCLS";
			 public static string TenNhomcls = @"TEN_NHOMCLS";
			 public static string IdLoaiDvu = @"ID_LOAI_DVU";
			 public static string IdDvu = @"ID_DVU";
			 public static string IdNhomCha = @"ID_NHOM_CHA";
			 public static string MaDtuong = @"MA_DTUONG";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string SoThuTu = @"SO_THU_TU";
			 public static string SoLuong = @"SO_LUONG";
			 public static string MaKhoaThien = @"MA_KHOA_THIEN";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
