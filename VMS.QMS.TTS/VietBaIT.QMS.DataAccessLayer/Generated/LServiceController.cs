using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for L_Services
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class LServiceController
    {
        // Preload our schema..
        LService thisSchemaLoad = new LService();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public LServiceCollection FetchAll()
        {
            LServiceCollection coll = new LServiceCollection();
            Query qry = new Query(LService.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public LServiceCollection FetchByID(object ServiceId)
        {
            LServiceCollection coll = new LServiceCollection().Where("Service_ID", ServiceId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public LServiceCollection FetchByQuery(Query qry)
        {
            LServiceCollection coll = new LServiceCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object ServiceId)
        {
            return (LService.Delete(ServiceId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object ServiceId)
        {
            return (LService.Destroy(ServiceId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(short ServiceTypeId,string ServiceCode,string ServiceName,decimal Price,byte Valid,short? HtechService,short IntOrder,byte? ServiceDetail,string SDesc,string MaKetNoi,string MaNhom,string NguoiTao,DateTime? NgayTao,string NguoiSua,DateTime? NgaySua,short? DepartmentId,string TieuDePhieuCls,string MaInPhieu,string MaInPhieuHa,bool? IsChiPhiThem)
	    {
		    LService item = new LService();
		    
            item.ServiceTypeId = ServiceTypeId;
            
            item.ServiceCode = ServiceCode;
            
            item.ServiceName = ServiceName;
            
            item.Price = Price;
            
            item.Valid = Valid;
            
            item.HtechService = HtechService;
            
            item.IntOrder = IntOrder;
            
            item.ServiceDetail = ServiceDetail;
            
            item.SDesc = SDesc;
            
            item.MaKetNoi = MaKetNoi;
            
            item.MaNhom = MaNhom;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NgaySua = NgaySua;
            
            item.DepartmentId = DepartmentId;
            
            item.TieuDePhieuCls = TieuDePhieuCls;
            
            item.MaInPhieu = MaInPhieu;
            
            item.MaInPhieuHa = MaInPhieuHa;
            
            item.IsChiPhiThem = IsChiPhiThem;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(short ServiceId,short ServiceTypeId,string ServiceCode,string ServiceName,decimal Price,byte Valid,short? HtechService,short IntOrder,byte? ServiceDetail,string SDesc,string MaKetNoi,string MaNhom,string NguoiTao,DateTime? NgayTao,string NguoiSua,DateTime? NgaySua,short? DepartmentId,string TieuDePhieuCls,string MaInPhieu,string MaInPhieuHa,bool? IsChiPhiThem)
	    {
		    LService item = new LService();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.ServiceId = ServiceId;
				
			item.ServiceTypeId = ServiceTypeId;
				
			item.ServiceCode = ServiceCode;
				
			item.ServiceName = ServiceName;
				
			item.Price = Price;
				
			item.Valid = Valid;
				
			item.HtechService = HtechService;
				
			item.IntOrder = IntOrder;
				
			item.ServiceDetail = ServiceDetail;
				
			item.SDesc = SDesc;
				
			item.MaKetNoi = MaKetNoi;
				
			item.MaNhom = MaNhom;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NgaySua = NgaySua;
				
			item.DepartmentId = DepartmentId;
				
			item.TieuDePhieuCls = TieuDePhieuCls;
				
			item.MaInPhieu = MaInPhieu;
				
			item.MaInPhieuHa = MaInPhieuHa;
				
			item.IsChiPhiThem = IsChiPhiThem;
				
	        item.Save(UserName);
	    }
    }
}
