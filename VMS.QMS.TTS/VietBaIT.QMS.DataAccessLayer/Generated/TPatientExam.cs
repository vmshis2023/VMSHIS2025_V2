using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TPatientExam class.
	/// </summary>
    [Serializable]
	public partial class TPatientExamCollection : ActiveList<TPatientExam, TPatientExamCollection>
	{	   
		public TPatientExamCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TPatientExamCollection</returns>
		public TPatientExamCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TPatientExam o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_Patient_Exam table.
	/// </summary>
	[Serializable]
	public partial class TPatientExam : ActiveRecord<TPatientExam>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TPatientExam()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TPatientExam(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TPatientExam(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TPatientExam(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_Patient_Exam", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int64;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = false;
				colvarPatientId.IsPrimaryKey = true;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.AnsiString;
				colvarPatientCode.MaxLength = 20;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = false;
				colvarPatientCode.IsPrimaryKey = true;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarObjectTypeId = new TableSchema.TableColumn(schema);
				colvarObjectTypeId.ColumnName = "ObjectType_ID";
				colvarObjectTypeId.DataType = DbType.Int16;
				colvarObjectTypeId.MaxLength = 0;
				colvarObjectTypeId.AutoIncrement = false;
				colvarObjectTypeId.IsNullable = false;
				colvarObjectTypeId.IsPrimaryKey = false;
				colvarObjectTypeId.IsForeignKey = false;
				colvarObjectTypeId.IsReadOnly = false;
				colvarObjectTypeId.DefaultSetting = @"";
				colvarObjectTypeId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObjectTypeId);
				
				TableSchema.TableColumn colvarHosTrans = new TableSchema.TableColumn(schema);
				colvarHosTrans.ColumnName = "Hos_Trans";
				colvarHosTrans.DataType = DbType.Byte;
				colvarHosTrans.MaxLength = 0;
				colvarHosTrans.AutoIncrement = false;
				colvarHosTrans.IsNullable = false;
				colvarHosTrans.IsPrimaryKey = false;
				colvarHosTrans.IsForeignKey = false;
				colvarHosTrans.IsReadOnly = false;
				colvarHosTrans.DefaultSetting = @"";
				colvarHosTrans.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHosTrans);
				
				TableSchema.TableColumn colvarRelativeName = new TableSchema.TableColumn(schema);
				colvarRelativeName.ColumnName = "Relative_Name";
				colvarRelativeName.DataType = DbType.String;
				colvarRelativeName.MaxLength = 100;
				colvarRelativeName.AutoIncrement = false;
				colvarRelativeName.IsNullable = true;
				colvarRelativeName.IsPrimaryKey = false;
				colvarRelativeName.IsForeignKey = false;
				colvarRelativeName.IsReadOnly = false;
				colvarRelativeName.DefaultSetting = @"";
				colvarRelativeName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRelativeName);
				
				TableSchema.TableColumn colvarRelativePhone = new TableSchema.TableColumn(schema);
				colvarRelativePhone.ColumnName = "Relative_Phone";
				colvarRelativePhone.DataType = DbType.AnsiString;
				colvarRelativePhone.MaxLength = 20;
				colvarRelativePhone.AutoIncrement = false;
				colvarRelativePhone.IsNullable = true;
				colvarRelativePhone.IsPrimaryKey = false;
				colvarRelativePhone.IsForeignKey = false;
				colvarRelativePhone.IsReadOnly = false;
				colvarRelativePhone.DefaultSetting = @"";
				colvarRelativePhone.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRelativePhone);
				
				TableSchema.TableColumn colvarRelativeAddress = new TableSchema.TableColumn(schema);
				colvarRelativeAddress.ColumnName = "Relative_Address";
				colvarRelativeAddress.DataType = DbType.String;
				colvarRelativeAddress.MaxLength = 255;
				colvarRelativeAddress.AutoIncrement = false;
				colvarRelativeAddress.IsNullable = true;
				colvarRelativeAddress.IsPrimaryKey = false;
				colvarRelativeAddress.IsForeignKey = false;
				colvarRelativeAddress.IsReadOnly = false;
				colvarRelativeAddress.DefaultSetting = @"";
				colvarRelativeAddress.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRelativeAddress);
				
				TableSchema.TableColumn colvarInsuranceNum = new TableSchema.TableColumn(schema);
				colvarInsuranceNum.ColumnName = "Insurance_Num";
				colvarInsuranceNum.DataType = DbType.AnsiString;
				colvarInsuranceNum.MaxLength = 30;
				colvarInsuranceNum.AutoIncrement = false;
				colvarInsuranceNum.IsNullable = true;
				colvarInsuranceNum.IsPrimaryKey = false;
				colvarInsuranceNum.IsForeignKey = false;
				colvarInsuranceNum.IsReadOnly = false;
				colvarInsuranceNum.DefaultSetting = @"";
				colvarInsuranceNum.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInsuranceNum);
				
				TableSchema.TableColumn colvarInsuranceFromDate = new TableSchema.TableColumn(schema);
				colvarInsuranceFromDate.ColumnName = "Insurance_FromDate";
				colvarInsuranceFromDate.DataType = DbType.DateTime;
				colvarInsuranceFromDate.MaxLength = 0;
				colvarInsuranceFromDate.AutoIncrement = false;
				colvarInsuranceFromDate.IsNullable = true;
				colvarInsuranceFromDate.IsPrimaryKey = false;
				colvarInsuranceFromDate.IsForeignKey = false;
				colvarInsuranceFromDate.IsReadOnly = false;
				colvarInsuranceFromDate.DefaultSetting = @"";
				colvarInsuranceFromDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInsuranceFromDate);
				
				TableSchema.TableColumn colvarInsuranceToDate = new TableSchema.TableColumn(schema);
				colvarInsuranceToDate.ColumnName = "Insurance_ToDate";
				colvarInsuranceToDate.DataType = DbType.DateTime;
				colvarInsuranceToDate.MaxLength = 0;
				colvarInsuranceToDate.AutoIncrement = false;
				colvarInsuranceToDate.IsNullable = true;
				colvarInsuranceToDate.IsPrimaryKey = false;
				colvarInsuranceToDate.IsForeignKey = false;
				colvarInsuranceToDate.IsReadOnly = false;
				colvarInsuranceToDate.DefaultSetting = @"";
				colvarInsuranceToDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInsuranceToDate);
				
				TableSchema.TableColumn colvarInsuranceSupply = new TableSchema.TableColumn(schema);
				colvarInsuranceSupply.ColumnName = "Insurance_Supply";
				colvarInsuranceSupply.DataType = DbType.String;
				colvarInsuranceSupply.MaxLength = 100;
				colvarInsuranceSupply.AutoIncrement = false;
				colvarInsuranceSupply.IsNullable = true;
				colvarInsuranceSupply.IsPrimaryKey = false;
				colvarInsuranceSupply.IsForeignKey = false;
				colvarInsuranceSupply.IsReadOnly = false;
				colvarInsuranceSupply.DefaultSetting = @"";
				colvarInsuranceSupply.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInsuranceSupply);
				
				TableSchema.TableColumn colvarInsClinicCode = new TableSchema.TableColumn(schema);
				colvarInsClinicCode.ColumnName = "InsClinic_Code";
				colvarInsClinicCode.DataType = DbType.AnsiString;
				colvarInsClinicCode.MaxLength = 20;
				colvarInsClinicCode.AutoIncrement = false;
				colvarInsClinicCode.IsNullable = true;
				colvarInsClinicCode.IsPrimaryKey = false;
				colvarInsClinicCode.IsForeignKey = false;
				colvarInsClinicCode.IsReadOnly = false;
				colvarInsClinicCode.DefaultSetting = @"";
				colvarInsClinicCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInsClinicCode);
				
				TableSchema.TableColumn colvarInsObjectCode = new TableSchema.TableColumn(schema);
				colvarInsObjectCode.ColumnName = "InsObject_Code";
				colvarInsObjectCode.DataType = DbType.AnsiString;
				colvarInsObjectCode.MaxLength = 20;
				colvarInsObjectCode.AutoIncrement = false;
				colvarInsObjectCode.IsNullable = true;
				colvarInsObjectCode.IsPrimaryKey = false;
				colvarInsObjectCode.IsForeignKey = false;
				colvarInsObjectCode.IsReadOnly = false;
				colvarInsObjectCode.DefaultSetting = @"";
				colvarInsObjectCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInsObjectCode);
				
				TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
				colvarPaymentDate.ColumnName = "Payment_date";
				colvarPaymentDate.DataType = DbType.DateTime;
				colvarPaymentDate.MaxLength = 0;
				colvarPaymentDate.AutoIncrement = false;
				colvarPaymentDate.IsNullable = true;
				colvarPaymentDate.IsPrimaryKey = false;
				colvarPaymentDate.IsForeignKey = false;
				colvarPaymentDate.IsReadOnly = false;
				colvarPaymentDate.DefaultSetting = @"";
				colvarPaymentDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentDate);
				
				TableSchema.TableColumn colvarInsObjectCodeNumber = new TableSchema.TableColumn(schema);
				colvarInsObjectCodeNumber.ColumnName = "InsObject_CodeNumber";
				colvarInsObjectCodeNumber.DataType = DbType.Int32;
				colvarInsObjectCodeNumber.MaxLength = 0;
				colvarInsObjectCodeNumber.AutoIncrement = false;
				colvarInsObjectCodeNumber.IsNullable = true;
				colvarInsObjectCodeNumber.IsPrimaryKey = false;
				colvarInsObjectCodeNumber.IsForeignKey = false;
				colvarInsObjectCodeNumber.IsReadOnly = false;
				colvarInsObjectCodeNumber.DefaultSetting = @"";
				colvarInsObjectCodeNumber.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInsObjectCodeNumber);
				
				TableSchema.TableColumn colvarInsObjectCodeTP = new TableSchema.TableColumn(schema);
				colvarInsObjectCodeTP.ColumnName = "InsObject_CodeTP";
				colvarInsObjectCodeTP.DataType = DbType.AnsiString;
				colvarInsObjectCodeTP.MaxLength = 2;
				colvarInsObjectCodeTP.AutoIncrement = false;
				colvarInsObjectCodeTP.IsNullable = true;
				colvarInsObjectCodeTP.IsPrimaryKey = false;
				colvarInsObjectCodeTP.IsForeignKey = false;
				colvarInsObjectCodeTP.IsReadOnly = false;
				colvarInsObjectCodeTP.DefaultSetting = @"";
				colvarInsObjectCodeTP.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInsObjectCodeTP);
				
				TableSchema.TableColumn colvarInsLastObjectCode = new TableSchema.TableColumn(schema);
				colvarInsLastObjectCode.ColumnName = "InsLastObject_Code";
				colvarInsLastObjectCode.DataType = DbType.AnsiString;
				colvarInsLastObjectCode.MaxLength = 50;
				colvarInsLastObjectCode.AutoIncrement = false;
				colvarInsLastObjectCode.IsNullable = true;
				colvarInsLastObjectCode.IsPrimaryKey = false;
				colvarInsLastObjectCode.IsForeignKey = false;
				colvarInsLastObjectCode.IsReadOnly = false;
				colvarInsLastObjectCode.DefaultSetting = @"";
				colvarInsLastObjectCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInsLastObjectCode);
				
				TableSchema.TableColumn colvarInputDate = new TableSchema.TableColumn(schema);
				colvarInputDate.ColumnName = "Input_Date";
				colvarInputDate.DataType = DbType.DateTime;
				colvarInputDate.MaxLength = 0;
				colvarInputDate.AutoIncrement = false;
				colvarInputDate.IsNullable = false;
				colvarInputDate.IsPrimaryKey = false;
				colvarInputDate.IsForeignKey = false;
				colvarInputDate.IsReadOnly = false;
				
						colvarInputDate.DefaultSetting = @"(getdate())";
				colvarInputDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInputDate);
				
				TableSchema.TableColumn colvarUserId = new TableSchema.TableColumn(schema);
				colvarUserId.ColumnName = "User_ID";
				colvarUserId.DataType = DbType.AnsiString;
				colvarUserId.MaxLength = 50;
				colvarUserId.AutoIncrement = false;
				colvarUserId.IsNullable = false;
				colvarUserId.IsPrimaryKey = false;
				colvarUserId.IsForeignKey = false;
				colvarUserId.IsReadOnly = false;
				colvarUserId.DefaultSetting = @"";
				colvarUserId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUserId);
				
				TableSchema.TableColumn colvarHosStatus = new TableSchema.TableColumn(schema);
				colvarHosStatus.ColumnName = "Hos_status";
				colvarHosStatus.DataType = DbType.Byte;
				colvarHosStatus.MaxLength = 0;
				colvarHosStatus.AutoIncrement = false;
				colvarHosStatus.IsNullable = false;
				colvarHosStatus.IsPrimaryKey = false;
				colvarHosStatus.IsForeignKey = false;
				colvarHosStatus.IsReadOnly = false;
				
						colvarHosStatus.DefaultSetting = @"((0))";
				colvarHosStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHosStatus);
				
				TableSchema.TableColumn colvarDiscountRate = new TableSchema.TableColumn(schema);
				colvarDiscountRate.ColumnName = "Discount_Rate";
				colvarDiscountRate.DataType = DbType.Decimal;
				colvarDiscountRate.MaxLength = 0;
				colvarDiscountRate.AutoIncrement = false;
				colvarDiscountRate.IsNullable = true;
				colvarDiscountRate.IsPrimaryKey = false;
				colvarDiscountRate.IsForeignKey = false;
				colvarDiscountRate.IsReadOnly = false;
				colvarDiscountRate.DefaultSetting = @"";
				colvarDiscountRate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountRate);
				
				TableSchema.TableColumn colvarDiscountType = new TableSchema.TableColumn(schema);
				colvarDiscountType.ColumnName = "Discount_Type";
				colvarDiscountType.DataType = DbType.Byte;
				colvarDiscountType.MaxLength = 0;
				colvarDiscountType.AutoIncrement = false;
				colvarDiscountType.IsNullable = true;
				colvarDiscountType.IsPrimaryKey = false;
				colvarDiscountType.IsForeignKey = false;
				colvarDiscountType.IsReadOnly = false;
				
						colvarDiscountType.DefaultSetting = @"((0))";
				colvarDiscountType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountType);
				
				TableSchema.TableColumn colvarOrgirinMoney = new TableSchema.TableColumn(schema);
				colvarOrgirinMoney.ColumnName = "OrgirinMoney";
				colvarOrgirinMoney.DataType = DbType.Currency;
				colvarOrgirinMoney.MaxLength = 0;
				colvarOrgirinMoney.AutoIncrement = false;
				colvarOrgirinMoney.IsNullable = true;
				colvarOrgirinMoney.IsPrimaryKey = false;
				colvarOrgirinMoney.IsForeignKey = false;
				colvarOrgirinMoney.IsReadOnly = false;
				colvarOrgirinMoney.DefaultSetting = @"";
				colvarOrgirinMoney.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOrgirinMoney);
				
				TableSchema.TableColumn colvarSurchargePrice = new TableSchema.TableColumn(schema);
				colvarSurchargePrice.ColumnName = "Surcharge_Price";
				colvarSurchargePrice.DataType = DbType.Currency;
				colvarSurchargePrice.MaxLength = 0;
				colvarSurchargePrice.AutoIncrement = false;
				colvarSurchargePrice.IsNullable = true;
				colvarSurchargePrice.IsPrimaryKey = false;
				colvarSurchargePrice.IsForeignKey = false;
				colvarSurchargePrice.IsReadOnly = false;
				colvarSurchargePrice.DefaultSetting = @"";
				colvarSurchargePrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSurchargePrice);
				
				TableSchema.TableColumn colvarLastMoney = new TableSchema.TableColumn(schema);
				colvarLastMoney.ColumnName = "LastMoney";
				colvarLastMoney.DataType = DbType.Currency;
				colvarLastMoney.MaxLength = 0;
				colvarLastMoney.AutoIncrement = false;
				colvarLastMoney.IsNullable = true;
				colvarLastMoney.IsPrimaryKey = false;
				colvarLastMoney.IsForeignKey = false;
				colvarLastMoney.IsReadOnly = false;
				colvarLastMoney.DefaultSetting = @"";
				colvarLastMoney.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLastMoney);
				
				TableSchema.TableColumn colvarDesc = new TableSchema.TableColumn(schema);
				colvarDesc.ColumnName = "Desc";
				colvarDesc.DataType = DbType.String;
				colvarDesc.MaxLength = 500;
				colvarDesc.AutoIncrement = false;
				colvarDesc.IsNullable = true;
				colvarDesc.IsPrimaryKey = false;
				colvarDesc.IsForeignKey = false;
				colvarDesc.IsReadOnly = false;
				colvarDesc.DefaultSetting = @"";
				colvarDesc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDesc);
				
				TableSchema.TableColumn colvarLocked = new TableSchema.TableColumn(schema);
				colvarLocked.ColumnName = "Locked";
				colvarLocked.DataType = DbType.Byte;
				colvarLocked.MaxLength = 0;
				colvarLocked.AutoIncrement = false;
				colvarLocked.IsNullable = true;
				colvarLocked.IsPrimaryKey = false;
				colvarLocked.IsForeignKey = false;
				colvarLocked.IsReadOnly = false;
				
						colvarLocked.DefaultSetting = @"((0))";
				colvarLocked.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLocked);
				
				TableSchema.TableColumn colvarDeleteBy = new TableSchema.TableColumn(schema);
				colvarDeleteBy.ColumnName = "Delete_By";
				colvarDeleteBy.DataType = DbType.String;
				colvarDeleteBy.MaxLength = 50;
				colvarDeleteBy.AutoIncrement = false;
				colvarDeleteBy.IsNullable = true;
				colvarDeleteBy.IsPrimaryKey = false;
				colvarDeleteBy.IsForeignKey = false;
				colvarDeleteBy.IsReadOnly = false;
				colvarDeleteBy.DefaultSetting = @"";
				colvarDeleteBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDeleteBy);
				
				TableSchema.TableColumn colvarDeleteDate = new TableSchema.TableColumn(schema);
				colvarDeleteDate.ColumnName = "Delete_Date";
				colvarDeleteDate.DataType = DbType.DateTime;
				colvarDeleteDate.MaxLength = 0;
				colvarDeleteDate.AutoIncrement = false;
				colvarDeleteDate.IsNullable = true;
				colvarDeleteDate.IsPrimaryKey = false;
				colvarDeleteDate.IsForeignKey = false;
				colvarDeleteDate.IsReadOnly = false;
				colvarDeleteDate.DefaultSetting = @"";
				colvarDeleteDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDeleteDate);
				
				TableSchema.TableColumn colvarReasonBy = new TableSchema.TableColumn(schema);
				colvarReasonBy.ColumnName = "Reason_By";
				colvarReasonBy.DataType = DbType.String;
				colvarReasonBy.MaxLength = 255;
				colvarReasonBy.AutoIncrement = false;
				colvarReasonBy.IsNullable = true;
				colvarReasonBy.IsPrimaryKey = false;
				colvarReasonBy.IsForeignKey = false;
				colvarReasonBy.IsReadOnly = false;
				colvarReasonBy.DefaultSetting = @"";
				colvarReasonBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarReasonBy);
				
				TableSchema.TableColumn colvarIndentityNo = new TableSchema.TableColumn(schema);
				colvarIndentityNo.ColumnName = "Indentity_No";
				colvarIndentityNo.DataType = DbType.Int64;
				colvarIndentityNo.MaxLength = 0;
				colvarIndentityNo.AutoIncrement = false;
				colvarIndentityNo.IsNullable = true;
				colvarIndentityNo.IsPrimaryKey = false;
				colvarIndentityNo.IsForeignKey = false;
				colvarIndentityNo.IsReadOnly = false;
				colvarIndentityNo.DefaultSetting = @"";
				colvarIndentityNo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIndentityNo);
				
				TableSchema.TableColumn colvarOutDateTime = new TableSchema.TableColumn(schema);
				colvarOutDateTime.ColumnName = "Out_DateTime";
				colvarOutDateTime.DataType = DbType.DateTime;
				colvarOutDateTime.MaxLength = 0;
				colvarOutDateTime.AutoIncrement = false;
				colvarOutDateTime.IsNullable = true;
				colvarOutDateTime.IsPrimaryKey = false;
				colvarOutDateTime.IsForeignKey = false;
				colvarOutDateTime.IsReadOnly = false;
				colvarOutDateTime.DefaultSetting = @"";
				colvarOutDateTime.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOutDateTime);
				
				TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
				colvarDepartmentId.ColumnName = "Department_ID";
				colvarDepartmentId.DataType = DbType.Int32;
				colvarDepartmentId.MaxLength = 0;
				colvarDepartmentId.AutoIncrement = false;
				colvarDepartmentId.IsNullable = true;
				colvarDepartmentId.IsPrimaryKey = false;
				colvarDepartmentId.IsForeignKey = false;
				colvarDepartmentId.IsReadOnly = false;
				
						colvarDepartmentId.DefaultSetting = @"((-1))";
				colvarDepartmentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDepartmentId);
				
				TableSchema.TableColumn colvarDisOfUser = new TableSchema.TableColumn(schema);
				colvarDisOfUser.ColumnName = "Dis_Of_User";
				colvarDisOfUser.DataType = DbType.Int16;
				colvarDisOfUser.MaxLength = 0;
				colvarDisOfUser.AutoIncrement = false;
				colvarDisOfUser.IsNullable = true;
				colvarDisOfUser.IsPrimaryKey = false;
				colvarDisOfUser.IsForeignKey = false;
				colvarDisOfUser.IsReadOnly = false;
				
						colvarDisOfUser.DefaultSetting = @"((-1))";
				colvarDisOfUser.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDisOfUser);
				
				TableSchema.TableColumn colvarSalaryBasic = new TableSchema.TableColumn(schema);
				colvarSalaryBasic.ColumnName = "Salary_Basic";
				colvarSalaryBasic.DataType = DbType.Currency;
				colvarSalaryBasic.MaxLength = 0;
				colvarSalaryBasic.AutoIncrement = false;
				colvarSalaryBasic.IsNullable = true;
				colvarSalaryBasic.IsPrimaryKey = false;
				colvarSalaryBasic.IsForeignKey = false;
				colvarSalaryBasic.IsReadOnly = false;
				colvarSalaryBasic.DefaultSetting = @"";
				colvarSalaryBasic.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSalaryBasic);
				
				TableSchema.TableColumn colvarSCreateBy = new TableSchema.TableColumn(schema);
				colvarSCreateBy.ColumnName = "S_CreateBy";
				colvarSCreateBy.DataType = DbType.String;
				colvarSCreateBy.MaxLength = 50;
				colvarSCreateBy.AutoIncrement = false;
				colvarSCreateBy.IsNullable = true;
				colvarSCreateBy.IsPrimaryKey = false;
				colvarSCreateBy.IsForeignKey = false;
				colvarSCreateBy.IsReadOnly = false;
				colvarSCreateBy.DefaultSetting = @"";
				colvarSCreateBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSCreateBy);
				
				TableSchema.TableColumn colvarSCreateDate = new TableSchema.TableColumn(schema);
				colvarSCreateDate.ColumnName = "S_CreateDate";
				colvarSCreateDate.DataType = DbType.DateTime;
				colvarSCreateDate.MaxLength = 0;
				colvarSCreateDate.AutoIncrement = false;
				colvarSCreateDate.IsNullable = true;
				colvarSCreateDate.IsPrimaryKey = false;
				colvarSCreateDate.IsForeignKey = false;
				colvarSCreateDate.IsReadOnly = false;
				colvarSCreateDate.DefaultSetting = @"";
				colvarSCreateDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSCreateDate);
				
				TableSchema.TableColumn colvarSDiscountPrice = new TableSchema.TableColumn(schema);
				colvarSDiscountPrice.ColumnName = "S_Discount_Price";
				colvarSDiscountPrice.DataType = DbType.Currency;
				colvarSDiscountPrice.MaxLength = 0;
				colvarSDiscountPrice.AutoIncrement = false;
				colvarSDiscountPrice.IsNullable = true;
				colvarSDiscountPrice.IsPrimaryKey = false;
				colvarSDiscountPrice.IsForeignKey = false;
				colvarSDiscountPrice.IsReadOnly = false;
				colvarSDiscountPrice.DefaultSetting = @"";
				colvarSDiscountPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSDiscountPrice);
				
				TableSchema.TableColumn colvarSDiscountRate = new TableSchema.TableColumn(schema);
				colvarSDiscountRate.ColumnName = "S_Discount_Rate";
				colvarSDiscountRate.DataType = DbType.Decimal;
				colvarSDiscountRate.MaxLength = 0;
				colvarSDiscountRate.AutoIncrement = false;
				colvarSDiscountRate.IsNullable = true;
				colvarSDiscountRate.IsPrimaryKey = false;
				colvarSDiscountRate.IsForeignKey = false;
				colvarSDiscountRate.IsReadOnly = false;
				colvarSDiscountRate.DefaultSetting = @"";
				colvarSDiscountRate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSDiscountRate);
				
				TableSchema.TableColumn colvarSDiscountType = new TableSchema.TableColumn(schema);
				colvarSDiscountType.ColumnName = "S_Discount_Type";
				colvarSDiscountType.DataType = DbType.Byte;
				colvarSDiscountType.MaxLength = 0;
				colvarSDiscountType.AutoIncrement = false;
				colvarSDiscountType.IsNullable = true;
				colvarSDiscountType.IsPrimaryKey = false;
				colvarSDiscountType.IsForeignKey = false;
				colvarSDiscountType.IsReadOnly = false;
				colvarSDiscountType.DefaultSetting = @"";
				colvarSDiscountType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSDiscountType);
				
				TableSchema.TableColumn colvarSModifyBy = new TableSchema.TableColumn(schema);
				colvarSModifyBy.ColumnName = "S_ModifyBy";
				colvarSModifyBy.DataType = DbType.String;
				colvarSModifyBy.MaxLength = 50;
				colvarSModifyBy.AutoIncrement = false;
				colvarSModifyBy.IsNullable = true;
				colvarSModifyBy.IsPrimaryKey = false;
				colvarSModifyBy.IsForeignKey = false;
				colvarSModifyBy.IsReadOnly = false;
				colvarSModifyBy.DefaultSetting = @"";
				colvarSModifyBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSModifyBy);
				
				TableSchema.TableColumn colvarSModifyDate = new TableSchema.TableColumn(schema);
				colvarSModifyDate.ColumnName = "S_ModifyDate";
				colvarSModifyDate.DataType = DbType.DateTime;
				colvarSModifyDate.MaxLength = 0;
				colvarSModifyDate.AutoIncrement = false;
				colvarSModifyDate.IsNullable = true;
				colvarSModifyDate.IsPrimaryKey = false;
				colvarSModifyDate.IsForeignKey = false;
				colvarSModifyDate.IsReadOnly = false;
				colvarSModifyDate.DefaultSetting = @"";
				colvarSModifyDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSModifyDate);
				
				TableSchema.TableColumn colvarRankId = new TableSchema.TableColumn(schema);
				colvarRankId.ColumnName = "Rank_ID";
				colvarRankId.DataType = DbType.Int32;
				colvarRankId.MaxLength = 0;
				colvarRankId.AutoIncrement = false;
				colvarRankId.IsNullable = true;
				colvarRankId.IsPrimaryKey = false;
				colvarRankId.IsForeignKey = false;
				colvarRankId.IsReadOnly = false;
				colvarRankId.DefaultSetting = @"";
				colvarRankId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRankId);
				
				TableSchema.TableColumn colvarUnitId = new TableSchema.TableColumn(schema);
				colvarUnitId.ColumnName = "Unit_ID";
				colvarUnitId.DataType = DbType.Int32;
				colvarUnitId.MaxLength = 0;
				colvarUnitId.AutoIncrement = false;
				colvarUnitId.IsNullable = true;
				colvarUnitId.IsPrimaryKey = false;
				colvarUnitId.IsForeignKey = false;
				colvarUnitId.IsReadOnly = false;
				colvarUnitId.DefaultSetting = @"";
				colvarUnitId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUnitId);
				
				TableSchema.TableColumn colvarEmergencyHos = new TableSchema.TableColumn(schema);
				colvarEmergencyHos.ColumnName = "Emergency_Hos";
				colvarEmergencyHos.DataType = DbType.Int32;
				colvarEmergencyHos.MaxLength = 0;
				colvarEmergencyHos.AutoIncrement = false;
				colvarEmergencyHos.IsNullable = true;
				colvarEmergencyHos.IsPrimaryKey = false;
				colvarEmergencyHos.IsForeignKey = false;
				colvarEmergencyHos.IsReadOnly = false;
				
						colvarEmergencyHos.DefaultSetting = @"((0))";
				colvarEmergencyHos.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEmergencyHos);
				
				TableSchema.TableColumn colvarToHos = new TableSchema.TableColumn(schema);
				colvarToHos.ColumnName = "To_Hos";
				colvarToHos.DataType = DbType.Int32;
				colvarToHos.MaxLength = 0;
				colvarToHos.AutoIncrement = false;
				colvarToHos.IsNullable = true;
				colvarToHos.IsPrimaryKey = false;
				colvarToHos.IsForeignKey = false;
				colvarToHos.IsReadOnly = false;
				colvarToHos.DefaultSetting = @"";
				colvarToHos.ForeignKeyTableName = "";
				schema.Columns.Add(colvarToHos);
				
				TableSchema.TableColumn colvarPositionName = new TableSchema.TableColumn(schema);
				colvarPositionName.ColumnName = "Position_Name";
				colvarPositionName.DataType = DbType.String;
				colvarPositionName.MaxLength = 255;
				colvarPositionName.AutoIncrement = false;
				colvarPositionName.IsNullable = true;
				colvarPositionName.IsPrimaryKey = false;
				colvarPositionName.IsForeignKey = false;
				colvarPositionName.IsReadOnly = false;
				colvarPositionName.DefaultSetting = @"";
				colvarPositionName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPositionName);
				
				TableSchema.TableColumn colvarSymptoms = new TableSchema.TableColumn(schema);
				colvarSymptoms.ColumnName = "Symptoms";
				colvarSymptoms.DataType = DbType.String;
				colvarSymptoms.MaxLength = 255;
				colvarSymptoms.AutoIncrement = false;
				colvarSymptoms.IsNullable = true;
				colvarSymptoms.IsPrimaryKey = false;
				colvarSymptoms.IsForeignKey = false;
				colvarSymptoms.IsReadOnly = false;
				colvarSymptoms.DefaultSetting = @"";
				colvarSymptoms.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSymptoms);
				
				TableSchema.TableColumn colvarCorrectLine = new TableSchema.TableColumn(schema);
				colvarCorrectLine.ColumnName = "CorrectLine";
				colvarCorrectLine.DataType = DbType.Byte;
				colvarCorrectLine.MaxLength = 0;
				colvarCorrectLine.AutoIncrement = false;
				colvarCorrectLine.IsNullable = true;
				colvarCorrectLine.IsPrimaryKey = false;
				colvarCorrectLine.IsForeignKey = false;
				colvarCorrectLine.IsReadOnly = false;
				
						colvarCorrectLine.DefaultSetting = @"((0))";
				colvarCorrectLine.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCorrectLine);
				
				TableSchema.TableColumn colvarExtendInsurancePrice = new TableSchema.TableColumn(schema);
				colvarExtendInsurancePrice.ColumnName = "ExtendInsurance_Price";
				colvarExtendInsurancePrice.DataType = DbType.Currency;
				colvarExtendInsurancePrice.MaxLength = 0;
				colvarExtendInsurancePrice.AutoIncrement = false;
				colvarExtendInsurancePrice.IsNullable = true;
				colvarExtendInsurancePrice.IsPrimaryKey = false;
				colvarExtendInsurancePrice.IsForeignKey = false;
				colvarExtendInsurancePrice.IsReadOnly = false;
				colvarExtendInsurancePrice.DefaultSetting = @"";
				colvarExtendInsurancePrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarExtendInsurancePrice);
				
				TableSchema.TableColumn colvarFromClinicStatus = new TableSchema.TableColumn(schema);
				colvarFromClinicStatus.ColumnName = "FromClinic_Status";
				colvarFromClinicStatus.DataType = DbType.Int32;
				colvarFromClinicStatus.MaxLength = 0;
				colvarFromClinicStatus.AutoIncrement = false;
				colvarFromClinicStatus.IsNullable = true;
				colvarFromClinicStatus.IsPrimaryKey = false;
				colvarFromClinicStatus.IsForeignKey = false;
				colvarFromClinicStatus.IsReadOnly = false;
				colvarFromClinicStatus.DefaultSetting = @"";
				colvarFromClinicStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFromClinicStatus);
				
				TableSchema.TableColumn colvarToClinicCode = new TableSchema.TableColumn(schema);
				colvarToClinicCode.ColumnName = "To_ClinicCode";
				colvarToClinicCode.DataType = DbType.AnsiString;
				colvarToClinicCode.MaxLength = 20;
				colvarToClinicCode.AutoIncrement = false;
				colvarToClinicCode.IsNullable = true;
				colvarToClinicCode.IsPrimaryKey = false;
				colvarToClinicCode.IsForeignKey = false;
				colvarToClinicCode.IsReadOnly = false;
				colvarToClinicCode.DefaultSetting = @"";
				colvarToClinicCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarToClinicCode);
				
				TableSchema.TableColumn colvarKetQuaDt = new TableSchema.TableColumn(schema);
				colvarKetQuaDt.ColumnName = "KetQua_DT";
				colvarKetQuaDt.DataType = DbType.Byte;
				colvarKetQuaDt.MaxLength = 0;
				colvarKetQuaDt.AutoIncrement = false;
				colvarKetQuaDt.IsNullable = true;
				colvarKetQuaDt.IsPrimaryKey = false;
				colvarKetQuaDt.IsForeignKey = false;
				colvarKetQuaDt.IsReadOnly = false;
				colvarKetQuaDt.DefaultSetting = @"";
				colvarKetQuaDt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKetQuaDt);
				
				TableSchema.TableColumn colvarChanDoanGiaiPhauTuThi = new TableSchema.TableColumn(schema);
				colvarChanDoanGiaiPhauTuThi.ColumnName = "ChanDoan_GiaiPhau_TuThi";
				colvarChanDoanGiaiPhauTuThi.DataType = DbType.String;
				colvarChanDoanGiaiPhauTuThi.MaxLength = 255;
				colvarChanDoanGiaiPhauTuThi.AutoIncrement = false;
				colvarChanDoanGiaiPhauTuThi.IsNullable = true;
				colvarChanDoanGiaiPhauTuThi.IsPrimaryKey = false;
				colvarChanDoanGiaiPhauTuThi.IsForeignKey = false;
				colvarChanDoanGiaiPhauTuThi.IsReadOnly = false;
				colvarChanDoanGiaiPhauTuThi.DefaultSetting = @"";
				colvarChanDoanGiaiPhauTuThi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChanDoanGiaiPhauTuThi);
				
				TableSchema.TableColumn colvarGiaiPhauBenh = new TableSchema.TableColumn(schema);
				colvarGiaiPhauBenh.ColumnName = "GiaiPhau_Benh";
				colvarGiaiPhauBenh.DataType = DbType.Byte;
				colvarGiaiPhauBenh.MaxLength = 0;
				colvarGiaiPhauBenh.AutoIncrement = false;
				colvarGiaiPhauBenh.IsNullable = true;
				colvarGiaiPhauBenh.IsPrimaryKey = false;
				colvarGiaiPhauBenh.IsForeignKey = false;
				colvarGiaiPhauBenh.IsReadOnly = false;
				colvarGiaiPhauBenh.DefaultSetting = @"";
				colvarGiaiPhauBenh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaiPhauBenh);
				
				TableSchema.TableColumn colvarKhamTuThi = new TableSchema.TableColumn(schema);
				colvarKhamTuThi.ColumnName = "Kham_TuThi";
				colvarKhamTuThi.DataType = DbType.Byte;
				colvarKhamTuThi.MaxLength = 0;
				colvarKhamTuThi.AutoIncrement = false;
				colvarKhamTuThi.IsNullable = true;
				colvarKhamTuThi.IsPrimaryKey = false;
				colvarKhamTuThi.IsForeignKey = false;
				colvarKhamTuThi.IsReadOnly = false;
				colvarKhamTuThi.DefaultSetting = @"";
				colvarKhamTuThi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamTuThi);
				
				TableSchema.TableColumn colvarNgayTuVong = new TableSchema.TableColumn(schema);
				colvarNgayTuVong.ColumnName = "Ngay_TuVong";
				colvarNgayTuVong.DataType = DbType.DateTime;
				colvarNgayTuVong.MaxLength = 0;
				colvarNgayTuVong.AutoIncrement = false;
				colvarNgayTuVong.IsNullable = true;
				colvarNgayTuVong.IsPrimaryKey = false;
				colvarNgayTuVong.IsForeignKey = false;
				colvarNgayTuVong.IsReadOnly = false;
				colvarNgayTuVong.DefaultSetting = @"";
				colvarNgayTuVong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTuVong);
				
				TableSchema.TableColumn colvarNguyenNhanTuVong = new TableSchema.TableColumn(schema);
				colvarNguyenNhanTuVong.ColumnName = "NguyenNhan_TuVong";
				colvarNguyenNhanTuVong.DataType = DbType.String;
				colvarNguyenNhanTuVong.MaxLength = 200;
				colvarNguyenNhanTuVong.AutoIncrement = false;
				colvarNguyenNhanTuVong.IsNullable = true;
				colvarNguyenNhanTuVong.IsPrimaryKey = false;
				colvarNguyenNhanTuVong.IsForeignKey = false;
				colvarNguyenNhanTuVong.IsReadOnly = false;
				colvarNguyenNhanTuVong.DefaultSetting = @"";
				colvarNguyenNhanTuVong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguyenNhanTuVong);
				
				TableSchema.TableColumn colvarTinhTrangTuVong = new TableSchema.TableColumn(schema);
				colvarTinhTrangTuVong.ColumnName = "TinhTrang_TuVong";
				colvarTinhTrangTuVong.DataType = DbType.Byte;
				colvarTinhTrangTuVong.MaxLength = 0;
				colvarTinhTrangTuVong.AutoIncrement = false;
				colvarTinhTrangTuVong.IsNullable = true;
				colvarTinhTrangTuVong.IsPrimaryKey = false;
				colvarTinhTrangTuVong.IsForeignKey = false;
				colvarTinhTrangTuVong.IsReadOnly = false;
				colvarTinhTrangTuVong.DefaultSetting = @"";
				colvarTinhTrangTuVong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTinhTrangTuVong);
				
				TableSchema.TableColumn colvarMBenhChinh = new TableSchema.TableColumn(schema);
				colvarMBenhChinh.ColumnName = "MBenh_Chinh";
				colvarMBenhChinh.DataType = DbType.AnsiString;
				colvarMBenhChinh.MaxLength = 50;
				colvarMBenhChinh.AutoIncrement = false;
				colvarMBenhChinh.IsNullable = true;
				colvarMBenhChinh.IsPrimaryKey = false;
				colvarMBenhChinh.IsForeignKey = false;
				colvarMBenhChinh.IsReadOnly = false;
				colvarMBenhChinh.DefaultSetting = @"";
				colvarMBenhChinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMBenhChinh);
				
				TableSchema.TableColumn colvarMBenhPhu = new TableSchema.TableColumn(schema);
				colvarMBenhPhu.ColumnName = "MBenh_Phu";
				colvarMBenhPhu.DataType = DbType.AnsiString;
				colvarMBenhPhu.MaxLength = 50;
				colvarMBenhPhu.AutoIncrement = false;
				colvarMBenhPhu.IsNullable = true;
				colvarMBenhPhu.IsPrimaryKey = false;
				colvarMBenhPhu.IsForeignKey = false;
				colvarMBenhPhu.IsReadOnly = false;
				colvarMBenhPhu.DefaultSetting = @"";
				colvarMBenhPhu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMBenhPhu);
				
				TableSchema.TableColumn colvarMBenhSauPt = new TableSchema.TableColumn(schema);
				colvarMBenhSauPt.ColumnName = "MBenh_Sau_PT";
				colvarMBenhSauPt.DataType = DbType.AnsiString;
				colvarMBenhSauPt.MaxLength = 50;
				colvarMBenhSauPt.AutoIncrement = false;
				colvarMBenhSauPt.IsNullable = true;
				colvarMBenhSauPt.IsPrimaryKey = false;
				colvarMBenhSauPt.IsForeignKey = false;
				colvarMBenhSauPt.IsReadOnly = false;
				colvarMBenhSauPt.DefaultSetting = @"";
				colvarMBenhSauPt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMBenhSauPt);
				
				TableSchema.TableColumn colvarMBenhTruocPt = new TableSchema.TableColumn(schema);
				colvarMBenhTruocPt.ColumnName = "MBenh_Truoc_PT";
				colvarMBenhTruocPt.DataType = DbType.AnsiString;
				colvarMBenhTruocPt.MaxLength = 50;
				colvarMBenhTruocPt.AutoIncrement = false;
				colvarMBenhTruocPt.IsNullable = true;
				colvarMBenhTruocPt.IsPrimaryKey = false;
				colvarMBenhTruocPt.IsForeignKey = false;
				colvarMBenhTruocPt.IsReadOnly = false;
				colvarMBenhTruocPt.DefaultSetting = @"";
				colvarMBenhTruocPt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMBenhTruocPt);
				
				TableSchema.TableColumn colvarSDescBenhChinh = new TableSchema.TableColumn(schema);
				colvarSDescBenhChinh.ColumnName = "sDesc_BenhChinh";
				colvarSDescBenhChinh.DataType = DbType.String;
				colvarSDescBenhChinh.MaxLength = 255;
				colvarSDescBenhChinh.AutoIncrement = false;
				colvarSDescBenhChinh.IsNullable = true;
				colvarSDescBenhChinh.IsPrimaryKey = false;
				colvarSDescBenhChinh.IsForeignKey = false;
				colvarSDescBenhChinh.IsReadOnly = false;
				colvarSDescBenhChinh.DefaultSetting = @"";
				colvarSDescBenhChinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSDescBenhChinh);
				
				TableSchema.TableColumn colvarSDescBenhPhu = new TableSchema.TableColumn(schema);
				colvarSDescBenhPhu.ColumnName = "sDesc_BenhPhu";
				colvarSDescBenhPhu.DataType = DbType.String;
				colvarSDescBenhPhu.MaxLength = 255;
				colvarSDescBenhPhu.AutoIncrement = false;
				colvarSDescBenhPhu.IsNullable = true;
				colvarSDescBenhPhu.IsPrimaryKey = false;
				colvarSDescBenhPhu.IsForeignKey = false;
				colvarSDescBenhPhu.IsReadOnly = false;
				colvarSDescBenhPhu.DefaultSetting = @"";
				colvarSDescBenhPhu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSDescBenhPhu);
				
				TableSchema.TableColumn colvarSDescSauPt = new TableSchema.TableColumn(schema);
				colvarSDescSauPt.ColumnName = "sDesc_Sau_PT";
				colvarSDescSauPt.DataType = DbType.String;
				colvarSDescSauPt.MaxLength = 255;
				colvarSDescSauPt.AutoIncrement = false;
				colvarSDescSauPt.IsNullable = true;
				colvarSDescSauPt.IsPrimaryKey = false;
				colvarSDescSauPt.IsForeignKey = false;
				colvarSDescSauPt.IsReadOnly = false;
				colvarSDescSauPt.DefaultSetting = @"";
				colvarSDescSauPt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSDescSauPt);
				
				TableSchema.TableColumn colvarSDescTruocPt = new TableSchema.TableColumn(schema);
				colvarSDescTruocPt.ColumnName = "sDesc_Truoc_PT";
				colvarSDescTruocPt.DataType = DbType.String;
				colvarSDescTruocPt.MaxLength = 255;
				colvarSDescTruocPt.AutoIncrement = false;
				colvarSDescTruocPt.IsNullable = true;
				colvarSDescTruocPt.IsPrimaryKey = false;
				colvarSDescTruocPt.IsForeignKey = false;
				colvarSDescTruocPt.IsReadOnly = false;
				colvarSDescTruocPt.DefaultSetting = @"";
				colvarSDescTruocPt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSDescTruocPt);
				
				TableSchema.TableColumn colvarTinhTrangRaVienStatus = new TableSchema.TableColumn(schema);
				colvarTinhTrangRaVienStatus.ColumnName = "TinhTrang_RaVien_Status";
				colvarTinhTrangRaVienStatus.DataType = DbType.Byte;
				colvarTinhTrangRaVienStatus.MaxLength = 0;
				colvarTinhTrangRaVienStatus.AutoIncrement = false;
				colvarTinhTrangRaVienStatus.IsNullable = true;
				colvarTinhTrangRaVienStatus.IsPrimaryKey = false;
				colvarTinhTrangRaVienStatus.IsForeignKey = false;
				colvarTinhTrangRaVienStatus.IsReadOnly = false;
				colvarTinhTrangRaVienStatus.DefaultSetting = @"";
				colvarTinhTrangRaVienStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTinhTrangRaVienStatus);
				
				TableSchema.TableColumn colvarGhiChuCv = new TableSchema.TableColumn(schema);
				colvarGhiChuCv.ColumnName = "GhiChu_CV";
				colvarGhiChuCv.DataType = DbType.String;
				colvarGhiChuCv.MaxLength = 200;
				colvarGhiChuCv.AutoIncrement = false;
				colvarGhiChuCv.IsNullable = true;
				colvarGhiChuCv.IsPrimaryKey = false;
				colvarGhiChuCv.IsForeignKey = false;
				colvarGhiChuCv.IsReadOnly = false;
				colvarGhiChuCv.DefaultSetting = @"";
				colvarGhiChuCv.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChuCv);
				
				TableSchema.TableColumn colvarDisplayOnReport = new TableSchema.TableColumn(schema);
				colvarDisplayOnReport.ColumnName = "DisplayOnReport";
				colvarDisplayOnReport.DataType = DbType.Byte;
				colvarDisplayOnReport.MaxLength = 0;
				colvarDisplayOnReport.AutoIncrement = false;
				colvarDisplayOnReport.IsNullable = false;
				colvarDisplayOnReport.IsPrimaryKey = false;
				colvarDisplayOnReport.IsForeignKey = false;
				colvarDisplayOnReport.IsReadOnly = false;
				
						colvarDisplayOnReport.DefaultSetting = @"((1))";
				colvarDisplayOnReport.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDisplayOnReport);
				
				TableSchema.TableColumn colvarMedicalNumber = new TableSchema.TableColumn(schema);
				colvarMedicalNumber.ColumnName = "MedicalNumber";
				colvarMedicalNumber.DataType = DbType.String;
				colvarMedicalNumber.MaxLength = 50;
				colvarMedicalNumber.AutoIncrement = false;
				colvarMedicalNumber.IsNullable = true;
				colvarMedicalNumber.IsPrimaryKey = false;
				colvarMedicalNumber.IsForeignKey = false;
				colvarMedicalNumber.IsReadOnly = false;
				
						colvarMedicalNumber.DefaultSetting = @"((-1))";
				colvarMedicalNumber.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMedicalNumber);
				
				TableSchema.TableColumn colvarTaiBien = new TableSchema.TableColumn(schema);
				colvarTaiBien.ColumnName = "Tai_Bien";
				colvarTaiBien.DataType = DbType.Int32;
				colvarTaiBien.MaxLength = 0;
				colvarTaiBien.AutoIncrement = false;
				colvarTaiBien.IsNullable = true;
				colvarTaiBien.IsPrimaryKey = false;
				colvarTaiBien.IsForeignKey = false;
				colvarTaiBien.IsReadOnly = false;
				colvarTaiBien.DefaultSetting = @"";
				colvarTaiBien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTaiBien);
				
				TableSchema.TableColumn colvarBienChung = new TableSchema.TableColumn(schema);
				colvarBienChung.ColumnName = "Bien_Chung";
				colvarBienChung.DataType = DbType.Int32;
				colvarBienChung.MaxLength = 0;
				colvarBienChung.AutoIncrement = false;
				colvarBienChung.IsNullable = true;
				colvarBienChung.IsPrimaryKey = false;
				colvarBienChung.IsForeignKey = false;
				colvarBienChung.IsReadOnly = false;
				colvarBienChung.DefaultSetting = @"";
				colvarBienChung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBienChung);
				
				TableSchema.TableColumn colvarThuThuat = new TableSchema.TableColumn(schema);
				colvarThuThuat.ColumnName = "Thu_Thuat";
				colvarThuThuat.DataType = DbType.Int32;
				colvarThuThuat.MaxLength = 0;
				colvarThuThuat.AutoIncrement = false;
				colvarThuThuat.IsNullable = true;
				colvarThuThuat.IsPrimaryKey = false;
				colvarThuThuat.IsForeignKey = false;
				colvarThuThuat.IsReadOnly = false;
				colvarThuThuat.DefaultSetting = @"";
				colvarThuThuat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThuThuat);
				
				TableSchema.TableColumn colvarPhauThuat = new TableSchema.TableColumn(schema);
				colvarPhauThuat.ColumnName = "Phau_Thuat";
				colvarPhauThuat.DataType = DbType.Int32;
				colvarPhauThuat.MaxLength = 0;
				colvarPhauThuat.AutoIncrement = false;
				colvarPhauThuat.IsNullable = true;
				colvarPhauThuat.IsPrimaryKey = false;
				colvarPhauThuat.IsForeignKey = false;
				colvarPhauThuat.IsReadOnly = false;
				colvarPhauThuat.DefaultSetting = @"";
				colvarPhauThuat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhauThuat);
				
				TableSchema.TableColumn colvarTongSoNgayDtri = new TableSchema.TableColumn(schema);
				colvarTongSoNgayDtri.ColumnName = "Tong_SoNgay_Dtri";
				colvarTongSoNgayDtri.DataType = DbType.Int32;
				colvarTongSoNgayDtri.MaxLength = 0;
				colvarTongSoNgayDtri.AutoIncrement = false;
				colvarTongSoNgayDtri.IsNullable = true;
				colvarTongSoNgayDtri.IsPrimaryKey = false;
				colvarTongSoNgayDtri.IsForeignKey = false;
				colvarTongSoNgayDtri.IsReadOnly = false;
				colvarTongSoNgayDtri.DefaultSetting = @"";
				colvarTongSoNgayDtri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongSoNgayDtri);
				
				TableSchema.TableColumn colvarMaDoiTuong = new TableSchema.TableColumn(schema);
				colvarMaDoiTuong.ColumnName = "Ma_DoiTuong";
				colvarMaDoiTuong.DataType = DbType.String;
				colvarMaDoiTuong.MaxLength = 50;
				colvarMaDoiTuong.AutoIncrement = false;
				colvarMaDoiTuong.IsNullable = true;
				colvarMaDoiTuong.IsPrimaryKey = false;
				colvarMaDoiTuong.IsForeignKey = false;
				colvarMaDoiTuong.IsReadOnly = false;
				colvarMaDoiTuong.DefaultSetting = @"";
				colvarMaDoiTuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDoiTuong);
				
				TableSchema.TableColumn colvarTHopStatus = new TableSchema.TableColumn(schema);
				colvarTHopStatus.ColumnName = "THop_Status";
				colvarTHopStatus.DataType = DbType.Byte;
				colvarTHopStatus.MaxLength = 0;
				colvarTHopStatus.AutoIncrement = false;
				colvarTHopStatus.IsNullable = true;
				colvarTHopStatus.IsPrimaryKey = false;
				colvarTHopStatus.IsForeignKey = false;
				colvarTHopStatus.IsReadOnly = false;
				colvarTHopStatus.DefaultSetting = @"";
				colvarTHopStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTHopStatus);
				
				TableSchema.TableColumn colvarKieuBn = new TableSchema.TableColumn(schema);
				colvarKieuBn.ColumnName = "Kieu_BN";
				colvarKieuBn.DataType = DbType.Byte;
				colvarKieuBn.MaxLength = 0;
				colvarKieuBn.AutoIncrement = false;
				colvarKieuBn.IsNullable = true;
				colvarKieuBn.IsPrimaryKey = false;
				colvarKieuBn.IsForeignKey = false;
				colvarKieuBn.IsReadOnly = false;
				
						colvarKieuBn.DefaultSetting = @"((0))";
				colvarKieuBn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuBn);
				
				TableSchema.TableColumn colvarDaKhoatGoi = new TableSchema.TableColumn(schema);
				colvarDaKhoatGoi.ColumnName = "DA_KHOAT_GOI";
				colvarDaKhoatGoi.DataType = DbType.Byte;
				colvarDaKhoatGoi.MaxLength = 0;
				colvarDaKhoatGoi.AutoIncrement = false;
				colvarDaKhoatGoi.IsNullable = true;
				colvarDaKhoatGoi.IsPrimaryKey = false;
				colvarDaKhoatGoi.IsForeignKey = false;
				colvarDaKhoatGoi.IsReadOnly = false;
				
						colvarDaKhoatGoi.DefaultSetting = @"((0))";
				colvarDaKhoatGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaKhoatGoi);
				
				TableSchema.TableColumn colvarIdKhoaTnhan = new TableSchema.TableColumn(schema);
				colvarIdKhoaTnhan.ColumnName = "ID_KHOA_TNHAN";
				colvarIdKhoaTnhan.DataType = DbType.Int32;
				colvarIdKhoaTnhan.MaxLength = 0;
				colvarIdKhoaTnhan.AutoIncrement = false;
				colvarIdKhoaTnhan.IsNullable = true;
				colvarIdKhoaTnhan.IsPrimaryKey = false;
				colvarIdKhoaTnhan.IsForeignKey = false;
				colvarIdKhoaTnhan.IsReadOnly = false;
				colvarIdKhoaTnhan.DefaultSetting = @"";
				colvarIdKhoaTnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoaTnhan);
				
				TableSchema.TableColumn colvarIdRavien = new TableSchema.TableColumn(schema);
				colvarIdRavien.ColumnName = "ID_RAVIEN";
				colvarIdRavien.DataType = DbType.Int32;
				colvarIdRavien.MaxLength = 0;
				colvarIdRavien.AutoIncrement = false;
				colvarIdRavien.IsNullable = true;
				colvarIdRavien.IsPrimaryKey = false;
				colvarIdRavien.IsForeignKey = false;
				colvarIdRavien.IsReadOnly = false;
				colvarIdRavien.DefaultSetting = @"";
				colvarIdRavien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdRavien);
				
				TableSchema.TableColumn colvarNgayNhapVien = new TableSchema.TableColumn(schema);
				colvarNgayNhapVien.ColumnName = "NGAY_NHAP_VIEN";
				colvarNgayNhapVien.DataType = DbType.DateTime;
				colvarNgayNhapVien.MaxLength = 0;
				colvarNgayNhapVien.AutoIncrement = false;
				colvarNgayNhapVien.IsNullable = true;
				colvarNgayNhapVien.IsPrimaryKey = false;
				colvarNgayNhapVien.IsForeignKey = false;
				colvarNgayNhapVien.IsReadOnly = false;
				colvarNgayNhapVien.DefaultSetting = @"";
				colvarNgayNhapVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayNhapVien);
				
				TableSchema.TableColumn colvarIdGoiDvu = new TableSchema.TableColumn(schema);
				colvarIdGoiDvu.ColumnName = "ID_GOI_DVU";
				colvarIdGoiDvu.DataType = DbType.Int32;
				colvarIdGoiDvu.MaxLength = 0;
				colvarIdGoiDvu.AutoIncrement = false;
				colvarIdGoiDvu.IsNullable = true;
				colvarIdGoiDvu.IsPrimaryKey = false;
				colvarIdGoiDvu.IsForeignKey = false;
				colvarIdGoiDvu.IsReadOnly = false;
				colvarIdGoiDvu.DefaultSetting = @"";
				colvarIdGoiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGoiDvu);
				
				TableSchema.TableColumn colvarDaSinh = new TableSchema.TableColumn(schema);
				colvarDaSinh.ColumnName = "DA_SINH";
				colvarDaSinh.DataType = DbType.Int32;
				colvarDaSinh.MaxLength = 0;
				colvarDaSinh.AutoIncrement = false;
				colvarDaSinh.IsNullable = true;
				colvarDaSinh.IsPrimaryKey = false;
				colvarDaSinh.IsForeignKey = false;
				colvarDaSinh.IsReadOnly = false;
				colvarDaSinh.DefaultSetting = @"";
				colvarDaSinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaSinh);
				
				TableSchema.TableColumn colvarIdBenhly = new TableSchema.TableColumn(schema);
				colvarIdBenhly.ColumnName = "ID_BENHLY";
				colvarIdBenhly.DataType = DbType.Int32;
				colvarIdBenhly.MaxLength = 0;
				colvarIdBenhly.AutoIncrement = false;
				colvarIdBenhly.IsNullable = true;
				colvarIdBenhly.IsPrimaryKey = false;
				colvarIdBenhly.IsForeignKey = false;
				colvarIdBenhly.IsReadOnly = false;
				colvarIdBenhly.DefaultSetting = @"";
				colvarIdBenhly.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhly);
				
				TableSchema.TableColumn colvarNgoaiThanh = new TableSchema.TableColumn(schema);
				colvarNgoaiThanh.ColumnName = "NGOAI_THANH";
				colvarNgoaiThanh.DataType = DbType.Int32;
				colvarNgoaiThanh.MaxLength = 0;
				colvarNgoaiThanh.AutoIncrement = false;
				colvarNgoaiThanh.IsNullable = true;
				colvarNgoaiThanh.IsPrimaryKey = false;
				colvarNgoaiThanh.IsForeignKey = false;
				colvarNgoaiThanh.IsReadOnly = false;
				colvarNgoaiThanh.DefaultSetting = @"";
				colvarNgoaiThanh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgoaiThanh);
				
				TableSchema.TableColumn colvarSoTienGoi = new TableSchema.TableColumn(schema);
				colvarSoTienGoi.ColumnName = "SO_TIEN_GOI";
				colvarSoTienGoi.DataType = DbType.Decimal;
				colvarSoTienGoi.MaxLength = 0;
				colvarSoTienGoi.AutoIncrement = false;
				colvarSoTienGoi.IsNullable = true;
				colvarSoTienGoi.IsPrimaryKey = false;
				colvarSoTienGoi.IsForeignKey = false;
				colvarSoTienGoi.IsReadOnly = false;
				colvarSoTienGoi.DefaultSetting = @"";
				colvarSoTienGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoTienGoi);
				
				TableSchema.TableColumn colvarSoNgay = new TableSchema.TableColumn(schema);
				colvarSoNgay.ColumnName = "SO_NGAY";
				colvarSoNgay.DataType = DbType.Int32;
				colvarSoNgay.MaxLength = 0;
				colvarSoNgay.AutoIncrement = false;
				colvarSoNgay.IsNullable = true;
				colvarSoNgay.IsPrimaryKey = false;
				colvarSoNgay.IsForeignKey = false;
				colvarSoNgay.IsReadOnly = false;
				colvarSoNgay.DefaultSetting = @"";
				colvarSoNgay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoNgay);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				
						colvarNgayTao.DefaultSetting = @"(getdate())";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarIpMacSua = new TableSchema.TableColumn(schema);
				colvarIpMacSua.ColumnName = "IP_MAC_SUA";
				colvarIpMacSua.DataType = DbType.String;
				colvarIpMacSua.MaxLength = 100;
				colvarIpMacSua.AutoIncrement = false;
				colvarIpMacSua.IsNullable = true;
				colvarIpMacSua.IsPrimaryKey = false;
				colvarIpMacSua.IsForeignKey = false;
				colvarIpMacSua.IsReadOnly = false;
				colvarIpMacSua.DefaultSetting = @"";
				colvarIpMacSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMacSua);
				
				TableSchema.TableColumn colvarIpMacTao = new TableSchema.TableColumn(schema);
				colvarIpMacTao.ColumnName = "IP_MAC_TAO";
				colvarIpMacTao.DataType = DbType.String;
				colvarIpMacTao.MaxLength = 100;
				colvarIpMacTao.AutoIncrement = false;
				colvarIpMacTao.IsNullable = true;
				colvarIpMacTao.IsPrimaryKey = false;
				colvarIpMacTao.IsForeignKey = false;
				colvarIpMacTao.IsReadOnly = false;
				colvarIpMacTao.DefaultSetting = @"";
				colvarIpMacTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMacTao);
				
				TableSchema.TableColumn colvarIpMaySua = new TableSchema.TableColumn(schema);
				colvarIpMaySua.ColumnName = "IP_MAY_SUA";
				colvarIpMaySua.DataType = DbType.String;
				colvarIpMaySua.MaxLength = 20;
				colvarIpMaySua.AutoIncrement = false;
				colvarIpMaySua.IsNullable = true;
				colvarIpMaySua.IsPrimaryKey = false;
				colvarIpMaySua.IsForeignKey = false;
				colvarIpMaySua.IsReadOnly = false;
				colvarIpMaySua.DefaultSetting = @"";
				colvarIpMaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaySua);
				
				TableSchema.TableColumn colvarIpMayTao = new TableSchema.TableColumn(schema);
				colvarIpMayTao.ColumnName = "IP_MAY_TAO";
				colvarIpMayTao.DataType = DbType.String;
				colvarIpMayTao.MaxLength = 20;
				colvarIpMayTao.AutoIncrement = false;
				colvarIpMayTao.IsNullable = true;
				colvarIpMayTao.IsPrimaryKey = false;
				colvarIpMayTao.IsForeignKey = false;
				colvarIpMayTao.IsReadOnly = false;
				colvarIpMayTao.DefaultSetting = @"";
				colvarIpMayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMayTao);
				
				TableSchema.TableColumn colvarMaKhoaThien = new TableSchema.TableColumn(schema);
				colvarMaKhoaThien.ColumnName = "MA_KHOA_THIEN";
				colvarMaKhoaThien.DataType = DbType.String;
				colvarMaKhoaThien.MaxLength = 10;
				colvarMaKhoaThien.AutoIncrement = false;
				colvarMaKhoaThien.IsNullable = true;
				colvarMaKhoaThien.IsPrimaryKey = false;
				colvarMaKhoaThien.IsForeignKey = false;
				colvarMaKhoaThien.IsReadOnly = false;
				colvarMaKhoaThien.DefaultSetting = @"";
				colvarMaKhoaThien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKhoaThien);
				
				TableSchema.TableColumn colvarChanDoanChinh = new TableSchema.TableColumn(schema);
				colvarChanDoanChinh.ColumnName = "CHAN_DOAN_CHINH";
				colvarChanDoanChinh.DataType = DbType.String;
				colvarChanDoanChinh.MaxLength = 500;
				colvarChanDoanChinh.AutoIncrement = false;
				colvarChanDoanChinh.IsNullable = true;
				colvarChanDoanChinh.IsPrimaryKey = false;
				colvarChanDoanChinh.IsForeignKey = false;
				colvarChanDoanChinh.IsReadOnly = false;
				colvarChanDoanChinh.DefaultSetting = @"";
				colvarChanDoanChinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChanDoanChinh);
				
				TableSchema.TableColumn colvarChanDoanPhu = new TableSchema.TableColumn(schema);
				colvarChanDoanPhu.ColumnName = "CHAN_DOAN_PHU";
				colvarChanDoanPhu.DataType = DbType.String;
				colvarChanDoanPhu.MaxLength = 500;
				colvarChanDoanPhu.AutoIncrement = false;
				colvarChanDoanPhu.IsNullable = true;
				colvarChanDoanPhu.IsPrimaryKey = false;
				colvarChanDoanPhu.IsForeignKey = false;
				colvarChanDoanPhu.IsReadOnly = false;
				colvarChanDoanPhu.DefaultSetting = @"";
				colvarChanDoanPhu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChanDoanPhu);
				
				TableSchema.TableColumn colvarCachXly = new TableSchema.TableColumn(schema);
				colvarCachXly.ColumnName = "CACH_XLY";
				colvarCachXly.DataType = DbType.String;
				colvarCachXly.MaxLength = 100;
				colvarCachXly.AutoIncrement = false;
				colvarCachXly.IsNullable = true;
				colvarCachXly.IsPrimaryKey = false;
				colvarCachXly.IsForeignKey = false;
				colvarCachXly.IsReadOnly = false;
				colvarCachXly.DefaultSetting = @"";
				colvarCachXly.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCachXly);
				
				TableSchema.TableColumn colvarNgayRaVien = new TableSchema.TableColumn(schema);
				colvarNgayRaVien.ColumnName = "NGAY_RA_VIEN";
				colvarNgayRaVien.DataType = DbType.DateTime;
				colvarNgayRaVien.MaxLength = 0;
				colvarNgayRaVien.AutoIncrement = false;
				colvarNgayRaVien.IsNullable = true;
				colvarNgayRaVien.IsPrimaryKey = false;
				colvarNgayRaVien.IsForeignKey = false;
				colvarNgayRaVien.IsReadOnly = false;
				colvarNgayRaVien.DefaultSetting = @"";
				colvarNgayRaVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayRaVien);
				
				TableSchema.TableColumn colvarBedId = new TableSchema.TableColumn(schema);
				colvarBedId.ColumnName = "Bed_ID";
				colvarBedId.DataType = DbType.Int16;
				colvarBedId.MaxLength = 0;
				colvarBedId.AutoIncrement = false;
				colvarBedId.IsNullable = true;
				colvarBedId.IsPrimaryKey = false;
				colvarBedId.IsForeignKey = false;
				colvarBedId.IsReadOnly = false;
				colvarBedId.DefaultSetting = @"";
				colvarBedId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBedId);
				
				TableSchema.TableColumn colvarBoVien = new TableSchema.TableColumn(schema);
				colvarBoVien.ColumnName = "BO_VIEN";
				colvarBoVien.DataType = DbType.Boolean;
				colvarBoVien.MaxLength = 0;
				colvarBoVien.AutoIncrement = false;
				colvarBoVien.IsNullable = true;
				colvarBoVien.IsPrimaryKey = false;
				colvarBoVien.IsForeignKey = false;
				colvarBoVien.IsReadOnly = false;
				
						colvarBoVien.DefaultSetting = @"((0))";
				colvarBoVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBoVien);
				
				TableSchema.TableColumn colvarCdoanNvien = new TableSchema.TableColumn(schema);
				colvarCdoanNvien.ColumnName = "CDOAN_NVIEN";
				colvarCdoanNvien.DataType = DbType.String;
				colvarCdoanNvien.MaxLength = 100;
				colvarCdoanNvien.AutoIncrement = false;
				colvarCdoanNvien.IsNullable = true;
				colvarCdoanNvien.IsPrimaryKey = false;
				colvarCdoanNvien.IsForeignKey = false;
				colvarCdoanNvien.IsReadOnly = false;
				colvarCdoanNvien.DefaultSetting = @"";
				colvarCdoanNvien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdoanNvien);
				
				TableSchema.TableColumn colvarCdoanTtruoc = new TableSchema.TableColumn(schema);
				colvarCdoanTtruoc.ColumnName = "CDOAN_TTRUOC";
				colvarCdoanTtruoc.DataType = DbType.String;
				colvarCdoanTtruoc.MaxLength = 100;
				colvarCdoanTtruoc.AutoIncrement = false;
				colvarCdoanTtruoc.IsNullable = true;
				colvarCdoanTtruoc.IsPrimaryKey = false;
				colvarCdoanTtruoc.IsForeignKey = false;
				colvarCdoanTtruoc.IsReadOnly = false;
				colvarCdoanTtruoc.DefaultSetting = @"";
				colvarCdoanTtruoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCdoanTtruoc);
				
				TableSchema.TableColumn colvarIdNoiGioiThieu = new TableSchema.TableColumn(schema);
				colvarIdNoiGioiThieu.ColumnName = "ID_NoiGioiThieu";
				colvarIdNoiGioiThieu.DataType = DbType.Int16;
				colvarIdNoiGioiThieu.MaxLength = 0;
				colvarIdNoiGioiThieu.AutoIncrement = false;
				colvarIdNoiGioiThieu.IsNullable = true;
				colvarIdNoiGioiThieu.IsPrimaryKey = false;
				colvarIdNoiGioiThieu.IsForeignKey = false;
				colvarIdNoiGioiThieu.IsReadOnly = false;
				colvarIdNoiGioiThieu.DefaultSetting = @"";
				colvarIdNoiGioiThieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNoiGioiThieu);
				
				TableSchema.TableColumn colvarMbenhNvien = new TableSchema.TableColumn(schema);
				colvarMbenhNvien.ColumnName = "MBENH_NVIEN";
				colvarMbenhNvien.DataType = DbType.String;
				colvarMbenhNvien.MaxLength = 10;
				colvarMbenhNvien.AutoIncrement = false;
				colvarMbenhNvien.IsNullable = true;
				colvarMbenhNvien.IsPrimaryKey = false;
				colvarMbenhNvien.IsForeignKey = false;
				colvarMbenhNvien.IsReadOnly = false;
				colvarMbenhNvien.DefaultSetting = @"";
				colvarMbenhNvien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMbenhNvien);
				
				TableSchema.TableColumn colvarMbenhTtruoc = new TableSchema.TableColumn(schema);
				colvarMbenhTtruoc.ColumnName = "MBENH_TTRUOC";
				colvarMbenhTtruoc.DataType = DbType.String;
				colvarMbenhTtruoc.MaxLength = 10;
				colvarMbenhTtruoc.AutoIncrement = false;
				colvarMbenhTtruoc.IsNullable = true;
				colvarMbenhTtruoc.IsPrimaryKey = false;
				colvarMbenhTtruoc.IsForeignKey = false;
				colvarMbenhTtruoc.IsReadOnly = false;
				colvarMbenhTtruoc.DefaultSetting = @"";
				colvarMbenhTtruoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMbenhTtruoc);
				
				TableSchema.TableColumn colvarNbaotinQhe = new TableSchema.TableColumn(schema);
				colvarNbaotinQhe.ColumnName = "NBAOTIN_QHE";
				colvarNbaotinQhe.DataType = DbType.String;
				colvarNbaotinQhe.MaxLength = 20;
				colvarNbaotinQhe.AutoIncrement = false;
				colvarNbaotinQhe.IsNullable = true;
				colvarNbaotinQhe.IsPrimaryKey = false;
				colvarNbaotinQhe.IsForeignKey = false;
				colvarNbaotinQhe.IsReadOnly = false;
				colvarNbaotinQhe.DefaultSetting = @"";
				colvarNbaotinQhe.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNbaotinQhe);
				
				TableSchema.TableColumn colvarRoomId = new TableSchema.TableColumn(schema);
				colvarRoomId.ColumnName = "Room_ID";
				colvarRoomId.DataType = DbType.Int16;
				colvarRoomId.MaxLength = 0;
				colvarRoomId.AutoIncrement = false;
				colvarRoomId.IsNullable = true;
				colvarRoomId.IsPrimaryKey = false;
				colvarRoomId.IsForeignKey = false;
				colvarRoomId.IsReadOnly = false;
				colvarRoomId.DefaultSetting = @"";
				colvarRoomId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRoomId);
				
				TableSchema.TableColumn colvarThongBao = new TableSchema.TableColumn(schema);
				colvarThongBao.ColumnName = "THONG_BAO";
				colvarThongBao.DataType = DbType.String;
				colvarThongBao.MaxLength = 200;
				colvarThongBao.AutoIncrement = false;
				colvarThongBao.IsNullable = true;
				colvarThongBao.IsPrimaryKey = false;
				colvarThongBao.IsForeignKey = false;
				colvarThongBao.IsReadOnly = false;
				colvarThongBao.DefaultSetting = @"";
				colvarThongBao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThongBao);
				
				TableSchema.TableColumn colvarSoKhaiSinh = new TableSchema.TableColumn(schema);
				colvarSoKhaiSinh.ColumnName = "So_Khai_Sinh";
				colvarSoKhaiSinh.DataType = DbType.String;
				colvarSoKhaiSinh.MaxLength = 30;
				colvarSoKhaiSinh.AutoIncrement = false;
				colvarSoKhaiSinh.IsNullable = true;
				colvarSoKhaiSinh.IsPrimaryKey = false;
				colvarSoKhaiSinh.IsForeignKey = false;
				colvarSoKhaiSinh.IsReadOnly = false;
				
						colvarSoKhaiSinh.DefaultSetting = @"('')";
				colvarSoKhaiSinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoKhaiSinh);
				
				TableSchema.TableColumn colvarIdDviCapTren = new TableSchema.TableColumn(schema);
				colvarIdDviCapTren.ColumnName = "Id_Dvi_CapTren";
				colvarIdDviCapTren.DataType = DbType.Int16;
				colvarIdDviCapTren.MaxLength = 0;
				colvarIdDviCapTren.AutoIncrement = false;
				colvarIdDviCapTren.IsNullable = true;
				colvarIdDviCapTren.IsPrimaryKey = false;
				colvarIdDviCapTren.IsForeignKey = false;
				colvarIdDviCapTren.IsReadOnly = false;
				colvarIdDviCapTren.DefaultSetting = @"";
				colvarIdDviCapTren.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDviCapTren);
				
				TableSchema.TableColumn colvarIdChucVu = new TableSchema.TableColumn(schema);
				colvarIdChucVu.ColumnName = "Id_ChucVu";
				colvarIdChucVu.DataType = DbType.Int16;
				colvarIdChucVu.MaxLength = 0;
				colvarIdChucVu.AutoIncrement = false;
				colvarIdChucVu.IsNullable = true;
				colvarIdChucVu.IsPrimaryKey = false;
				colvarIdChucVu.IsForeignKey = false;
				colvarIdChucVu.IsReadOnly = false;
				colvarIdChucVu.DefaultSetting = @"";
				colvarIdChucVu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdChucVu);
				
				TableSchema.TableColumn colvarTuyenXa = new TableSchema.TableColumn(schema);
				colvarTuyenXa.ColumnName = "Tuyen_Xa";
				colvarTuyenXa.DataType = DbType.Boolean;
				colvarTuyenXa.MaxLength = 0;
				colvarTuyenXa.AutoIncrement = false;
				colvarTuyenXa.IsNullable = true;
				colvarTuyenXa.IsPrimaryKey = false;
				colvarTuyenXa.IsForeignKey = false;
				colvarTuyenXa.IsReadOnly = false;
				
						colvarTuyenXa.DefaultSetting = @"((0))";
				colvarTuyenXa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuyenXa);
				
				TableSchema.TableColumn colvarNgayKthuc = new TableSchema.TableColumn(schema);
				colvarNgayKthuc.ColumnName = "NGAY_KTHUC";
				colvarNgayKthuc.DataType = DbType.DateTime;
				colvarNgayKthuc.MaxLength = 0;
				colvarNgayKthuc.AutoIncrement = false;
				colvarNgayKthuc.IsNullable = true;
				colvarNgayKthuc.IsPrimaryKey = false;
				colvarNgayKthuc.IsForeignKey = false;
				colvarNgayKthuc.IsReadOnly = false;
				colvarNgayKthuc.DefaultSetting = @"";
				colvarNgayKthuc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayKthuc);
				
				TableSchema.TableColumn colvarGiayBhyt = new TableSchema.TableColumn(schema);
				colvarGiayBhyt.ColumnName = "Giay_Bhyt";
				colvarGiayBhyt.DataType = DbType.Boolean;
				colvarGiayBhyt.MaxLength = 0;
				colvarGiayBhyt.AutoIncrement = false;
				colvarGiayBhyt.IsNullable = true;
				colvarGiayBhyt.IsPrimaryKey = false;
				colvarGiayBhyt.IsForeignKey = false;
				colvarGiayBhyt.IsReadOnly = false;
				
						colvarGiayBhyt.DefaultSetting = @"((0))";
				colvarGiayBhyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiayBhyt);
				
				TableSchema.TableColumn colvarPtramBhytDThe = new TableSchema.TableColumn(schema);
				colvarPtramBhytDThe.ColumnName = "PtramBhyt_DThe";
				colvarPtramBhytDThe.DataType = DbType.Int16;
				colvarPtramBhytDThe.MaxLength = 0;
				colvarPtramBhytDThe.AutoIncrement = false;
				colvarPtramBhytDThe.IsNullable = true;
				colvarPtramBhytDThe.IsPrimaryKey = false;
				colvarPtramBhytDThe.IsForeignKey = false;
				colvarPtramBhytDThe.IsReadOnly = false;
				
						colvarPtramBhytDThe.DefaultSetting = @"((0))";
				colvarPtramBhytDThe.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPtramBhytDThe);
				
				TableSchema.TableColumn colvarMaDTSSong = new TableSchema.TableColumn(schema);
				colvarMaDTSSong.ColumnName = "MaDT_SSong";
				colvarMaDTSSong.DataType = DbType.String;
				colvarMaDTSSong.MaxLength = 5;
				colvarMaDTSSong.AutoIncrement = false;
				colvarMaDTSSong.IsNullable = true;
				colvarMaDTSSong.IsPrimaryKey = false;
				colvarMaDTSSong.IsForeignKey = false;
				colvarMaDTSSong.IsReadOnly = false;
				colvarMaDTSSong.DefaultSetting = @"";
				colvarMaDTSSong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDTSSong);
				
				TableSchema.TableColumn colvarKhoaTheBHYT = new TableSchema.TableColumn(schema);
				colvarKhoaTheBHYT.ColumnName = "Khoa_TheBHYT";
				colvarKhoaTheBHYT.DataType = DbType.Boolean;
				colvarKhoaTheBHYT.MaxLength = 0;
				colvarKhoaTheBHYT.AutoIncrement = false;
				colvarKhoaTheBHYT.IsNullable = true;
				colvarKhoaTheBHYT.IsPrimaryKey = false;
				colvarKhoaTheBHYT.IsForeignKey = false;
				colvarKhoaTheBHYT.IsReadOnly = false;
				
						colvarKhoaTheBHYT.DefaultSetting = @"((0))";
				colvarKhoaTheBHYT.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhoaTheBHYT);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_Patient_Exam",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public long PatientId 
		{
			get { return GetColumnValue<long>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("ObjectTypeId")]
		[Bindable(true)]
		public short ObjectTypeId 
		{
			get { return GetColumnValue<short>(Columns.ObjectTypeId); }
			set { SetColumnValue(Columns.ObjectTypeId, value); }
		}
		  
		[XmlAttribute("HosTrans")]
		[Bindable(true)]
		public byte HosTrans 
		{
			get { return GetColumnValue<byte>(Columns.HosTrans); }
			set { SetColumnValue(Columns.HosTrans, value); }
		}
		  
		[XmlAttribute("RelativeName")]
		[Bindable(true)]
		public string RelativeName 
		{
			get { return GetColumnValue<string>(Columns.RelativeName); }
			set { SetColumnValue(Columns.RelativeName, value); }
		}
		  
		[XmlAttribute("RelativePhone")]
		[Bindable(true)]
		public string RelativePhone 
		{
			get { return GetColumnValue<string>(Columns.RelativePhone); }
			set { SetColumnValue(Columns.RelativePhone, value); }
		}
		  
		[XmlAttribute("RelativeAddress")]
		[Bindable(true)]
		public string RelativeAddress 
		{
			get { return GetColumnValue<string>(Columns.RelativeAddress); }
			set { SetColumnValue(Columns.RelativeAddress, value); }
		}
		  
		[XmlAttribute("InsuranceNum")]
		[Bindable(true)]
		public string InsuranceNum 
		{
			get { return GetColumnValue<string>(Columns.InsuranceNum); }
			set { SetColumnValue(Columns.InsuranceNum, value); }
		}
		  
		[XmlAttribute("InsuranceFromDate")]
		[Bindable(true)]
		public DateTime? InsuranceFromDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.InsuranceFromDate); }
			set { SetColumnValue(Columns.InsuranceFromDate, value); }
		}
		  
		[XmlAttribute("InsuranceToDate")]
		[Bindable(true)]
		public DateTime? InsuranceToDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.InsuranceToDate); }
			set { SetColumnValue(Columns.InsuranceToDate, value); }
		}
		  
		[XmlAttribute("InsuranceSupply")]
		[Bindable(true)]
		public string InsuranceSupply 
		{
			get { return GetColumnValue<string>(Columns.InsuranceSupply); }
			set { SetColumnValue(Columns.InsuranceSupply, value); }
		}
		  
		[XmlAttribute("InsClinicCode")]
		[Bindable(true)]
		public string InsClinicCode 
		{
			get { return GetColumnValue<string>(Columns.InsClinicCode); }
			set { SetColumnValue(Columns.InsClinicCode, value); }
		}
		  
		[XmlAttribute("InsObjectCode")]
		[Bindable(true)]
		public string InsObjectCode 
		{
			get { return GetColumnValue<string>(Columns.InsObjectCode); }
			set { SetColumnValue(Columns.InsObjectCode, value); }
		}
		  
		[XmlAttribute("PaymentDate")]
		[Bindable(true)]
		public DateTime? PaymentDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.PaymentDate); }
			set { SetColumnValue(Columns.PaymentDate, value); }
		}
		  
		[XmlAttribute("InsObjectCodeNumber")]
		[Bindable(true)]
		public int? InsObjectCodeNumber 
		{
			get { return GetColumnValue<int?>(Columns.InsObjectCodeNumber); }
			set { SetColumnValue(Columns.InsObjectCodeNumber, value); }
		}
		  
		[XmlAttribute("InsObjectCodeTP")]
		[Bindable(true)]
		public string InsObjectCodeTP 
		{
			get { return GetColumnValue<string>(Columns.InsObjectCodeTP); }
			set { SetColumnValue(Columns.InsObjectCodeTP, value); }
		}
		  
		[XmlAttribute("InsLastObjectCode")]
		[Bindable(true)]
		public string InsLastObjectCode 
		{
			get { return GetColumnValue<string>(Columns.InsLastObjectCode); }
			set { SetColumnValue(Columns.InsLastObjectCode, value); }
		}
		  
		[XmlAttribute("InputDate")]
		[Bindable(true)]
		public DateTime InputDate 
		{
			get { return GetColumnValue<DateTime>(Columns.InputDate); }
			set { SetColumnValue(Columns.InputDate, value); }
		}
		  
		[XmlAttribute("UserId")]
		[Bindable(true)]
		public string UserId 
		{
			get { return GetColumnValue<string>(Columns.UserId); }
			set { SetColumnValue(Columns.UserId, value); }
		}
		  
		[XmlAttribute("HosStatus")]
		[Bindable(true)]
		public byte HosStatus 
		{
			get { return GetColumnValue<byte>(Columns.HosStatus); }
			set { SetColumnValue(Columns.HosStatus, value); }
		}
		  
		[XmlAttribute("DiscountRate")]
		[Bindable(true)]
		public decimal? DiscountRate 
		{
			get { return GetColumnValue<decimal?>(Columns.DiscountRate); }
			set { SetColumnValue(Columns.DiscountRate, value); }
		}
		  
		[XmlAttribute("DiscountType")]
		[Bindable(true)]
		public byte? DiscountType 
		{
			get { return GetColumnValue<byte?>(Columns.DiscountType); }
			set { SetColumnValue(Columns.DiscountType, value); }
		}
		  
		[XmlAttribute("OrgirinMoney")]
		[Bindable(true)]
		public decimal? OrgirinMoney 
		{
			get { return GetColumnValue<decimal?>(Columns.OrgirinMoney); }
			set { SetColumnValue(Columns.OrgirinMoney, value); }
		}
		  
		[XmlAttribute("SurchargePrice")]
		[Bindable(true)]
		public decimal? SurchargePrice 
		{
			get { return GetColumnValue<decimal?>(Columns.SurchargePrice); }
			set { SetColumnValue(Columns.SurchargePrice, value); }
		}
		  
		[XmlAttribute("LastMoney")]
		[Bindable(true)]
		public decimal? LastMoney 
		{
			get { return GetColumnValue<decimal?>(Columns.LastMoney); }
			set { SetColumnValue(Columns.LastMoney, value); }
		}
		  
		[XmlAttribute("Desc")]
		[Bindable(true)]
		public string Desc 
		{
			get { return GetColumnValue<string>(Columns.Desc); }
			set { SetColumnValue(Columns.Desc, value); }
		}
		  
		[XmlAttribute("Locked")]
		[Bindable(true)]
		public byte? Locked 
		{
			get { return GetColumnValue<byte?>(Columns.Locked); }
			set { SetColumnValue(Columns.Locked, value); }
		}
		  
		[XmlAttribute("DeleteBy")]
		[Bindable(true)]
		public string DeleteBy 
		{
			get { return GetColumnValue<string>(Columns.DeleteBy); }
			set { SetColumnValue(Columns.DeleteBy, value); }
		}
		  
		[XmlAttribute("DeleteDate")]
		[Bindable(true)]
		public DateTime? DeleteDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.DeleteDate); }
			set { SetColumnValue(Columns.DeleteDate, value); }
		}
		  
		[XmlAttribute("ReasonBy")]
		[Bindable(true)]
		public string ReasonBy 
		{
			get { return GetColumnValue<string>(Columns.ReasonBy); }
			set { SetColumnValue(Columns.ReasonBy, value); }
		}
		  
		[XmlAttribute("IndentityNo")]
		[Bindable(true)]
		public long? IndentityNo 
		{
			get { return GetColumnValue<long?>(Columns.IndentityNo); }
			set { SetColumnValue(Columns.IndentityNo, value); }
		}
		  
		[XmlAttribute("OutDateTime")]
		[Bindable(true)]
		public DateTime? OutDateTime 
		{
			get { return GetColumnValue<DateTime?>(Columns.OutDateTime); }
			set { SetColumnValue(Columns.OutDateTime, value); }
		}
		  
		[XmlAttribute("DepartmentId")]
		[Bindable(true)]
		public int? DepartmentId 
		{
			get { return GetColumnValue<int?>(Columns.DepartmentId); }
			set { SetColumnValue(Columns.DepartmentId, value); }
		}
		  
		[XmlAttribute("DisOfUser")]
		[Bindable(true)]
		public short? DisOfUser 
		{
			get { return GetColumnValue<short?>(Columns.DisOfUser); }
			set { SetColumnValue(Columns.DisOfUser, value); }
		}
		  
		[XmlAttribute("SalaryBasic")]
		[Bindable(true)]
		public decimal? SalaryBasic 
		{
			get { return GetColumnValue<decimal?>(Columns.SalaryBasic); }
			set { SetColumnValue(Columns.SalaryBasic, value); }
		}
		  
		[XmlAttribute("SCreateBy")]
		[Bindable(true)]
		public string SCreateBy 
		{
			get { return GetColumnValue<string>(Columns.SCreateBy); }
			set { SetColumnValue(Columns.SCreateBy, value); }
		}
		  
		[XmlAttribute("SCreateDate")]
		[Bindable(true)]
		public DateTime? SCreateDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.SCreateDate); }
			set { SetColumnValue(Columns.SCreateDate, value); }
		}
		  
		[XmlAttribute("SDiscountPrice")]
		[Bindable(true)]
		public decimal? SDiscountPrice 
		{
			get { return GetColumnValue<decimal?>(Columns.SDiscountPrice); }
			set { SetColumnValue(Columns.SDiscountPrice, value); }
		}
		  
		[XmlAttribute("SDiscountRate")]
		[Bindable(true)]
		public decimal? SDiscountRate 
		{
			get { return GetColumnValue<decimal?>(Columns.SDiscountRate); }
			set { SetColumnValue(Columns.SDiscountRate, value); }
		}
		  
		[XmlAttribute("SDiscountType")]
		[Bindable(true)]
		public byte? SDiscountType 
		{
			get { return GetColumnValue<byte?>(Columns.SDiscountType); }
			set { SetColumnValue(Columns.SDiscountType, value); }
		}
		  
		[XmlAttribute("SModifyBy")]
		[Bindable(true)]
		public string SModifyBy 
		{
			get { return GetColumnValue<string>(Columns.SModifyBy); }
			set { SetColumnValue(Columns.SModifyBy, value); }
		}
		  
		[XmlAttribute("SModifyDate")]
		[Bindable(true)]
		public DateTime? SModifyDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.SModifyDate); }
			set { SetColumnValue(Columns.SModifyDate, value); }
		}
		  
		[XmlAttribute("RankId")]
		[Bindable(true)]
		public int? RankId 
		{
			get { return GetColumnValue<int?>(Columns.RankId); }
			set { SetColumnValue(Columns.RankId, value); }
		}
		  
		[XmlAttribute("UnitId")]
		[Bindable(true)]
		public int? UnitId 
		{
			get { return GetColumnValue<int?>(Columns.UnitId); }
			set { SetColumnValue(Columns.UnitId, value); }
		}
		  
		[XmlAttribute("EmergencyHos")]
		[Bindable(true)]
		public int? EmergencyHos 
		{
			get { return GetColumnValue<int?>(Columns.EmergencyHos); }
			set { SetColumnValue(Columns.EmergencyHos, value); }
		}
		  
		[XmlAttribute("ToHos")]
		[Bindable(true)]
		public int? ToHos 
		{
			get { return GetColumnValue<int?>(Columns.ToHos); }
			set { SetColumnValue(Columns.ToHos, value); }
		}
		  
		[XmlAttribute("PositionName")]
		[Bindable(true)]
		public string PositionName 
		{
			get { return GetColumnValue<string>(Columns.PositionName); }
			set { SetColumnValue(Columns.PositionName, value); }
		}
		  
		[XmlAttribute("Symptoms")]
		[Bindable(true)]
		public string Symptoms 
		{
			get { return GetColumnValue<string>(Columns.Symptoms); }
			set { SetColumnValue(Columns.Symptoms, value); }
		}
		  
		[XmlAttribute("CorrectLine")]
		[Bindable(true)]
		public byte? CorrectLine 
		{
			get { return GetColumnValue<byte?>(Columns.CorrectLine); }
			set { SetColumnValue(Columns.CorrectLine, value); }
		}
		  
		[XmlAttribute("ExtendInsurancePrice")]
		[Bindable(true)]
		public decimal? ExtendInsurancePrice 
		{
			get { return GetColumnValue<decimal?>(Columns.ExtendInsurancePrice); }
			set { SetColumnValue(Columns.ExtendInsurancePrice, value); }
		}
		  
		[XmlAttribute("FromClinicStatus")]
		[Bindable(true)]
		public int? FromClinicStatus 
		{
			get { return GetColumnValue<int?>(Columns.FromClinicStatus); }
			set { SetColumnValue(Columns.FromClinicStatus, value); }
		}
		  
		[XmlAttribute("ToClinicCode")]
		[Bindable(true)]
		public string ToClinicCode 
		{
			get { return GetColumnValue<string>(Columns.ToClinicCode); }
			set { SetColumnValue(Columns.ToClinicCode, value); }
		}
		  
		[XmlAttribute("KetQuaDt")]
		[Bindable(true)]
		public byte? KetQuaDt 
		{
			get { return GetColumnValue<byte?>(Columns.KetQuaDt); }
			set { SetColumnValue(Columns.KetQuaDt, value); }
		}
		  
		[XmlAttribute("ChanDoanGiaiPhauTuThi")]
		[Bindable(true)]
		public string ChanDoanGiaiPhauTuThi 
		{
			get { return GetColumnValue<string>(Columns.ChanDoanGiaiPhauTuThi); }
			set { SetColumnValue(Columns.ChanDoanGiaiPhauTuThi, value); }
		}
		  
		[XmlAttribute("GiaiPhauBenh")]
		[Bindable(true)]
		public byte? GiaiPhauBenh 
		{
			get { return GetColumnValue<byte?>(Columns.GiaiPhauBenh); }
			set { SetColumnValue(Columns.GiaiPhauBenh, value); }
		}
		  
		[XmlAttribute("KhamTuThi")]
		[Bindable(true)]
		public byte? KhamTuThi 
		{
			get { return GetColumnValue<byte?>(Columns.KhamTuThi); }
			set { SetColumnValue(Columns.KhamTuThi, value); }
		}
		  
		[XmlAttribute("NgayTuVong")]
		[Bindable(true)]
		public DateTime? NgayTuVong 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTuVong); }
			set { SetColumnValue(Columns.NgayTuVong, value); }
		}
		  
		[XmlAttribute("NguyenNhanTuVong")]
		[Bindable(true)]
		public string NguyenNhanTuVong 
		{
			get { return GetColumnValue<string>(Columns.NguyenNhanTuVong); }
			set { SetColumnValue(Columns.NguyenNhanTuVong, value); }
		}
		  
		[XmlAttribute("TinhTrangTuVong")]
		[Bindable(true)]
		public byte? TinhTrangTuVong 
		{
			get { return GetColumnValue<byte?>(Columns.TinhTrangTuVong); }
			set { SetColumnValue(Columns.TinhTrangTuVong, value); }
		}
		  
		[XmlAttribute("MBenhChinh")]
		[Bindable(true)]
		public string MBenhChinh 
		{
			get { return GetColumnValue<string>(Columns.MBenhChinh); }
			set { SetColumnValue(Columns.MBenhChinh, value); }
		}
		  
		[XmlAttribute("MBenhPhu")]
		[Bindable(true)]
		public string MBenhPhu 
		{
			get { return GetColumnValue<string>(Columns.MBenhPhu); }
			set { SetColumnValue(Columns.MBenhPhu, value); }
		}
		  
		[XmlAttribute("MBenhSauPt")]
		[Bindable(true)]
		public string MBenhSauPt 
		{
			get { return GetColumnValue<string>(Columns.MBenhSauPt); }
			set { SetColumnValue(Columns.MBenhSauPt, value); }
		}
		  
		[XmlAttribute("MBenhTruocPt")]
		[Bindable(true)]
		public string MBenhTruocPt 
		{
			get { return GetColumnValue<string>(Columns.MBenhTruocPt); }
			set { SetColumnValue(Columns.MBenhTruocPt, value); }
		}
		  
		[XmlAttribute("SDescBenhChinh")]
		[Bindable(true)]
		public string SDescBenhChinh 
		{
			get { return GetColumnValue<string>(Columns.SDescBenhChinh); }
			set { SetColumnValue(Columns.SDescBenhChinh, value); }
		}
		  
		[XmlAttribute("SDescBenhPhu")]
		[Bindable(true)]
		public string SDescBenhPhu 
		{
			get { return GetColumnValue<string>(Columns.SDescBenhPhu); }
			set { SetColumnValue(Columns.SDescBenhPhu, value); }
		}
		  
		[XmlAttribute("SDescSauPt")]
		[Bindable(true)]
		public string SDescSauPt 
		{
			get { return GetColumnValue<string>(Columns.SDescSauPt); }
			set { SetColumnValue(Columns.SDescSauPt, value); }
		}
		  
		[XmlAttribute("SDescTruocPt")]
		[Bindable(true)]
		public string SDescTruocPt 
		{
			get { return GetColumnValue<string>(Columns.SDescTruocPt); }
			set { SetColumnValue(Columns.SDescTruocPt, value); }
		}
		  
		[XmlAttribute("TinhTrangRaVienStatus")]
		[Bindable(true)]
		public byte? TinhTrangRaVienStatus 
		{
			get { return GetColumnValue<byte?>(Columns.TinhTrangRaVienStatus); }
			set { SetColumnValue(Columns.TinhTrangRaVienStatus, value); }
		}
		  
		[XmlAttribute("GhiChuCv")]
		[Bindable(true)]
		public string GhiChuCv 
		{
			get { return GetColumnValue<string>(Columns.GhiChuCv); }
			set { SetColumnValue(Columns.GhiChuCv, value); }
		}
		  
		[XmlAttribute("DisplayOnReport")]
		[Bindable(true)]
		public byte DisplayOnReport 
		{
			get { return GetColumnValue<byte>(Columns.DisplayOnReport); }
			set { SetColumnValue(Columns.DisplayOnReport, value); }
		}
		  
		[XmlAttribute("MedicalNumber")]
		[Bindable(true)]
		public string MedicalNumber 
		{
			get { return GetColumnValue<string>(Columns.MedicalNumber); }
			set { SetColumnValue(Columns.MedicalNumber, value); }
		}
		  
		[XmlAttribute("TaiBien")]
		[Bindable(true)]
		public int? TaiBien 
		{
			get { return GetColumnValue<int?>(Columns.TaiBien); }
			set { SetColumnValue(Columns.TaiBien, value); }
		}
		  
		[XmlAttribute("BienChung")]
		[Bindable(true)]
		public int? BienChung 
		{
			get { return GetColumnValue<int?>(Columns.BienChung); }
			set { SetColumnValue(Columns.BienChung, value); }
		}
		  
		[XmlAttribute("ThuThuat")]
		[Bindable(true)]
		public int? ThuThuat 
		{
			get { return GetColumnValue<int?>(Columns.ThuThuat); }
			set { SetColumnValue(Columns.ThuThuat, value); }
		}
		  
		[XmlAttribute("PhauThuat")]
		[Bindable(true)]
		public int? PhauThuat 
		{
			get { return GetColumnValue<int?>(Columns.PhauThuat); }
			set { SetColumnValue(Columns.PhauThuat, value); }
		}
		  
		[XmlAttribute("TongSoNgayDtri")]
		[Bindable(true)]
		public int? TongSoNgayDtri 
		{
			get { return GetColumnValue<int?>(Columns.TongSoNgayDtri); }
			set { SetColumnValue(Columns.TongSoNgayDtri, value); }
		}
		  
		[XmlAttribute("MaDoiTuong")]
		[Bindable(true)]
		public string MaDoiTuong 
		{
			get { return GetColumnValue<string>(Columns.MaDoiTuong); }
			set { SetColumnValue(Columns.MaDoiTuong, value); }
		}
		  
		[XmlAttribute("THopStatus")]
		[Bindable(true)]
		public byte? THopStatus 
		{
			get { return GetColumnValue<byte?>(Columns.THopStatus); }
			set { SetColumnValue(Columns.THopStatus, value); }
		}
		  
		[XmlAttribute("KieuBn")]
		[Bindable(true)]
		public byte? KieuBn 
		{
			get { return GetColumnValue<byte?>(Columns.KieuBn); }
			set { SetColumnValue(Columns.KieuBn, value); }
		}
		  
		[XmlAttribute("DaKhoatGoi")]
		[Bindable(true)]
		public byte? DaKhoatGoi 
		{
			get { return GetColumnValue<byte?>(Columns.DaKhoatGoi); }
			set { SetColumnValue(Columns.DaKhoatGoi, value); }
		}
		  
		[XmlAttribute("IdKhoaTnhan")]
		[Bindable(true)]
		public int? IdKhoaTnhan 
		{
			get { return GetColumnValue<int?>(Columns.IdKhoaTnhan); }
			set { SetColumnValue(Columns.IdKhoaTnhan, value); }
		}
		  
		[XmlAttribute("IdRavien")]
		[Bindable(true)]
		public int? IdRavien 
		{
			get { return GetColumnValue<int?>(Columns.IdRavien); }
			set { SetColumnValue(Columns.IdRavien, value); }
		}
		  
		[XmlAttribute("NgayNhapVien")]
		[Bindable(true)]
		public DateTime? NgayNhapVien 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayNhapVien); }
			set { SetColumnValue(Columns.NgayNhapVien, value); }
		}
		  
		[XmlAttribute("IdGoiDvu")]
		[Bindable(true)]
		public int? IdGoiDvu 
		{
			get { return GetColumnValue<int?>(Columns.IdGoiDvu); }
			set { SetColumnValue(Columns.IdGoiDvu, value); }
		}
		  
		[XmlAttribute("DaSinh")]
		[Bindable(true)]
		public int? DaSinh 
		{
			get { return GetColumnValue<int?>(Columns.DaSinh); }
			set { SetColumnValue(Columns.DaSinh, value); }
		}
		  
		[XmlAttribute("IdBenhly")]
		[Bindable(true)]
		public int? IdBenhly 
		{
			get { return GetColumnValue<int?>(Columns.IdBenhly); }
			set { SetColumnValue(Columns.IdBenhly, value); }
		}
		  
		[XmlAttribute("NgoaiThanh")]
		[Bindable(true)]
		public int? NgoaiThanh 
		{
			get { return GetColumnValue<int?>(Columns.NgoaiThanh); }
			set { SetColumnValue(Columns.NgoaiThanh, value); }
		}
		  
		[XmlAttribute("SoTienGoi")]
		[Bindable(true)]
		public decimal? SoTienGoi 
		{
			get { return GetColumnValue<decimal?>(Columns.SoTienGoi); }
			set { SetColumnValue(Columns.SoTienGoi, value); }
		}
		  
		[XmlAttribute("SoNgay")]
		[Bindable(true)]
		public int? SoNgay 
		{
			get { return GetColumnValue<int?>(Columns.SoNgay); }
			set { SetColumnValue(Columns.SoNgay, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("IpMacSua")]
		[Bindable(true)]
		public string IpMacSua 
		{
			get { return GetColumnValue<string>(Columns.IpMacSua); }
			set { SetColumnValue(Columns.IpMacSua, value); }
		}
		  
		[XmlAttribute("IpMacTao")]
		[Bindable(true)]
		public string IpMacTao 
		{
			get { return GetColumnValue<string>(Columns.IpMacTao); }
			set { SetColumnValue(Columns.IpMacTao, value); }
		}
		  
		[XmlAttribute("IpMaySua")]
		[Bindable(true)]
		public string IpMaySua 
		{
			get { return GetColumnValue<string>(Columns.IpMaySua); }
			set { SetColumnValue(Columns.IpMaySua, value); }
		}
		  
		[XmlAttribute("IpMayTao")]
		[Bindable(true)]
		public string IpMayTao 
		{
			get { return GetColumnValue<string>(Columns.IpMayTao); }
			set { SetColumnValue(Columns.IpMayTao, value); }
		}
		  
		[XmlAttribute("MaKhoaThien")]
		[Bindable(true)]
		public string MaKhoaThien 
		{
			get { return GetColumnValue<string>(Columns.MaKhoaThien); }
			set { SetColumnValue(Columns.MaKhoaThien, value); }
		}
		  
		[XmlAttribute("ChanDoanChinh")]
		[Bindable(true)]
		public string ChanDoanChinh 
		{
			get { return GetColumnValue<string>(Columns.ChanDoanChinh); }
			set { SetColumnValue(Columns.ChanDoanChinh, value); }
		}
		  
		[XmlAttribute("ChanDoanPhu")]
		[Bindable(true)]
		public string ChanDoanPhu 
		{
			get { return GetColumnValue<string>(Columns.ChanDoanPhu); }
			set { SetColumnValue(Columns.ChanDoanPhu, value); }
		}
		  
		[XmlAttribute("CachXly")]
		[Bindable(true)]
		public string CachXly 
		{
			get { return GetColumnValue<string>(Columns.CachXly); }
			set { SetColumnValue(Columns.CachXly, value); }
		}
		  
		[XmlAttribute("NgayRaVien")]
		[Bindable(true)]
		public DateTime? NgayRaVien 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayRaVien); }
			set { SetColumnValue(Columns.NgayRaVien, value); }
		}
		  
		[XmlAttribute("BedId")]
		[Bindable(true)]
		public short? BedId 
		{
			get { return GetColumnValue<short?>(Columns.BedId); }
			set { SetColumnValue(Columns.BedId, value); }
		}
		  
		[XmlAttribute("BoVien")]
		[Bindable(true)]
		public bool? BoVien 
		{
			get { return GetColumnValue<bool?>(Columns.BoVien); }
			set { SetColumnValue(Columns.BoVien, value); }
		}
		  
		[XmlAttribute("CdoanNvien")]
		[Bindable(true)]
		public string CdoanNvien 
		{
			get { return GetColumnValue<string>(Columns.CdoanNvien); }
			set { SetColumnValue(Columns.CdoanNvien, value); }
		}
		  
		[XmlAttribute("CdoanTtruoc")]
		[Bindable(true)]
		public string CdoanTtruoc 
		{
			get { return GetColumnValue<string>(Columns.CdoanTtruoc); }
			set { SetColumnValue(Columns.CdoanTtruoc, value); }
		}
		  
		[XmlAttribute("IdNoiGioiThieu")]
		[Bindable(true)]
		public short? IdNoiGioiThieu 
		{
			get { return GetColumnValue<short?>(Columns.IdNoiGioiThieu); }
			set { SetColumnValue(Columns.IdNoiGioiThieu, value); }
		}
		  
		[XmlAttribute("MbenhNvien")]
		[Bindable(true)]
		public string MbenhNvien 
		{
			get { return GetColumnValue<string>(Columns.MbenhNvien); }
			set { SetColumnValue(Columns.MbenhNvien, value); }
		}
		  
		[XmlAttribute("MbenhTtruoc")]
		[Bindable(true)]
		public string MbenhTtruoc 
		{
			get { return GetColumnValue<string>(Columns.MbenhTtruoc); }
			set { SetColumnValue(Columns.MbenhTtruoc, value); }
		}
		  
		[XmlAttribute("NbaotinQhe")]
		[Bindable(true)]
		public string NbaotinQhe 
		{
			get { return GetColumnValue<string>(Columns.NbaotinQhe); }
			set { SetColumnValue(Columns.NbaotinQhe, value); }
		}
		  
		[XmlAttribute("RoomId")]
		[Bindable(true)]
		public short? RoomId 
		{
			get { return GetColumnValue<short?>(Columns.RoomId); }
			set { SetColumnValue(Columns.RoomId, value); }
		}
		  
		[XmlAttribute("ThongBao")]
		[Bindable(true)]
		public string ThongBao 
		{
			get { return GetColumnValue<string>(Columns.ThongBao); }
			set { SetColumnValue(Columns.ThongBao, value); }
		}
		  
		[XmlAttribute("SoKhaiSinh")]
		[Bindable(true)]
		public string SoKhaiSinh 
		{
			get { return GetColumnValue<string>(Columns.SoKhaiSinh); }
			set { SetColumnValue(Columns.SoKhaiSinh, value); }
		}
		  
		[XmlAttribute("IdDviCapTren")]
		[Bindable(true)]
		public short? IdDviCapTren 
		{
			get { return GetColumnValue<short?>(Columns.IdDviCapTren); }
			set { SetColumnValue(Columns.IdDviCapTren, value); }
		}
		  
		[XmlAttribute("IdChucVu")]
		[Bindable(true)]
		public short? IdChucVu 
		{
			get { return GetColumnValue<short?>(Columns.IdChucVu); }
			set { SetColumnValue(Columns.IdChucVu, value); }
		}
		  
		[XmlAttribute("TuyenXa")]
		[Bindable(true)]
		public bool? TuyenXa 
		{
			get { return GetColumnValue<bool?>(Columns.TuyenXa); }
			set { SetColumnValue(Columns.TuyenXa, value); }
		}
		  
		[XmlAttribute("NgayKthuc")]
		[Bindable(true)]
		public DateTime? NgayKthuc 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayKthuc); }
			set { SetColumnValue(Columns.NgayKthuc, value); }
		}
		  
		[XmlAttribute("GiayBhyt")]
		[Bindable(true)]
		public bool? GiayBhyt 
		{
			get { return GetColumnValue<bool?>(Columns.GiayBhyt); }
			set { SetColumnValue(Columns.GiayBhyt, value); }
		}
		  
		[XmlAttribute("PtramBhytDThe")]
		[Bindable(true)]
		public short? PtramBhytDThe 
		{
			get { return GetColumnValue<short?>(Columns.PtramBhytDThe); }
			set { SetColumnValue(Columns.PtramBhytDThe, value); }
		}
		  
		[XmlAttribute("MaDTSSong")]
		[Bindable(true)]
		public string MaDTSSong 
		{
			get { return GetColumnValue<string>(Columns.MaDTSSong); }
			set { SetColumnValue(Columns.MaDTSSong, value); }
		}
		  
		[XmlAttribute("KhoaTheBHYT")]
		[Bindable(true)]
		public bool? KhoaTheBHYT 
		{
			get { return GetColumnValue<bool?>(Columns.KhoaTheBHYT); }
			set { SetColumnValue(Columns.KhoaTheBHYT, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long varPatientId,string varPatientCode,short varObjectTypeId,byte varHosTrans,string varRelativeName,string varRelativePhone,string varRelativeAddress,string varInsuranceNum,DateTime? varInsuranceFromDate,DateTime? varInsuranceToDate,string varInsuranceSupply,string varInsClinicCode,string varInsObjectCode,DateTime? varPaymentDate,int? varInsObjectCodeNumber,string varInsObjectCodeTP,string varInsLastObjectCode,DateTime varInputDate,string varUserId,byte varHosStatus,decimal? varDiscountRate,byte? varDiscountType,decimal? varOrgirinMoney,decimal? varSurchargePrice,decimal? varLastMoney,string varDesc,byte? varLocked,string varDeleteBy,DateTime? varDeleteDate,string varReasonBy,long? varIndentityNo,DateTime? varOutDateTime,int? varDepartmentId,short? varDisOfUser,decimal? varSalaryBasic,string varSCreateBy,DateTime? varSCreateDate,decimal? varSDiscountPrice,decimal? varSDiscountRate,byte? varSDiscountType,string varSModifyBy,DateTime? varSModifyDate,int? varRankId,int? varUnitId,int? varEmergencyHos,int? varToHos,string varPositionName,string varSymptoms,byte? varCorrectLine,decimal? varExtendInsurancePrice,int? varFromClinicStatus,string varToClinicCode,byte? varKetQuaDt,string varChanDoanGiaiPhauTuThi,byte? varGiaiPhauBenh,byte? varKhamTuThi,DateTime? varNgayTuVong,string varNguyenNhanTuVong,byte? varTinhTrangTuVong,string varMBenhChinh,string varMBenhPhu,string varMBenhSauPt,string varMBenhTruocPt,string varSDescBenhChinh,string varSDescBenhPhu,string varSDescSauPt,string varSDescTruocPt,byte? varTinhTrangRaVienStatus,string varGhiChuCv,byte varDisplayOnReport,string varMedicalNumber,int? varTaiBien,int? varBienChung,int? varThuThuat,int? varPhauThuat,int? varTongSoNgayDtri,string varMaDoiTuong,byte? varTHopStatus,byte? varKieuBn,byte? varDaKhoatGoi,int? varIdKhoaTnhan,int? varIdRavien,DateTime? varNgayNhapVien,int? varIdGoiDvu,int? varDaSinh,int? varIdBenhly,int? varNgoaiThanh,decimal? varSoTienGoi,int? varSoNgay,DateTime? varNgaySua,DateTime? varNgayTao,string varNguoiSua,string varNguoiTao,string varIpMacSua,string varIpMacTao,string varIpMaySua,string varIpMayTao,string varMaKhoaThien,string varChanDoanChinh,string varChanDoanPhu,string varCachXly,DateTime? varNgayRaVien,short? varBedId,bool? varBoVien,string varCdoanNvien,string varCdoanTtruoc,short? varIdNoiGioiThieu,string varMbenhNvien,string varMbenhTtruoc,string varNbaotinQhe,short? varRoomId,string varThongBao,string varSoKhaiSinh,short? varIdDviCapTren,short? varIdChucVu,bool? varTuyenXa,DateTime? varNgayKthuc,bool? varGiayBhyt,short? varPtramBhytDThe,string varMaDTSSong,bool? varKhoaTheBHYT)
		{
			TPatientExam item = new TPatientExam();
			
			item.PatientId = varPatientId;
			
			item.PatientCode = varPatientCode;
			
			item.ObjectTypeId = varObjectTypeId;
			
			item.HosTrans = varHosTrans;
			
			item.RelativeName = varRelativeName;
			
			item.RelativePhone = varRelativePhone;
			
			item.RelativeAddress = varRelativeAddress;
			
			item.InsuranceNum = varInsuranceNum;
			
			item.InsuranceFromDate = varInsuranceFromDate;
			
			item.InsuranceToDate = varInsuranceToDate;
			
			item.InsuranceSupply = varInsuranceSupply;
			
			item.InsClinicCode = varInsClinicCode;
			
			item.InsObjectCode = varInsObjectCode;
			
			item.PaymentDate = varPaymentDate;
			
			item.InsObjectCodeNumber = varInsObjectCodeNumber;
			
			item.InsObjectCodeTP = varInsObjectCodeTP;
			
			item.InsLastObjectCode = varInsLastObjectCode;
			
			item.InputDate = varInputDate;
			
			item.UserId = varUserId;
			
			item.HosStatus = varHosStatus;
			
			item.DiscountRate = varDiscountRate;
			
			item.DiscountType = varDiscountType;
			
			item.OrgirinMoney = varOrgirinMoney;
			
			item.SurchargePrice = varSurchargePrice;
			
			item.LastMoney = varLastMoney;
			
			item.Desc = varDesc;
			
			item.Locked = varLocked;
			
			item.DeleteBy = varDeleteBy;
			
			item.DeleteDate = varDeleteDate;
			
			item.ReasonBy = varReasonBy;
			
			item.IndentityNo = varIndentityNo;
			
			item.OutDateTime = varOutDateTime;
			
			item.DepartmentId = varDepartmentId;
			
			item.DisOfUser = varDisOfUser;
			
			item.SalaryBasic = varSalaryBasic;
			
			item.SCreateBy = varSCreateBy;
			
			item.SCreateDate = varSCreateDate;
			
			item.SDiscountPrice = varSDiscountPrice;
			
			item.SDiscountRate = varSDiscountRate;
			
			item.SDiscountType = varSDiscountType;
			
			item.SModifyBy = varSModifyBy;
			
			item.SModifyDate = varSModifyDate;
			
			item.RankId = varRankId;
			
			item.UnitId = varUnitId;
			
			item.EmergencyHos = varEmergencyHos;
			
			item.ToHos = varToHos;
			
			item.PositionName = varPositionName;
			
			item.Symptoms = varSymptoms;
			
			item.CorrectLine = varCorrectLine;
			
			item.ExtendInsurancePrice = varExtendInsurancePrice;
			
			item.FromClinicStatus = varFromClinicStatus;
			
			item.ToClinicCode = varToClinicCode;
			
			item.KetQuaDt = varKetQuaDt;
			
			item.ChanDoanGiaiPhauTuThi = varChanDoanGiaiPhauTuThi;
			
			item.GiaiPhauBenh = varGiaiPhauBenh;
			
			item.KhamTuThi = varKhamTuThi;
			
			item.NgayTuVong = varNgayTuVong;
			
			item.NguyenNhanTuVong = varNguyenNhanTuVong;
			
			item.TinhTrangTuVong = varTinhTrangTuVong;
			
			item.MBenhChinh = varMBenhChinh;
			
			item.MBenhPhu = varMBenhPhu;
			
			item.MBenhSauPt = varMBenhSauPt;
			
			item.MBenhTruocPt = varMBenhTruocPt;
			
			item.SDescBenhChinh = varSDescBenhChinh;
			
			item.SDescBenhPhu = varSDescBenhPhu;
			
			item.SDescSauPt = varSDescSauPt;
			
			item.SDescTruocPt = varSDescTruocPt;
			
			item.TinhTrangRaVienStatus = varTinhTrangRaVienStatus;
			
			item.GhiChuCv = varGhiChuCv;
			
			item.DisplayOnReport = varDisplayOnReport;
			
			item.MedicalNumber = varMedicalNumber;
			
			item.TaiBien = varTaiBien;
			
			item.BienChung = varBienChung;
			
			item.ThuThuat = varThuThuat;
			
			item.PhauThuat = varPhauThuat;
			
			item.TongSoNgayDtri = varTongSoNgayDtri;
			
			item.MaDoiTuong = varMaDoiTuong;
			
			item.THopStatus = varTHopStatus;
			
			item.KieuBn = varKieuBn;
			
			item.DaKhoatGoi = varDaKhoatGoi;
			
			item.IdKhoaTnhan = varIdKhoaTnhan;
			
			item.IdRavien = varIdRavien;
			
			item.NgayNhapVien = varNgayNhapVien;
			
			item.IdGoiDvu = varIdGoiDvu;
			
			item.DaSinh = varDaSinh;
			
			item.IdBenhly = varIdBenhly;
			
			item.NgoaiThanh = varNgoaiThanh;
			
			item.SoTienGoi = varSoTienGoi;
			
			item.SoNgay = varSoNgay;
			
			item.NgaySua = varNgaySua;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NguoiTao = varNguoiTao;
			
			item.IpMacSua = varIpMacSua;
			
			item.IpMacTao = varIpMacTao;
			
			item.IpMaySua = varIpMaySua;
			
			item.IpMayTao = varIpMayTao;
			
			item.MaKhoaThien = varMaKhoaThien;
			
			item.ChanDoanChinh = varChanDoanChinh;
			
			item.ChanDoanPhu = varChanDoanPhu;
			
			item.CachXly = varCachXly;
			
			item.NgayRaVien = varNgayRaVien;
			
			item.BedId = varBedId;
			
			item.BoVien = varBoVien;
			
			item.CdoanNvien = varCdoanNvien;
			
			item.CdoanTtruoc = varCdoanTtruoc;
			
			item.IdNoiGioiThieu = varIdNoiGioiThieu;
			
			item.MbenhNvien = varMbenhNvien;
			
			item.MbenhTtruoc = varMbenhTtruoc;
			
			item.NbaotinQhe = varNbaotinQhe;
			
			item.RoomId = varRoomId;
			
			item.ThongBao = varThongBao;
			
			item.SoKhaiSinh = varSoKhaiSinh;
			
			item.IdDviCapTren = varIdDviCapTren;
			
			item.IdChucVu = varIdChucVu;
			
			item.TuyenXa = varTuyenXa;
			
			item.NgayKthuc = varNgayKthuc;
			
			item.GiayBhyt = varGiayBhyt;
			
			item.PtramBhytDThe = varPtramBhytDThe;
			
			item.MaDTSSong = varMaDTSSong;
			
			item.KhoaTheBHYT = varKhoaTheBHYT;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varPatientId,string varPatientCode,short varObjectTypeId,byte varHosTrans,string varRelativeName,string varRelativePhone,string varRelativeAddress,string varInsuranceNum,DateTime? varInsuranceFromDate,DateTime? varInsuranceToDate,string varInsuranceSupply,string varInsClinicCode,string varInsObjectCode,DateTime? varPaymentDate,int? varInsObjectCodeNumber,string varInsObjectCodeTP,string varInsLastObjectCode,DateTime varInputDate,string varUserId,byte varHosStatus,decimal? varDiscountRate,byte? varDiscountType,decimal? varOrgirinMoney,decimal? varSurchargePrice,decimal? varLastMoney,string varDesc,byte? varLocked,string varDeleteBy,DateTime? varDeleteDate,string varReasonBy,long? varIndentityNo,DateTime? varOutDateTime,int? varDepartmentId,short? varDisOfUser,decimal? varSalaryBasic,string varSCreateBy,DateTime? varSCreateDate,decimal? varSDiscountPrice,decimal? varSDiscountRate,byte? varSDiscountType,string varSModifyBy,DateTime? varSModifyDate,int? varRankId,int? varUnitId,int? varEmergencyHos,int? varToHos,string varPositionName,string varSymptoms,byte? varCorrectLine,decimal? varExtendInsurancePrice,int? varFromClinicStatus,string varToClinicCode,byte? varKetQuaDt,string varChanDoanGiaiPhauTuThi,byte? varGiaiPhauBenh,byte? varKhamTuThi,DateTime? varNgayTuVong,string varNguyenNhanTuVong,byte? varTinhTrangTuVong,string varMBenhChinh,string varMBenhPhu,string varMBenhSauPt,string varMBenhTruocPt,string varSDescBenhChinh,string varSDescBenhPhu,string varSDescSauPt,string varSDescTruocPt,byte? varTinhTrangRaVienStatus,string varGhiChuCv,byte varDisplayOnReport,string varMedicalNumber,int? varTaiBien,int? varBienChung,int? varThuThuat,int? varPhauThuat,int? varTongSoNgayDtri,string varMaDoiTuong,byte? varTHopStatus,byte? varKieuBn,byte? varDaKhoatGoi,int? varIdKhoaTnhan,int? varIdRavien,DateTime? varNgayNhapVien,int? varIdGoiDvu,int? varDaSinh,int? varIdBenhly,int? varNgoaiThanh,decimal? varSoTienGoi,int? varSoNgay,DateTime? varNgaySua,DateTime? varNgayTao,string varNguoiSua,string varNguoiTao,string varIpMacSua,string varIpMacTao,string varIpMaySua,string varIpMayTao,string varMaKhoaThien,string varChanDoanChinh,string varChanDoanPhu,string varCachXly,DateTime? varNgayRaVien,short? varBedId,bool? varBoVien,string varCdoanNvien,string varCdoanTtruoc,short? varIdNoiGioiThieu,string varMbenhNvien,string varMbenhTtruoc,string varNbaotinQhe,short? varRoomId,string varThongBao,string varSoKhaiSinh,short? varIdDviCapTren,short? varIdChucVu,bool? varTuyenXa,DateTime? varNgayKthuc,bool? varGiayBhyt,short? varPtramBhytDThe,string varMaDTSSong,bool? varKhoaTheBHYT)
		{
			TPatientExam item = new TPatientExam();
			
				item.PatientId = varPatientId;
			
				item.PatientCode = varPatientCode;
			
				item.ObjectTypeId = varObjectTypeId;
			
				item.HosTrans = varHosTrans;
			
				item.RelativeName = varRelativeName;
			
				item.RelativePhone = varRelativePhone;
			
				item.RelativeAddress = varRelativeAddress;
			
				item.InsuranceNum = varInsuranceNum;
			
				item.InsuranceFromDate = varInsuranceFromDate;
			
				item.InsuranceToDate = varInsuranceToDate;
			
				item.InsuranceSupply = varInsuranceSupply;
			
				item.InsClinicCode = varInsClinicCode;
			
				item.InsObjectCode = varInsObjectCode;
			
				item.PaymentDate = varPaymentDate;
			
				item.InsObjectCodeNumber = varInsObjectCodeNumber;
			
				item.InsObjectCodeTP = varInsObjectCodeTP;
			
				item.InsLastObjectCode = varInsLastObjectCode;
			
				item.InputDate = varInputDate;
			
				item.UserId = varUserId;
			
				item.HosStatus = varHosStatus;
			
				item.DiscountRate = varDiscountRate;
			
				item.DiscountType = varDiscountType;
			
				item.OrgirinMoney = varOrgirinMoney;
			
				item.SurchargePrice = varSurchargePrice;
			
				item.LastMoney = varLastMoney;
			
				item.Desc = varDesc;
			
				item.Locked = varLocked;
			
				item.DeleteBy = varDeleteBy;
			
				item.DeleteDate = varDeleteDate;
			
				item.ReasonBy = varReasonBy;
			
				item.IndentityNo = varIndentityNo;
			
				item.OutDateTime = varOutDateTime;
			
				item.DepartmentId = varDepartmentId;
			
				item.DisOfUser = varDisOfUser;
			
				item.SalaryBasic = varSalaryBasic;
			
				item.SCreateBy = varSCreateBy;
			
				item.SCreateDate = varSCreateDate;
			
				item.SDiscountPrice = varSDiscountPrice;
			
				item.SDiscountRate = varSDiscountRate;
			
				item.SDiscountType = varSDiscountType;
			
				item.SModifyBy = varSModifyBy;
			
				item.SModifyDate = varSModifyDate;
			
				item.RankId = varRankId;
			
				item.UnitId = varUnitId;
			
				item.EmergencyHos = varEmergencyHos;
			
				item.ToHos = varToHos;
			
				item.PositionName = varPositionName;
			
				item.Symptoms = varSymptoms;
			
				item.CorrectLine = varCorrectLine;
			
				item.ExtendInsurancePrice = varExtendInsurancePrice;
			
				item.FromClinicStatus = varFromClinicStatus;
			
				item.ToClinicCode = varToClinicCode;
			
				item.KetQuaDt = varKetQuaDt;
			
				item.ChanDoanGiaiPhauTuThi = varChanDoanGiaiPhauTuThi;
			
				item.GiaiPhauBenh = varGiaiPhauBenh;
			
				item.KhamTuThi = varKhamTuThi;
			
				item.NgayTuVong = varNgayTuVong;
			
				item.NguyenNhanTuVong = varNguyenNhanTuVong;
			
				item.TinhTrangTuVong = varTinhTrangTuVong;
			
				item.MBenhChinh = varMBenhChinh;
			
				item.MBenhPhu = varMBenhPhu;
			
				item.MBenhSauPt = varMBenhSauPt;
			
				item.MBenhTruocPt = varMBenhTruocPt;
			
				item.SDescBenhChinh = varSDescBenhChinh;
			
				item.SDescBenhPhu = varSDescBenhPhu;
			
				item.SDescSauPt = varSDescSauPt;
			
				item.SDescTruocPt = varSDescTruocPt;
			
				item.TinhTrangRaVienStatus = varTinhTrangRaVienStatus;
			
				item.GhiChuCv = varGhiChuCv;
			
				item.DisplayOnReport = varDisplayOnReport;
			
				item.MedicalNumber = varMedicalNumber;
			
				item.TaiBien = varTaiBien;
			
				item.BienChung = varBienChung;
			
				item.ThuThuat = varThuThuat;
			
				item.PhauThuat = varPhauThuat;
			
				item.TongSoNgayDtri = varTongSoNgayDtri;
			
				item.MaDoiTuong = varMaDoiTuong;
			
				item.THopStatus = varTHopStatus;
			
				item.KieuBn = varKieuBn;
			
				item.DaKhoatGoi = varDaKhoatGoi;
			
				item.IdKhoaTnhan = varIdKhoaTnhan;
			
				item.IdRavien = varIdRavien;
			
				item.NgayNhapVien = varNgayNhapVien;
			
				item.IdGoiDvu = varIdGoiDvu;
			
				item.DaSinh = varDaSinh;
			
				item.IdBenhly = varIdBenhly;
			
				item.NgoaiThanh = varNgoaiThanh;
			
				item.SoTienGoi = varSoTienGoi;
			
				item.SoNgay = varSoNgay;
			
				item.NgaySua = varNgaySua;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NguoiTao = varNguoiTao;
			
				item.IpMacSua = varIpMacSua;
			
				item.IpMacTao = varIpMacTao;
			
				item.IpMaySua = varIpMaySua;
			
				item.IpMayTao = varIpMayTao;
			
				item.MaKhoaThien = varMaKhoaThien;
			
				item.ChanDoanChinh = varChanDoanChinh;
			
				item.ChanDoanPhu = varChanDoanPhu;
			
				item.CachXly = varCachXly;
			
				item.NgayRaVien = varNgayRaVien;
			
				item.BedId = varBedId;
			
				item.BoVien = varBoVien;
			
				item.CdoanNvien = varCdoanNvien;
			
				item.CdoanTtruoc = varCdoanTtruoc;
			
				item.IdNoiGioiThieu = varIdNoiGioiThieu;
			
				item.MbenhNvien = varMbenhNvien;
			
				item.MbenhTtruoc = varMbenhTtruoc;
			
				item.NbaotinQhe = varNbaotinQhe;
			
				item.RoomId = varRoomId;
			
				item.ThongBao = varThongBao;
			
				item.SoKhaiSinh = varSoKhaiSinh;
			
				item.IdDviCapTren = varIdDviCapTren;
			
				item.IdChucVu = varIdChucVu;
			
				item.TuyenXa = varTuyenXa;
			
				item.NgayKthuc = varNgayKthuc;
			
				item.GiayBhyt = varGiayBhyt;
			
				item.PtramBhytDThe = varPtramBhytDThe;
			
				item.MaDTSSong = varMaDTSSong;
			
				item.KhoaTheBHYT = varKhoaTheBHYT;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn ObjectTypeIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn HosTransColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn RelativeNameColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn RelativePhoneColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn RelativeAddressColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn InsuranceNumColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn InsuranceFromDateColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn InsuranceToDateColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn InsuranceSupplyColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn InsClinicCodeColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn InsObjectCodeColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentDateColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn InsObjectCodeNumberColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn InsObjectCodeTPColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn InsLastObjectCodeColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn InputDateColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn UserIdColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn HosStatusColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountRateColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountTypeColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn OrgirinMoneyColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn SurchargePriceColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn LastMoneyColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn DescColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn LockedColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn DeleteByColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn DeleteDateColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn ReasonByColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn IndentityNoColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn OutDateTimeColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn DepartmentIdColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn DisOfUserColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn SalaryBasicColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn SCreateByColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn SCreateDateColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn SDiscountPriceColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn SDiscountRateColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn SDiscountTypeColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        public static TableSchema.TableColumn SModifyByColumn
        {
            get { return Schema.Columns[40]; }
        }
        
        
        
        public static TableSchema.TableColumn SModifyDateColumn
        {
            get { return Schema.Columns[41]; }
        }
        
        
        
        public static TableSchema.TableColumn RankIdColumn
        {
            get { return Schema.Columns[42]; }
        }
        
        
        
        public static TableSchema.TableColumn UnitIdColumn
        {
            get { return Schema.Columns[43]; }
        }
        
        
        
        public static TableSchema.TableColumn EmergencyHosColumn
        {
            get { return Schema.Columns[44]; }
        }
        
        
        
        public static TableSchema.TableColumn ToHosColumn
        {
            get { return Schema.Columns[45]; }
        }
        
        
        
        public static TableSchema.TableColumn PositionNameColumn
        {
            get { return Schema.Columns[46]; }
        }
        
        
        
        public static TableSchema.TableColumn SymptomsColumn
        {
            get { return Schema.Columns[47]; }
        }
        
        
        
        public static TableSchema.TableColumn CorrectLineColumn
        {
            get { return Schema.Columns[48]; }
        }
        
        
        
        public static TableSchema.TableColumn ExtendInsurancePriceColumn
        {
            get { return Schema.Columns[49]; }
        }
        
        
        
        public static TableSchema.TableColumn FromClinicStatusColumn
        {
            get { return Schema.Columns[50]; }
        }
        
        
        
        public static TableSchema.TableColumn ToClinicCodeColumn
        {
            get { return Schema.Columns[51]; }
        }
        
        
        
        public static TableSchema.TableColumn KetQuaDtColumn
        {
            get { return Schema.Columns[52]; }
        }
        
        
        
        public static TableSchema.TableColumn ChanDoanGiaiPhauTuThiColumn
        {
            get { return Schema.Columns[53]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaiPhauBenhColumn
        {
            get { return Schema.Columns[54]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamTuThiColumn
        {
            get { return Schema.Columns[55]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTuVongColumn
        {
            get { return Schema.Columns[56]; }
        }
        
        
        
        public static TableSchema.TableColumn NguyenNhanTuVongColumn
        {
            get { return Schema.Columns[57]; }
        }
        
        
        
        public static TableSchema.TableColumn TinhTrangTuVongColumn
        {
            get { return Schema.Columns[58]; }
        }
        
        
        
        public static TableSchema.TableColumn MBenhChinhColumn
        {
            get { return Schema.Columns[59]; }
        }
        
        
        
        public static TableSchema.TableColumn MBenhPhuColumn
        {
            get { return Schema.Columns[60]; }
        }
        
        
        
        public static TableSchema.TableColumn MBenhSauPtColumn
        {
            get { return Schema.Columns[61]; }
        }
        
        
        
        public static TableSchema.TableColumn MBenhTruocPtColumn
        {
            get { return Schema.Columns[62]; }
        }
        
        
        
        public static TableSchema.TableColumn SDescBenhChinhColumn
        {
            get { return Schema.Columns[63]; }
        }
        
        
        
        public static TableSchema.TableColumn SDescBenhPhuColumn
        {
            get { return Schema.Columns[64]; }
        }
        
        
        
        public static TableSchema.TableColumn SDescSauPtColumn
        {
            get { return Schema.Columns[65]; }
        }
        
        
        
        public static TableSchema.TableColumn SDescTruocPtColumn
        {
            get { return Schema.Columns[66]; }
        }
        
        
        
        public static TableSchema.TableColumn TinhTrangRaVienStatusColumn
        {
            get { return Schema.Columns[67]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuCvColumn
        {
            get { return Schema.Columns[68]; }
        }
        
        
        
        public static TableSchema.TableColumn DisplayOnReportColumn
        {
            get { return Schema.Columns[69]; }
        }
        
        
        
        public static TableSchema.TableColumn MedicalNumberColumn
        {
            get { return Schema.Columns[70]; }
        }
        
        
        
        public static TableSchema.TableColumn TaiBienColumn
        {
            get { return Schema.Columns[71]; }
        }
        
        
        
        public static TableSchema.TableColumn BienChungColumn
        {
            get { return Schema.Columns[72]; }
        }
        
        
        
        public static TableSchema.TableColumn ThuThuatColumn
        {
            get { return Schema.Columns[73]; }
        }
        
        
        
        public static TableSchema.TableColumn PhauThuatColumn
        {
            get { return Schema.Columns[74]; }
        }
        
        
        
        public static TableSchema.TableColumn TongSoNgayDtriColumn
        {
            get { return Schema.Columns[75]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDoiTuongColumn
        {
            get { return Schema.Columns[76]; }
        }
        
        
        
        public static TableSchema.TableColumn THopStatusColumn
        {
            get { return Schema.Columns[77]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuBnColumn
        {
            get { return Schema.Columns[78]; }
        }
        
        
        
        public static TableSchema.TableColumn DaKhoatGoiColumn
        {
            get { return Schema.Columns[79]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaTnhanColumn
        {
            get { return Schema.Columns[80]; }
        }
        
        
        
        public static TableSchema.TableColumn IdRavienColumn
        {
            get { return Schema.Columns[81]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayNhapVienColumn
        {
            get { return Schema.Columns[82]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGoiDvuColumn
        {
            get { return Schema.Columns[83]; }
        }
        
        
        
        public static TableSchema.TableColumn DaSinhColumn
        {
            get { return Schema.Columns[84]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhlyColumn
        {
            get { return Schema.Columns[85]; }
        }
        
        
        
        public static TableSchema.TableColumn NgoaiThanhColumn
        {
            get { return Schema.Columns[86]; }
        }
        
        
        
        public static TableSchema.TableColumn SoTienGoiColumn
        {
            get { return Schema.Columns[87]; }
        }
        
        
        
        public static TableSchema.TableColumn SoNgayColumn
        {
            get { return Schema.Columns[88]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[89]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[90]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[91]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[92]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMacSuaColumn
        {
            get { return Schema.Columns[93]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMacTaoColumn
        {
            get { return Schema.Columns[94]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaySuaColumn
        {
            get { return Schema.Columns[95]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMayTaoColumn
        {
            get { return Schema.Columns[96]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhoaThienColumn
        {
            get { return Schema.Columns[97]; }
        }
        
        
        
        public static TableSchema.TableColumn ChanDoanChinhColumn
        {
            get { return Schema.Columns[98]; }
        }
        
        
        
        public static TableSchema.TableColumn ChanDoanPhuColumn
        {
            get { return Schema.Columns[99]; }
        }
        
        
        
        public static TableSchema.TableColumn CachXlyColumn
        {
            get { return Schema.Columns[100]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayRaVienColumn
        {
            get { return Schema.Columns[101]; }
        }
        
        
        
        public static TableSchema.TableColumn BedIdColumn
        {
            get { return Schema.Columns[102]; }
        }
        
        
        
        public static TableSchema.TableColumn BoVienColumn
        {
            get { return Schema.Columns[103]; }
        }
        
        
        
        public static TableSchema.TableColumn CdoanNvienColumn
        {
            get { return Schema.Columns[104]; }
        }
        
        
        
        public static TableSchema.TableColumn CdoanTtruocColumn
        {
            get { return Schema.Columns[105]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNoiGioiThieuColumn
        {
            get { return Schema.Columns[106]; }
        }
        
        
        
        public static TableSchema.TableColumn MbenhNvienColumn
        {
            get { return Schema.Columns[107]; }
        }
        
        
        
        public static TableSchema.TableColumn MbenhTtruocColumn
        {
            get { return Schema.Columns[108]; }
        }
        
        
        
        public static TableSchema.TableColumn NbaotinQheColumn
        {
            get { return Schema.Columns[109]; }
        }
        
        
        
        public static TableSchema.TableColumn RoomIdColumn
        {
            get { return Schema.Columns[110]; }
        }
        
        
        
        public static TableSchema.TableColumn ThongBaoColumn
        {
            get { return Schema.Columns[111]; }
        }
        
        
        
        public static TableSchema.TableColumn SoKhaiSinhColumn
        {
            get { return Schema.Columns[112]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDviCapTrenColumn
        {
            get { return Schema.Columns[113]; }
        }
        
        
        
        public static TableSchema.TableColumn IdChucVuColumn
        {
            get { return Schema.Columns[114]; }
        }
        
        
        
        public static TableSchema.TableColumn TuyenXaColumn
        {
            get { return Schema.Columns[115]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayKthucColumn
        {
            get { return Schema.Columns[116]; }
        }
        
        
        
        public static TableSchema.TableColumn GiayBhytColumn
        {
            get { return Schema.Columns[117]; }
        }
        
        
        
        public static TableSchema.TableColumn PtramBhytDTheColumn
        {
            get { return Schema.Columns[118]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDTSSongColumn
        {
            get { return Schema.Columns[119]; }
        }
        
        
        
        public static TableSchema.TableColumn KhoaTheBHYTColumn
        {
            get { return Schema.Columns[120]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string PatientId = @"Patient_ID";
			 public static string PatientCode = @"Patient_Code";
			 public static string ObjectTypeId = @"ObjectType_ID";
			 public static string HosTrans = @"Hos_Trans";
			 public static string RelativeName = @"Relative_Name";
			 public static string RelativePhone = @"Relative_Phone";
			 public static string RelativeAddress = @"Relative_Address";
			 public static string InsuranceNum = @"Insurance_Num";
			 public static string InsuranceFromDate = @"Insurance_FromDate";
			 public static string InsuranceToDate = @"Insurance_ToDate";
			 public static string InsuranceSupply = @"Insurance_Supply";
			 public static string InsClinicCode = @"InsClinic_Code";
			 public static string InsObjectCode = @"InsObject_Code";
			 public static string PaymentDate = @"Payment_date";
			 public static string InsObjectCodeNumber = @"InsObject_CodeNumber";
			 public static string InsObjectCodeTP = @"InsObject_CodeTP";
			 public static string InsLastObjectCode = @"InsLastObject_Code";
			 public static string InputDate = @"Input_Date";
			 public static string UserId = @"User_ID";
			 public static string HosStatus = @"Hos_status";
			 public static string DiscountRate = @"Discount_Rate";
			 public static string DiscountType = @"Discount_Type";
			 public static string OrgirinMoney = @"OrgirinMoney";
			 public static string SurchargePrice = @"Surcharge_Price";
			 public static string LastMoney = @"LastMoney";
			 public static string Desc = @"Desc";
			 public static string Locked = @"Locked";
			 public static string DeleteBy = @"Delete_By";
			 public static string DeleteDate = @"Delete_Date";
			 public static string ReasonBy = @"Reason_By";
			 public static string IndentityNo = @"Indentity_No";
			 public static string OutDateTime = @"Out_DateTime";
			 public static string DepartmentId = @"Department_ID";
			 public static string DisOfUser = @"Dis_Of_User";
			 public static string SalaryBasic = @"Salary_Basic";
			 public static string SCreateBy = @"S_CreateBy";
			 public static string SCreateDate = @"S_CreateDate";
			 public static string SDiscountPrice = @"S_Discount_Price";
			 public static string SDiscountRate = @"S_Discount_Rate";
			 public static string SDiscountType = @"S_Discount_Type";
			 public static string SModifyBy = @"S_ModifyBy";
			 public static string SModifyDate = @"S_ModifyDate";
			 public static string RankId = @"Rank_ID";
			 public static string UnitId = @"Unit_ID";
			 public static string EmergencyHos = @"Emergency_Hos";
			 public static string ToHos = @"To_Hos";
			 public static string PositionName = @"Position_Name";
			 public static string Symptoms = @"Symptoms";
			 public static string CorrectLine = @"CorrectLine";
			 public static string ExtendInsurancePrice = @"ExtendInsurance_Price";
			 public static string FromClinicStatus = @"FromClinic_Status";
			 public static string ToClinicCode = @"To_ClinicCode";
			 public static string KetQuaDt = @"KetQua_DT";
			 public static string ChanDoanGiaiPhauTuThi = @"ChanDoan_GiaiPhau_TuThi";
			 public static string GiaiPhauBenh = @"GiaiPhau_Benh";
			 public static string KhamTuThi = @"Kham_TuThi";
			 public static string NgayTuVong = @"Ngay_TuVong";
			 public static string NguyenNhanTuVong = @"NguyenNhan_TuVong";
			 public static string TinhTrangTuVong = @"TinhTrang_TuVong";
			 public static string MBenhChinh = @"MBenh_Chinh";
			 public static string MBenhPhu = @"MBenh_Phu";
			 public static string MBenhSauPt = @"MBenh_Sau_PT";
			 public static string MBenhTruocPt = @"MBenh_Truoc_PT";
			 public static string SDescBenhChinh = @"sDesc_BenhChinh";
			 public static string SDescBenhPhu = @"sDesc_BenhPhu";
			 public static string SDescSauPt = @"sDesc_Sau_PT";
			 public static string SDescTruocPt = @"sDesc_Truoc_PT";
			 public static string TinhTrangRaVienStatus = @"TinhTrang_RaVien_Status";
			 public static string GhiChuCv = @"GhiChu_CV";
			 public static string DisplayOnReport = @"DisplayOnReport";
			 public static string MedicalNumber = @"MedicalNumber";
			 public static string TaiBien = @"Tai_Bien";
			 public static string BienChung = @"Bien_Chung";
			 public static string ThuThuat = @"Thu_Thuat";
			 public static string PhauThuat = @"Phau_Thuat";
			 public static string TongSoNgayDtri = @"Tong_SoNgay_Dtri";
			 public static string MaDoiTuong = @"Ma_DoiTuong";
			 public static string THopStatus = @"THop_Status";
			 public static string KieuBn = @"Kieu_BN";
			 public static string DaKhoatGoi = @"DA_KHOAT_GOI";
			 public static string IdKhoaTnhan = @"ID_KHOA_TNHAN";
			 public static string IdRavien = @"ID_RAVIEN";
			 public static string NgayNhapVien = @"NGAY_NHAP_VIEN";
			 public static string IdGoiDvu = @"ID_GOI_DVU";
			 public static string DaSinh = @"DA_SINH";
			 public static string IdBenhly = @"ID_BENHLY";
			 public static string NgoaiThanh = @"NGOAI_THANH";
			 public static string SoTienGoi = @"SO_TIEN_GOI";
			 public static string SoNgay = @"SO_NGAY";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string IpMacSua = @"IP_MAC_SUA";
			 public static string IpMacTao = @"IP_MAC_TAO";
			 public static string IpMaySua = @"IP_MAY_SUA";
			 public static string IpMayTao = @"IP_MAY_TAO";
			 public static string MaKhoaThien = @"MA_KHOA_THIEN";
			 public static string ChanDoanChinh = @"CHAN_DOAN_CHINH";
			 public static string ChanDoanPhu = @"CHAN_DOAN_PHU";
			 public static string CachXly = @"CACH_XLY";
			 public static string NgayRaVien = @"NGAY_RA_VIEN";
			 public static string BedId = @"Bed_ID";
			 public static string BoVien = @"BO_VIEN";
			 public static string CdoanNvien = @"CDOAN_NVIEN";
			 public static string CdoanTtruoc = @"CDOAN_TTRUOC";
			 public static string IdNoiGioiThieu = @"ID_NoiGioiThieu";
			 public static string MbenhNvien = @"MBENH_NVIEN";
			 public static string MbenhTtruoc = @"MBENH_TTRUOC";
			 public static string NbaotinQhe = @"NBAOTIN_QHE";
			 public static string RoomId = @"Room_ID";
			 public static string ThongBao = @"THONG_BAO";
			 public static string SoKhaiSinh = @"So_Khai_Sinh";
			 public static string IdDviCapTren = @"Id_Dvi_CapTren";
			 public static string IdChucVu = @"Id_ChucVu";
			 public static string TuyenXa = @"Tuyen_Xa";
			 public static string NgayKthuc = @"NGAY_KTHUC";
			 public static string GiayBhyt = @"Giay_Bhyt";
			 public static string PtramBhytDThe = @"PtramBhyt_DThe";
			 public static string MaDTSSong = @"MaDT_SSong";
			 public static string KhoaTheBHYT = @"Khoa_TheBHYT";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
