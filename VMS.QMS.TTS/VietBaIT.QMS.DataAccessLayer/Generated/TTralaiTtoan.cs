using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TTralaiTtoan class.
	/// </summary>
    [Serializable]
	public partial class TTralaiTtoanCollection : ActiveList<TTralaiTtoan, TTralaiTtoanCollection>
	{	   
		public TTralaiTtoanCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TTralaiTtoanCollection</returns>
		public TTralaiTtoanCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TTralaiTtoan o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_TRALAI_TTOAN table.
	/// </summary>
	[Serializable]
	public partial class TTralaiTtoan : ActiveRecord<TTralaiTtoan>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TTralaiTtoan()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TTralaiTtoan(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TTralaiTtoan(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TTralaiTtoan(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_TRALAI_TTOAN", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdChitiet = new TableSchema.TableColumn(schema);
				colvarIdChitiet.ColumnName = "ID_CHITIET";
				colvarIdChitiet.DataType = DbType.Int32;
				colvarIdChitiet.MaxLength = 0;
				colvarIdChitiet.AutoIncrement = true;
				colvarIdChitiet.IsNullable = false;
				colvarIdChitiet.IsPrimaryKey = true;
				colvarIdChitiet.IsForeignKey = false;
				colvarIdChitiet.IsReadOnly = false;
				colvarIdChitiet.DefaultSetting = @"";
				colvarIdChitiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdChitiet);
				
				TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
				colvarPaymentId.ColumnName = "Payment_ID";
				colvarPaymentId.DataType = DbType.Int32;
				colvarPaymentId.MaxLength = 0;
				colvarPaymentId.AutoIncrement = false;
				colvarPaymentId.IsNullable = true;
				colvarPaymentId.IsPrimaryKey = false;
				colvarPaymentId.IsForeignKey = false;
				colvarPaymentId.IsReadOnly = false;
				colvarPaymentId.DefaultSetting = @"";
				colvarPaymentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentId);
				
				TableSchema.TableColumn colvarQuanity = new TableSchema.TableColumn(schema);
				colvarQuanity.ColumnName = "Quanity";
				colvarQuanity.DataType = DbType.Int32;
				colvarQuanity.MaxLength = 0;
				colvarQuanity.AutoIncrement = false;
				colvarQuanity.IsNullable = true;
				colvarQuanity.IsPrimaryKey = false;
				colvarQuanity.IsForeignKey = false;
				colvarQuanity.IsReadOnly = false;
				colvarQuanity.DefaultSetting = @"";
				colvarQuanity.ForeignKeyTableName = "";
				schema.Columns.Add(colvarQuanity);
				
				TableSchema.TableColumn colvarOriginPrice = new TableSchema.TableColumn(schema);
				colvarOriginPrice.ColumnName = "Origin_Price";
				colvarOriginPrice.DataType = DbType.Decimal;
				colvarOriginPrice.MaxLength = 0;
				colvarOriginPrice.AutoIncrement = false;
				colvarOriginPrice.IsNullable = true;
				colvarOriginPrice.IsPrimaryKey = false;
				colvarOriginPrice.IsForeignKey = false;
				colvarOriginPrice.IsReadOnly = false;
				colvarOriginPrice.DefaultSetting = @"";
				colvarOriginPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOriginPrice);
				
				TableSchema.TableColumn colvarDiscountPrice = new TableSchema.TableColumn(schema);
				colvarDiscountPrice.ColumnName = "Discount_Price";
				colvarDiscountPrice.DataType = DbType.Decimal;
				colvarDiscountPrice.MaxLength = 0;
				colvarDiscountPrice.AutoIncrement = false;
				colvarDiscountPrice.IsNullable = true;
				colvarDiscountPrice.IsPrimaryKey = false;
				colvarDiscountPrice.IsForeignKey = false;
				colvarDiscountPrice.IsReadOnly = false;
				colvarDiscountPrice.DefaultSetting = @"";
				colvarDiscountPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountPrice);
				
				TableSchema.TableColumn colvarDiscountRate = new TableSchema.TableColumn(schema);
				colvarDiscountRate.ColumnName = "Discount_Rate";
				colvarDiscountRate.DataType = DbType.Decimal;
				colvarDiscountRate.MaxLength = 0;
				colvarDiscountRate.AutoIncrement = false;
				colvarDiscountRate.IsNullable = true;
				colvarDiscountRate.IsPrimaryKey = false;
				colvarDiscountRate.IsForeignKey = false;
				colvarDiscountRate.IsReadOnly = false;
				colvarDiscountRate.DefaultSetting = @"";
				colvarDiscountRate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountRate);
				
				TableSchema.TableColumn colvarSurchargePrice = new TableSchema.TableColumn(schema);
				colvarSurchargePrice.ColumnName = "Surcharge_Price";
				colvarSurchargePrice.DataType = DbType.Decimal;
				colvarSurchargePrice.MaxLength = 0;
				colvarSurchargePrice.AutoIncrement = false;
				colvarSurchargePrice.IsNullable = true;
				colvarSurchargePrice.IsPrimaryKey = false;
				colvarSurchargePrice.IsForeignKey = false;
				colvarSurchargePrice.IsReadOnly = false;
				colvarSurchargePrice.DefaultSetting = @"";
				colvarSurchargePrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSurchargePrice);
				
				TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
				colvarServiceId.ColumnName = "Service_ID";
				colvarServiceId.DataType = DbType.Int32;
				colvarServiceId.MaxLength = 0;
				colvarServiceId.AutoIncrement = false;
				colvarServiceId.IsNullable = true;
				colvarServiceId.IsPrimaryKey = false;
				colvarServiceId.IsForeignKey = false;
				colvarServiceId.IsReadOnly = false;
				colvarServiceId.DefaultSetting = @"";
				colvarServiceId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceId);
				
				TableSchema.TableColumn colvarServiceDetailId = new TableSchema.TableColumn(schema);
				colvarServiceDetailId.ColumnName = "ServiceDetail_ID";
				colvarServiceDetailId.DataType = DbType.Int32;
				colvarServiceDetailId.MaxLength = 0;
				colvarServiceDetailId.AutoIncrement = false;
				colvarServiceDetailId.IsNullable = true;
				colvarServiceDetailId.IsPrimaryKey = false;
				colvarServiceDetailId.IsForeignKey = false;
				colvarServiceDetailId.IsReadOnly = false;
				colvarServiceDetailId.DefaultSetting = @"";
				colvarServiceDetailId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceDetailId);
				
				TableSchema.TableColumn colvarPaymentTypeId = new TableSchema.TableColumn(schema);
				colvarPaymentTypeId.ColumnName = "PaymentType_ID";
				colvarPaymentTypeId.DataType = DbType.Int32;
				colvarPaymentTypeId.MaxLength = 0;
				colvarPaymentTypeId.AutoIncrement = false;
				colvarPaymentTypeId.IsNullable = true;
				colvarPaymentTypeId.IsPrimaryKey = false;
				colvarPaymentTypeId.IsForeignKey = false;
				colvarPaymentTypeId.IsReadOnly = false;
				colvarPaymentTypeId.DefaultSetting = @"";
				colvarPaymentTypeId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentTypeId);
				
				TableSchema.TableColumn colvarPTramBh = new TableSchema.TableColumn(schema);
				colvarPTramBh.ColumnName = "PTram_BH";
				colvarPTramBh.DataType = DbType.Decimal;
				colvarPTramBh.MaxLength = 0;
				colvarPTramBh.AutoIncrement = false;
				colvarPTramBh.IsNullable = true;
				colvarPTramBh.IsPrimaryKey = false;
				colvarPTramBh.IsForeignKey = false;
				colvarPTramBh.IsReadOnly = false;
				colvarPTramBh.DefaultSetting = @"";
				colvarPTramBh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPTramBh);
				
				TableSchema.TableColumn colvarServiceDetailName = new TableSchema.TableColumn(schema);
				colvarServiceDetailName.ColumnName = "ServiceDetail_Name";
				colvarServiceDetailName.DataType = DbType.String;
				colvarServiceDetailName.MaxLength = 500;
				colvarServiceDetailName.AutoIncrement = false;
				colvarServiceDetailName.IsNullable = true;
				colvarServiceDetailName.IsPrimaryKey = false;
				colvarServiceDetailName.IsForeignKey = false;
				colvarServiceDetailName.IsReadOnly = false;
				colvarServiceDetailName.DefaultSetting = @"";
				colvarServiceDetailName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceDetailName);
				
				TableSchema.TableColumn colvarDonViTinh = new TableSchema.TableColumn(schema);
				colvarDonViTinh.ColumnName = "DonVi_Tinh";
				colvarDonViTinh.DataType = DbType.String;
				colvarDonViTinh.MaxLength = 50;
				colvarDonViTinh.AutoIncrement = false;
				colvarDonViTinh.IsNullable = true;
				colvarDonViTinh.IsPrimaryKey = false;
				colvarDonViTinh.IsForeignKey = false;
				colvarDonViTinh.IsReadOnly = false;
				colvarDonViTinh.DefaultSetting = @"";
				colvarDonViTinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonViTinh);
				
				TableSchema.TableColumn colvarMaKieuTtoan = new TableSchema.TableColumn(schema);
				colvarMaKieuTtoan.ColumnName = "MA_KIEU_TTOAN";
				colvarMaKieuTtoan.DataType = DbType.String;
				colvarMaKieuTtoan.MaxLength = 50;
				colvarMaKieuTtoan.AutoIncrement = false;
				colvarMaKieuTtoan.IsNullable = true;
				colvarMaKieuTtoan.IsPrimaryKey = false;
				colvarMaKieuTtoan.IsForeignKey = false;
				colvarMaKieuTtoan.IsReadOnly = false;
				colvarMaKieuTtoan.DefaultSetting = @"";
				colvarMaKieuTtoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKieuTtoan);
				
				TableSchema.TableColumn colvarMaDv = new TableSchema.TableColumn(schema);
				colvarMaDv.ColumnName = "Ma_DV";
				colvarMaDv.DataType = DbType.String;
				colvarMaDv.MaxLength = 50;
				colvarMaDv.AutoIncrement = false;
				colvarMaDv.IsNullable = true;
				colvarMaDv.IsPrimaryKey = false;
				colvarMaDv.IsForeignKey = false;
				colvarMaDv.IsReadOnly = false;
				colvarMaDv.DefaultSetting = @"";
				colvarMaDv.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDv);
				
				TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
				colvarIsPayment.ColumnName = "IsPayment";
				colvarIsPayment.DataType = DbType.Int32;
				colvarIsPayment.MaxLength = 0;
				colvarIsPayment.AutoIncrement = false;
				colvarIsPayment.IsNullable = true;
				colvarIsPayment.IsPrimaryKey = false;
				colvarIsPayment.IsForeignKey = false;
				colvarIsPayment.IsReadOnly = false;
				colvarIsPayment.DefaultSetting = @"";
				colvarIsPayment.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsPayment);
				
				TableSchema.TableColumn colvarIdPhieu = new TableSchema.TableColumn(schema);
				colvarIdPhieu.ColumnName = "ID_PHIEU";
				colvarIdPhieu.DataType = DbType.Int32;
				colvarIdPhieu.MaxLength = 0;
				colvarIdPhieu.AutoIncrement = false;
				colvarIdPhieu.IsNullable = true;
				colvarIdPhieu.IsPrimaryKey = false;
				colvarIdPhieu.IsForeignKey = false;
				colvarIdPhieu.IsReadOnly = false;
				colvarIdPhieu.DefaultSetting = @"";
				colvarIdPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieu);
				
				TableSchema.TableColumn colvarIdPhieuCtiet = new TableSchema.TableColumn(schema);
				colvarIdPhieuCtiet.ColumnName = "ID_PHIEU_CTIET";
				colvarIdPhieuCtiet.DataType = DbType.Int32;
				colvarIdPhieuCtiet.MaxLength = 0;
				colvarIdPhieuCtiet.AutoIncrement = false;
				colvarIdPhieuCtiet.IsNullable = true;
				colvarIdPhieuCtiet.IsPrimaryKey = false;
				colvarIdPhieuCtiet.IsForeignKey = false;
				colvarIdPhieuCtiet.IsReadOnly = false;
				colvarIdPhieuCtiet.DefaultSetting = @"";
				colvarIdPhieuCtiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuCtiet);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_TRALAI_TTOAN",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdChitiet")]
		[Bindable(true)]
		public int IdChitiet 
		{
			get { return GetColumnValue<int>(Columns.IdChitiet); }
			set { SetColumnValue(Columns.IdChitiet, value); }
		}
		  
		[XmlAttribute("PaymentId")]
		[Bindable(true)]
		public int? PaymentId 
		{
			get { return GetColumnValue<int?>(Columns.PaymentId); }
			set { SetColumnValue(Columns.PaymentId, value); }
		}
		  
		[XmlAttribute("Quanity")]
		[Bindable(true)]
		public int? Quanity 
		{
			get { return GetColumnValue<int?>(Columns.Quanity); }
			set { SetColumnValue(Columns.Quanity, value); }
		}
		  
		[XmlAttribute("OriginPrice")]
		[Bindable(true)]
		public decimal? OriginPrice 
		{
			get { return GetColumnValue<decimal?>(Columns.OriginPrice); }
			set { SetColumnValue(Columns.OriginPrice, value); }
		}
		  
		[XmlAttribute("DiscountPrice")]
		[Bindable(true)]
		public decimal? DiscountPrice 
		{
			get { return GetColumnValue<decimal?>(Columns.DiscountPrice); }
			set { SetColumnValue(Columns.DiscountPrice, value); }
		}
		  
		[XmlAttribute("DiscountRate")]
		[Bindable(true)]
		public decimal? DiscountRate 
		{
			get { return GetColumnValue<decimal?>(Columns.DiscountRate); }
			set { SetColumnValue(Columns.DiscountRate, value); }
		}
		  
		[XmlAttribute("SurchargePrice")]
		[Bindable(true)]
		public decimal? SurchargePrice 
		{
			get { return GetColumnValue<decimal?>(Columns.SurchargePrice); }
			set { SetColumnValue(Columns.SurchargePrice, value); }
		}
		  
		[XmlAttribute("ServiceId")]
		[Bindable(true)]
		public int? ServiceId 
		{
			get { return GetColumnValue<int?>(Columns.ServiceId); }
			set { SetColumnValue(Columns.ServiceId, value); }
		}
		  
		[XmlAttribute("ServiceDetailId")]
		[Bindable(true)]
		public int? ServiceDetailId 
		{
			get { return GetColumnValue<int?>(Columns.ServiceDetailId); }
			set { SetColumnValue(Columns.ServiceDetailId, value); }
		}
		  
		[XmlAttribute("PaymentTypeId")]
		[Bindable(true)]
		public int? PaymentTypeId 
		{
			get { return GetColumnValue<int?>(Columns.PaymentTypeId); }
			set { SetColumnValue(Columns.PaymentTypeId, value); }
		}
		  
		[XmlAttribute("PTramBh")]
		[Bindable(true)]
		public decimal? PTramBh 
		{
			get { return GetColumnValue<decimal?>(Columns.PTramBh); }
			set { SetColumnValue(Columns.PTramBh, value); }
		}
		  
		[XmlAttribute("ServiceDetailName")]
		[Bindable(true)]
		public string ServiceDetailName 
		{
			get { return GetColumnValue<string>(Columns.ServiceDetailName); }
			set { SetColumnValue(Columns.ServiceDetailName, value); }
		}
		  
		[XmlAttribute("DonViTinh")]
		[Bindable(true)]
		public string DonViTinh 
		{
			get { return GetColumnValue<string>(Columns.DonViTinh); }
			set { SetColumnValue(Columns.DonViTinh, value); }
		}
		  
		[XmlAttribute("MaKieuTtoan")]
		[Bindable(true)]
		public string MaKieuTtoan 
		{
			get { return GetColumnValue<string>(Columns.MaKieuTtoan); }
			set { SetColumnValue(Columns.MaKieuTtoan, value); }
		}
		  
		[XmlAttribute("MaDv")]
		[Bindable(true)]
		public string MaDv 
		{
			get { return GetColumnValue<string>(Columns.MaDv); }
			set { SetColumnValue(Columns.MaDv, value); }
		}
		  
		[XmlAttribute("IsPayment")]
		[Bindable(true)]
		public int? IsPayment 
		{
			get { return GetColumnValue<int?>(Columns.IsPayment); }
			set { SetColumnValue(Columns.IsPayment, value); }
		}
		  
		[XmlAttribute("IdPhieu")]
		[Bindable(true)]
		public int? IdPhieu 
		{
			get { return GetColumnValue<int?>(Columns.IdPhieu); }
			set { SetColumnValue(Columns.IdPhieu, value); }
		}
		  
		[XmlAttribute("IdPhieuCtiet")]
		[Bindable(true)]
		public int? IdPhieuCtiet 
		{
			get { return GetColumnValue<int?>(Columns.IdPhieuCtiet); }
			set { SetColumnValue(Columns.IdPhieuCtiet, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int? varPaymentId,int? varQuanity,decimal? varOriginPrice,decimal? varDiscountPrice,decimal? varDiscountRate,decimal? varSurchargePrice,int? varServiceId,int? varServiceDetailId,int? varPaymentTypeId,decimal? varPTramBh,string varServiceDetailName,string varDonViTinh,string varMaKieuTtoan,string varMaDv,int? varIsPayment,int? varIdPhieu,int? varIdPhieuCtiet)
		{
			TTralaiTtoan item = new TTralaiTtoan();
			
			item.PaymentId = varPaymentId;
			
			item.Quanity = varQuanity;
			
			item.OriginPrice = varOriginPrice;
			
			item.DiscountPrice = varDiscountPrice;
			
			item.DiscountRate = varDiscountRate;
			
			item.SurchargePrice = varSurchargePrice;
			
			item.ServiceId = varServiceId;
			
			item.ServiceDetailId = varServiceDetailId;
			
			item.PaymentTypeId = varPaymentTypeId;
			
			item.PTramBh = varPTramBh;
			
			item.ServiceDetailName = varServiceDetailName;
			
			item.DonViTinh = varDonViTinh;
			
			item.MaKieuTtoan = varMaKieuTtoan;
			
			item.MaDv = varMaDv;
			
			item.IsPayment = varIsPayment;
			
			item.IdPhieu = varIdPhieu;
			
			item.IdPhieuCtiet = varIdPhieuCtiet;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdChitiet,int? varPaymentId,int? varQuanity,decimal? varOriginPrice,decimal? varDiscountPrice,decimal? varDiscountRate,decimal? varSurchargePrice,int? varServiceId,int? varServiceDetailId,int? varPaymentTypeId,decimal? varPTramBh,string varServiceDetailName,string varDonViTinh,string varMaKieuTtoan,string varMaDv,int? varIsPayment,int? varIdPhieu,int? varIdPhieuCtiet)
		{
			TTralaiTtoan item = new TTralaiTtoan();
			
				item.IdChitiet = varIdChitiet;
			
				item.PaymentId = varPaymentId;
			
				item.Quanity = varQuanity;
			
				item.OriginPrice = varOriginPrice;
			
				item.DiscountPrice = varDiscountPrice;
			
				item.DiscountRate = varDiscountRate;
			
				item.SurchargePrice = varSurchargePrice;
			
				item.ServiceId = varServiceId;
			
				item.ServiceDetailId = varServiceDetailId;
			
				item.PaymentTypeId = varPaymentTypeId;
			
				item.PTramBh = varPTramBh;
			
				item.ServiceDetailName = varServiceDetailName;
			
				item.DonViTinh = varDonViTinh;
			
				item.MaKieuTtoan = varMaKieuTtoan;
			
				item.MaDv = varMaDv;
			
				item.IsPayment = varIsPayment;
			
				item.IdPhieu = varIdPhieu;
			
				item.IdPhieuCtiet = varIdPhieuCtiet;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdChitietColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn QuanityColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn OriginPriceColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountPriceColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountRateColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn SurchargePriceColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceIdColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceDetailIdColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentTypeIdColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn PTramBhColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceDetailNameColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn DonViTinhColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKieuTtoanColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDvColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn IsPaymentColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuCtietColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdChitiet = @"ID_CHITIET";
			 public static string PaymentId = @"Payment_ID";
			 public static string Quanity = @"Quanity";
			 public static string OriginPrice = @"Origin_Price";
			 public static string DiscountPrice = @"Discount_Price";
			 public static string DiscountRate = @"Discount_Rate";
			 public static string SurchargePrice = @"Surcharge_Price";
			 public static string ServiceId = @"Service_ID";
			 public static string ServiceDetailId = @"ServiceDetail_ID";
			 public static string PaymentTypeId = @"PaymentType_ID";
			 public static string PTramBh = @"PTram_BH";
			 public static string ServiceDetailName = @"ServiceDetail_Name";
			 public static string DonViTinh = @"DonVi_Tinh";
			 public static string MaKieuTtoan = @"MA_KIEU_TTOAN";
			 public static string MaDv = @"Ma_DV";
			 public static string IsPayment = @"IsPayment";
			 public static string IdPhieu = @"ID_PHIEU";
			 public static string IdPhieuCtiet = @"ID_PHIEU_CTIET";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
