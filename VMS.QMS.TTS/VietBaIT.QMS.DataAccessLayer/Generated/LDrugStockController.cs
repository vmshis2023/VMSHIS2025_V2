using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for L_Drug_Stock
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class LDrugStockController
    {
        // Preload our schema..
        LDrugStock thisSchemaLoad = new LDrugStock();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public LDrugStockCollection FetchAll()
        {
            LDrugStockCollection coll = new LDrugStockCollection();
            Query qry = new Query(LDrugStock.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public LDrugStockCollection FetchByID(object StockId)
        {
            LDrugStockCollection coll = new LDrugStockCollection().Where("Stock_ID", StockId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public LDrugStockCollection FetchByQuery(Query qry)
        {
            LDrugStockCollection coll = new LDrugStockCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object StockId)
        {
            return (LDrugStock.Delete(StockId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object StockId)
        {
            return (LDrugStock.Destroy(StockId) == 1);
        }
        
        
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(short StockId,int DrugId,DateTime ExpireDate,decimal OriginalPrice)
        {
            Query qry = new Query(LDrugStock.Schema);
            qry.QueryType = QueryType.Delete;
            qry.AddWhere("StockId", StockId).AND("DrugId", DrugId).AND("ExpireDate", ExpireDate).AND("OriginalPrice", OriginalPrice);
            qry.Execute();
            return (true);
        }        
       
    	
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(short StockId,int DrugId,DateTime ExpireDate,DateTime ManuDate,int Quantity,decimal OriginalPrice,DateTime? InputDate,byte? StockCategory,string Lot,short? SupplyUnitId,decimal? GiaBan)
	    {
		    LDrugStock item = new LDrugStock();
		    
            item.StockId = StockId;
            
            item.DrugId = DrugId;
            
            item.ExpireDate = ExpireDate;
            
            item.ManuDate = ManuDate;
            
            item.Quantity = Quantity;
            
            item.OriginalPrice = OriginalPrice;
            
            item.InputDate = InputDate;
            
            item.StockCategory = StockCategory;
            
            item.Lot = Lot;
            
            item.SupplyUnitId = SupplyUnitId;
            
            item.GiaBan = GiaBan;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(short StockId,int DrugId,DateTime ExpireDate,DateTime ManuDate,int Quantity,decimal OriginalPrice,DateTime? InputDate,byte? StockCategory,string Lot,short? SupplyUnitId,decimal? GiaBan)
	    {
		    LDrugStock item = new LDrugStock();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.StockId = StockId;
				
			item.DrugId = DrugId;
				
			item.ExpireDate = ExpireDate;
				
			item.ManuDate = ManuDate;
				
			item.Quantity = Quantity;
				
			item.OriginalPrice = OriginalPrice;
				
			item.InputDate = InputDate;
				
			item.StockCategory = StockCategory;
				
			item.Lot = Lot;
				
			item.SupplyUnitId = SupplyUnitId;
				
			item.GiaBan = GiaBan;
				
	        item.Save(UserName);
	    }
    }
}
