using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_Assign_Detail
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TAssignDetailController
    {
        // Preload our schema..
        TAssignDetail thisSchemaLoad = new TAssignDetail();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TAssignDetailCollection FetchAll()
        {
            TAssignDetailCollection coll = new TAssignDetailCollection();
            Query qry = new Query(TAssignDetail.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TAssignDetailCollection FetchByID(object AssignDetailId)
        {
            TAssignDetailCollection coll = new TAssignDetailCollection().Where("AssignDetail_ID", AssignDetailId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TAssignDetailCollection FetchByQuery(Query qry)
        {
            TAssignDetailCollection coll = new TAssignDetailCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object AssignDetailId)
        {
            return (TAssignDetail.Delete(AssignDetailId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object AssignDetailId)
        {
            return (TAssignDetail.Destroy(AssignDetailId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long? ExamId,long AssignId,short? ServiceId,int ServiceDetailId,short? DiagPerson,decimal? DiscountRate,byte? DiscountType,decimal OriginPrice,decimal? DiscountPrice,decimal? SurchargePrice,string UserId,byte? AssignTypeId,DateTime? InputDate,DateTime? ModifyDate,string ModifyBy,byte? PaymentStatus,DateTime? PaymentDate,byte? IsCancel,byte? IsPayment,short? ObjectTypeId,int? Quantity,string Summary,byte? AssignDetailStatus,string SDesc,string SPathImage1,string SPathImage2,byte? BhytStatus,string Proposal,string VungKs,string BsThucHien,DateTime? NgayThucHien,string AssignDetailCode,int? TestId,byte DisplayOnReport,string GhiChu,decimal? GiaBhytCt,decimal? GiaBnct,byte? XacNhan,int? PaymentId,byte? ComfirmDeposit,int? IdGoiDvu,byte? TrongGoi,string IpMacSua,string IpMacTao,string IpMaySua,string IpMayTao,byte? ChoPhepIn,byte? TtChuyen,short? Stt,short? IdNoiThien,byte? DaGuiCls,byte? QmsStatus,string QmsMaQuay,string NguoiGuiCls,DateTime? NgayGuiCls)
	    {
		    TAssignDetail item = new TAssignDetail();
		    
            item.ExamId = ExamId;
            
            item.AssignId = AssignId;
            
            item.ServiceId = ServiceId;
            
            item.ServiceDetailId = ServiceDetailId;
            
            item.DiagPerson = DiagPerson;
            
            item.DiscountRate = DiscountRate;
            
            item.DiscountType = DiscountType;
            
            item.OriginPrice = OriginPrice;
            
            item.DiscountPrice = DiscountPrice;
            
            item.SurchargePrice = SurchargePrice;
            
            item.UserId = UserId;
            
            item.AssignTypeId = AssignTypeId;
            
            item.InputDate = InputDate;
            
            item.ModifyDate = ModifyDate;
            
            item.ModifyBy = ModifyBy;
            
            item.PaymentStatus = PaymentStatus;
            
            item.PaymentDate = PaymentDate;
            
            item.IsCancel = IsCancel;
            
            item.IsPayment = IsPayment;
            
            item.ObjectTypeId = ObjectTypeId;
            
            item.Quantity = Quantity;
            
            item.Summary = Summary;
            
            item.AssignDetailStatus = AssignDetailStatus;
            
            item.SDesc = SDesc;
            
            item.SPathImage1 = SPathImage1;
            
            item.SPathImage2 = SPathImage2;
            
            item.BhytStatus = BhytStatus;
            
            item.Proposal = Proposal;
            
            item.VungKs = VungKs;
            
            item.BsThucHien = BsThucHien;
            
            item.NgayThucHien = NgayThucHien;
            
            item.AssignDetailCode = AssignDetailCode;
            
            item.TestId = TestId;
            
            item.DisplayOnReport = DisplayOnReport;
            
            item.GhiChu = GhiChu;
            
            item.GiaBhytCt = GiaBhytCt;
            
            item.GiaBnct = GiaBnct;
            
            item.XacNhan = XacNhan;
            
            item.PaymentId = PaymentId;
            
            item.ComfirmDeposit = ComfirmDeposit;
            
            item.IdGoiDvu = IdGoiDvu;
            
            item.TrongGoi = TrongGoi;
            
            item.IpMacSua = IpMacSua;
            
            item.IpMacTao = IpMacTao;
            
            item.IpMaySua = IpMaySua;
            
            item.IpMayTao = IpMayTao;
            
            item.ChoPhepIn = ChoPhepIn;
            
            item.TtChuyen = TtChuyen;
            
            item.Stt = Stt;
            
            item.IdNoiThien = IdNoiThien;
            
            item.DaGuiCls = DaGuiCls;
            
            item.QmsStatus = QmsStatus;
            
            item.QmsMaQuay = QmsMaQuay;
            
            item.NguoiGuiCls = NguoiGuiCls;
            
            item.NgayGuiCls = NgayGuiCls;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long AssignDetailId,long? ExamId,long AssignId,short? ServiceId,int ServiceDetailId,short? DiagPerson,decimal? DiscountRate,byte? DiscountType,decimal OriginPrice,decimal? DiscountPrice,decimal? SurchargePrice,string UserId,byte? AssignTypeId,DateTime? InputDate,DateTime? ModifyDate,string ModifyBy,byte? PaymentStatus,DateTime? PaymentDate,byte? IsCancel,byte? IsPayment,short? ObjectTypeId,int? Quantity,string Summary,byte? AssignDetailStatus,string SDesc,string SPathImage1,string SPathImage2,byte? BhytStatus,string Proposal,string VungKs,string BsThucHien,DateTime? NgayThucHien,string AssignDetailCode,int? TestId,byte DisplayOnReport,string GhiChu,decimal? GiaBhytCt,decimal? GiaBnct,byte? XacNhan,int? PaymentId,byte? ComfirmDeposit,int? IdGoiDvu,byte? TrongGoi,string IpMacSua,string IpMacTao,string IpMaySua,string IpMayTao,byte? ChoPhepIn,byte? TtChuyen,short? Stt,short? IdNoiThien,byte? DaGuiCls,byte? QmsStatus,string QmsMaQuay,string NguoiGuiCls,DateTime? NgayGuiCls)
	    {
		    TAssignDetail item = new TAssignDetail();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.AssignDetailId = AssignDetailId;
				
			item.ExamId = ExamId;
				
			item.AssignId = AssignId;
				
			item.ServiceId = ServiceId;
				
			item.ServiceDetailId = ServiceDetailId;
				
			item.DiagPerson = DiagPerson;
				
			item.DiscountRate = DiscountRate;
				
			item.DiscountType = DiscountType;
				
			item.OriginPrice = OriginPrice;
				
			item.DiscountPrice = DiscountPrice;
				
			item.SurchargePrice = SurchargePrice;
				
			item.UserId = UserId;
				
			item.AssignTypeId = AssignTypeId;
				
			item.InputDate = InputDate;
				
			item.ModifyDate = ModifyDate;
				
			item.ModifyBy = ModifyBy;
				
			item.PaymentStatus = PaymentStatus;
				
			item.PaymentDate = PaymentDate;
				
			item.IsCancel = IsCancel;
				
			item.IsPayment = IsPayment;
				
			item.ObjectTypeId = ObjectTypeId;
				
			item.Quantity = Quantity;
				
			item.Summary = Summary;
				
			item.AssignDetailStatus = AssignDetailStatus;
				
			item.SDesc = SDesc;
				
			item.SPathImage1 = SPathImage1;
				
			item.SPathImage2 = SPathImage2;
				
			item.BhytStatus = BhytStatus;
				
			item.Proposal = Proposal;
				
			item.VungKs = VungKs;
				
			item.BsThucHien = BsThucHien;
				
			item.NgayThucHien = NgayThucHien;
				
			item.AssignDetailCode = AssignDetailCode;
				
			item.TestId = TestId;
				
			item.DisplayOnReport = DisplayOnReport;
				
			item.GhiChu = GhiChu;
				
			item.GiaBhytCt = GiaBhytCt;
				
			item.GiaBnct = GiaBnct;
				
			item.XacNhan = XacNhan;
				
			item.PaymentId = PaymentId;
				
			item.ComfirmDeposit = ComfirmDeposit;
				
			item.IdGoiDvu = IdGoiDvu;
				
			item.TrongGoi = TrongGoi;
				
			item.IpMacSua = IpMacSua;
				
			item.IpMacTao = IpMacTao;
				
			item.IpMaySua = IpMaySua;
				
			item.IpMayTao = IpMayTao;
				
			item.ChoPhepIn = ChoPhepIn;
				
			item.TtChuyen = TtChuyen;
				
			item.Stt = Stt;
				
			item.IdNoiThien = IdNoiThien;
				
			item.DaGuiCls = DaGuiCls;
				
			item.QmsStatus = QmsStatus;
				
			item.QmsMaQuay = QmsMaQuay;
				
			item.NguoiGuiCls = NguoiGuiCls;
				
			item.NgayGuiCls = NgayGuiCls;
				
	        item.Save(UserName);
	    }
    }
}
