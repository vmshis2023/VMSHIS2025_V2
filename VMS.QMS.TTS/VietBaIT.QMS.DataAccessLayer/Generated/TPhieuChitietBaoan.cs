using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TPhieuChitietBaoan class.
	/// </summary>
    [Serializable]
	public partial class TPhieuChitietBaoanCollection : ActiveList<TPhieuChitietBaoan, TPhieuChitietBaoanCollection>
	{	   
		public TPhieuChitietBaoanCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TPhieuChitietBaoanCollection</returns>
		public TPhieuChitietBaoanCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TPhieuChitietBaoan o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_PHIEU_CHITIET_BAOAN table.
	/// </summary>
	[Serializable]
	public partial class TPhieuChitietBaoan : ActiveRecord<TPhieuChitietBaoan>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TPhieuChitietBaoan()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TPhieuChitietBaoan(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TPhieuChitietBaoan(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TPhieuChitietBaoan(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_PHIEU_CHITIET_BAOAN", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdPhieuChitiet = new TableSchema.TableColumn(schema);
				colvarIdPhieuChitiet.ColumnName = "ID_PHIEU_CHITIET";
				colvarIdPhieuChitiet.DataType = DbType.Int32;
				colvarIdPhieuChitiet.MaxLength = 0;
				colvarIdPhieuChitiet.AutoIncrement = true;
				colvarIdPhieuChitiet.IsNullable = false;
				colvarIdPhieuChitiet.IsPrimaryKey = true;
				colvarIdPhieuChitiet.IsForeignKey = false;
				colvarIdPhieuChitiet.IsReadOnly = false;
				colvarIdPhieuChitiet.DefaultSetting = @"";
				colvarIdPhieuChitiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuChitiet);
				
				TableSchema.TableColumn colvarIdPhieuBaoAn = new TableSchema.TableColumn(schema);
				colvarIdPhieuBaoAn.ColumnName = "ID_PHIEU_BAO_AN";
				colvarIdPhieuBaoAn.DataType = DbType.Int32;
				colvarIdPhieuBaoAn.MaxLength = 0;
				colvarIdPhieuBaoAn.AutoIncrement = false;
				colvarIdPhieuBaoAn.IsNullable = false;
				colvarIdPhieuBaoAn.IsPrimaryKey = false;
				colvarIdPhieuBaoAn.IsForeignKey = false;
				colvarIdPhieuBaoAn.IsReadOnly = false;
				colvarIdPhieuBaoAn.DefaultSetting = @"";
				colvarIdPhieuBaoAn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuBaoAn);
				
				TableSchema.TableColumn colvarMaThucPham = new TableSchema.TableColumn(schema);
				colvarMaThucPham.ColumnName = "MA_THUC_PHAM";
				colvarMaThucPham.DataType = DbType.String;
				colvarMaThucPham.MaxLength = 50;
				colvarMaThucPham.AutoIncrement = false;
				colvarMaThucPham.IsNullable = false;
				colvarMaThucPham.IsPrimaryKey = false;
				colvarMaThucPham.IsForeignKey = false;
				colvarMaThucPham.IsReadOnly = false;
				colvarMaThucPham.DefaultSetting = @"";
				colvarMaThucPham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaThucPham);
				
				TableSchema.TableColumn colvarMaBuaAn = new TableSchema.TableColumn(schema);
				colvarMaBuaAn.ColumnName = "MA_BUA_AN";
				colvarMaBuaAn.DataType = DbType.String;
				colvarMaBuaAn.MaxLength = 50;
				colvarMaBuaAn.AutoIncrement = false;
				colvarMaBuaAn.IsNullable = true;
				colvarMaBuaAn.IsPrimaryKey = false;
				colvarMaBuaAn.IsForeignKey = false;
				colvarMaBuaAn.IsReadOnly = false;
				colvarMaBuaAn.DefaultSetting = @"";
				colvarMaBuaAn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaBuaAn);
				
				TableSchema.TableColumn colvarSoLuong = new TableSchema.TableColumn(schema);
				colvarSoLuong.ColumnName = "SO_LUONG";
				colvarSoLuong.DataType = DbType.Int32;
				colvarSoLuong.MaxLength = 0;
				colvarSoLuong.AutoIncrement = false;
				colvarSoLuong.IsNullable = true;
				colvarSoLuong.IsPrimaryKey = false;
				colvarSoLuong.IsForeignKey = false;
				colvarSoLuong.IsReadOnly = false;
				colvarSoLuong.DefaultSetting = @"";
				colvarSoLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuong);
				
				TableSchema.TableColumn colvarDonGia = new TableSchema.TableColumn(schema);
				colvarDonGia.ColumnName = "DON_GIA";
				colvarDonGia.DataType = DbType.Decimal;
				colvarDonGia.MaxLength = 0;
				colvarDonGia.AutoIncrement = false;
				colvarDonGia.IsNullable = true;
				colvarDonGia.IsPrimaryKey = false;
				colvarDonGia.IsForeignKey = false;
				colvarDonGia.IsReadOnly = false;
				colvarDonGia.DefaultSetting = @"";
				colvarDonGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGia);
				
				TableSchema.TableColumn colvarNgayXacNhan = new TableSchema.TableColumn(schema);
				colvarNgayXacNhan.ColumnName = "NGAY_XAC_NHAN";
				colvarNgayXacNhan.DataType = DbType.DateTime;
				colvarNgayXacNhan.MaxLength = 0;
				colvarNgayXacNhan.AutoIncrement = false;
				colvarNgayXacNhan.IsNullable = true;
				colvarNgayXacNhan.IsPrimaryKey = false;
				colvarNgayXacNhan.IsForeignKey = false;
				colvarNgayXacNhan.IsReadOnly = false;
				colvarNgayXacNhan.DefaultSetting = @"";
				colvarNgayXacNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayXacNhan);
				
				TableSchema.TableColumn colvarNguoiXacNhan = new TableSchema.TableColumn(schema);
				colvarNguoiXacNhan.ColumnName = "NGUOI_XAC_NHAN";
				colvarNguoiXacNhan.DataType = DbType.String;
				colvarNguoiXacNhan.MaxLength = 50;
				colvarNguoiXacNhan.AutoIncrement = false;
				colvarNguoiXacNhan.IsNullable = true;
				colvarNguoiXacNhan.IsPrimaryKey = false;
				colvarNguoiXacNhan.IsForeignKey = false;
				colvarNguoiXacNhan.IsReadOnly = false;
				colvarNguoiXacNhan.DefaultSetting = @"";
				colvarNguoiXacNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiXacNhan);
				
				TableSchema.TableColumn colvarXacNhan = new TableSchema.TableColumn(schema);
				colvarXacNhan.ColumnName = "XAC_NHAN";
				colvarXacNhan.DataType = DbType.Int32;
				colvarXacNhan.MaxLength = 0;
				colvarXacNhan.AutoIncrement = false;
				colvarXacNhan.IsNullable = true;
				colvarXacNhan.IsPrimaryKey = false;
				colvarXacNhan.IsForeignKey = false;
				colvarXacNhan.IsReadOnly = false;
				
						colvarXacNhan.DefaultSetting = @"((0))";
				colvarXacNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXacNhan);
				
				TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
				colvarTrongGoi.ColumnName = "TRONG_GOI";
				colvarTrongGoi.DataType = DbType.Int32;
				colvarTrongGoi.MaxLength = 0;
				colvarTrongGoi.AutoIncrement = false;
				colvarTrongGoi.IsNullable = true;
				colvarTrongGoi.IsPrimaryKey = false;
				colvarTrongGoi.IsForeignKey = false;
				colvarTrongGoi.IsReadOnly = false;
				colvarTrongGoi.DefaultSetting = @"";
				colvarTrongGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrongGoi);
				
				TableSchema.TableColumn colvarIdGoiDvu = new TableSchema.TableColumn(schema);
				colvarIdGoiDvu.ColumnName = "ID_GOI_DVU";
				colvarIdGoiDvu.DataType = DbType.Int32;
				colvarIdGoiDvu.MaxLength = 0;
				colvarIdGoiDvu.AutoIncrement = false;
				colvarIdGoiDvu.IsNullable = true;
				colvarIdGoiDvu.IsPrimaryKey = false;
				colvarIdGoiDvu.IsForeignKey = false;
				colvarIdGoiDvu.IsReadOnly = false;
				colvarIdGoiDvu.DefaultSetting = @"";
				colvarIdGoiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGoiDvu);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_PHIEU_CHITIET_BAOAN",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdPhieuChitiet")]
		[Bindable(true)]
		public int IdPhieuChitiet 
		{
			get { return GetColumnValue<int>(Columns.IdPhieuChitiet); }
			set { SetColumnValue(Columns.IdPhieuChitiet, value); }
		}
		  
		[XmlAttribute("IdPhieuBaoAn")]
		[Bindable(true)]
		public int IdPhieuBaoAn 
		{
			get { return GetColumnValue<int>(Columns.IdPhieuBaoAn); }
			set { SetColumnValue(Columns.IdPhieuBaoAn, value); }
		}
		  
		[XmlAttribute("MaThucPham")]
		[Bindable(true)]
		public string MaThucPham 
		{
			get { return GetColumnValue<string>(Columns.MaThucPham); }
			set { SetColumnValue(Columns.MaThucPham, value); }
		}
		  
		[XmlAttribute("MaBuaAn")]
		[Bindable(true)]
		public string MaBuaAn 
		{
			get { return GetColumnValue<string>(Columns.MaBuaAn); }
			set { SetColumnValue(Columns.MaBuaAn, value); }
		}
		  
		[XmlAttribute("SoLuong")]
		[Bindable(true)]
		public int? SoLuong 
		{
			get { return GetColumnValue<int?>(Columns.SoLuong); }
			set { SetColumnValue(Columns.SoLuong, value); }
		}
		  
		[XmlAttribute("DonGia")]
		[Bindable(true)]
		public decimal? DonGia 
		{
			get { return GetColumnValue<decimal?>(Columns.DonGia); }
			set { SetColumnValue(Columns.DonGia, value); }
		}
		  
		[XmlAttribute("NgayXacNhan")]
		[Bindable(true)]
		public DateTime? NgayXacNhan 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayXacNhan); }
			set { SetColumnValue(Columns.NgayXacNhan, value); }
		}
		  
		[XmlAttribute("NguoiXacNhan")]
		[Bindable(true)]
		public string NguoiXacNhan 
		{
			get { return GetColumnValue<string>(Columns.NguoiXacNhan); }
			set { SetColumnValue(Columns.NguoiXacNhan, value); }
		}
		  
		[XmlAttribute("XacNhan")]
		[Bindable(true)]
		public int? XacNhan 
		{
			get { return GetColumnValue<int?>(Columns.XacNhan); }
			set { SetColumnValue(Columns.XacNhan, value); }
		}
		  
		[XmlAttribute("TrongGoi")]
		[Bindable(true)]
		public int? TrongGoi 
		{
			get { return GetColumnValue<int?>(Columns.TrongGoi); }
			set { SetColumnValue(Columns.TrongGoi, value); }
		}
		  
		[XmlAttribute("IdGoiDvu")]
		[Bindable(true)]
		public int? IdGoiDvu 
		{
			get { return GetColumnValue<int?>(Columns.IdGoiDvu); }
			set { SetColumnValue(Columns.IdGoiDvu, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varIdPhieuBaoAn,string varMaThucPham,string varMaBuaAn,int? varSoLuong,decimal? varDonGia,DateTime? varNgayXacNhan,string varNguoiXacNhan,int? varXacNhan,int? varTrongGoi,int? varIdGoiDvu)
		{
			TPhieuChitietBaoan item = new TPhieuChitietBaoan();
			
			item.IdPhieuBaoAn = varIdPhieuBaoAn;
			
			item.MaThucPham = varMaThucPham;
			
			item.MaBuaAn = varMaBuaAn;
			
			item.SoLuong = varSoLuong;
			
			item.DonGia = varDonGia;
			
			item.NgayXacNhan = varNgayXacNhan;
			
			item.NguoiXacNhan = varNguoiXacNhan;
			
			item.XacNhan = varXacNhan;
			
			item.TrongGoi = varTrongGoi;
			
			item.IdGoiDvu = varIdGoiDvu;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdPhieuChitiet,int varIdPhieuBaoAn,string varMaThucPham,string varMaBuaAn,int? varSoLuong,decimal? varDonGia,DateTime? varNgayXacNhan,string varNguoiXacNhan,int? varXacNhan,int? varTrongGoi,int? varIdGoiDvu)
		{
			TPhieuChitietBaoan item = new TPhieuChitietBaoan();
			
				item.IdPhieuChitiet = varIdPhieuChitiet;
			
				item.IdPhieuBaoAn = varIdPhieuBaoAn;
			
				item.MaThucPham = varMaThucPham;
			
				item.MaBuaAn = varMaBuaAn;
			
				item.SoLuong = varSoLuong;
			
				item.DonGia = varDonGia;
			
				item.NgayXacNhan = varNgayXacNhan;
			
				item.NguoiXacNhan = varNguoiXacNhan;
			
				item.XacNhan = varXacNhan;
			
				item.TrongGoi = varTrongGoi;
			
				item.IdGoiDvu = varIdGoiDvu;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdPhieuChitietColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuBaoAnColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaThucPhamColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn MaBuaAnColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayXacNhanColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiXacNhanColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn XacNhanColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn TrongGoiColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGoiDvuColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdPhieuChitiet = @"ID_PHIEU_CHITIET";
			 public static string IdPhieuBaoAn = @"ID_PHIEU_BAO_AN";
			 public static string MaThucPham = @"MA_THUC_PHAM";
			 public static string MaBuaAn = @"MA_BUA_AN";
			 public static string SoLuong = @"SO_LUONG";
			 public static string DonGia = @"DON_GIA";
			 public static string NgayXacNhan = @"NGAY_XAC_NHAN";
			 public static string NguoiXacNhan = @"NGUOI_XAC_NHAN";
			 public static string XacNhan = @"XAC_NHAN";
			 public static string TrongGoi = @"TRONG_GOI";
			 public static string IdGoiDvu = @"ID_GOI_DVU";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
