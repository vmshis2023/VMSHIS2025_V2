using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the LObjectTypeMaterialPolicy class.
	/// </summary>
    [Serializable]
	public partial class LObjectTypeMaterialPolicyCollection : ActiveList<LObjectTypeMaterialPolicy, LObjectTypeMaterialPolicyCollection>
	{	   
		public LObjectTypeMaterialPolicyCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>LObjectTypeMaterialPolicyCollection</returns>
		public LObjectTypeMaterialPolicyCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                LObjectTypeMaterialPolicy o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the L_ObjectType_Material_Policy table.
	/// </summary>
	[Serializable]
	public partial class LObjectTypeMaterialPolicy : ActiveRecord<LObjectTypeMaterialPolicy>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public LObjectTypeMaterialPolicy()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public LObjectTypeMaterialPolicy(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public LObjectTypeMaterialPolicy(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public LObjectTypeMaterialPolicy(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("L_ObjectType_Material_Policy", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarMaterialObjectTypeId = new TableSchema.TableColumn(schema);
				colvarMaterialObjectTypeId.ColumnName = "MaterialObject_Type_ID";
				colvarMaterialObjectTypeId.DataType = DbType.Int32;
				colvarMaterialObjectTypeId.MaxLength = 0;
				colvarMaterialObjectTypeId.AutoIncrement = true;
				colvarMaterialObjectTypeId.IsNullable = false;
				colvarMaterialObjectTypeId.IsPrimaryKey = true;
				colvarMaterialObjectTypeId.IsForeignKey = false;
				colvarMaterialObjectTypeId.IsReadOnly = false;
				colvarMaterialObjectTypeId.DefaultSetting = @"";
				colvarMaterialObjectTypeId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaterialObjectTypeId);
				
				TableSchema.TableColumn colvarObjectTypeId = new TableSchema.TableColumn(schema);
				colvarObjectTypeId.ColumnName = "ObjectType_ID";
				colvarObjectTypeId.DataType = DbType.Int16;
				colvarObjectTypeId.MaxLength = 0;
				colvarObjectTypeId.AutoIncrement = false;
				colvarObjectTypeId.IsNullable = false;
				colvarObjectTypeId.IsPrimaryKey = false;
				colvarObjectTypeId.IsForeignKey = false;
				colvarObjectTypeId.IsReadOnly = false;
				colvarObjectTypeId.DefaultSetting = @"";
				colvarObjectTypeId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObjectTypeId);
				
				TableSchema.TableColumn colvarMaterialId = new TableSchema.TableColumn(schema);
				colvarMaterialId.ColumnName = "Material_ID";
				colvarMaterialId.DataType = DbType.Int16;
				colvarMaterialId.MaxLength = 0;
				colvarMaterialId.AutoIncrement = false;
				colvarMaterialId.IsNullable = false;
				colvarMaterialId.IsPrimaryKey = false;
				colvarMaterialId.IsForeignKey = false;
				colvarMaterialId.IsReadOnly = false;
				colvarMaterialId.DefaultSetting = @"";
				colvarMaterialId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaterialId);
				
				TableSchema.TableColumn colvarDiscountRate = new TableSchema.TableColumn(schema);
				colvarDiscountRate.ColumnName = "Discount_Rate";
				colvarDiscountRate.DataType = DbType.Decimal;
				colvarDiscountRate.MaxLength = 0;
				colvarDiscountRate.AutoIncrement = false;
				colvarDiscountRate.IsNullable = true;
				colvarDiscountRate.IsPrimaryKey = false;
				colvarDiscountRate.IsForeignKey = false;
				colvarDiscountRate.IsReadOnly = false;
				colvarDiscountRate.DefaultSetting = @"";
				colvarDiscountRate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountRate);
				
				TableSchema.TableColumn colvarDiscountType = new TableSchema.TableColumn(schema);
				colvarDiscountType.ColumnName = "Discount_Type";
				colvarDiscountType.DataType = DbType.Byte;
				colvarDiscountType.MaxLength = 0;
				colvarDiscountType.AutoIncrement = false;
				colvarDiscountType.IsNullable = true;
				colvarDiscountType.IsPrimaryKey = false;
				colvarDiscountType.IsForeignKey = false;
				colvarDiscountType.IsReadOnly = false;
				
						colvarDiscountType.DefaultSetting = @"((0))";
				colvarDiscountType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountType);
				
				TableSchema.TableColumn colvarSDesc = new TableSchema.TableColumn(schema);
				colvarSDesc.ColumnName = "sDesc";
				colvarSDesc.DataType = DbType.String;
				colvarSDesc.MaxLength = 255;
				colvarSDesc.AutoIncrement = false;
				colvarSDesc.IsNullable = true;
				colvarSDesc.IsPrimaryKey = false;
				colvarSDesc.IsForeignKey = false;
				colvarSDesc.IsReadOnly = false;
				colvarSDesc.DefaultSetting = @"";
				colvarSDesc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSDesc);
				
				TableSchema.TableColumn colvarLastPrice = new TableSchema.TableColumn(schema);
				colvarLastPrice.ColumnName = "Last_Price";
				colvarLastPrice.DataType = DbType.Currency;
				colvarLastPrice.MaxLength = 0;
				colvarLastPrice.AutoIncrement = false;
				colvarLastPrice.IsNullable = true;
				colvarLastPrice.IsPrimaryKey = false;
				colvarLastPrice.IsForeignKey = false;
				colvarLastPrice.IsReadOnly = false;
				colvarLastPrice.DefaultSetting = @"";
				colvarLastPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLastPrice);
				
				TableSchema.TableColumn colvarSurcharge = new TableSchema.TableColumn(schema);
				colvarSurcharge.ColumnName = "Surcharge";
				colvarSurcharge.DataType = DbType.Currency;
				colvarSurcharge.MaxLength = 0;
				colvarSurcharge.AutoIncrement = false;
				colvarSurcharge.IsNullable = true;
				colvarSurcharge.IsPrimaryKey = false;
				colvarSurcharge.IsForeignKey = false;
				colvarSurcharge.IsReadOnly = false;
				colvarSurcharge.DefaultSetting = @"";
				colvarSurcharge.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSurcharge);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("L_ObjectType_Material_Policy",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("MaterialObjectTypeId")]
		[Bindable(true)]
		public int MaterialObjectTypeId 
		{
			get { return GetColumnValue<int>(Columns.MaterialObjectTypeId); }
			set { SetColumnValue(Columns.MaterialObjectTypeId, value); }
		}
		  
		[XmlAttribute("ObjectTypeId")]
		[Bindable(true)]
		public short ObjectTypeId 
		{
			get { return GetColumnValue<short>(Columns.ObjectTypeId); }
			set { SetColumnValue(Columns.ObjectTypeId, value); }
		}
		  
		[XmlAttribute("MaterialId")]
		[Bindable(true)]
		public short MaterialId 
		{
			get { return GetColumnValue<short>(Columns.MaterialId); }
			set { SetColumnValue(Columns.MaterialId, value); }
		}
		  
		[XmlAttribute("DiscountRate")]
		[Bindable(true)]
		public decimal? DiscountRate 
		{
			get { return GetColumnValue<decimal?>(Columns.DiscountRate); }
			set { SetColumnValue(Columns.DiscountRate, value); }
		}
		  
		[XmlAttribute("DiscountType")]
		[Bindable(true)]
		public byte? DiscountType 
		{
			get { return GetColumnValue<byte?>(Columns.DiscountType); }
			set { SetColumnValue(Columns.DiscountType, value); }
		}
		  
		[XmlAttribute("SDesc")]
		[Bindable(true)]
		public string SDesc 
		{
			get { return GetColumnValue<string>(Columns.SDesc); }
			set { SetColumnValue(Columns.SDesc, value); }
		}
		  
		[XmlAttribute("LastPrice")]
		[Bindable(true)]
		public decimal? LastPrice 
		{
			get { return GetColumnValue<decimal?>(Columns.LastPrice); }
			set { SetColumnValue(Columns.LastPrice, value); }
		}
		  
		[XmlAttribute("Surcharge")]
		[Bindable(true)]
		public decimal? Surcharge 
		{
			get { return GetColumnValue<decimal?>(Columns.Surcharge); }
			set { SetColumnValue(Columns.Surcharge, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(short varObjectTypeId,short varMaterialId,decimal? varDiscountRate,byte? varDiscountType,string varSDesc,decimal? varLastPrice,decimal? varSurcharge)
		{
			LObjectTypeMaterialPolicy item = new LObjectTypeMaterialPolicy();
			
			item.ObjectTypeId = varObjectTypeId;
			
			item.MaterialId = varMaterialId;
			
			item.DiscountRate = varDiscountRate;
			
			item.DiscountType = varDiscountType;
			
			item.SDesc = varSDesc;
			
			item.LastPrice = varLastPrice;
			
			item.Surcharge = varSurcharge;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varMaterialObjectTypeId,short varObjectTypeId,short varMaterialId,decimal? varDiscountRate,byte? varDiscountType,string varSDesc,decimal? varLastPrice,decimal? varSurcharge)
		{
			LObjectTypeMaterialPolicy item = new LObjectTypeMaterialPolicy();
			
				item.MaterialObjectTypeId = varMaterialObjectTypeId;
			
				item.ObjectTypeId = varObjectTypeId;
			
				item.MaterialId = varMaterialId;
			
				item.DiscountRate = varDiscountRate;
			
				item.DiscountType = varDiscountType;
			
				item.SDesc = varSDesc;
			
				item.LastPrice = varLastPrice;
			
				item.Surcharge = varSurcharge;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn MaterialObjectTypeIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn ObjectTypeIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaterialIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountRateColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountTypeColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn SDescColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn LastPriceColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn SurchargeColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string MaterialObjectTypeId = @"MaterialObject_Type_ID";
			 public static string ObjectTypeId = @"ObjectType_ID";
			 public static string MaterialId = @"Material_ID";
			 public static string DiscountRate = @"Discount_Rate";
			 public static string DiscountType = @"Discount_Type";
			 public static string SDesc = @"sDesc";
			 public static string LastPrice = @"Last_Price";
			 public static string Surcharge = @"Surcharge";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
