using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewThongTinNgayChoDe class.
    /// </summary>
    [Serializable]
    public partial class ViewThongTinNgayChoDeCollection : ReadOnlyList<ViewThongTinNgayChoDe, ViewThongTinNgayChoDeCollection>
    {        
        public ViewThongTinNgayChoDeCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_ThongTinNgayChoDe view.
    /// </summary>
    [Serializable]
    public partial class ViewThongTinNgayChoDe : ReadOnlyRecord<ViewThongTinNgayChoDe>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_ThongTinNgayChoDe", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_code";
                colvarPatientCode.DataType = DbType.String;
                colvarPatientCode.MaxLength = 50;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = false;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Int32;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = false;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarPatientDeptId = new TableSchema.TableColumn(schema);
                colvarPatientDeptId.ColumnName = "PatientDept_ID";
                colvarPatientDeptId.DataType = DbType.Int32;
                colvarPatientDeptId.MaxLength = 0;
                colvarPatientDeptId.AutoIncrement = false;
                colvarPatientDeptId.IsNullable = false;
                colvarPatientDeptId.IsPrimaryKey = false;
                colvarPatientDeptId.IsForeignKey = false;
                colvarPatientDeptId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientDeptId);
                
                TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
                colvarDepartmentId.ColumnName = "Department_ID";
                colvarDepartmentId.DataType = DbType.Int32;
                colvarDepartmentId.MaxLength = 0;
                colvarDepartmentId.AutoIncrement = false;
                colvarDepartmentId.IsNullable = false;
                colvarDepartmentId.IsPrimaryKey = false;
                colvarDepartmentId.IsForeignKey = false;
                colvarDepartmentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepartmentId);
                
                TableSchema.TableColumn colvarRoomId = new TableSchema.TableColumn(schema);
                colvarRoomId.ColumnName = "Room_ID";
                colvarRoomId.DataType = DbType.Int32;
                colvarRoomId.MaxLength = 0;
                colvarRoomId.AutoIncrement = false;
                colvarRoomId.IsNullable = true;
                colvarRoomId.IsPrimaryKey = false;
                colvarRoomId.IsForeignKey = false;
                colvarRoomId.IsReadOnly = false;
                
                schema.Columns.Add(colvarRoomId);
                
                TableSchema.TableColumn colvarBedId = new TableSchema.TableColumn(schema);
                colvarBedId.ColumnName = "Bed_ID";
                colvarBedId.DataType = DbType.Int32;
                colvarBedId.MaxLength = 0;
                colvarBedId.AutoIncrement = false;
                colvarBedId.IsNullable = true;
                colvarBedId.IsPrimaryKey = false;
                colvarBedId.IsForeignKey = false;
                colvarBedId.IsReadOnly = false;
                
                schema.Columns.Add(colvarBedId);
                
                TableSchema.TableColumn colvarTranThaiDe = new TableSchema.TableColumn(schema);
                colvarTranThaiDe.ColumnName = "TRAN_THAI_DE";
                colvarTranThaiDe.DataType = DbType.Int32;
                colvarTranThaiDe.MaxLength = 0;
                colvarTranThaiDe.AutoIncrement = false;
                colvarTranThaiDe.IsNullable = true;
                colvarTranThaiDe.IsPrimaryKey = false;
                colvarTranThaiDe.IsForeignKey = false;
                colvarTranThaiDe.IsReadOnly = false;
                
                schema.Columns.Add(colvarTranThaiDe);
                
                TableSchema.TableColumn colvarNgayChuyenDe = new TableSchema.TableColumn(schema);
                colvarNgayChuyenDe.ColumnName = "NGAY_CHUYEN_DE";
                colvarNgayChuyenDe.DataType = DbType.DateTime;
                colvarNgayChuyenDe.MaxLength = 0;
                colvarNgayChuyenDe.AutoIncrement = false;
                colvarNgayChuyenDe.IsNullable = false;
                colvarNgayChuyenDe.IsPrimaryKey = false;
                colvarNgayChuyenDe.IsForeignKey = false;
                colvarNgayChuyenDe.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgayChuyenDe);
                
                TableSchema.TableColumn colvarDepartmentName = new TableSchema.TableColumn(schema);
                colvarDepartmentName.ColumnName = "Department_Name";
                colvarDepartmentName.DataType = DbType.String;
                colvarDepartmentName.MaxLength = 100;
                colvarDepartmentName.AutoIncrement = false;
                colvarDepartmentName.IsNullable = true;
                colvarDepartmentName.IsPrimaryKey = false;
                colvarDepartmentName.IsForeignKey = false;
                colvarDepartmentName.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepartmentName);
                
                TableSchema.TableColumn colvarPatientName = new TableSchema.TableColumn(schema);
                colvarPatientName.ColumnName = "Patient_Name";
                colvarPatientName.DataType = DbType.String;
                colvarPatientName.MaxLength = 100;
                colvarPatientName.AutoIncrement = false;
                colvarPatientName.IsNullable = true;
                colvarPatientName.IsPrimaryKey = false;
                colvarPatientName.IsForeignKey = false;
                colvarPatientName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientName);
                
                TableSchema.TableColumn colvarPatientAddr = new TableSchema.TableColumn(schema);
                colvarPatientAddr.ColumnName = "Patient_Addr";
                colvarPatientAddr.DataType = DbType.String;
                colvarPatientAddr.MaxLength = 200;
                colvarPatientAddr.AutoIncrement = false;
                colvarPatientAddr.IsNullable = true;
                colvarPatientAddr.IsPrimaryKey = false;
                colvarPatientAddr.IsForeignKey = false;
                colvarPatientAddr.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientAddr);
                
                TableSchema.TableColumn colvarYearOfBirth = new TableSchema.TableColumn(schema);
                colvarYearOfBirth.ColumnName = "Year_Of_Birth";
                colvarYearOfBirth.DataType = DbType.Int16;
                colvarYearOfBirth.MaxLength = 0;
                colvarYearOfBirth.AutoIncrement = false;
                colvarYearOfBirth.IsNullable = true;
                colvarYearOfBirth.IsPrimaryKey = false;
                colvarYearOfBirth.IsForeignKey = false;
                colvarYearOfBirth.IsReadOnly = false;
                
                schema.Columns.Add(colvarYearOfBirth);
                
                TableSchema.TableColumn colvarPatientPhone = new TableSchema.TableColumn(schema);
                colvarPatientPhone.ColumnName = "Patient_Phone";
                colvarPatientPhone.DataType = DbType.String;
                colvarPatientPhone.MaxLength = 50;
                colvarPatientPhone.AutoIncrement = false;
                colvarPatientPhone.IsNullable = true;
                colvarPatientPhone.IsPrimaryKey = false;
                colvarPatientPhone.IsForeignKey = false;
                colvarPatientPhone.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientPhone);
                
                TableSchema.TableColumn colvarSPatientSex = new TableSchema.TableColumn(schema);
                colvarSPatientSex.ColumnName = "sPatientSex";
                colvarSPatientSex.DataType = DbType.String;
                colvarSPatientSex.MaxLength = 10;
                colvarSPatientSex.AutoIncrement = false;
                colvarSPatientSex.IsNullable = true;
                colvarSPatientSex.IsPrimaryKey = false;
                colvarSPatientSex.IsForeignKey = false;
                colvarSPatientSex.IsReadOnly = false;
                
                schema.Columns.Add(colvarSPatientSex);
                
                TableSchema.TableColumn colvarMedicalNumber = new TableSchema.TableColumn(schema);
                colvarMedicalNumber.ColumnName = "MedicalNumber";
                colvarMedicalNumber.DataType = DbType.String;
                colvarMedicalNumber.MaxLength = 50;
                colvarMedicalNumber.AutoIncrement = false;
                colvarMedicalNumber.IsNullable = true;
                colvarMedicalNumber.IsPrimaryKey = false;
                colvarMedicalNumber.IsForeignKey = false;
                colvarMedicalNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarMedicalNumber);
                
                TableSchema.TableColumn colvarMaDoiTuong = new TableSchema.TableColumn(schema);
                colvarMaDoiTuong.ColumnName = "Ma_DoiTuong";
                colvarMaDoiTuong.DataType = DbType.String;
                colvarMaDoiTuong.MaxLength = 50;
                colvarMaDoiTuong.AutoIncrement = false;
                colvarMaDoiTuong.IsNullable = true;
                colvarMaDoiTuong.IsPrimaryKey = false;
                colvarMaDoiTuong.IsForeignKey = false;
                colvarMaDoiTuong.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaDoiTuong);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("view_ThongTinNgayChoDe",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewThongTinNgayChoDe()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewThongTinNgayChoDe(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewThongTinNgayChoDe(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewThongTinNgayChoDe(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_code");
		    }
            set 
		    {
			    SetColumnValue("Patient_code", value);
            }
        }
	      
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public int PatientId 
	    {
		    get
		    {
			    return GetColumnValue<int>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("PatientDeptId")]
        [Bindable(true)]
        public int PatientDeptId 
	    {
		    get
		    {
			    return GetColumnValue<int>("PatientDept_ID");
		    }
            set 
		    {
			    SetColumnValue("PatientDept_ID", value);
            }
        }
	      
        [XmlAttribute("DepartmentId")]
        [Bindable(true)]
        public int DepartmentId 
	    {
		    get
		    {
			    return GetColumnValue<int>("Department_ID");
		    }
            set 
		    {
			    SetColumnValue("Department_ID", value);
            }
        }
	      
        [XmlAttribute("RoomId")]
        [Bindable(true)]
        public int? RoomId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Room_ID");
		    }
            set 
		    {
			    SetColumnValue("Room_ID", value);
            }
        }
	      
        [XmlAttribute("BedId")]
        [Bindable(true)]
        public int? BedId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Bed_ID");
		    }
            set 
		    {
			    SetColumnValue("Bed_ID", value);
            }
        }
	      
        [XmlAttribute("TranThaiDe")]
        [Bindable(true)]
        public int? TranThaiDe 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TRAN_THAI_DE");
		    }
            set 
		    {
			    SetColumnValue("TRAN_THAI_DE", value);
            }
        }
	      
        [XmlAttribute("NgayChuyenDe")]
        [Bindable(true)]
        public DateTime NgayChuyenDe 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("NGAY_CHUYEN_DE");
		    }
            set 
		    {
			    SetColumnValue("NGAY_CHUYEN_DE", value);
            }
        }
	      
        [XmlAttribute("DepartmentName")]
        [Bindable(true)]
        public string DepartmentName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Department_Name");
		    }
            set 
		    {
			    SetColumnValue("Department_Name", value);
            }
        }
	      
        [XmlAttribute("PatientName")]
        [Bindable(true)]
        public string PatientName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Name");
		    }
            set 
		    {
			    SetColumnValue("Patient_Name", value);
            }
        }
	      
        [XmlAttribute("PatientAddr")]
        [Bindable(true)]
        public string PatientAddr 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Addr");
		    }
            set 
		    {
			    SetColumnValue("Patient_Addr", value);
            }
        }
	      
        [XmlAttribute("YearOfBirth")]
        [Bindable(true)]
        public short? YearOfBirth 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Year_Of_Birth");
		    }
            set 
		    {
			    SetColumnValue("Year_Of_Birth", value);
            }
        }
	      
        [XmlAttribute("PatientPhone")]
        [Bindable(true)]
        public string PatientPhone 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Phone");
		    }
            set 
		    {
			    SetColumnValue("Patient_Phone", value);
            }
        }
	      
        [XmlAttribute("SPatientSex")]
        [Bindable(true)]
        public string SPatientSex 
	    {
		    get
		    {
			    return GetColumnValue<string>("sPatientSex");
		    }
            set 
		    {
			    SetColumnValue("sPatientSex", value);
            }
        }
	      
        [XmlAttribute("MedicalNumber")]
        [Bindable(true)]
        public string MedicalNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("MedicalNumber");
		    }
            set 
		    {
			    SetColumnValue("MedicalNumber", value);
            }
        }
	      
        [XmlAttribute("MaDoiTuong")]
        [Bindable(true)]
        public string MaDoiTuong 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ma_DoiTuong");
		    }
            set 
		    {
			    SetColumnValue("Ma_DoiTuong", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string PatientCode = @"Patient_code";
            
            public static string PatientId = @"Patient_ID";
            
            public static string PatientDeptId = @"PatientDept_ID";
            
            public static string DepartmentId = @"Department_ID";
            
            public static string RoomId = @"Room_ID";
            
            public static string BedId = @"Bed_ID";
            
            public static string TranThaiDe = @"TRAN_THAI_DE";
            
            public static string NgayChuyenDe = @"NGAY_CHUYEN_DE";
            
            public static string DepartmentName = @"Department_Name";
            
            public static string PatientName = @"Patient_Name";
            
            public static string PatientAddr = @"Patient_Addr";
            
            public static string YearOfBirth = @"Year_Of_Birth";
            
            public static string PatientPhone = @"Patient_Phone";
            
            public static string SPatientSex = @"sPatientSex";
            
            public static string MedicalNumber = @"MedicalNumber";
            
            public static string MaDoiTuong = @"Ma_DoiTuong";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
