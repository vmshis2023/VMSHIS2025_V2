using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for D_KHO
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class DKhoController
    {
        // Preload our schema..
        DKho thisSchemaLoad = new DKho();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public DKhoCollection FetchAll()
        {
            DKhoCollection coll = new DKhoCollection();
            Query qry = new Query(DKho.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public DKhoCollection FetchByID(object IdKho)
        {
            DKhoCollection coll = new DKhoCollection().Where("ID_KHO", IdKho).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public DKhoCollection FetchByQuery(Query qry)
        {
            DKhoCollection coll = new DKhoCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdKho)
        {
            return (DKho.Delete(IdKho) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdKho)
        {
            return (DKho.Destroy(IdKho) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string MaKho,string TenKho,int? ThuTu,byte? KieuKho,string LoaiKho,string ThuKho,short IdKhoa,string GhiChu,byte? KhoBan,byte? KtraTon,DateTime? NgaySua,DateTime? NgayTao,string NguoiSua,string NguoiTao,byte? LaTuthuoc,string LoaiBnhan,byte? HienThi,bool? IsThuocHetHan,bool? IsKeDonThuoc,bool? IsKhoNhap)
	    {
		    DKho item = new DKho();
		    
            item.MaKho = MaKho;
            
            item.TenKho = TenKho;
            
            item.ThuTu = ThuTu;
            
            item.KieuKho = KieuKho;
            
            item.LoaiKho = LoaiKho;
            
            item.ThuKho = ThuKho;
            
            item.IdKhoa = IdKhoa;
            
            item.GhiChu = GhiChu;
            
            item.KhoBan = KhoBan;
            
            item.KtraTon = KtraTon;
            
            item.NgaySua = NgaySua;
            
            item.NgayTao = NgayTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NguoiTao = NguoiTao;
            
            item.LaTuthuoc = LaTuthuoc;
            
            item.LoaiBnhan = LoaiBnhan;
            
            item.HienThi = HienThi;
            
            item.IsThuocHetHan = IsThuocHetHan;
            
            item.IsKeDonThuoc = IsKeDonThuoc;
            
            item.IsKhoNhap = IsKhoNhap;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int IdKho,string MaKho,string TenKho,int? ThuTu,byte? KieuKho,string LoaiKho,string ThuKho,short IdKhoa,string GhiChu,byte? KhoBan,byte? KtraTon,DateTime? NgaySua,DateTime? NgayTao,string NguoiSua,string NguoiTao,byte? LaTuthuoc,string LoaiBnhan,byte? HienThi,bool? IsThuocHetHan,bool? IsKeDonThuoc,bool? IsKhoNhap)
	    {
		    DKho item = new DKho();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdKho = IdKho;
				
			item.MaKho = MaKho;
				
			item.TenKho = TenKho;
				
			item.ThuTu = ThuTu;
				
			item.KieuKho = KieuKho;
				
			item.LoaiKho = LoaiKho;
				
			item.ThuKho = ThuKho;
				
			item.IdKhoa = IdKhoa;
				
			item.GhiChu = GhiChu;
				
			item.KhoBan = KhoBan;
				
			item.KtraTon = KtraTon;
				
			item.NgaySua = NgaySua;
				
			item.NgayTao = NgayTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NguoiTao = NguoiTao;
				
			item.LaTuthuoc = LaTuthuoc;
				
			item.LoaiBnhan = LoaiBnhan;
				
			item.HienThi = HienThi;
				
			item.IsThuocHetHan = IsThuocHetHan;
				
			item.IsKeDonThuoc = IsKeDonThuoc;
				
			item.IsKhoNhap = IsKhoNhap;
				
	        item.Save(UserName);
	    }
    }
}
