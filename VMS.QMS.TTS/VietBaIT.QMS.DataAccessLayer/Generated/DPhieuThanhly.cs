using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the DPhieuThanhly class.
	/// </summary>
    [Serializable]
	public partial class DPhieuThanhlyCollection : ActiveList<DPhieuThanhly, DPhieuThanhlyCollection>
	{	   
		public DPhieuThanhlyCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DPhieuThanhlyCollection</returns>
		public DPhieuThanhlyCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DPhieuThanhly o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the D_Phieu_Thanhly table.
	/// </summary>
	[Serializable]
	public partial class DPhieuThanhly : ActiveRecord<DPhieuThanhly>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DPhieuThanhly()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DPhieuThanhly(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DPhieuThanhly(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DPhieuThanhly(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("D_Phieu_Thanhly", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdThanhLy = new TableSchema.TableColumn(schema);
				colvarIdThanhLy.ColumnName = "Id_ThanhLy";
				colvarIdThanhLy.DataType = DbType.Int32;
				colvarIdThanhLy.MaxLength = 0;
				colvarIdThanhLy.AutoIncrement = true;
				colvarIdThanhLy.IsNullable = false;
				colvarIdThanhLy.IsPrimaryKey = true;
				colvarIdThanhLy.IsForeignKey = false;
				colvarIdThanhLy.IsReadOnly = false;
				colvarIdThanhLy.DefaultSetting = @"";
				colvarIdThanhLy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdThanhLy);
				
				TableSchema.TableColumn colvarNgayThanhLy = new TableSchema.TableColumn(schema);
				colvarNgayThanhLy.ColumnName = "Ngay_ThanhLy";
				colvarNgayThanhLy.DataType = DbType.DateTime;
				colvarNgayThanhLy.MaxLength = 0;
				colvarNgayThanhLy.AutoIncrement = false;
				colvarNgayThanhLy.IsNullable = false;
				colvarNgayThanhLy.IsPrimaryKey = false;
				colvarNgayThanhLy.IsForeignKey = false;
				colvarNgayThanhLy.IsReadOnly = false;
				
						colvarNgayThanhLy.DefaultSetting = @"(getdate())";
				colvarNgayThanhLy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayThanhLy);
				
				TableSchema.TableColumn colvarIdNhanVien = new TableSchema.TableColumn(schema);
				colvarIdNhanVien.ColumnName = "Id_Nhan_Vien";
				colvarIdNhanVien.DataType = DbType.Int16;
				colvarIdNhanVien.MaxLength = 0;
				colvarIdNhanVien.AutoIncrement = false;
				colvarIdNhanVien.IsNullable = false;
				colvarIdNhanVien.IsPrimaryKey = false;
				colvarIdNhanVien.IsForeignKey = false;
				colvarIdNhanVien.IsReadOnly = false;
				colvarIdNhanVien.DefaultSetting = @"";
				colvarIdNhanVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhanVien);
				
				TableSchema.TableColumn colvarIdKhoa = new TableSchema.TableColumn(schema);
				colvarIdKhoa.ColumnName = "Id_Khoa";
				colvarIdKhoa.DataType = DbType.Int16;
				colvarIdKhoa.MaxLength = 0;
				colvarIdKhoa.AutoIncrement = false;
				colvarIdKhoa.IsNullable = false;
				colvarIdKhoa.IsPrimaryKey = false;
				colvarIdKhoa.IsForeignKey = false;
				colvarIdKhoa.IsReadOnly = false;
				colvarIdKhoa.DefaultSetting = @"";
				colvarIdKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoa);
				
				TableSchema.TableColumn colvarIdKho = new TableSchema.TableColumn(schema);
				colvarIdKho.ColumnName = "IdKho";
				colvarIdKho.DataType = DbType.Int16;
				colvarIdKho.MaxLength = 0;
				colvarIdKho.AutoIncrement = false;
				colvarIdKho.IsNullable = false;
				colvarIdKho.IsPrimaryKey = false;
				colvarIdKho.IsForeignKey = false;
				colvarIdKho.IsReadOnly = false;
				colvarIdKho.DefaultSetting = @"";
				colvarIdKho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKho);
				
				TableSchema.TableColumn colvarLyDo = new TableSchema.TableColumn(schema);
				colvarLyDo.ColumnName = "Ly_Do";
				colvarLyDo.DataType = DbType.String;
				colvarLyDo.MaxLength = 500;
				colvarLyDo.AutoIncrement = false;
				colvarLyDo.IsNullable = true;
				colvarLyDo.IsPrimaryKey = false;
				colvarLyDo.IsForeignKey = false;
				colvarLyDo.IsReadOnly = false;
				colvarLyDo.DefaultSetting = @"";
				colvarLyDo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLyDo);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "Nguoi_Tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "Ngay_Tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				
						colvarNgayTao.DefaultSetting = @"(getdate())";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "Nguoi_Sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 20;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "Ngay_Sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarDaXacNhan = new TableSchema.TableColumn(schema);
				colvarDaXacNhan.ColumnName = "Da_XacNhan";
				colvarDaXacNhan.DataType = DbType.Boolean;
				colvarDaXacNhan.MaxLength = 0;
				colvarDaXacNhan.AutoIncrement = false;
				colvarDaXacNhan.IsNullable = true;
				colvarDaXacNhan.IsPrimaryKey = false;
				colvarDaXacNhan.IsForeignKey = false;
				colvarDaXacNhan.IsReadOnly = false;
				
						colvarDaXacNhan.DefaultSetting = @"((0))";
				colvarDaXacNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaXacNhan);
				
				TableSchema.TableColumn colvarNgayXacNhan = new TableSchema.TableColumn(schema);
				colvarNgayXacNhan.ColumnName = "Ngay_XacNhan";
				colvarNgayXacNhan.DataType = DbType.DateTime;
				colvarNgayXacNhan.MaxLength = 0;
				colvarNgayXacNhan.AutoIncrement = false;
				colvarNgayXacNhan.IsNullable = true;
				colvarNgayXacNhan.IsPrimaryKey = false;
				colvarNgayXacNhan.IsForeignKey = false;
				colvarNgayXacNhan.IsReadOnly = false;
				colvarNgayXacNhan.DefaultSetting = @"";
				colvarNgayXacNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayXacNhan);
				
				TableSchema.TableColumn colvarNguoiXacNhan = new TableSchema.TableColumn(schema);
				colvarNguoiXacNhan.ColumnName = "Nguoi_XacNhan";
				colvarNguoiXacNhan.DataType = DbType.String;
				colvarNguoiXacNhan.MaxLength = 20;
				colvarNguoiXacNhan.AutoIncrement = false;
				colvarNguoiXacNhan.IsNullable = true;
				colvarNguoiXacNhan.IsPrimaryKey = false;
				colvarNguoiXacNhan.IsForeignKey = false;
				colvarNguoiXacNhan.IsReadOnly = false;
				colvarNguoiXacNhan.DefaultSetting = @"";
				colvarNguoiXacNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiXacNhan);
				
				TableSchema.TableColumn colvarGiamDoc = new TableSchema.TableColumn(schema);
				colvarGiamDoc.ColumnName = "GiamDoc";
				colvarGiamDoc.DataType = DbType.String;
				colvarGiamDoc.MaxLength = 50;
				colvarGiamDoc.AutoIncrement = false;
				colvarGiamDoc.IsNullable = true;
				colvarGiamDoc.IsPrimaryKey = false;
				colvarGiamDoc.IsForeignKey = false;
				colvarGiamDoc.IsReadOnly = false;
				colvarGiamDoc.DefaultSetting = @"";
				colvarGiamDoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiamDoc);
				
				TableSchema.TableColumn colvarChuTich = new TableSchema.TableColumn(schema);
				colvarChuTich.ColumnName = "ChuTich";
				colvarChuTich.DataType = DbType.String;
				colvarChuTich.MaxLength = 50;
				colvarChuTich.AutoIncrement = false;
				colvarChuTich.IsNullable = true;
				colvarChuTich.IsPrimaryKey = false;
				colvarChuTich.IsForeignKey = false;
				colvarChuTich.IsReadOnly = false;
				colvarChuTich.DefaultSetting = @"";
				colvarChuTich.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChuTich);
				
				TableSchema.TableColumn colvarThuKy = new TableSchema.TableColumn(schema);
				colvarThuKy.ColumnName = "ThuKy";
				colvarThuKy.DataType = DbType.String;
				colvarThuKy.MaxLength = 50;
				colvarThuKy.AutoIncrement = false;
				colvarThuKy.IsNullable = true;
				colvarThuKy.IsPrimaryKey = false;
				colvarThuKy.IsForeignKey = false;
				colvarThuKy.IsReadOnly = false;
				colvarThuKy.DefaultSetting = @"";
				colvarThuKy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThuKy);
				
				TableSchema.TableColumn colvarKeToan = new TableSchema.TableColumn(schema);
				colvarKeToan.ColumnName = "KeToan";
				colvarKeToan.DataType = DbType.String;
				colvarKeToan.MaxLength = 50;
				colvarKeToan.AutoIncrement = false;
				colvarKeToan.IsNullable = true;
				colvarKeToan.IsPrimaryKey = false;
				colvarKeToan.IsForeignKey = false;
				colvarKeToan.IsReadOnly = false;
				colvarKeToan.DefaultSetting = @"";
				colvarKeToan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKeToan);
				
				TableSchema.TableColumn colvarThuKho = new TableSchema.TableColumn(schema);
				colvarThuKho.ColumnName = "ThuKho";
				colvarThuKho.DataType = DbType.String;
				colvarThuKho.MaxLength = 50;
				colvarThuKho.AutoIncrement = false;
				colvarThuKho.IsNullable = true;
				colvarThuKho.IsPrimaryKey = false;
				colvarThuKho.IsForeignKey = false;
				colvarThuKho.IsReadOnly = false;
				colvarThuKho.DefaultSetting = @"";
				colvarThuKho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThuKho);
				
				TableSchema.TableColumn colvarTruongKhoa = new TableSchema.TableColumn(schema);
				colvarTruongKhoa.ColumnName = "TruongKhoa";
				colvarTruongKhoa.DataType = DbType.String;
				colvarTruongKhoa.MaxLength = 50;
				colvarTruongKhoa.AutoIncrement = false;
				colvarTruongKhoa.IsNullable = true;
				colvarTruongKhoa.IsPrimaryKey = false;
				colvarTruongKhoa.IsForeignKey = false;
				colvarTruongKhoa.IsReadOnly = false;
				colvarTruongKhoa.DefaultSetting = @"";
				colvarTruongKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTruongKhoa);
				
				TableSchema.TableColumn colvarThongKe = new TableSchema.TableColumn(schema);
				colvarThongKe.ColumnName = "ThongKe";
				colvarThongKe.DataType = DbType.String;
				colvarThongKe.MaxLength = 50;
				colvarThongKe.AutoIncrement = false;
				colvarThongKe.IsNullable = true;
				colvarThongKe.IsPrimaryKey = false;
				colvarThongKe.IsForeignKey = false;
				colvarThongKe.IsReadOnly = false;
				colvarThongKe.DefaultSetting = @"";
				colvarThongKe.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThongKe);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("D_Phieu_Thanhly",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdThanhLy")]
		[Bindable(true)]
		public int IdThanhLy 
		{
			get { return GetColumnValue<int>(Columns.IdThanhLy); }
			set { SetColumnValue(Columns.IdThanhLy, value); }
		}
		  
		[XmlAttribute("NgayThanhLy")]
		[Bindable(true)]
		public DateTime NgayThanhLy 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayThanhLy); }
			set { SetColumnValue(Columns.NgayThanhLy, value); }
		}
		  
		[XmlAttribute("IdNhanVien")]
		[Bindable(true)]
		public short IdNhanVien 
		{
			get { return GetColumnValue<short>(Columns.IdNhanVien); }
			set { SetColumnValue(Columns.IdNhanVien, value); }
		}
		  
		[XmlAttribute("IdKhoa")]
		[Bindable(true)]
		public short IdKhoa 
		{
			get { return GetColumnValue<short>(Columns.IdKhoa); }
			set { SetColumnValue(Columns.IdKhoa, value); }
		}
		  
		[XmlAttribute("IdKho")]
		[Bindable(true)]
		public short IdKho 
		{
			get { return GetColumnValue<short>(Columns.IdKho); }
			set { SetColumnValue(Columns.IdKho, value); }
		}
		  
		[XmlAttribute("LyDo")]
		[Bindable(true)]
		public string LyDo 
		{
			get { return GetColumnValue<string>(Columns.LyDo); }
			set { SetColumnValue(Columns.LyDo, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("DaXacNhan")]
		[Bindable(true)]
		public bool? DaXacNhan 
		{
			get { return GetColumnValue<bool?>(Columns.DaXacNhan); }
			set { SetColumnValue(Columns.DaXacNhan, value); }
		}
		  
		[XmlAttribute("NgayXacNhan")]
		[Bindable(true)]
		public DateTime? NgayXacNhan 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayXacNhan); }
			set { SetColumnValue(Columns.NgayXacNhan, value); }
		}
		  
		[XmlAttribute("NguoiXacNhan")]
		[Bindable(true)]
		public string NguoiXacNhan 
		{
			get { return GetColumnValue<string>(Columns.NguoiXacNhan); }
			set { SetColumnValue(Columns.NguoiXacNhan, value); }
		}
		  
		[XmlAttribute("GiamDoc")]
		[Bindable(true)]
		public string GiamDoc 
		{
			get { return GetColumnValue<string>(Columns.GiamDoc); }
			set { SetColumnValue(Columns.GiamDoc, value); }
		}
		  
		[XmlAttribute("ChuTich")]
		[Bindable(true)]
		public string ChuTich 
		{
			get { return GetColumnValue<string>(Columns.ChuTich); }
			set { SetColumnValue(Columns.ChuTich, value); }
		}
		  
		[XmlAttribute("ThuKy")]
		[Bindable(true)]
		public string ThuKy 
		{
			get { return GetColumnValue<string>(Columns.ThuKy); }
			set { SetColumnValue(Columns.ThuKy, value); }
		}
		  
		[XmlAttribute("KeToan")]
		[Bindable(true)]
		public string KeToan 
		{
			get { return GetColumnValue<string>(Columns.KeToan); }
			set { SetColumnValue(Columns.KeToan, value); }
		}
		  
		[XmlAttribute("ThuKho")]
		[Bindable(true)]
		public string ThuKho 
		{
			get { return GetColumnValue<string>(Columns.ThuKho); }
			set { SetColumnValue(Columns.ThuKho, value); }
		}
		  
		[XmlAttribute("TruongKhoa")]
		[Bindable(true)]
		public string TruongKhoa 
		{
			get { return GetColumnValue<string>(Columns.TruongKhoa); }
			set { SetColumnValue(Columns.TruongKhoa, value); }
		}
		  
		[XmlAttribute("ThongKe")]
		[Bindable(true)]
		public string ThongKe 
		{
			get { return GetColumnValue<string>(Columns.ThongKe); }
			set { SetColumnValue(Columns.ThongKe, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(DateTime varNgayThanhLy,short varIdNhanVien,short varIdKhoa,short varIdKho,string varLyDo,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,bool? varDaXacNhan,DateTime? varNgayXacNhan,string varNguoiXacNhan,string varGiamDoc,string varChuTich,string varThuKy,string varKeToan,string varThuKho,string varTruongKhoa,string varThongKe)
		{
			DPhieuThanhly item = new DPhieuThanhly();
			
			item.NgayThanhLy = varNgayThanhLy;
			
			item.IdNhanVien = varIdNhanVien;
			
			item.IdKhoa = varIdKhoa;
			
			item.IdKho = varIdKho;
			
			item.LyDo = varLyDo;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.DaXacNhan = varDaXacNhan;
			
			item.NgayXacNhan = varNgayXacNhan;
			
			item.NguoiXacNhan = varNguoiXacNhan;
			
			item.GiamDoc = varGiamDoc;
			
			item.ChuTich = varChuTich;
			
			item.ThuKy = varThuKy;
			
			item.KeToan = varKeToan;
			
			item.ThuKho = varThuKho;
			
			item.TruongKhoa = varTruongKhoa;
			
			item.ThongKe = varThongKe;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdThanhLy,DateTime varNgayThanhLy,short varIdNhanVien,short varIdKhoa,short varIdKho,string varLyDo,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,bool? varDaXacNhan,DateTime? varNgayXacNhan,string varNguoiXacNhan,string varGiamDoc,string varChuTich,string varThuKy,string varKeToan,string varThuKho,string varTruongKhoa,string varThongKe)
		{
			DPhieuThanhly item = new DPhieuThanhly();
			
				item.IdThanhLy = varIdThanhLy;
			
				item.NgayThanhLy = varNgayThanhLy;
			
				item.IdNhanVien = varIdNhanVien;
			
				item.IdKhoa = varIdKhoa;
			
				item.IdKho = varIdKho;
			
				item.LyDo = varLyDo;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.DaXacNhan = varDaXacNhan;
			
				item.NgayXacNhan = varNgayXacNhan;
			
				item.NguoiXacNhan = varNguoiXacNhan;
			
				item.GiamDoc = varGiamDoc;
			
				item.ChuTich = varChuTich;
			
				item.ThuKy = varThuKy;
			
				item.KeToan = varKeToan;
			
				item.ThuKho = varThuKho;
			
				item.TruongKhoa = varTruongKhoa;
			
				item.ThongKe = varThongKe;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdThanhLyColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayThanhLyColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhanVienColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn LyDoColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn DaXacNhanColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayXacNhanColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiXacNhanColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn GiamDocColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn ChuTichColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn ThuKyColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn KeToanColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn ThuKhoColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn TruongKhoaColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn ThongKeColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdThanhLy = @"Id_ThanhLy";
			 public static string NgayThanhLy = @"Ngay_ThanhLy";
			 public static string IdNhanVien = @"Id_Nhan_Vien";
			 public static string IdKhoa = @"Id_Khoa";
			 public static string IdKho = @"IdKho";
			 public static string LyDo = @"Ly_Do";
			 public static string NguoiTao = @"Nguoi_Tao";
			 public static string NgayTao = @"Ngay_Tao";
			 public static string NguoiSua = @"Nguoi_Sua";
			 public static string NgaySua = @"Ngay_Sua";
			 public static string DaXacNhan = @"Da_XacNhan";
			 public static string NgayXacNhan = @"Ngay_XacNhan";
			 public static string NguoiXacNhan = @"Nguoi_XacNhan";
			 public static string GiamDoc = @"GiamDoc";
			 public static string ChuTich = @"ChuTich";
			 public static string ThuKy = @"ThuKy";
			 public static string KeToan = @"KeToan";
			 public static string ThuKho = @"ThuKho";
			 public static string TruongKhoa = @"TruongKhoa";
			 public static string ThongKe = @"ThongKe";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
