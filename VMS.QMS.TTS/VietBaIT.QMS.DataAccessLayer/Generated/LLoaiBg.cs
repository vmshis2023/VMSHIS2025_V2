using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the LLoaiBg class.
	/// </summary>
    [Serializable]
	public partial class LLoaiBgCollection : ActiveList<LLoaiBg, LLoaiBgCollection>
	{	   
		public LLoaiBgCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>LLoaiBgCollection</returns>
		public LLoaiBgCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                LLoaiBg o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the L_LOAI_BG table.
	/// </summary>
	[Serializable]
	public partial class LLoaiBg : ActiveRecord<LLoaiBg>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public LLoaiBg()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public LLoaiBg(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public LLoaiBg(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public LLoaiBg(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("L_LOAI_BG", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdLoaiBg = new TableSchema.TableColumn(schema);
				colvarIdLoaiBg.ColumnName = "ID_LOAI_BG";
				colvarIdLoaiBg.DataType = DbType.Int32;
				colvarIdLoaiBg.MaxLength = 0;
				colvarIdLoaiBg.AutoIncrement = true;
				colvarIdLoaiBg.IsNullable = false;
				colvarIdLoaiBg.IsPrimaryKey = true;
				colvarIdLoaiBg.IsForeignKey = false;
				colvarIdLoaiBg.IsReadOnly = false;
				colvarIdLoaiBg.DefaultSetting = @"";
				colvarIdLoaiBg.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdLoaiBg);
				
				TableSchema.TableColumn colvarMaLoaiBg = new TableSchema.TableColumn(schema);
				colvarMaLoaiBg.ColumnName = "MA_LOAI_BG";
				colvarMaLoaiBg.DataType = DbType.String;
				colvarMaLoaiBg.MaxLength = 50;
				colvarMaLoaiBg.AutoIncrement = false;
				colvarMaLoaiBg.IsNullable = true;
				colvarMaLoaiBg.IsPrimaryKey = false;
				colvarMaLoaiBg.IsForeignKey = false;
				colvarMaLoaiBg.IsReadOnly = false;
				colvarMaLoaiBg.DefaultSetting = @"";
				colvarMaLoaiBg.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLoaiBg);
				
				TableSchema.TableColumn colvarTenLoaiBg = new TableSchema.TableColumn(schema);
				colvarTenLoaiBg.ColumnName = "TEN_LOAI_BG";
				colvarTenLoaiBg.DataType = DbType.String;
				colvarTenLoaiBg.MaxLength = 200;
				colvarTenLoaiBg.AutoIncrement = false;
				colvarTenLoaiBg.IsNullable = true;
				colvarTenLoaiBg.IsPrimaryKey = false;
				colvarTenLoaiBg.IsForeignKey = false;
				colvarTenLoaiBg.IsReadOnly = false;
				colvarTenLoaiBg.DefaultSetting = @"";
				colvarTenLoaiBg.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenLoaiBg);
				
				TableSchema.TableColumn colvarThuTu = new TableSchema.TableColumn(schema);
				colvarThuTu.ColumnName = "THU_TU";
				colvarThuTu.DataType = DbType.Int16;
				colvarThuTu.MaxLength = 0;
				colvarThuTu.AutoIncrement = false;
				colvarThuTu.IsNullable = true;
				colvarThuTu.IsPrimaryKey = false;
				colvarThuTu.IsForeignKey = false;
				colvarThuTu.IsReadOnly = false;
				colvarThuTu.DefaultSetting = @"";
				colvarThuTu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThuTu);
				
				TableSchema.TableColumn colvarKieuThue = new TableSchema.TableColumn(schema);
				colvarKieuThue.ColumnName = "KIEU_THUE";
				colvarKieuThue.DataType = DbType.String;
				colvarKieuThue.MaxLength = 50;
				colvarKieuThue.AutoIncrement = false;
				colvarKieuThue.IsNullable = true;
				colvarKieuThue.IsPrimaryKey = false;
				colvarKieuThue.IsForeignKey = false;
				colvarKieuThue.IsReadOnly = false;
				colvarKieuThue.DefaultSetting = @"";
				colvarKieuThue.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuThue);
				
				TableSchema.TableColumn colvarDonGia = new TableSchema.TableColumn(schema);
				colvarDonGia.ColumnName = "DON_GIA";
				colvarDonGia.DataType = DbType.Decimal;
				colvarDonGia.MaxLength = 0;
				colvarDonGia.AutoIncrement = false;
				colvarDonGia.IsNullable = true;
				colvarDonGia.IsPrimaryKey = false;
				colvarDonGia.IsForeignKey = false;
				colvarDonGia.IsReadOnly = false;
				colvarDonGia.DefaultSetting = @"";
				colvarDonGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGia);
				
				TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
				colvarGhiChu.ColumnName = "GHI_CHU";
				colvarGhiChu.DataType = DbType.String;
				colvarGhiChu.MaxLength = 255;
				colvarGhiChu.AutoIncrement = false;
				colvarGhiChu.IsNullable = true;
				colvarGhiChu.IsPrimaryKey = false;
				colvarGhiChu.IsForeignKey = false;
				colvarGhiChu.IsReadOnly = false;
				colvarGhiChu.DefaultSetting = @"";
				colvarGhiChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChu);
				
				TableSchema.TableColumn colvarMaDtuong = new TableSchema.TableColumn(schema);
				colvarMaDtuong.ColumnName = "MA_DTUONG";
				colvarMaDtuong.DataType = DbType.String;
				colvarMaDtuong.MaxLength = 50;
				colvarMaDtuong.AutoIncrement = false;
				colvarMaDtuong.IsNullable = true;
				colvarMaDtuong.IsPrimaryKey = false;
				colvarMaDtuong.IsForeignKey = false;
				colvarMaDtuong.IsReadOnly = false;
				colvarMaDtuong.DefaultSetting = @"";
				colvarMaDtuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDtuong);
				
				TableSchema.TableColumn colvarHienThi = new TableSchema.TableColumn(schema);
				colvarHienThi.ColumnName = "HIEN_THI";
				colvarHienThi.DataType = DbType.Byte;
				colvarHienThi.MaxLength = 0;
				colvarHienThi.AutoIncrement = false;
				colvarHienThi.IsNullable = true;
				colvarHienThi.IsPrimaryKey = false;
				colvarHienThi.IsForeignKey = false;
				colvarHienThi.IsReadOnly = false;
				
						colvarHienThi.DefaultSetting = @"((0))";
				colvarHienThi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHienThi);
				
				TableSchema.TableColumn colvarTenHienThi = new TableSchema.TableColumn(schema);
				colvarTenHienThi.ColumnName = "TEN_HIEN_THI";
				colvarTenHienThi.DataType = DbType.String;
				colvarTenHienThi.MaxLength = 200;
				colvarTenHienThi.AutoIncrement = false;
				colvarTenHienThi.IsNullable = true;
				colvarTenHienThi.IsPrimaryKey = false;
				colvarTenHienThi.IsForeignKey = false;
				colvarTenHienThi.IsReadOnly = false;
				colvarTenHienThi.DefaultSetting = @"";
				colvarTenHienThi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenHienThi);
				
				TableSchema.TableColumn colvarPhuThuNgoaigoi = new TableSchema.TableColumn(schema);
				colvarPhuThuNgoaigoi.ColumnName = "PHU_THU_NGOAIGOI";
				colvarPhuThuNgoaigoi.DataType = DbType.Decimal;
				colvarPhuThuNgoaigoi.MaxLength = 0;
				colvarPhuThuNgoaigoi.AutoIncrement = false;
				colvarPhuThuNgoaigoi.IsNullable = true;
				colvarPhuThuNgoaigoi.IsPrimaryKey = false;
				colvarPhuThuNgoaigoi.IsForeignKey = false;
				colvarPhuThuNgoaigoi.IsReadOnly = false;
				colvarPhuThuNgoaigoi.DefaultSetting = @"";
				colvarPhuThuNgoaigoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhuThuNgoaigoi);
				
				TableSchema.TableColumn colvarPhuThuTrongGoi = new TableSchema.TableColumn(schema);
				colvarPhuThuTrongGoi.ColumnName = "PHU_THU_TRONG_GOI";
				colvarPhuThuTrongGoi.DataType = DbType.Decimal;
				colvarPhuThuTrongGoi.MaxLength = 0;
				colvarPhuThuTrongGoi.AutoIncrement = false;
				colvarPhuThuTrongGoi.IsNullable = true;
				colvarPhuThuTrongGoi.IsPrimaryKey = false;
				colvarPhuThuTrongGoi.IsForeignKey = false;
				colvarPhuThuTrongGoi.IsReadOnly = false;
				colvarPhuThuTrongGoi.DefaultSetting = @"";
				colvarPhuThuTrongGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhuThuTrongGoi);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("L_LOAI_BG",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdLoaiBg")]
		[Bindable(true)]
		public int IdLoaiBg 
		{
			get { return GetColumnValue<int>(Columns.IdLoaiBg); }
			set { SetColumnValue(Columns.IdLoaiBg, value); }
		}
		  
		[XmlAttribute("MaLoaiBg")]
		[Bindable(true)]
		public string MaLoaiBg 
		{
			get { return GetColumnValue<string>(Columns.MaLoaiBg); }
			set { SetColumnValue(Columns.MaLoaiBg, value); }
		}
		  
		[XmlAttribute("TenLoaiBg")]
		[Bindable(true)]
		public string TenLoaiBg 
		{
			get { return GetColumnValue<string>(Columns.TenLoaiBg); }
			set { SetColumnValue(Columns.TenLoaiBg, value); }
		}
		  
		[XmlAttribute("ThuTu")]
		[Bindable(true)]
		public short? ThuTu 
		{
			get { return GetColumnValue<short?>(Columns.ThuTu); }
			set { SetColumnValue(Columns.ThuTu, value); }
		}
		  
		[XmlAttribute("KieuThue")]
		[Bindable(true)]
		public string KieuThue 
		{
			get { return GetColumnValue<string>(Columns.KieuThue); }
			set { SetColumnValue(Columns.KieuThue, value); }
		}
		  
		[XmlAttribute("DonGia")]
		[Bindable(true)]
		public decimal? DonGia 
		{
			get { return GetColumnValue<decimal?>(Columns.DonGia); }
			set { SetColumnValue(Columns.DonGia, value); }
		}
		  
		[XmlAttribute("GhiChu")]
		[Bindable(true)]
		public string GhiChu 
		{
			get { return GetColumnValue<string>(Columns.GhiChu); }
			set { SetColumnValue(Columns.GhiChu, value); }
		}
		  
		[XmlAttribute("MaDtuong")]
		[Bindable(true)]
		public string MaDtuong 
		{
			get { return GetColumnValue<string>(Columns.MaDtuong); }
			set { SetColumnValue(Columns.MaDtuong, value); }
		}
		  
		[XmlAttribute("HienThi")]
		[Bindable(true)]
		public byte? HienThi 
		{
			get { return GetColumnValue<byte?>(Columns.HienThi); }
			set { SetColumnValue(Columns.HienThi, value); }
		}
		  
		[XmlAttribute("TenHienThi")]
		[Bindable(true)]
		public string TenHienThi 
		{
			get { return GetColumnValue<string>(Columns.TenHienThi); }
			set { SetColumnValue(Columns.TenHienThi, value); }
		}
		  
		[XmlAttribute("PhuThuNgoaigoi")]
		[Bindable(true)]
		public decimal? PhuThuNgoaigoi 
		{
			get { return GetColumnValue<decimal?>(Columns.PhuThuNgoaigoi); }
			set { SetColumnValue(Columns.PhuThuNgoaigoi, value); }
		}
		  
		[XmlAttribute("PhuThuTrongGoi")]
		[Bindable(true)]
		public decimal? PhuThuTrongGoi 
		{
			get { return GetColumnValue<decimal?>(Columns.PhuThuTrongGoi); }
			set { SetColumnValue(Columns.PhuThuTrongGoi, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaLoaiBg,string varTenLoaiBg,short? varThuTu,string varKieuThue,decimal? varDonGia,string varGhiChu,string varMaDtuong,byte? varHienThi,string varTenHienThi,decimal? varPhuThuNgoaigoi,decimal? varPhuThuTrongGoi)
		{
			LLoaiBg item = new LLoaiBg();
			
			item.MaLoaiBg = varMaLoaiBg;
			
			item.TenLoaiBg = varTenLoaiBg;
			
			item.ThuTu = varThuTu;
			
			item.KieuThue = varKieuThue;
			
			item.DonGia = varDonGia;
			
			item.GhiChu = varGhiChu;
			
			item.MaDtuong = varMaDtuong;
			
			item.HienThi = varHienThi;
			
			item.TenHienThi = varTenHienThi;
			
			item.PhuThuNgoaigoi = varPhuThuNgoaigoi;
			
			item.PhuThuTrongGoi = varPhuThuTrongGoi;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdLoaiBg,string varMaLoaiBg,string varTenLoaiBg,short? varThuTu,string varKieuThue,decimal? varDonGia,string varGhiChu,string varMaDtuong,byte? varHienThi,string varTenHienThi,decimal? varPhuThuNgoaigoi,decimal? varPhuThuTrongGoi)
		{
			LLoaiBg item = new LLoaiBg();
			
				item.IdLoaiBg = varIdLoaiBg;
			
				item.MaLoaiBg = varMaLoaiBg;
			
				item.TenLoaiBg = varTenLoaiBg;
			
				item.ThuTu = varThuTu;
			
				item.KieuThue = varKieuThue;
			
				item.DonGia = varDonGia;
			
				item.GhiChu = varGhiChu;
			
				item.MaDtuong = varMaDtuong;
			
				item.HienThi = varHienThi;
			
				item.TenHienThi = varTenHienThi;
			
				item.PhuThuNgoaigoi = varPhuThuNgoaigoi;
			
				item.PhuThuTrongGoi = varPhuThuTrongGoi;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdLoaiBgColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLoaiBgColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TenLoaiBgColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn ThuTuColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuThueColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDtuongColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn HienThiColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn TenHienThiColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn PhuThuNgoaigoiColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn PhuThuTrongGoiColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdLoaiBg = @"ID_LOAI_BG";
			 public static string MaLoaiBg = @"MA_LOAI_BG";
			 public static string TenLoaiBg = @"TEN_LOAI_BG";
			 public static string ThuTu = @"THU_TU";
			 public static string KieuThue = @"KIEU_THUE";
			 public static string DonGia = @"DON_GIA";
			 public static string GhiChu = @"GHI_CHU";
			 public static string MaDtuong = @"MA_DTUONG";
			 public static string HienThi = @"HIEN_THI";
			 public static string TenHienThi = @"TEN_HIEN_THI";
			 public static string PhuThuNgoaigoi = @"PHU_THU_NGOAIGOI";
			 public static string PhuThuTrongGoi = @"PHU_THU_TRONG_GOI";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
