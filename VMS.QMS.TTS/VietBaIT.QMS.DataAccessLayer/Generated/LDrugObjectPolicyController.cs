using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for L_Drug_Object_Policies
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class LDrugObjectPolicyController
    {
        // Preload our schema..
        LDrugObjectPolicy thisSchemaLoad = new LDrugObjectPolicy();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public LDrugObjectPolicyCollection FetchAll()
        {
            LDrugObjectPolicyCollection coll = new LDrugObjectPolicyCollection();
            Query qry = new Query(LDrugObjectPolicy.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public LDrugObjectPolicyCollection FetchByID(object DrugId)
        {
            LDrugObjectPolicyCollection coll = new LDrugObjectPolicyCollection().Where("Drug_ID", DrugId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public LDrugObjectPolicyCollection FetchByQuery(Query qry)
        {
            LDrugObjectPolicyCollection coll = new LDrugObjectPolicyCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object DrugId)
        {
            return (LDrugObjectPolicy.Delete(DrugId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object DrugId)
        {
            return (LDrugObjectPolicy.Destroy(DrugId) == 1);
        }
        
        
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(int DrugId,int ObjectTypeType,string ObjectTypeCode,string MaKhoaThien)
        {
            Query qry = new Query(LDrugObjectPolicy.Schema);
            qry.QueryType = QueryType.Delete;
            qry.AddWhere("DrugId", DrugId).AND("ObjectTypeType", ObjectTypeType).AND("ObjectTypeCode", ObjectTypeCode).AND("MaKhoaThien", MaKhoaThien);
            qry.Execute();
            return (true);
        }        
       
    	
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int DrugId,int? ObjectTypeId,string DiscountType,decimal DiscountRate,decimal OriginalPrice,decimal LastPrice,decimal? Surcharge,int ObjectTypeType,decimal? PhuThuTraiTuyen,string ObjectTypeCode,string NguoiTao,DateTime? NgayTao,string NguoiSua,string NgaySua,string MaKhoaThien)
	    {
		    LDrugObjectPolicy item = new LDrugObjectPolicy();
		    
            item.DrugId = DrugId;
            
            item.ObjectTypeId = ObjectTypeId;
            
            item.DiscountType = DiscountType;
            
            item.DiscountRate = DiscountRate;
            
            item.OriginalPrice = OriginalPrice;
            
            item.LastPrice = LastPrice;
            
            item.Surcharge = Surcharge;
            
            item.ObjectTypeType = ObjectTypeType;
            
            item.PhuThuTraiTuyen = PhuThuTraiTuyen;
            
            item.ObjectTypeCode = ObjectTypeCode;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NgaySua = NgaySua;
            
            item.MaKhoaThien = MaKhoaThien;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int DrugId,int? ObjectTypeId,string DiscountType,decimal DiscountRate,decimal OriginalPrice,decimal LastPrice,decimal? Surcharge,int ObjectTypeType,decimal? PhuThuTraiTuyen,string ObjectTypeCode,string NguoiTao,DateTime? NgayTao,string NguoiSua,string NgaySua,string MaKhoaThien)
	    {
		    LDrugObjectPolicy item = new LDrugObjectPolicy();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.DrugId = DrugId;
				
			item.ObjectTypeId = ObjectTypeId;
				
			item.DiscountType = DiscountType;
				
			item.DiscountRate = DiscountRate;
				
			item.OriginalPrice = OriginalPrice;
				
			item.LastPrice = LastPrice;
				
			item.Surcharge = Surcharge;
				
			item.ObjectTypeType = ObjectTypeType;
				
			item.PhuThuTraiTuyen = PhuThuTraiTuyen;
				
			item.ObjectTypeCode = ObjectTypeCode;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NgaySua = NgaySua;
				
			item.MaKhoaThien = MaKhoaThien;
				
	        item.Save(UserName);
	    }
    }
}
