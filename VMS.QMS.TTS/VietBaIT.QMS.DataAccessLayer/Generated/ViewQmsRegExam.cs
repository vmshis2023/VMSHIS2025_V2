using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewQmsRegExam class.
    /// </summary>
    [Serializable]
    public partial class ViewQmsRegExamCollection : ReadOnlyList<ViewQmsRegExam, ViewQmsRegExamCollection>
    {        
        public ViewQmsRegExamCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the View_QMS_RegExam view.
    /// </summary>
    [Serializable]
    public partial class ViewQmsRegExam : ReadOnlyRecord<ViewQmsRegExam>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("View_QMS_RegExam", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarRegId = new TableSchema.TableColumn(schema);
                colvarRegId.ColumnName = "Reg_ID";
                colvarRegId.DataType = DbType.Int64;
                colvarRegId.MaxLength = 0;
                colvarRegId.AutoIncrement = false;
                colvarRegId.IsNullable = false;
                colvarRegId.IsPrimaryKey = false;
                colvarRegId.IsForeignKey = false;
                colvarRegId.IsReadOnly = false;
                
                schema.Columns.Add(colvarRegId);
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Int64;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = true;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_Code";
                colvarPatientCode.DataType = DbType.AnsiString;
                colvarPatientCode.MaxLength = 10;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = true;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarRegDate = new TableSchema.TableColumn(schema);
                colvarRegDate.ColumnName = "Reg_Date";
                colvarRegDate.DataType = DbType.DateTime;
                colvarRegDate.MaxLength = 0;
                colvarRegDate.AutoIncrement = false;
                colvarRegDate.IsNullable = true;
                colvarRegDate.IsPrimaryKey = false;
                colvarRegDate.IsForeignKey = false;
                colvarRegDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarRegDate);
                
                TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
                colvarDepartmentId.ColumnName = "Department_ID";
                colvarDepartmentId.DataType = DbType.Int16;
                colvarDepartmentId.MaxLength = 0;
                colvarDepartmentId.AutoIncrement = false;
                colvarDepartmentId.IsNullable = true;
                colvarDepartmentId.IsPrimaryKey = false;
                colvarDepartmentId.IsForeignKey = false;
                colvarDepartmentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepartmentId);
                
                TableSchema.TableColumn colvarSoKham = new TableSchema.TableColumn(schema);
                colvarSoKham.ColumnName = "So_Kham";
                colvarSoKham.DataType = DbType.Int16;
                colvarSoKham.MaxLength = 0;
                colvarSoKham.AutoIncrement = false;
                colvarSoKham.IsNullable = true;
                colvarSoKham.IsPrimaryKey = false;
                colvarSoKham.IsForeignKey = false;
                colvarSoKham.IsReadOnly = false;
                
                schema.Columns.Add(colvarSoKham);
                
                TableSchema.TableColumn colvarMaPhongStt = new TableSchema.TableColumn(schema);
                colvarMaPhongStt.ColumnName = "MA_PHONG_STT";
                colvarMaPhongStt.DataType = DbType.String;
                colvarMaPhongStt.MaxLength = 20;
                colvarMaPhongStt.AutoIncrement = false;
                colvarMaPhongStt.IsNullable = true;
                colvarMaPhongStt.IsPrimaryKey = false;
                colvarMaPhongStt.IsForeignKey = false;
                colvarMaPhongStt.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaPhongStt);
                
                TableSchema.TableColumn colvarMaKhoaThien = new TableSchema.TableColumn(schema);
                colvarMaKhoaThien.ColumnName = "MA_KHOA_THIEN";
                colvarMaKhoaThien.DataType = DbType.String;
                colvarMaKhoaThien.MaxLength = 10;
                colvarMaKhoaThien.AutoIncrement = false;
                colvarMaKhoaThien.IsNullable = true;
                colvarMaKhoaThien.IsPrimaryKey = false;
                colvarMaKhoaThien.IsForeignKey = false;
                colvarMaKhoaThien.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaKhoaThien);
                
                TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
                colvarStatus.ColumnName = "Status";
                colvarStatus.DataType = DbType.Byte;
                colvarStatus.MaxLength = 0;
                colvarStatus.AutoIncrement = false;
                colvarStatus.IsNullable = true;
                colvarStatus.IsPrimaryKey = false;
                colvarStatus.IsForeignKey = false;
                colvarStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarStatus);
                
                TableSchema.TableColumn colvarExamId = new TableSchema.TableColumn(schema);
                colvarExamId.ColumnName = "Exam_ID";
                colvarExamId.DataType = DbType.Int32;
                colvarExamId.MaxLength = 0;
                colvarExamId.AutoIncrement = false;
                colvarExamId.IsNullable = true;
                colvarExamId.IsPrimaryKey = false;
                colvarExamId.IsForeignKey = false;
                colvarExamId.IsReadOnly = false;
                
                schema.Columns.Add(colvarExamId);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("View_QMS_RegExam",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewQmsRegExam()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewQmsRegExam(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewQmsRegExam(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewQmsRegExam(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("RegId")]
        [Bindable(true)]
        public long RegId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Reg_ID");
		    }
            set 
		    {
			    SetColumnValue("Reg_ID", value);
            }
        }
	      
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public long? PatientId 
	    {
		    get
		    {
			    return GetColumnValue<long?>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Code");
		    }
            set 
		    {
			    SetColumnValue("Patient_Code", value);
            }
        }
	      
        [XmlAttribute("RegDate")]
        [Bindable(true)]
        public DateTime? RegDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Reg_Date");
		    }
            set 
		    {
			    SetColumnValue("Reg_Date", value);
            }
        }
	      
        [XmlAttribute("DepartmentId")]
        [Bindable(true)]
        public short? DepartmentId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Department_ID");
		    }
            set 
		    {
			    SetColumnValue("Department_ID", value);
            }
        }
	      
        [XmlAttribute("SoKham")]
        [Bindable(true)]
        public short? SoKham 
	    {
		    get
		    {
			    return GetColumnValue<short?>("So_Kham");
		    }
            set 
		    {
			    SetColumnValue("So_Kham", value);
            }
        }
	      
        [XmlAttribute("MaPhongStt")]
        [Bindable(true)]
        public string MaPhongStt 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_PHONG_STT");
		    }
            set 
		    {
			    SetColumnValue("MA_PHONG_STT", value);
            }
        }
	      
        [XmlAttribute("MaKhoaThien")]
        [Bindable(true)]
        public string MaKhoaThien 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_KHOA_THIEN");
		    }
            set 
		    {
			    SetColumnValue("MA_KHOA_THIEN", value);
            }
        }
	      
        [XmlAttribute("Status")]
        [Bindable(true)]
        public byte? Status 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Status");
		    }
            set 
		    {
			    SetColumnValue("Status", value);
            }
        }
	      
        [XmlAttribute("ExamId")]
        [Bindable(true)]
        public int? ExamId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Exam_ID");
		    }
            set 
		    {
			    SetColumnValue("Exam_ID", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string RegId = @"Reg_ID";
            
            public static string PatientId = @"Patient_ID";
            
            public static string PatientCode = @"Patient_Code";
            
            public static string RegDate = @"Reg_Date";
            
            public static string DepartmentId = @"Department_ID";
            
            public static string SoKham = @"So_Kham";
            
            public static string MaPhongStt = @"MA_PHONG_STT";
            
            public static string MaKhoaThien = @"MA_KHOA_THIEN";
            
            public static string Status = @"Status";
            
            public static string ExamId = @"Exam_ID";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
