using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for L_HOADON_LOG
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class LHoadonLogController
    {
        // Preload our schema..
        LHoadonLog thisSchemaLoad = new LHoadonLog();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public LHoadonLogCollection FetchAll()
        {
            LHoadonLogCollection coll = new LHoadonLogCollection();
            Query qry = new Query(LHoadonLog.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public LHoadonLogCollection FetchByID(object HdonLogId)
        {
            LHoadonLogCollection coll = new LHoadonLogCollection().Where("HDON_LOG_ID", HdonLogId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public LHoadonLogCollection FetchByQuery(Query qry)
        {
            LHoadonLogCollection coll = new LHoadonLogCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object HdonLogId)
        {
            return (LHoadonLog.Delete(HdonLogId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object HdonLogId)
        {
            return (LHoadonLog.Destroy(HdonLogId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(decimal CapphatId,decimal PaymentId,decimal TongTien,long PatientId,string PatientCode,string MauHdon,string KiHieu,string MaQuyen,string Serie,string MaNvien,string MaLdo,DateTime NgayIn,string IpAddress,string MacAddress,short TrangThai)
	    {
		    LHoadonLog item = new LHoadonLog();
		    
            item.CapphatId = CapphatId;
            
            item.PaymentId = PaymentId;
            
            item.TongTien = TongTien;
            
            item.PatientId = PatientId;
            
            item.PatientCode = PatientCode;
            
            item.MauHdon = MauHdon;
            
            item.KiHieu = KiHieu;
            
            item.MaQuyen = MaQuyen;
            
            item.Serie = Serie;
            
            item.MaNvien = MaNvien;
            
            item.MaLdo = MaLdo;
            
            item.NgayIn = NgayIn;
            
            item.IpAddress = IpAddress;
            
            item.MacAddress = MacAddress;
            
            item.TrangThai = TrangThai;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(decimal HdonLogId,decimal CapphatId,decimal PaymentId,decimal TongTien,long PatientId,string PatientCode,string MauHdon,string KiHieu,string MaQuyen,string Serie,string MaNvien,string MaLdo,DateTime NgayIn,string IpAddress,string MacAddress,short TrangThai)
	    {
		    LHoadonLog item = new LHoadonLog();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.HdonLogId = HdonLogId;
				
			item.CapphatId = CapphatId;
				
			item.PaymentId = PaymentId;
				
			item.TongTien = TongTien;
				
			item.PatientId = PatientId;
				
			item.PatientCode = PatientCode;
				
			item.MauHdon = MauHdon;
				
			item.KiHieu = KiHieu;
				
			item.MaQuyen = MaQuyen;
				
			item.Serie = Serie;
				
			item.MaNvien = MaNvien;
				
			item.MaLdo = MaLdo;
				
			item.NgayIn = NgayIn;
				
			item.IpAddress = IpAddress;
				
			item.MacAddress = MacAddress;
				
			item.TrangThai = TrangThai;
				
	        item.Save(UserName);
	    }
    }
}
