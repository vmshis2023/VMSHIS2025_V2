using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the LHoadonCapphat class.
	/// </summary>
    [Serializable]
	public partial class LHoadonCapphatCollection : ActiveList<LHoadonCapphat, LHoadonCapphatCollection>
	{	   
		public LHoadonCapphatCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>LHoadonCapphatCollection</returns>
		public LHoadonCapphatCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                LHoadonCapphat o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the L_HOADON_CAPPHAT table.
	/// </summary>
	[Serializable]
	public partial class LHoadonCapphat : ActiveRecord<LHoadonCapphat>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public LHoadonCapphat()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public LHoadonCapphat(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public LHoadonCapphat(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public LHoadonCapphat(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("L_HOADON_CAPPHAT", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarHdonId = new TableSchema.TableColumn(schema);
				colvarHdonId.ColumnName = "HDON_ID";
				colvarHdonId.DataType = DbType.Decimal;
				colvarHdonId.MaxLength = 0;
				colvarHdonId.AutoIncrement = true;
				colvarHdonId.IsNullable = false;
				colvarHdonId.IsPrimaryKey = true;
				colvarHdonId.IsForeignKey = false;
				colvarHdonId.IsReadOnly = false;
				colvarHdonId.DefaultSetting = @"";
				colvarHdonId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHdonId);
				
				TableSchema.TableColumn colvarHdonMauId = new TableSchema.TableColumn(schema);
				colvarHdonMauId.ColumnName = "HDON_MAU_ID";
				colvarHdonMauId.DataType = DbType.Decimal;
				colvarHdonMauId.MaxLength = 0;
				colvarHdonMauId.AutoIncrement = false;
				colvarHdonMauId.IsNullable = false;
				colvarHdonMauId.IsPrimaryKey = false;
				colvarHdonMauId.IsForeignKey = false;
				colvarHdonMauId.IsReadOnly = false;
				colvarHdonMauId.DefaultSetting = @"";
				colvarHdonMauId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHdonMauId);
				
				TableSchema.TableColumn colvarMaNvien = new TableSchema.TableColumn(schema);
				colvarMaNvien.ColumnName = "MA_NVIEN";
				colvarMaNvien.DataType = DbType.String;
				colvarMaNvien.MaxLength = 30;
				colvarMaNvien.AutoIncrement = false;
				colvarMaNvien.IsNullable = false;
				colvarMaNvien.IsPrimaryKey = false;
				colvarMaNvien.IsForeignKey = false;
				colvarMaNvien.IsReadOnly = false;
				colvarMaNvien.DefaultSetting = @"";
				colvarMaNvien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNvien);
				
				TableSchema.TableColumn colvarMauHdon = new TableSchema.TableColumn(schema);
				colvarMauHdon.ColumnName = "MAU_HDON";
				colvarMauHdon.DataType = DbType.String;
				colvarMauHdon.MaxLength = 15;
				colvarMauHdon.AutoIncrement = false;
				colvarMauHdon.IsNullable = false;
				colvarMauHdon.IsPrimaryKey = false;
				colvarMauHdon.IsForeignKey = false;
				colvarMauHdon.IsReadOnly = false;
				colvarMauHdon.DefaultSetting = @"";
				colvarMauHdon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMauHdon);
				
				TableSchema.TableColumn colvarKiHieu = new TableSchema.TableColumn(schema);
				colvarKiHieu.ColumnName = "KI_HIEU";
				colvarKiHieu.DataType = DbType.String;
				colvarKiHieu.MaxLength = 10;
				colvarKiHieu.AutoIncrement = false;
				colvarKiHieu.IsNullable = false;
				colvarKiHieu.IsPrimaryKey = false;
				colvarKiHieu.IsForeignKey = false;
				colvarKiHieu.IsReadOnly = false;
				colvarKiHieu.DefaultSetting = @"";
				colvarKiHieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKiHieu);
				
				TableSchema.TableColumn colvarMaQuyen = new TableSchema.TableColumn(schema);
				colvarMaQuyen.ColumnName = "MA_QUYEN";
				colvarMaQuyen.DataType = DbType.String;
				colvarMaQuyen.MaxLength = 15;
				colvarMaQuyen.AutoIncrement = false;
				colvarMaQuyen.IsNullable = false;
				colvarMaQuyen.IsPrimaryKey = false;
				colvarMaQuyen.IsForeignKey = false;
				colvarMaQuyen.IsReadOnly = false;
				colvarMaQuyen.DefaultSetting = @"";
				colvarMaQuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaQuyen);
				
				TableSchema.TableColumn colvarSerieDau = new TableSchema.TableColumn(schema);
				colvarSerieDau.ColumnName = "SERIE_DAU";
				colvarSerieDau.DataType = DbType.String;
				colvarSerieDau.MaxLength = 10;
				colvarSerieDau.AutoIncrement = false;
				colvarSerieDau.IsNullable = false;
				colvarSerieDau.IsPrimaryKey = false;
				colvarSerieDau.IsForeignKey = false;
				colvarSerieDau.IsReadOnly = false;
				colvarSerieDau.DefaultSetting = @"";
				colvarSerieDau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSerieDau);
				
				TableSchema.TableColumn colvarSerieCuoi = new TableSchema.TableColumn(schema);
				colvarSerieCuoi.ColumnName = "SERIE_CUOI";
				colvarSerieCuoi.DataType = DbType.String;
				colvarSerieCuoi.MaxLength = 10;
				colvarSerieCuoi.AutoIncrement = false;
				colvarSerieCuoi.IsNullable = false;
				colvarSerieCuoi.IsPrimaryKey = false;
				colvarSerieCuoi.IsForeignKey = false;
				colvarSerieCuoi.IsReadOnly = false;
				colvarSerieCuoi.DefaultSetting = @"";
				colvarSerieCuoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSerieCuoi);
				
				TableSchema.TableColumn colvarSerieHtai = new TableSchema.TableColumn(schema);
				colvarSerieHtai.ColumnName = "SERIE_HTAI";
				colvarSerieHtai.DataType = DbType.String;
				colvarSerieHtai.MaxLength = 10;
				colvarSerieHtai.AutoIncrement = false;
				colvarSerieHtai.IsNullable = false;
				colvarSerieHtai.IsPrimaryKey = false;
				colvarSerieHtai.IsForeignKey = false;
				colvarSerieHtai.IsReadOnly = false;
				colvarSerieHtai.DefaultSetting = @"";
				colvarSerieHtai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSerieHtai);
				
				TableSchema.TableColumn colvarNgayCapphat = new TableSchema.TableColumn(schema);
				colvarNgayCapphat.ColumnName = "NGAY_CAPPHAT";
				colvarNgayCapphat.DataType = DbType.DateTime;
				colvarNgayCapphat.MaxLength = 0;
				colvarNgayCapphat.AutoIncrement = false;
				colvarNgayCapphat.IsNullable = false;
				colvarNgayCapphat.IsPrimaryKey = false;
				colvarNgayCapphat.IsForeignKey = false;
				colvarNgayCapphat.IsReadOnly = false;
				colvarNgayCapphat.DefaultSetting = @"";
				colvarNgayCapphat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayCapphat);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "TRANG_THAI";
				colvarTrangThai.DataType = DbType.Int16;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = false;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				colvarTrangThai.DefaultSetting = @"";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("L_HOADON_CAPPHAT",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("HdonId")]
		[Bindable(true)]
		public decimal HdonId 
		{
			get { return GetColumnValue<decimal>(Columns.HdonId); }
			set { SetColumnValue(Columns.HdonId, value); }
		}
		  
		[XmlAttribute("HdonMauId")]
		[Bindable(true)]
		public decimal HdonMauId 
		{
			get { return GetColumnValue<decimal>(Columns.HdonMauId); }
			set { SetColumnValue(Columns.HdonMauId, value); }
		}
		  
		[XmlAttribute("MaNvien")]
		[Bindable(true)]
		public string MaNvien 
		{
			get { return GetColumnValue<string>(Columns.MaNvien); }
			set { SetColumnValue(Columns.MaNvien, value); }
		}
		  
		[XmlAttribute("MauHdon")]
		[Bindable(true)]
		public string MauHdon 
		{
			get { return GetColumnValue<string>(Columns.MauHdon); }
			set { SetColumnValue(Columns.MauHdon, value); }
		}
		  
		[XmlAttribute("KiHieu")]
		[Bindable(true)]
		public string KiHieu 
		{
			get { return GetColumnValue<string>(Columns.KiHieu); }
			set { SetColumnValue(Columns.KiHieu, value); }
		}
		  
		[XmlAttribute("MaQuyen")]
		[Bindable(true)]
		public string MaQuyen 
		{
			get { return GetColumnValue<string>(Columns.MaQuyen); }
			set { SetColumnValue(Columns.MaQuyen, value); }
		}
		  
		[XmlAttribute("SerieDau")]
		[Bindable(true)]
		public string SerieDau 
		{
			get { return GetColumnValue<string>(Columns.SerieDau); }
			set { SetColumnValue(Columns.SerieDau, value); }
		}
		  
		[XmlAttribute("SerieCuoi")]
		[Bindable(true)]
		public string SerieCuoi 
		{
			get { return GetColumnValue<string>(Columns.SerieCuoi); }
			set { SetColumnValue(Columns.SerieCuoi, value); }
		}
		  
		[XmlAttribute("SerieHtai")]
		[Bindable(true)]
		public string SerieHtai 
		{
			get { return GetColumnValue<string>(Columns.SerieHtai); }
			set { SetColumnValue(Columns.SerieHtai, value); }
		}
		  
		[XmlAttribute("NgayCapphat")]
		[Bindable(true)]
		public DateTime NgayCapphat 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayCapphat); }
			set { SetColumnValue(Columns.NgayCapphat, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public short TrangThai 
		{
			get { return GetColumnValue<short>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(decimal varHdonMauId,string varMaNvien,string varMauHdon,string varKiHieu,string varMaQuyen,string varSerieDau,string varSerieCuoi,string varSerieHtai,DateTime varNgayCapphat,short varTrangThai)
		{
			LHoadonCapphat item = new LHoadonCapphat();
			
			item.HdonMauId = varHdonMauId;
			
			item.MaNvien = varMaNvien;
			
			item.MauHdon = varMauHdon;
			
			item.KiHieu = varKiHieu;
			
			item.MaQuyen = varMaQuyen;
			
			item.SerieDau = varSerieDau;
			
			item.SerieCuoi = varSerieCuoi;
			
			item.SerieHtai = varSerieHtai;
			
			item.NgayCapphat = varNgayCapphat;
			
			item.TrangThai = varTrangThai;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(decimal varHdonId,decimal varHdonMauId,string varMaNvien,string varMauHdon,string varKiHieu,string varMaQuyen,string varSerieDau,string varSerieCuoi,string varSerieHtai,DateTime varNgayCapphat,short varTrangThai)
		{
			LHoadonCapphat item = new LHoadonCapphat();
			
				item.HdonId = varHdonId;
			
				item.HdonMauId = varHdonMauId;
			
				item.MaNvien = varMaNvien;
			
				item.MauHdon = varMauHdon;
			
				item.KiHieu = varKiHieu;
			
				item.MaQuyen = varMaQuyen;
			
				item.SerieDau = varSerieDau;
			
				item.SerieCuoi = varSerieCuoi;
			
				item.SerieHtai = varSerieHtai;
			
				item.NgayCapphat = varNgayCapphat;
			
				item.TrangThai = varTrangThai;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn HdonIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn HdonMauIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNvienColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn MauHdonColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn KiHieuColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn MaQuyenColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn SerieDauColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn SerieCuoiColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn SerieHtaiColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayCapphatColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string HdonId = @"HDON_ID";
			 public static string HdonMauId = @"HDON_MAU_ID";
			 public static string MaNvien = @"MA_NVIEN";
			 public static string MauHdon = @"MAU_HDON";
			 public static string KiHieu = @"KI_HIEU";
			 public static string MaQuyen = @"MA_QUYEN";
			 public static string SerieDau = @"SERIE_DAU";
			 public static string SerieCuoi = @"SERIE_CUOI";
			 public static string SerieHtai = @"SERIE_HTAI";
			 public static string NgayCapphat = @"NGAY_CAPPHAT";
			 public static string TrangThai = @"TRANG_THAI";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
