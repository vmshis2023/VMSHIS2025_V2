using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the LThuVienChanDoan class.
	/// </summary>
    [Serializable]
	public partial class LThuVienChanDoanCollection : ActiveList<LThuVienChanDoan, LThuVienChanDoanCollection>
	{	   
		public LThuVienChanDoanCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>LThuVienChanDoanCollection</returns>
		public LThuVienChanDoanCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                LThuVienChanDoan o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the L_ThuVien_ChanDoan table.
	/// </summary>
	[Serializable]
	public partial class LThuVienChanDoan : ActiveRecord<LThuVienChanDoan>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public LThuVienChanDoan()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public LThuVienChanDoan(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public LThuVienChanDoan(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public LThuVienChanDoan(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("L_ThuVien_ChanDoan", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "ID";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarBenhChinh = new TableSchema.TableColumn(schema);
				colvarBenhChinh.ColumnName = "Benh_Chinh";
				colvarBenhChinh.DataType = DbType.String;
				colvarBenhChinh.MaxLength = 50;
				colvarBenhChinh.AutoIncrement = false;
				colvarBenhChinh.IsNullable = true;
				colvarBenhChinh.IsPrimaryKey = false;
				colvarBenhChinh.IsForeignKey = false;
				colvarBenhChinh.IsReadOnly = false;
				colvarBenhChinh.DefaultSetting = @"";
				colvarBenhChinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBenhChinh);
				
				TableSchema.TableColumn colvarBenhPhu = new TableSchema.TableColumn(schema);
				colvarBenhPhu.ColumnName = "Benh_Phu";
				colvarBenhPhu.DataType = DbType.String;
				colvarBenhPhu.MaxLength = 50;
				colvarBenhPhu.AutoIncrement = false;
				colvarBenhPhu.IsNullable = true;
				colvarBenhPhu.IsPrimaryKey = false;
				colvarBenhPhu.IsForeignKey = false;
				colvarBenhPhu.IsReadOnly = false;
				colvarBenhPhu.DefaultSetting = @"";
				colvarBenhPhu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBenhPhu);
				
				TableSchema.TableColumn colvarChanDoan = new TableSchema.TableColumn(schema);
				colvarChanDoan.ColumnName = "Chan_Doan";
				colvarChanDoan.DataType = DbType.String;
				colvarChanDoan.MaxLength = 50;
				colvarChanDoan.AutoIncrement = false;
				colvarChanDoan.IsNullable = true;
				colvarChanDoan.IsPrimaryKey = false;
				colvarChanDoan.IsForeignKey = false;
				colvarChanDoan.IsReadOnly = false;
				colvarChanDoan.DefaultSetting = @"";
				colvarChanDoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChanDoan);
				
				TableSchema.TableColumn colvarParentId = new TableSchema.TableColumn(schema);
				colvarParentId.ColumnName = "Parent_ID";
				colvarParentId.DataType = DbType.Int32;
				colvarParentId.MaxLength = 0;
				colvarParentId.AutoIncrement = false;
				colvarParentId.IsNullable = true;
				colvarParentId.IsPrimaryKey = false;
				colvarParentId.IsForeignKey = false;
				colvarParentId.IsReadOnly = false;
				colvarParentId.DefaultSetting = @"";
				colvarParentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarParentId);
				
				TableSchema.TableColumn colvarObjectTypeCode = new TableSchema.TableColumn(schema);
				colvarObjectTypeCode.ColumnName = "ObjectType_Code";
				colvarObjectTypeCode.DataType = DbType.String;
				colvarObjectTypeCode.MaxLength = 50;
				colvarObjectTypeCode.AutoIncrement = false;
				colvarObjectTypeCode.IsNullable = true;
				colvarObjectTypeCode.IsPrimaryKey = false;
				colvarObjectTypeCode.IsForeignKey = false;
				colvarObjectTypeCode.IsReadOnly = false;
				colvarObjectTypeCode.DefaultSetting = @"";
				colvarObjectTypeCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObjectTypeCode);
				
				TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
				colvarServiceId.ColumnName = "Service_ID";
				colvarServiceId.DataType = DbType.Int32;
				colvarServiceId.MaxLength = 0;
				colvarServiceId.AutoIncrement = false;
				colvarServiceId.IsNullable = true;
				colvarServiceId.IsPrimaryKey = false;
				colvarServiceId.IsForeignKey = false;
				colvarServiceId.IsReadOnly = false;
				colvarServiceId.DefaultSetting = @"";
				colvarServiceId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceId);
				
				TableSchema.TableColumn colvarServiceDetailId = new TableSchema.TableColumn(schema);
				colvarServiceDetailId.ColumnName = "ServiceDetail_ID";
				colvarServiceDetailId.DataType = DbType.Int32;
				colvarServiceDetailId.MaxLength = 0;
				colvarServiceDetailId.AutoIncrement = false;
				colvarServiceDetailId.IsNullable = true;
				colvarServiceDetailId.IsPrimaryKey = false;
				colvarServiceDetailId.IsForeignKey = false;
				colvarServiceDetailId.IsReadOnly = false;
				colvarServiceDetailId.DefaultSetting = @"";
				colvarServiceDetailId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceDetailId);
				
				TableSchema.TableColumn colvarStaffId = new TableSchema.TableColumn(schema);
				colvarStaffId.ColumnName = "Staff_ID";
				colvarStaffId.DataType = DbType.Int32;
				colvarStaffId.MaxLength = 0;
				colvarStaffId.AutoIncrement = false;
				colvarStaffId.IsNullable = true;
				colvarStaffId.IsPrimaryKey = false;
				colvarStaffId.IsForeignKey = false;
				colvarStaffId.IsReadOnly = false;
				colvarStaffId.DefaultSetting = @"";
				colvarStaffId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStaffId);
				
				TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
				colvarDepartmentId.ColumnName = "Department_ID";
				colvarDepartmentId.DataType = DbType.Int32;
				colvarDepartmentId.MaxLength = 0;
				colvarDepartmentId.AutoIncrement = false;
				colvarDepartmentId.IsNullable = true;
				colvarDepartmentId.IsPrimaryKey = false;
				colvarDepartmentId.IsForeignKey = false;
				colvarDepartmentId.IsReadOnly = false;
				colvarDepartmentId.DefaultSetting = @"";
				colvarDepartmentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDepartmentId);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "Nguoi_Tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "Ngay_Tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarKetLuan = new TableSchema.TableColumn(schema);
				colvarKetLuan.ColumnName = "Ket_Luan";
				colvarKetLuan.DataType = DbType.String;
				colvarKetLuan.MaxLength = 500;
				colvarKetLuan.AutoIncrement = false;
				colvarKetLuan.IsNullable = true;
				colvarKetLuan.IsPrimaryKey = false;
				colvarKetLuan.IsForeignKey = false;
				colvarKetLuan.IsReadOnly = false;
				colvarKetLuan.DefaultSetting = @"";
				colvarKetLuan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKetLuan);
				
				TableSchema.TableColumn colvarKieuCode = new TableSchema.TableColumn(schema);
				colvarKieuCode.ColumnName = "Kieu_Code";
				colvarKieuCode.DataType = DbType.String;
				colvarKieuCode.MaxLength = 50;
				colvarKieuCode.AutoIncrement = false;
				colvarKieuCode.IsNullable = true;
				colvarKieuCode.IsPrimaryKey = false;
				colvarKieuCode.IsForeignKey = false;
				colvarKieuCode.IsReadOnly = false;
				colvarKieuCode.DefaultSetting = @"";
				colvarKieuCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuCode);
				
				TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
				colvarQuantity.ColumnName = "Quantity";
				colvarQuantity.DataType = DbType.Int32;
				colvarQuantity.MaxLength = 0;
				colvarQuantity.AutoIncrement = false;
				colvarQuantity.IsNullable = true;
				colvarQuantity.IsPrimaryKey = false;
				colvarQuantity.IsForeignKey = false;
				colvarQuantity.IsReadOnly = false;
				colvarQuantity.DefaultSetting = @"";
				colvarQuantity.ForeignKeyTableName = "";
				schema.Columns.Add(colvarQuantity);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("L_ThuVien_ChanDoan",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("BenhChinh")]
		[Bindable(true)]
		public string BenhChinh 
		{
			get { return GetColumnValue<string>(Columns.BenhChinh); }
			set { SetColumnValue(Columns.BenhChinh, value); }
		}
		  
		[XmlAttribute("BenhPhu")]
		[Bindable(true)]
		public string BenhPhu 
		{
			get { return GetColumnValue<string>(Columns.BenhPhu); }
			set { SetColumnValue(Columns.BenhPhu, value); }
		}
		  
		[XmlAttribute("ChanDoan")]
		[Bindable(true)]
		public string ChanDoan 
		{
			get { return GetColumnValue<string>(Columns.ChanDoan); }
			set { SetColumnValue(Columns.ChanDoan, value); }
		}
		  
		[XmlAttribute("ParentId")]
		[Bindable(true)]
		public int? ParentId 
		{
			get { return GetColumnValue<int?>(Columns.ParentId); }
			set { SetColumnValue(Columns.ParentId, value); }
		}
		  
		[XmlAttribute("ObjectTypeCode")]
		[Bindable(true)]
		public string ObjectTypeCode 
		{
			get { return GetColumnValue<string>(Columns.ObjectTypeCode); }
			set { SetColumnValue(Columns.ObjectTypeCode, value); }
		}
		  
		[XmlAttribute("ServiceId")]
		[Bindable(true)]
		public int? ServiceId 
		{
			get { return GetColumnValue<int?>(Columns.ServiceId); }
			set { SetColumnValue(Columns.ServiceId, value); }
		}
		  
		[XmlAttribute("ServiceDetailId")]
		[Bindable(true)]
		public int? ServiceDetailId 
		{
			get { return GetColumnValue<int?>(Columns.ServiceDetailId); }
			set { SetColumnValue(Columns.ServiceDetailId, value); }
		}
		  
		[XmlAttribute("StaffId")]
		[Bindable(true)]
		public int? StaffId 
		{
			get { return GetColumnValue<int?>(Columns.StaffId); }
			set { SetColumnValue(Columns.StaffId, value); }
		}
		  
		[XmlAttribute("DepartmentId")]
		[Bindable(true)]
		public int? DepartmentId 
		{
			get { return GetColumnValue<int?>(Columns.DepartmentId); }
			set { SetColumnValue(Columns.DepartmentId, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("KetLuan")]
		[Bindable(true)]
		public string KetLuan 
		{
			get { return GetColumnValue<string>(Columns.KetLuan); }
			set { SetColumnValue(Columns.KetLuan, value); }
		}
		  
		[XmlAttribute("KieuCode")]
		[Bindable(true)]
		public string KieuCode 
		{
			get { return GetColumnValue<string>(Columns.KieuCode); }
			set { SetColumnValue(Columns.KieuCode, value); }
		}
		  
		[XmlAttribute("Quantity")]
		[Bindable(true)]
		public int? Quantity 
		{
			get { return GetColumnValue<int?>(Columns.Quantity); }
			set { SetColumnValue(Columns.Quantity, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varBenhChinh,string varBenhPhu,string varChanDoan,int? varParentId,string varObjectTypeCode,int? varServiceId,int? varServiceDetailId,int? varStaffId,int? varDepartmentId,string varNguoiTao,DateTime? varNgayTao,string varKetLuan,string varKieuCode,int? varQuantity)
		{
			LThuVienChanDoan item = new LThuVienChanDoan();
			
			item.BenhChinh = varBenhChinh;
			
			item.BenhPhu = varBenhPhu;
			
			item.ChanDoan = varChanDoan;
			
			item.ParentId = varParentId;
			
			item.ObjectTypeCode = varObjectTypeCode;
			
			item.ServiceId = varServiceId;
			
			item.ServiceDetailId = varServiceDetailId;
			
			item.StaffId = varStaffId;
			
			item.DepartmentId = varDepartmentId;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.KetLuan = varKetLuan;
			
			item.KieuCode = varKieuCode;
			
			item.Quantity = varQuantity;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,string varBenhChinh,string varBenhPhu,string varChanDoan,int? varParentId,string varObjectTypeCode,int? varServiceId,int? varServiceDetailId,int? varStaffId,int? varDepartmentId,string varNguoiTao,DateTime? varNgayTao,string varKetLuan,string varKieuCode,int? varQuantity)
		{
			LThuVienChanDoan item = new LThuVienChanDoan();
			
				item.Id = varId;
			
				item.BenhChinh = varBenhChinh;
			
				item.BenhPhu = varBenhPhu;
			
				item.ChanDoan = varChanDoan;
			
				item.ParentId = varParentId;
			
				item.ObjectTypeCode = varObjectTypeCode;
			
				item.ServiceId = varServiceId;
			
				item.ServiceDetailId = varServiceDetailId;
			
				item.StaffId = varStaffId;
			
				item.DepartmentId = varDepartmentId;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.KetLuan = varKetLuan;
			
				item.KieuCode = varKieuCode;
			
				item.Quantity = varQuantity;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn BenhChinhColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn BenhPhuColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn ChanDoanColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn ParentIdColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn ObjectTypeCodeColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceIdColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceDetailIdColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn StaffIdColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn DepartmentIdColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn KetLuanColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuCodeColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn QuantityColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"ID";
			 public static string BenhChinh = @"Benh_Chinh";
			 public static string BenhPhu = @"Benh_Phu";
			 public static string ChanDoan = @"Chan_Doan";
			 public static string ParentId = @"Parent_ID";
			 public static string ObjectTypeCode = @"ObjectType_Code";
			 public static string ServiceId = @"Service_ID";
			 public static string ServiceDetailId = @"ServiceDetail_ID";
			 public static string StaffId = @"Staff_ID";
			 public static string DepartmentId = @"Department_ID";
			 public static string NguoiTao = @"Nguoi_Tao";
			 public static string NgayTao = @"Ngay_Tao";
			 public static string KetLuan = @"Ket_Luan";
			 public static string KieuCode = @"Kieu_Code";
			 public static string Quantity = @"Quantity";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
