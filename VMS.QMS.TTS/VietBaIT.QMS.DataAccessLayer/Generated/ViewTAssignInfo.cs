using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewTAssignInfo class.
    /// </summary>
    [Serializable]
    public partial class ViewTAssignInfoCollection : ReadOnlyList<ViewTAssignInfo, ViewTAssignInfoCollection>
    {        
        public ViewTAssignInfoCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_T_Assign_Info view.
    /// </summary>
    [Serializable]
    public partial class ViewTAssignInfo : ReadOnlyRecord<ViewTAssignInfo>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_T_Assign_Info", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarAssignId = new TableSchema.TableColumn(schema);
                colvarAssignId.ColumnName = "Assign_ID";
                colvarAssignId.DataType = DbType.Int64;
                colvarAssignId.MaxLength = 0;
                colvarAssignId.AutoIncrement = false;
                colvarAssignId.IsNullable = false;
                colvarAssignId.IsPrimaryKey = false;
                colvarAssignId.IsForeignKey = false;
                colvarAssignId.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignId);
                
                TableSchema.TableColumn colvarExamId = new TableSchema.TableColumn(schema);
                colvarExamId.ColumnName = "Exam_ID";
                colvarExamId.DataType = DbType.Int64;
                colvarExamId.MaxLength = 0;
                colvarExamId.AutoIncrement = false;
                colvarExamId.IsNullable = true;
                colvarExamId.IsPrimaryKey = false;
                colvarExamId.IsForeignKey = false;
                colvarExamId.IsReadOnly = false;
                
                schema.Columns.Add(colvarExamId);
                
                TableSchema.TableColumn colvarTreatId = new TableSchema.TableColumn(schema);
                colvarTreatId.ColumnName = "Treat_ID";
                colvarTreatId.DataType = DbType.Int32;
                colvarTreatId.MaxLength = 0;
                colvarTreatId.AutoIncrement = false;
                colvarTreatId.IsNullable = true;
                colvarTreatId.IsPrimaryKey = false;
                colvarTreatId.IsForeignKey = false;
                colvarTreatId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTreatId);
                
                TableSchema.TableColumn colvarPatientDeptId = new TableSchema.TableColumn(schema);
                colvarPatientDeptId.ColumnName = "PatientDept_ID";
                colvarPatientDeptId.DataType = DbType.Int32;
                colvarPatientDeptId.MaxLength = 0;
                colvarPatientDeptId.AutoIncrement = false;
                colvarPatientDeptId.IsNullable = true;
                colvarPatientDeptId.IsPrimaryKey = false;
                colvarPatientDeptId.IsForeignKey = false;
                colvarPatientDeptId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientDeptId);
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_Code";
                colvarPatientCode.DataType = DbType.AnsiString;
                colvarPatientCode.MaxLength = 20;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = false;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Int64;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = false;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
                colvarServiceId.ColumnName = "Service_ID";
                colvarServiceId.DataType = DbType.Int16;
                colvarServiceId.MaxLength = 0;
                colvarServiceId.AutoIncrement = false;
                colvarServiceId.IsNullable = false;
                colvarServiceId.IsPrimaryKey = false;
                colvarServiceId.IsForeignKey = false;
                colvarServiceId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceId);
                
                TableSchema.TableColumn colvarServiceTypeId = new TableSchema.TableColumn(schema);
                colvarServiceTypeId.ColumnName = "ServiceType_ID";
                colvarServiceTypeId.DataType = DbType.Int16;
                colvarServiceTypeId.MaxLength = 0;
                colvarServiceTypeId.AutoIncrement = false;
                colvarServiceTypeId.IsNullable = false;
                colvarServiceTypeId.IsPrimaryKey = false;
                colvarServiceTypeId.IsForeignKey = false;
                colvarServiceTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceTypeId);
                
                TableSchema.TableColumn colvarRegDate = new TableSchema.TableColumn(schema);
                colvarRegDate.ColumnName = "Reg_Date";
                colvarRegDate.DataType = DbType.DateTime;
                colvarRegDate.MaxLength = 0;
                colvarRegDate.AutoIncrement = false;
                colvarRegDate.IsNullable = false;
                colvarRegDate.IsPrimaryKey = false;
                colvarRegDate.IsForeignKey = false;
                colvarRegDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarRegDate);
                
                TableSchema.TableColumn colvarDiagPerson = new TableSchema.TableColumn(schema);
                colvarDiagPerson.ColumnName = "Diag_Person";
                colvarDiagPerson.DataType = DbType.Int16;
                colvarDiagPerson.MaxLength = 0;
                colvarDiagPerson.AutoIncrement = false;
                colvarDiagPerson.IsNullable = true;
                colvarDiagPerson.IsPrimaryKey = false;
                colvarDiagPerson.IsForeignKey = false;
                colvarDiagPerson.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiagPerson);
                
                TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
                colvarDepartmentId.ColumnName = "Department_ID";
                colvarDepartmentId.DataType = DbType.Int16;
                colvarDepartmentId.MaxLength = 0;
                colvarDepartmentId.AutoIncrement = false;
                colvarDepartmentId.IsNullable = true;
                colvarDepartmentId.IsPrimaryKey = false;
                colvarDepartmentId.IsForeignKey = false;
                colvarDepartmentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepartmentId);
                
                TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
                colvarPaymentStatus.ColumnName = "Payment_Status";
                colvarPaymentStatus.DataType = DbType.Byte;
                colvarPaymentStatus.MaxLength = 0;
                colvarPaymentStatus.AutoIncrement = false;
                colvarPaymentStatus.IsNullable = false;
                colvarPaymentStatus.IsPrimaryKey = false;
                colvarPaymentStatus.IsForeignKey = false;
                colvarPaymentStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentStatus);
                
                TableSchema.TableColumn colvarAssignStatus = new TableSchema.TableColumn(schema);
                colvarAssignStatus.ColumnName = "Assign_Status";
                colvarAssignStatus.DataType = DbType.Byte;
                colvarAssignStatus.MaxLength = 0;
                colvarAssignStatus.AutoIncrement = false;
                colvarAssignStatus.IsNullable = true;
                colvarAssignStatus.IsPrimaryKey = false;
                colvarAssignStatus.IsForeignKey = false;
                colvarAssignStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignStatus);
                
                TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);
                colvarCreatedBy.ColumnName = "Created_by";
                colvarCreatedBy.DataType = DbType.AnsiString;
                colvarCreatedBy.MaxLength = 50;
                colvarCreatedBy.AutoIncrement = false;
                colvarCreatedBy.IsNullable = true;
                colvarCreatedBy.IsPrimaryKey = false;
                colvarCreatedBy.IsForeignKey = false;
                colvarCreatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreatedBy);
                
                TableSchema.TableColumn colvarCreateDate = new TableSchema.TableColumn(schema);
                colvarCreateDate.ColumnName = "Create_Date";
                colvarCreateDate.DataType = DbType.DateTime;
                colvarCreateDate.MaxLength = 0;
                colvarCreateDate.AutoIncrement = false;
                colvarCreateDate.IsNullable = true;
                colvarCreateDate.IsPrimaryKey = false;
                colvarCreateDate.IsForeignKey = false;
                colvarCreateDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreateDate);
                
                TableSchema.TableColumn colvarModifiedBy = new TableSchema.TableColumn(schema);
                colvarModifiedBy.ColumnName = "ModifiedBy";
                colvarModifiedBy.DataType = DbType.AnsiString;
                colvarModifiedBy.MaxLength = 50;
                colvarModifiedBy.AutoIncrement = false;
                colvarModifiedBy.IsNullable = true;
                colvarModifiedBy.IsPrimaryKey = false;
                colvarModifiedBy.IsForeignKey = false;
                colvarModifiedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifiedBy);
                
                TableSchema.TableColumn colvarModifiedDate = new TableSchema.TableColumn(schema);
                colvarModifiedDate.ColumnName = "ModifiedDate";
                colvarModifiedDate.DataType = DbType.DateTime;
                colvarModifiedDate.MaxLength = 0;
                colvarModifiedDate.AutoIncrement = false;
                colvarModifiedDate.IsNullable = true;
                colvarModifiedDate.IsPrimaryKey = false;
                colvarModifiedDate.IsForeignKey = false;
                colvarModifiedDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifiedDate);
                
                TableSchema.TableColumn colvarAssignCode = new TableSchema.TableColumn(schema);
                colvarAssignCode.ColumnName = "Assign_Code";
                colvarAssignCode.DataType = DbType.AnsiString;
                colvarAssignCode.MaxLength = 50;
                colvarAssignCode.AutoIncrement = false;
                colvarAssignCode.IsNullable = true;
                colvarAssignCode.IsPrimaryKey = false;
                colvarAssignCode.IsForeignKey = false;
                colvarAssignCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignCode);
                
                TableSchema.TableColumn colvarActived = new TableSchema.TableColumn(schema);
                colvarActived.ColumnName = "Actived";
                colvarActived.DataType = DbType.Byte;
                colvarActived.MaxLength = 0;
                colvarActived.AutoIncrement = false;
                colvarActived.IsNullable = true;
                colvarActived.IsPrimaryKey = false;
                colvarActived.IsForeignKey = false;
                colvarActived.IsReadOnly = false;
                
                schema.Columns.Add(colvarActived);
                
                TableSchema.TableColumn colvarPrintId = new TableSchema.TableColumn(schema);
                colvarPrintId.ColumnName = "Print_ID";
                colvarPrintId.DataType = DbType.Byte;
                colvarPrintId.MaxLength = 0;
                colvarPrintId.AutoIncrement = false;
                colvarPrintId.IsNullable = true;
                colvarPrintId.IsPrimaryKey = false;
                colvarPrintId.IsForeignKey = false;
                colvarPrintId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrintId);
                
                TableSchema.TableColumn colvarSendId = new TableSchema.TableColumn(schema);
                colvarSendId.ColumnName = "Send_ID";
                colvarSendId.DataType = DbType.Byte;
                colvarSendId.MaxLength = 0;
                colvarSendId.AutoIncrement = false;
                colvarSendId.IsNullable = true;
                colvarSendId.IsPrimaryKey = false;
                colvarSendId.IsForeignKey = false;
                colvarSendId.IsReadOnly = false;
                
                schema.Columns.Add(colvarSendId);
                
                TableSchema.TableColumn colvarBarcode = new TableSchema.TableColumn(schema);
                colvarBarcode.ColumnName = "Barcode";
                colvarBarcode.DataType = DbType.String;
                colvarBarcode.MaxLength = 20;
                colvarBarcode.AutoIncrement = false;
                colvarBarcode.IsNullable = true;
                colvarBarcode.IsPrimaryKey = false;
                colvarBarcode.IsForeignKey = false;
                colvarBarcode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBarcode);
                
                TableSchema.TableColumn colvarObjectTypeId = new TableSchema.TableColumn(schema);
                colvarObjectTypeId.ColumnName = "ObjectType_Id";
                colvarObjectTypeId.DataType = DbType.Int32;
                colvarObjectTypeId.MaxLength = 0;
                colvarObjectTypeId.AutoIncrement = false;
                colvarObjectTypeId.IsNullable = true;
                colvarObjectTypeId.IsPrimaryKey = false;
                colvarObjectTypeId.IsForeignKey = false;
                colvarObjectTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarObjectTypeId);
                
                TableSchema.TableColumn colvarNoiTru = new TableSchema.TableColumn(schema);
                colvarNoiTru.ColumnName = "Noi_Tru";
                colvarNoiTru.DataType = DbType.Int32;
                colvarNoiTru.MaxLength = 0;
                colvarNoiTru.AutoIncrement = false;
                colvarNoiTru.IsNullable = true;
                colvarNoiTru.IsPrimaryKey = false;
                colvarNoiTru.IsForeignKey = false;
                colvarNoiTru.IsReadOnly = false;
                
                schema.Columns.Add(colvarNoiTru);
                
                TableSchema.TableColumn colvarMaKhoaThien = new TableSchema.TableColumn(schema);
                colvarMaKhoaThien.ColumnName = "MA_KHOA_THIEN";
                colvarMaKhoaThien.DataType = DbType.String;
                colvarMaKhoaThien.MaxLength = 50;
                colvarMaKhoaThien.AutoIncrement = false;
                colvarMaKhoaThien.IsNullable = true;
                colvarMaKhoaThien.IsPrimaryKey = false;
                colvarMaKhoaThien.IsForeignKey = false;
                colvarMaKhoaThien.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaKhoaThien);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("view_T_Assign_Info",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewTAssignInfo()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewTAssignInfo(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewTAssignInfo(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewTAssignInfo(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("AssignId")]
        [Bindable(true)]
        public long AssignId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Assign_ID");
		    }
            set 
		    {
			    SetColumnValue("Assign_ID", value);
            }
        }
	      
        [XmlAttribute("ExamId")]
        [Bindable(true)]
        public long? ExamId 
	    {
		    get
		    {
			    return GetColumnValue<long?>("Exam_ID");
		    }
            set 
		    {
			    SetColumnValue("Exam_ID", value);
            }
        }
	      
        [XmlAttribute("TreatId")]
        [Bindable(true)]
        public int? TreatId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Treat_ID");
		    }
            set 
		    {
			    SetColumnValue("Treat_ID", value);
            }
        }
	      
        [XmlAttribute("PatientDeptId")]
        [Bindable(true)]
        public int? PatientDeptId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PatientDept_ID");
		    }
            set 
		    {
			    SetColumnValue("PatientDept_ID", value);
            }
        }
	      
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Code");
		    }
            set 
		    {
			    SetColumnValue("Patient_Code", value);
            }
        }
	      
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public long PatientId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("ServiceId")]
        [Bindable(true)]
        public short ServiceId 
	    {
		    get
		    {
			    return GetColumnValue<short>("Service_ID");
		    }
            set 
		    {
			    SetColumnValue("Service_ID", value);
            }
        }
	      
        [XmlAttribute("ServiceTypeId")]
        [Bindable(true)]
        public short ServiceTypeId 
	    {
		    get
		    {
			    return GetColumnValue<short>("ServiceType_ID");
		    }
            set 
		    {
			    SetColumnValue("ServiceType_ID", value);
            }
        }
	      
        [XmlAttribute("RegDate")]
        [Bindable(true)]
        public DateTime RegDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("Reg_Date");
		    }
            set 
		    {
			    SetColumnValue("Reg_Date", value);
            }
        }
	      
        [XmlAttribute("DiagPerson")]
        [Bindable(true)]
        public short? DiagPerson 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Diag_Person");
		    }
            set 
		    {
			    SetColumnValue("Diag_Person", value);
            }
        }
	      
        [XmlAttribute("DepartmentId")]
        [Bindable(true)]
        public short? DepartmentId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Department_ID");
		    }
            set 
		    {
			    SetColumnValue("Department_ID", value);
            }
        }
	      
        [XmlAttribute("PaymentStatus")]
        [Bindable(true)]
        public byte PaymentStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Payment_Status");
		    }
            set 
		    {
			    SetColumnValue("Payment_Status", value);
            }
        }
	      
        [XmlAttribute("AssignStatus")]
        [Bindable(true)]
        public byte? AssignStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Assign_Status");
		    }
            set 
		    {
			    SetColumnValue("Assign_Status", value);
            }
        }
	      
        [XmlAttribute("CreatedBy")]
        [Bindable(true)]
        public string CreatedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("Created_by");
		    }
            set 
		    {
			    SetColumnValue("Created_by", value);
            }
        }
	      
        [XmlAttribute("CreateDate")]
        [Bindable(true)]
        public DateTime? CreateDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Create_Date");
		    }
            set 
		    {
			    SetColumnValue("Create_Date", value);
            }
        }
	      
        [XmlAttribute("ModifiedBy")]
        [Bindable(true)]
        public string ModifiedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("ModifiedBy");
		    }
            set 
		    {
			    SetColumnValue("ModifiedBy", value);
            }
        }
	      
        [XmlAttribute("ModifiedDate")]
        [Bindable(true)]
        public DateTime? ModifiedDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ModifiedDate");
		    }
            set 
		    {
			    SetColumnValue("ModifiedDate", value);
            }
        }
	      
        [XmlAttribute("AssignCode")]
        [Bindable(true)]
        public string AssignCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Assign_Code");
		    }
            set 
		    {
			    SetColumnValue("Assign_Code", value);
            }
        }
	      
        [XmlAttribute("Actived")]
        [Bindable(true)]
        public byte? Actived 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Actived");
		    }
            set 
		    {
			    SetColumnValue("Actived", value);
            }
        }
	      
        [XmlAttribute("PrintId")]
        [Bindable(true)]
        public byte? PrintId 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Print_ID");
		    }
            set 
		    {
			    SetColumnValue("Print_ID", value);
            }
        }
	      
        [XmlAttribute("SendId")]
        [Bindable(true)]
        public byte? SendId 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Send_ID");
		    }
            set 
		    {
			    SetColumnValue("Send_ID", value);
            }
        }
	      
        [XmlAttribute("Barcode")]
        [Bindable(true)]
        public string Barcode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Barcode");
		    }
            set 
		    {
			    SetColumnValue("Barcode", value);
            }
        }
	      
        [XmlAttribute("ObjectTypeId")]
        [Bindable(true)]
        public int? ObjectTypeId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ObjectType_Id");
		    }
            set 
		    {
			    SetColumnValue("ObjectType_Id", value);
            }
        }
	      
        [XmlAttribute("NoiTru")]
        [Bindable(true)]
        public int? NoiTru 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Noi_Tru");
		    }
            set 
		    {
			    SetColumnValue("Noi_Tru", value);
            }
        }
	      
        [XmlAttribute("MaKhoaThien")]
        [Bindable(true)]
        public string MaKhoaThien 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_KHOA_THIEN");
		    }
            set 
		    {
			    SetColumnValue("MA_KHOA_THIEN", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string AssignId = @"Assign_ID";
            
            public static string ExamId = @"Exam_ID";
            
            public static string TreatId = @"Treat_ID";
            
            public static string PatientDeptId = @"PatientDept_ID";
            
            public static string PatientCode = @"Patient_Code";
            
            public static string PatientId = @"Patient_ID";
            
            public static string ServiceId = @"Service_ID";
            
            public static string ServiceTypeId = @"ServiceType_ID";
            
            public static string RegDate = @"Reg_Date";
            
            public static string DiagPerson = @"Diag_Person";
            
            public static string DepartmentId = @"Department_ID";
            
            public static string PaymentStatus = @"Payment_Status";
            
            public static string AssignStatus = @"Assign_Status";
            
            public static string CreatedBy = @"Created_by";
            
            public static string CreateDate = @"Create_Date";
            
            public static string ModifiedBy = @"ModifiedBy";
            
            public static string ModifiedDate = @"ModifiedDate";
            
            public static string AssignCode = @"Assign_Code";
            
            public static string Actived = @"Actived";
            
            public static string PrintId = @"Print_ID";
            
            public static string SendId = @"Send_ID";
            
            public static string Barcode = @"Barcode";
            
            public static string ObjectTypeId = @"ObjectType_Id";
            
            public static string NoiTru = @"Noi_Tru";
            
            public static string MaKhoaThien = @"MA_KHOA_THIEN";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
