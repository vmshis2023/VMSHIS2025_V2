using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_NghiThuc_Mo
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TNghiThucMoController
    {
        // Preload our schema..
        TNghiThucMo thisSchemaLoad = new TNghiThucMo();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TNghiThucMoCollection FetchAll()
        {
            TNghiThucMoCollection coll = new TNghiThucMoCollection();
            Query qry = new Query(TNghiThucMo.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TNghiThucMoCollection FetchByID(object PatientCode)
        {
            TNghiThucMoCollection coll = new TNghiThucMoCollection().Where("Patient_Code", PatientCode).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TNghiThucMoCollection FetchByQuery(Query qry)
        {
            TNghiThucMoCollection coll = new TNghiThucMoCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object PatientCode)
        {
            return (TNghiThucMo.Delete(PatientCode) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object PatientCode)
        {
            return (TNghiThucMo.Destroy(PatientCode) == 1);
        }
        
        
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(string PatientCode,int PatientId)
        {
            Query qry = new Query(TNghiThucMo.Schema);
            qry.QueryType = QueryType.Delete;
            qry.AddWhere("PatientCode", PatientCode).AND("PatientId", PatientId);
            qry.Execute();
            return (true);
        }        
       
    	
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string PatientCode,int PatientId,DateTime NgayLapPhieu,string SoLuu,string PThuatVien,string TroThuVien,string NguoiGMeHSuc,string NguoiDCuVien,string NguoiCDoanTruocMo,string NguoiCDoanMo,string NguoiPPhapMo,string NguoiTao,DateTime? NgayTao,string NguoiSua,DateTime? NgaySua)
	    {
		    TNghiThucMo item = new TNghiThucMo();
		    
            item.PatientCode = PatientCode;
            
            item.PatientId = PatientId;
            
            item.NgayLapPhieu = NgayLapPhieu;
            
            item.SoLuu = SoLuu;
            
            item.PThuatVien = PThuatVien;
            
            item.TroThuVien = TroThuVien;
            
            item.NguoiGMeHSuc = NguoiGMeHSuc;
            
            item.NguoiDCuVien = NguoiDCuVien;
            
            item.NguoiCDoanTruocMo = NguoiCDoanTruocMo;
            
            item.NguoiCDoanMo = NguoiCDoanMo;
            
            item.NguoiPPhapMo = NguoiPPhapMo;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NgaySua = NgaySua;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(string PatientCode,int PatientId,DateTime NgayLapPhieu,string SoLuu,string PThuatVien,string TroThuVien,string NguoiGMeHSuc,string NguoiDCuVien,string NguoiCDoanTruocMo,string NguoiCDoanMo,string NguoiPPhapMo,string NguoiTao,DateTime? NgayTao,string NguoiSua,DateTime? NgaySua)
	    {
		    TNghiThucMo item = new TNghiThucMo();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.PatientCode = PatientCode;
				
			item.PatientId = PatientId;
				
			item.NgayLapPhieu = NgayLapPhieu;
				
			item.SoLuu = SoLuu;
				
			item.PThuatVien = PThuatVien;
				
			item.TroThuVien = TroThuVien;
				
			item.NguoiGMeHSuc = NguoiGMeHSuc;
				
			item.NguoiDCuVien = NguoiDCuVien;
				
			item.NguoiCDoanTruocMo = NguoiCDoanTruocMo;
				
			item.NguoiCDoanMo = NguoiCDoanMo;
				
			item.NguoiPPhapMo = NguoiPPhapMo;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NgaySua = NgaySua;
				
	        item.Save(UserName);
	    }
    }
}
