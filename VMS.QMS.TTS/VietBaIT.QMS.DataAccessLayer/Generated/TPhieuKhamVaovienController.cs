using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_PHIEU_KHAM_VAOVIEN
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TPhieuKhamVaovienController
    {
        // Preload our schema..
        TPhieuKhamVaovien thisSchemaLoad = new TPhieuKhamVaovien();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TPhieuKhamVaovienCollection FetchAll()
        {
            TPhieuKhamVaovienCollection coll = new TPhieuKhamVaovienCollection();
            Query qry = new Query(TPhieuKhamVaovien.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TPhieuKhamVaovienCollection FetchByID(object IdPhieuVaovien)
        {
            TPhieuKhamVaovienCollection coll = new TPhieuKhamVaovienCollection().Where("ID_PHIEU_VAOVIEN", IdPhieuVaovien).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TPhieuKhamVaovienCollection FetchByQuery(Query qry)
        {
            TPhieuKhamVaovienCollection coll = new TPhieuKhamVaovienCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdPhieuVaovien)
        {
            return (TPhieuKhamVaovien.Delete(IdPhieuVaovien) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdPhieuVaovien)
        {
            return (TPhieuKhamVaovien.Destroy(IdPhieuVaovien) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string PatientCode,int PatientId,string LyDoVaoVien,string ChandoanTuyenDuoi,string TsuBanThan,string TsuGiaDinh,string BenhSu,string KhamToanThan,string KhamPhuKhoa,string KhamBphanKhac,string ChandoanKhiVaovien,string XuTri,int? IdKhoaNtru,string CheDoTdoi,DateTime? NgayTao,string NguoiTao,string ChuY,string DauHieuLs,string ThuocDaDung)
	    {
		    TPhieuKhamVaovien item = new TPhieuKhamVaovien();
		    
            item.PatientCode = PatientCode;
            
            item.PatientId = PatientId;
            
            item.LyDoVaoVien = LyDoVaoVien;
            
            item.ChandoanTuyenDuoi = ChandoanTuyenDuoi;
            
            item.TsuBanThan = TsuBanThan;
            
            item.TsuGiaDinh = TsuGiaDinh;
            
            item.BenhSu = BenhSu;
            
            item.KhamToanThan = KhamToanThan;
            
            item.KhamPhuKhoa = KhamPhuKhoa;
            
            item.KhamBphanKhac = KhamBphanKhac;
            
            item.ChandoanKhiVaovien = ChandoanKhiVaovien;
            
            item.XuTri = XuTri;
            
            item.IdKhoaNtru = IdKhoaNtru;
            
            item.CheDoTdoi = CheDoTdoi;
            
            item.NgayTao = NgayTao;
            
            item.NguoiTao = NguoiTao;
            
            item.ChuY = ChuY;
            
            item.DauHieuLs = DauHieuLs;
            
            item.ThuocDaDung = ThuocDaDung;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int IdPhieuVaovien,string PatientCode,int PatientId,string LyDoVaoVien,string ChandoanTuyenDuoi,string TsuBanThan,string TsuGiaDinh,string BenhSu,string KhamToanThan,string KhamPhuKhoa,string KhamBphanKhac,string ChandoanKhiVaovien,string XuTri,int? IdKhoaNtru,string CheDoTdoi,DateTime? NgayTao,string NguoiTao,string ChuY,string DauHieuLs,string ThuocDaDung)
	    {
		    TPhieuKhamVaovien item = new TPhieuKhamVaovien();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdPhieuVaovien = IdPhieuVaovien;
				
			item.PatientCode = PatientCode;
				
			item.PatientId = PatientId;
				
			item.LyDoVaoVien = LyDoVaoVien;
				
			item.ChandoanTuyenDuoi = ChandoanTuyenDuoi;
				
			item.TsuBanThan = TsuBanThan;
				
			item.TsuGiaDinh = TsuGiaDinh;
				
			item.BenhSu = BenhSu;
				
			item.KhamToanThan = KhamToanThan;
				
			item.KhamPhuKhoa = KhamPhuKhoa;
				
			item.KhamBphanKhac = KhamBphanKhac;
				
			item.ChandoanKhiVaovien = ChandoanKhiVaovien;
				
			item.XuTri = XuTri;
				
			item.IdKhoaNtru = IdKhoaNtru;
				
			item.CheDoTdoi = CheDoTdoi;
				
			item.NgayTao = NgayTao;
				
			item.NguoiTao = NguoiTao;
				
			item.ChuY = ChuY;
				
			item.DauHieuLs = DauHieuLs;
				
			item.ThuocDaDung = ThuocDaDung;
				
	        item.Save(UserName);
	    }
    }
}
