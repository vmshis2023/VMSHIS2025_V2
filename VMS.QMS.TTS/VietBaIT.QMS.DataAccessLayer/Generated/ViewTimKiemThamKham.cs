using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewTimKiemThamKham class.
    /// </summary>
    [Serializable]
    public partial class ViewTimKiemThamKhamCollection : ReadOnlyList<ViewTimKiemThamKham, ViewTimKiemThamKhamCollection>
    {        
        public ViewTimKiemThamKhamCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_TimKiemThamKham view.
    /// </summary>
    [Serializable]
    public partial class ViewTimKiemThamKham : ReadOnlyRecord<ViewTimKiemThamKham>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_TimKiemThamKham", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarRegId = new TableSchema.TableColumn(schema);
                colvarRegId.ColumnName = "Reg_ID";
                colvarRegId.DataType = DbType.Int64;
                colvarRegId.MaxLength = 0;
                colvarRegId.AutoIncrement = false;
                colvarRegId.IsNullable = false;
                colvarRegId.IsPrimaryKey = false;
                colvarRegId.IsForeignKey = false;
                colvarRegId.IsReadOnly = false;
                
                schema.Columns.Add(colvarRegId);
                
                TableSchema.TableColumn colvarMaKhoaThien = new TableSchema.TableColumn(schema);
                colvarMaKhoaThien.ColumnName = "MA_KHOA_THIEN";
                colvarMaKhoaThien.DataType = DbType.String;
                colvarMaKhoaThien.MaxLength = 10;
                colvarMaKhoaThien.AutoIncrement = false;
                colvarMaKhoaThien.IsNullable = true;
                colvarMaKhoaThien.IsPrimaryKey = false;
                colvarMaKhoaThien.IsForeignKey = false;
                colvarMaKhoaThien.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaKhoaThien);
                
                TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
                colvarPaymentStatus.ColumnName = "Payment_Status";
                colvarPaymentStatus.DataType = DbType.Byte;
                colvarPaymentStatus.MaxLength = 0;
                colvarPaymentStatus.AutoIncrement = false;
                colvarPaymentStatus.IsNullable = false;
                colvarPaymentStatus.IsPrimaryKey = false;
                colvarPaymentStatus.IsForeignKey = false;
                colvarPaymentStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentStatus);
                
                TableSchema.TableColumn colvarSoKham = new TableSchema.TableColumn(schema);
                colvarSoKham.ColumnName = "So_Kham";
                colvarSoKham.DataType = DbType.Int16;
                colvarSoKham.MaxLength = 0;
                colvarSoKham.AutoIncrement = false;
                colvarSoKham.IsNullable = true;
                colvarSoKham.IsPrimaryKey = false;
                colvarSoKham.IsForeignKey = false;
                colvarSoKham.IsReadOnly = false;
                
                schema.Columns.Add(colvarSoKham);
                
                TableSchema.TableColumn colvarObjectTypeCode = new TableSchema.TableColumn(schema);
                colvarObjectTypeCode.ColumnName = "ObjectType_Code";
                colvarObjectTypeCode.DataType = DbType.String;
                colvarObjectTypeCode.MaxLength = 20;
                colvarObjectTypeCode.AutoIncrement = false;
                colvarObjectTypeCode.IsNullable = true;
                colvarObjectTypeCode.IsPrimaryKey = false;
                colvarObjectTypeCode.IsForeignKey = false;
                colvarObjectTypeCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarObjectTypeCode);
                
                TableSchema.TableColumn colvarPaymentTypeId = new TableSchema.TableColumn(schema);
                colvarPaymentTypeId.ColumnName = "PaymentType_ID";
                colvarPaymentTypeId.DataType = DbType.Int32;
                colvarPaymentTypeId.MaxLength = 0;
                colvarPaymentTypeId.AutoIncrement = false;
                colvarPaymentTypeId.IsNullable = false;
                colvarPaymentTypeId.IsPrimaryKey = false;
                colvarPaymentTypeId.IsForeignKey = false;
                colvarPaymentTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentTypeId);
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Int64;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = false;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_Code";
                colvarPatientCode.DataType = DbType.AnsiString;
                colvarPatientCode.MaxLength = 20;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = false;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarObjectTypeId = new TableSchema.TableColumn(schema);
                colvarObjectTypeId.ColumnName = "ObjectType_ID";
                colvarObjectTypeId.DataType = DbType.Int16;
                colvarObjectTypeId.MaxLength = 0;
                colvarObjectTypeId.AutoIncrement = false;
                colvarObjectTypeId.IsNullable = false;
                colvarObjectTypeId.IsPrimaryKey = false;
                colvarObjectTypeId.IsForeignKey = false;
                colvarObjectTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarObjectTypeId);
                
                TableSchema.TableColumn colvarHosTrans = new TableSchema.TableColumn(schema);
                colvarHosTrans.ColumnName = "Hos_Trans";
                colvarHosTrans.DataType = DbType.Byte;
                colvarHosTrans.MaxLength = 0;
                colvarHosTrans.AutoIncrement = false;
                colvarHosTrans.IsNullable = false;
                colvarHosTrans.IsPrimaryKey = false;
                colvarHosTrans.IsForeignKey = false;
                colvarHosTrans.IsReadOnly = false;
                
                schema.Columns.Add(colvarHosTrans);
                
                TableSchema.TableColumn colvarRelativeName = new TableSchema.TableColumn(schema);
                colvarRelativeName.ColumnName = "Relative_Name";
                colvarRelativeName.DataType = DbType.String;
                colvarRelativeName.MaxLength = 100;
                colvarRelativeName.AutoIncrement = false;
                colvarRelativeName.IsNullable = true;
                colvarRelativeName.IsPrimaryKey = false;
                colvarRelativeName.IsForeignKey = false;
                colvarRelativeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarRelativeName);
                
                TableSchema.TableColumn colvarRelativePhone = new TableSchema.TableColumn(schema);
                colvarRelativePhone.ColumnName = "Relative_Phone";
                colvarRelativePhone.DataType = DbType.AnsiString;
                colvarRelativePhone.MaxLength = 20;
                colvarRelativePhone.AutoIncrement = false;
                colvarRelativePhone.IsNullable = true;
                colvarRelativePhone.IsPrimaryKey = false;
                colvarRelativePhone.IsForeignKey = false;
                colvarRelativePhone.IsReadOnly = false;
                
                schema.Columns.Add(colvarRelativePhone);
                
                TableSchema.TableColumn colvarRelativeAddress = new TableSchema.TableColumn(schema);
                colvarRelativeAddress.ColumnName = "Relative_Address";
                colvarRelativeAddress.DataType = DbType.String;
                colvarRelativeAddress.MaxLength = 255;
                colvarRelativeAddress.AutoIncrement = false;
                colvarRelativeAddress.IsNullable = true;
                colvarRelativeAddress.IsPrimaryKey = false;
                colvarRelativeAddress.IsForeignKey = false;
                colvarRelativeAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarRelativeAddress);
                
                TableSchema.TableColumn colvarInsuranceNum = new TableSchema.TableColumn(schema);
                colvarInsuranceNum.ColumnName = "Insurance_Num";
                colvarInsuranceNum.DataType = DbType.AnsiString;
                colvarInsuranceNum.MaxLength = 30;
                colvarInsuranceNum.AutoIncrement = false;
                colvarInsuranceNum.IsNullable = true;
                colvarInsuranceNum.IsPrimaryKey = false;
                colvarInsuranceNum.IsForeignKey = false;
                colvarInsuranceNum.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsuranceNum);
                
                TableSchema.TableColumn colvarInsuranceFromDate = new TableSchema.TableColumn(schema);
                colvarInsuranceFromDate.ColumnName = "Insurance_FromDate";
                colvarInsuranceFromDate.DataType = DbType.DateTime;
                colvarInsuranceFromDate.MaxLength = 0;
                colvarInsuranceFromDate.AutoIncrement = false;
                colvarInsuranceFromDate.IsNullable = true;
                colvarInsuranceFromDate.IsPrimaryKey = false;
                colvarInsuranceFromDate.IsForeignKey = false;
                colvarInsuranceFromDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsuranceFromDate);
                
                TableSchema.TableColumn colvarInsuranceToDate = new TableSchema.TableColumn(schema);
                colvarInsuranceToDate.ColumnName = "Insurance_ToDate";
                colvarInsuranceToDate.DataType = DbType.DateTime;
                colvarInsuranceToDate.MaxLength = 0;
                colvarInsuranceToDate.AutoIncrement = false;
                colvarInsuranceToDate.IsNullable = true;
                colvarInsuranceToDate.IsPrimaryKey = false;
                colvarInsuranceToDate.IsForeignKey = false;
                colvarInsuranceToDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsuranceToDate);
                
                TableSchema.TableColumn colvarInsuranceSupply = new TableSchema.TableColumn(schema);
                colvarInsuranceSupply.ColumnName = "Insurance_Supply";
                colvarInsuranceSupply.DataType = DbType.String;
                colvarInsuranceSupply.MaxLength = 100;
                colvarInsuranceSupply.AutoIncrement = false;
                colvarInsuranceSupply.IsNullable = true;
                colvarInsuranceSupply.IsPrimaryKey = false;
                colvarInsuranceSupply.IsForeignKey = false;
                colvarInsuranceSupply.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsuranceSupply);
                
                TableSchema.TableColumn colvarInsClinicCode = new TableSchema.TableColumn(schema);
                colvarInsClinicCode.ColumnName = "InsClinic_Code";
                colvarInsClinicCode.DataType = DbType.AnsiString;
                colvarInsClinicCode.MaxLength = 20;
                colvarInsClinicCode.AutoIncrement = false;
                colvarInsClinicCode.IsNullable = true;
                colvarInsClinicCode.IsPrimaryKey = false;
                colvarInsClinicCode.IsForeignKey = false;
                colvarInsClinicCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsClinicCode);
                
                TableSchema.TableColumn colvarInsObjectCode = new TableSchema.TableColumn(schema);
                colvarInsObjectCode.ColumnName = "InsObject_Code";
                colvarInsObjectCode.DataType = DbType.AnsiString;
                colvarInsObjectCode.MaxLength = 20;
                colvarInsObjectCode.AutoIncrement = false;
                colvarInsObjectCode.IsNullable = true;
                colvarInsObjectCode.IsPrimaryKey = false;
                colvarInsObjectCode.IsForeignKey = false;
                colvarInsObjectCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsObjectCode);
                
                TableSchema.TableColumn colvarInsObjectCodeNumber = new TableSchema.TableColumn(schema);
                colvarInsObjectCodeNumber.ColumnName = "InsObject_CodeNumber";
                colvarInsObjectCodeNumber.DataType = DbType.Int32;
                colvarInsObjectCodeNumber.MaxLength = 0;
                colvarInsObjectCodeNumber.AutoIncrement = false;
                colvarInsObjectCodeNumber.IsNullable = true;
                colvarInsObjectCodeNumber.IsPrimaryKey = false;
                colvarInsObjectCodeNumber.IsForeignKey = false;
                colvarInsObjectCodeNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsObjectCodeNumber);
                
                TableSchema.TableColumn colvarInsObjectCodeTP = new TableSchema.TableColumn(schema);
                colvarInsObjectCodeTP.ColumnName = "InsObject_CodeTP";
                colvarInsObjectCodeTP.DataType = DbType.AnsiString;
                colvarInsObjectCodeTP.MaxLength = 2;
                colvarInsObjectCodeTP.AutoIncrement = false;
                colvarInsObjectCodeTP.IsNullable = true;
                colvarInsObjectCodeTP.IsPrimaryKey = false;
                colvarInsObjectCodeTP.IsForeignKey = false;
                colvarInsObjectCodeTP.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsObjectCodeTP);
                
                TableSchema.TableColumn colvarInsLastObjectCode = new TableSchema.TableColumn(schema);
                colvarInsLastObjectCode.ColumnName = "InsLastObject_Code";
                colvarInsLastObjectCode.DataType = DbType.AnsiString;
                colvarInsLastObjectCode.MaxLength = 50;
                colvarInsLastObjectCode.AutoIncrement = false;
                colvarInsLastObjectCode.IsNullable = true;
                colvarInsLastObjectCode.IsPrimaryKey = false;
                colvarInsLastObjectCode.IsForeignKey = false;
                colvarInsLastObjectCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsLastObjectCode);
                
                TableSchema.TableColumn colvarInputDate = new TableSchema.TableColumn(schema);
                colvarInputDate.ColumnName = "Input_Date";
                colvarInputDate.DataType = DbType.DateTime;
                colvarInputDate.MaxLength = 0;
                colvarInputDate.AutoIncrement = false;
                colvarInputDate.IsNullable = false;
                colvarInputDate.IsPrimaryKey = false;
                colvarInputDate.IsForeignKey = false;
                colvarInputDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInputDate);
                
                TableSchema.TableColumn colvarUserId = new TableSchema.TableColumn(schema);
                colvarUserId.ColumnName = "User_ID";
                colvarUserId.DataType = DbType.AnsiString;
                colvarUserId.MaxLength = 50;
                colvarUserId.AutoIncrement = false;
                colvarUserId.IsNullable = false;
                colvarUserId.IsPrimaryKey = false;
                colvarUserId.IsForeignKey = false;
                colvarUserId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserId);
                
                TableSchema.TableColumn colvarHosStatus = new TableSchema.TableColumn(schema);
                colvarHosStatus.ColumnName = "Hos_status";
                colvarHosStatus.DataType = DbType.Byte;
                colvarHosStatus.MaxLength = 0;
                colvarHosStatus.AutoIncrement = false;
                colvarHosStatus.IsNullable = false;
                colvarHosStatus.IsPrimaryKey = false;
                colvarHosStatus.IsForeignKey = false;
                colvarHosStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarHosStatus);
                
                TableSchema.TableColumn colvarDesc = new TableSchema.TableColumn(schema);
                colvarDesc.ColumnName = "Desc";
                colvarDesc.DataType = DbType.String;
                colvarDesc.MaxLength = 500;
                colvarDesc.AutoIncrement = false;
                colvarDesc.IsNullable = true;
                colvarDesc.IsPrimaryKey = false;
                colvarDesc.IsForeignKey = false;
                colvarDesc.IsReadOnly = false;
                
                schema.Columns.Add(colvarDesc);
                
                TableSchema.TableColumn colvarLocked = new TableSchema.TableColumn(schema);
                colvarLocked.ColumnName = "Locked";
                colvarLocked.DataType = DbType.Byte;
                colvarLocked.MaxLength = 0;
                colvarLocked.AutoIncrement = false;
                colvarLocked.IsNullable = true;
                colvarLocked.IsPrimaryKey = false;
                colvarLocked.IsForeignKey = false;
                colvarLocked.IsReadOnly = false;
                
                schema.Columns.Add(colvarLocked);
                
                TableSchema.TableColumn colvarIndentityNo = new TableSchema.TableColumn(schema);
                colvarIndentityNo.ColumnName = "Indentity_No";
                colvarIndentityNo.DataType = DbType.Int64;
                colvarIndentityNo.MaxLength = 0;
                colvarIndentityNo.AutoIncrement = false;
                colvarIndentityNo.IsNullable = true;
                colvarIndentityNo.IsPrimaryKey = false;
                colvarIndentityNo.IsForeignKey = false;
                colvarIndentityNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarIndentityNo);
                
                TableSchema.TableColumn colvarOutDateTime = new TableSchema.TableColumn(schema);
                colvarOutDateTime.ColumnName = "Out_DateTime";
                colvarOutDateTime.DataType = DbType.DateTime;
                colvarOutDateTime.MaxLength = 0;
                colvarOutDateTime.AutoIncrement = false;
                colvarOutDateTime.IsNullable = true;
                colvarOutDateTime.IsPrimaryKey = false;
                colvarOutDateTime.IsForeignKey = false;
                colvarOutDateTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarOutDateTime);
                
                TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
                colvarDepartmentId.ColumnName = "Department_ID";
                colvarDepartmentId.DataType = DbType.Int32;
                colvarDepartmentId.MaxLength = 0;
                colvarDepartmentId.AutoIncrement = false;
                colvarDepartmentId.IsNullable = true;
                colvarDepartmentId.IsPrimaryKey = false;
                colvarDepartmentId.IsForeignKey = false;
                colvarDepartmentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepartmentId);
                
                TableSchema.TableColumn colvarSalaryBasic = new TableSchema.TableColumn(schema);
                colvarSalaryBasic.ColumnName = "Salary_Basic";
                colvarSalaryBasic.DataType = DbType.Currency;
                colvarSalaryBasic.MaxLength = 0;
                colvarSalaryBasic.AutoIncrement = false;
                colvarSalaryBasic.IsNullable = true;
                colvarSalaryBasic.IsPrimaryKey = false;
                colvarSalaryBasic.IsForeignKey = false;
                colvarSalaryBasic.IsReadOnly = false;
                
                schema.Columns.Add(colvarSalaryBasic);
                
                TableSchema.TableColumn colvarUnitId = new TableSchema.TableColumn(schema);
                colvarUnitId.ColumnName = "Unit_ID";
                colvarUnitId.DataType = DbType.Int32;
                colvarUnitId.MaxLength = 0;
                colvarUnitId.AutoIncrement = false;
                colvarUnitId.IsNullable = true;
                colvarUnitId.IsPrimaryKey = false;
                colvarUnitId.IsForeignKey = false;
                colvarUnitId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitId);
                
                TableSchema.TableColumn colvarEmergencyHos = new TableSchema.TableColumn(schema);
                colvarEmergencyHos.ColumnName = "Emergency_Hos";
                colvarEmergencyHos.DataType = DbType.Int32;
                colvarEmergencyHos.MaxLength = 0;
                colvarEmergencyHos.AutoIncrement = false;
                colvarEmergencyHos.IsNullable = true;
                colvarEmergencyHos.IsPrimaryKey = false;
                colvarEmergencyHos.IsForeignKey = false;
                colvarEmergencyHos.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmergencyHos);
                
                TableSchema.TableColumn colvarToHos = new TableSchema.TableColumn(schema);
                colvarToHos.ColumnName = "To_Hos";
                colvarToHos.DataType = DbType.Int32;
                colvarToHos.MaxLength = 0;
                colvarToHos.AutoIncrement = false;
                colvarToHos.IsNullable = true;
                colvarToHos.IsPrimaryKey = false;
                colvarToHos.IsForeignKey = false;
                colvarToHos.IsReadOnly = false;
                
                schema.Columns.Add(colvarToHos);
                
                TableSchema.TableColumn colvarPositionName = new TableSchema.TableColumn(schema);
                colvarPositionName.ColumnName = "Position_Name";
                colvarPositionName.DataType = DbType.String;
                colvarPositionName.MaxLength = 255;
                colvarPositionName.AutoIncrement = false;
                colvarPositionName.IsNullable = true;
                colvarPositionName.IsPrimaryKey = false;
                colvarPositionName.IsForeignKey = false;
                colvarPositionName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPositionName);
                
                TableSchema.TableColumn colvarSymptoms = new TableSchema.TableColumn(schema);
                colvarSymptoms.ColumnName = "Symptoms";
                colvarSymptoms.DataType = DbType.String;
                colvarSymptoms.MaxLength = 255;
                colvarSymptoms.AutoIncrement = false;
                colvarSymptoms.IsNullable = true;
                colvarSymptoms.IsPrimaryKey = false;
                colvarSymptoms.IsForeignKey = false;
                colvarSymptoms.IsReadOnly = false;
                
                schema.Columns.Add(colvarSymptoms);
                
                TableSchema.TableColumn colvarCorrectLine = new TableSchema.TableColumn(schema);
                colvarCorrectLine.ColumnName = "CorrectLine";
                colvarCorrectLine.DataType = DbType.Byte;
                colvarCorrectLine.MaxLength = 0;
                colvarCorrectLine.AutoIncrement = false;
                colvarCorrectLine.IsNullable = true;
                colvarCorrectLine.IsPrimaryKey = false;
                colvarCorrectLine.IsForeignKey = false;
                colvarCorrectLine.IsReadOnly = false;
                
                schema.Columns.Add(colvarCorrectLine);
                
                TableSchema.TableColumn colvarToClinicCode = new TableSchema.TableColumn(schema);
                colvarToClinicCode.ColumnName = "To_ClinicCode";
                colvarToClinicCode.DataType = DbType.AnsiString;
                colvarToClinicCode.MaxLength = 20;
                colvarToClinicCode.AutoIncrement = false;
                colvarToClinicCode.IsNullable = true;
                colvarToClinicCode.IsPrimaryKey = false;
                colvarToClinicCode.IsForeignKey = false;
                colvarToClinicCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarToClinicCode);
                
                TableSchema.TableColumn colvarKetQuaDt = new TableSchema.TableColumn(schema);
                colvarKetQuaDt.ColumnName = "KetQua_DT";
                colvarKetQuaDt.DataType = DbType.Byte;
                colvarKetQuaDt.MaxLength = 0;
                colvarKetQuaDt.AutoIncrement = false;
                colvarKetQuaDt.IsNullable = true;
                colvarKetQuaDt.IsPrimaryKey = false;
                colvarKetQuaDt.IsForeignKey = false;
                colvarKetQuaDt.IsReadOnly = false;
                
                schema.Columns.Add(colvarKetQuaDt);
                
                TableSchema.TableColumn colvarMBenhChinh = new TableSchema.TableColumn(schema);
                colvarMBenhChinh.ColumnName = "MBenh_Chinh";
                colvarMBenhChinh.DataType = DbType.AnsiString;
                colvarMBenhChinh.MaxLength = 50;
                colvarMBenhChinh.AutoIncrement = false;
                colvarMBenhChinh.IsNullable = true;
                colvarMBenhChinh.IsPrimaryKey = false;
                colvarMBenhChinh.IsForeignKey = false;
                colvarMBenhChinh.IsReadOnly = false;
                
                schema.Columns.Add(colvarMBenhChinh);
                
                TableSchema.TableColumn colvarMBenhPhu = new TableSchema.TableColumn(schema);
                colvarMBenhPhu.ColumnName = "MBenh_Phu";
                colvarMBenhPhu.DataType = DbType.AnsiString;
                colvarMBenhPhu.MaxLength = 50;
                colvarMBenhPhu.AutoIncrement = false;
                colvarMBenhPhu.IsNullable = true;
                colvarMBenhPhu.IsPrimaryKey = false;
                colvarMBenhPhu.IsForeignKey = false;
                colvarMBenhPhu.IsReadOnly = false;
                
                schema.Columns.Add(colvarMBenhPhu);
                
                TableSchema.TableColumn colvarMBenhSauPt = new TableSchema.TableColumn(schema);
                colvarMBenhSauPt.ColumnName = "MBenh_Sau_PT";
                colvarMBenhSauPt.DataType = DbType.AnsiString;
                colvarMBenhSauPt.MaxLength = 50;
                colvarMBenhSauPt.AutoIncrement = false;
                colvarMBenhSauPt.IsNullable = true;
                colvarMBenhSauPt.IsPrimaryKey = false;
                colvarMBenhSauPt.IsForeignKey = false;
                colvarMBenhSauPt.IsReadOnly = false;
                
                schema.Columns.Add(colvarMBenhSauPt);
                
                TableSchema.TableColumn colvarMBenhTruocPt = new TableSchema.TableColumn(schema);
                colvarMBenhTruocPt.ColumnName = "MBenh_Truoc_PT";
                colvarMBenhTruocPt.DataType = DbType.AnsiString;
                colvarMBenhTruocPt.MaxLength = 50;
                colvarMBenhTruocPt.AutoIncrement = false;
                colvarMBenhTruocPt.IsNullable = true;
                colvarMBenhTruocPt.IsPrimaryKey = false;
                colvarMBenhTruocPt.IsForeignKey = false;
                colvarMBenhTruocPt.IsReadOnly = false;
                
                schema.Columns.Add(colvarMBenhTruocPt);
                
                TableSchema.TableColumn colvarTinhTrangRaVienStatus = new TableSchema.TableColumn(schema);
                colvarTinhTrangRaVienStatus.ColumnName = "TinhTrang_RaVien_Status";
                colvarTinhTrangRaVienStatus.DataType = DbType.Byte;
                colvarTinhTrangRaVienStatus.MaxLength = 0;
                colvarTinhTrangRaVienStatus.AutoIncrement = false;
                colvarTinhTrangRaVienStatus.IsNullable = true;
                colvarTinhTrangRaVienStatus.IsPrimaryKey = false;
                colvarTinhTrangRaVienStatus.IsForeignKey = false;
                colvarTinhTrangRaVienStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarTinhTrangRaVienStatus);
                
                TableSchema.TableColumn colvarGhiChuCv = new TableSchema.TableColumn(schema);
                colvarGhiChuCv.ColumnName = "GhiChu_CV";
                colvarGhiChuCv.DataType = DbType.String;
                colvarGhiChuCv.MaxLength = 200;
                colvarGhiChuCv.AutoIncrement = false;
                colvarGhiChuCv.IsNullable = true;
                colvarGhiChuCv.IsPrimaryKey = false;
                colvarGhiChuCv.IsForeignKey = false;
                colvarGhiChuCv.IsReadOnly = false;
                
                schema.Columns.Add(colvarGhiChuCv);
                
                TableSchema.TableColumn colvarMedicalNumber = new TableSchema.TableColumn(schema);
                colvarMedicalNumber.ColumnName = "MedicalNumber";
                colvarMedicalNumber.DataType = DbType.String;
                colvarMedicalNumber.MaxLength = 50;
                colvarMedicalNumber.AutoIncrement = false;
                colvarMedicalNumber.IsNullable = true;
                colvarMedicalNumber.IsPrimaryKey = false;
                colvarMedicalNumber.IsForeignKey = false;
                colvarMedicalNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarMedicalNumber);
                
                TableSchema.TableColumn colvarTongSoNgayDtri = new TableSchema.TableColumn(schema);
                colvarTongSoNgayDtri.ColumnName = "Tong_SoNgay_Dtri";
                colvarTongSoNgayDtri.DataType = DbType.Int32;
                colvarTongSoNgayDtri.MaxLength = 0;
                colvarTongSoNgayDtri.AutoIncrement = false;
                colvarTongSoNgayDtri.IsNullable = true;
                colvarTongSoNgayDtri.IsPrimaryKey = false;
                colvarTongSoNgayDtri.IsForeignKey = false;
                colvarTongSoNgayDtri.IsReadOnly = false;
                
                schema.Columns.Add(colvarTongSoNgayDtri);
                
                TableSchema.TableColumn colvarMaDoiTuong = new TableSchema.TableColumn(schema);
                colvarMaDoiTuong.ColumnName = "Ma_DoiTuong";
                colvarMaDoiTuong.DataType = DbType.String;
                colvarMaDoiTuong.MaxLength = 50;
                colvarMaDoiTuong.AutoIncrement = false;
                colvarMaDoiTuong.IsNullable = true;
                colvarMaDoiTuong.IsPrimaryKey = false;
                colvarMaDoiTuong.IsForeignKey = false;
                colvarMaDoiTuong.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaDoiTuong);
                
                TableSchema.TableColumn colvarTHopStatus = new TableSchema.TableColumn(schema);
                colvarTHopStatus.ColumnName = "THop_Status";
                colvarTHopStatus.DataType = DbType.Byte;
                colvarTHopStatus.MaxLength = 0;
                colvarTHopStatus.AutoIncrement = false;
                colvarTHopStatus.IsNullable = true;
                colvarTHopStatus.IsPrimaryKey = false;
                colvarTHopStatus.IsForeignKey = false;
                colvarTHopStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarTHopStatus);
                
                TableSchema.TableColumn colvarKieuBn = new TableSchema.TableColumn(schema);
                colvarKieuBn.ColumnName = "Kieu_BN";
                colvarKieuBn.DataType = DbType.Byte;
                colvarKieuBn.MaxLength = 0;
                colvarKieuBn.AutoIncrement = false;
                colvarKieuBn.IsNullable = true;
                colvarKieuBn.IsPrimaryKey = false;
                colvarKieuBn.IsForeignKey = false;
                colvarKieuBn.IsReadOnly = false;
                
                schema.Columns.Add(colvarKieuBn);
                
                TableSchema.TableColumn colvarIdKhoaTnhan = new TableSchema.TableColumn(schema);
                colvarIdKhoaTnhan.ColumnName = "ID_KHOA_TNHAN";
                colvarIdKhoaTnhan.DataType = DbType.Int32;
                colvarIdKhoaTnhan.MaxLength = 0;
                colvarIdKhoaTnhan.AutoIncrement = false;
                colvarIdKhoaTnhan.IsNullable = true;
                colvarIdKhoaTnhan.IsPrimaryKey = false;
                colvarIdKhoaTnhan.IsForeignKey = false;
                colvarIdKhoaTnhan.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdKhoaTnhan);
                
                TableSchema.TableColumn colvarNgayNhapVien = new TableSchema.TableColumn(schema);
                colvarNgayNhapVien.ColumnName = "NGAY_NHAP_VIEN";
                colvarNgayNhapVien.DataType = DbType.DateTime;
                colvarNgayNhapVien.MaxLength = 0;
                colvarNgayNhapVien.AutoIncrement = false;
                colvarNgayNhapVien.IsNullable = true;
                colvarNgayNhapVien.IsPrimaryKey = false;
                colvarNgayNhapVien.IsForeignKey = false;
                colvarNgayNhapVien.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgayNhapVien);
                
                TableSchema.TableColumn colvarSCreateDate = new TableSchema.TableColumn(schema);
                colvarSCreateDate.ColumnName = "sCreate_Date";
                colvarSCreateDate.DataType = DbType.AnsiString;
                colvarSCreateDate.MaxLength = 30;
                colvarSCreateDate.AutoIncrement = false;
                colvarSCreateDate.IsNullable = true;
                colvarSCreateDate.IsPrimaryKey = false;
                colvarSCreateDate.IsForeignKey = false;
                colvarSCreateDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarSCreateDate);
                
                TableSchema.TableColumn colvarSDepartmentId = new TableSchema.TableColumn(schema);
                colvarSDepartmentId.ColumnName = "sDepartment_ID";
                colvarSDepartmentId.DataType = DbType.Int16;
                colvarSDepartmentId.MaxLength = 0;
                colvarSDepartmentId.AutoIncrement = false;
                colvarSDepartmentId.IsNullable = true;
                colvarSDepartmentId.IsPrimaryKey = false;
                colvarSDepartmentId.IsForeignKey = false;
                colvarSDepartmentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarSDepartmentId);
                
                TableSchema.TableColumn colvarExamId = new TableSchema.TableColumn(schema);
                colvarExamId.ColumnName = "Exam_ID";
                colvarExamId.DataType = DbType.Int32;
                colvarExamId.MaxLength = 0;
                colvarExamId.AutoIncrement = false;
                colvarExamId.IsNullable = true;
                colvarExamId.IsPrimaryKey = false;
                colvarExamId.IsForeignKey = false;
                colvarExamId.IsReadOnly = false;
                
                schema.Columns.Add(colvarExamId);
                
                TableSchema.TableColumn colvarPatientName = new TableSchema.TableColumn(schema);
                colvarPatientName.ColumnName = "Patient_Name";
                colvarPatientName.DataType = DbType.String;
                colvarPatientName.MaxLength = 100;
                colvarPatientName.AutoIncrement = false;
                colvarPatientName.IsNullable = true;
                colvarPatientName.IsPrimaryKey = false;
                colvarPatientName.IsForeignKey = false;
                colvarPatientName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientName);
                
                TableSchema.TableColumn colvarPatientAddr = new TableSchema.TableColumn(schema);
                colvarPatientAddr.ColumnName = "Patient_Addr";
                colvarPatientAddr.DataType = DbType.String;
                colvarPatientAddr.MaxLength = 200;
                colvarPatientAddr.AutoIncrement = false;
                colvarPatientAddr.IsNullable = true;
                colvarPatientAddr.IsPrimaryKey = false;
                colvarPatientAddr.IsForeignKey = false;
                colvarPatientAddr.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientAddr);
                
                TableSchema.TableColumn colvarProvinceId = new TableSchema.TableColumn(schema);
                colvarProvinceId.ColumnName = "Province_ID";
                colvarProvinceId.DataType = DbType.AnsiString;
                colvarProvinceId.MaxLength = 50;
                colvarProvinceId.AutoIncrement = false;
                colvarProvinceId.IsNullable = true;
                colvarProvinceId.IsPrimaryKey = false;
                colvarProvinceId.IsForeignKey = false;
                colvarProvinceId.IsReadOnly = false;
                
                schema.Columns.Add(colvarProvinceId);
                
                TableSchema.TableColumn colvarDistrictId = new TableSchema.TableColumn(schema);
                colvarDistrictId.ColumnName = "District_ID";
                colvarDistrictId.DataType = DbType.AnsiString;
                colvarDistrictId.MaxLength = 50;
                colvarDistrictId.AutoIncrement = false;
                colvarDistrictId.IsNullable = true;
                colvarDistrictId.IsPrimaryKey = false;
                colvarDistrictId.IsForeignKey = false;
                colvarDistrictId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDistrictId);
                
                TableSchema.TableColumn colvarPatientBirth = new TableSchema.TableColumn(schema);
                colvarPatientBirth.ColumnName = "Patient_Birth";
                colvarPatientBirth.DataType = DbType.DateTime;
                colvarPatientBirth.MaxLength = 0;
                colvarPatientBirth.AutoIncrement = false;
                colvarPatientBirth.IsNullable = true;
                colvarPatientBirth.IsPrimaryKey = false;
                colvarPatientBirth.IsForeignKey = false;
                colvarPatientBirth.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientBirth);
                
                TableSchema.TableColumn colvarYearOfBirth = new TableSchema.TableColumn(schema);
                colvarYearOfBirth.ColumnName = "Year_Of_Birth";
                colvarYearOfBirth.DataType = DbType.Int16;
                colvarYearOfBirth.MaxLength = 0;
                colvarYearOfBirth.AutoIncrement = false;
                colvarYearOfBirth.IsNullable = true;
                colvarYearOfBirth.IsPrimaryKey = false;
                colvarYearOfBirth.IsForeignKey = false;
                colvarYearOfBirth.IsReadOnly = false;
                
                schema.Columns.Add(colvarYearOfBirth);
                
                TableSchema.TableColumn colvarPatientSex = new TableSchema.TableColumn(schema);
                colvarPatientSex.ColumnName = "Patient_Sex";
                colvarPatientSex.DataType = DbType.Byte;
                colvarPatientSex.MaxLength = 0;
                colvarPatientSex.AutoIncrement = false;
                colvarPatientSex.IsNullable = false;
                colvarPatientSex.IsPrimaryKey = false;
                colvarPatientSex.IsForeignKey = false;
                colvarPatientSex.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientSex);
                
                TableSchema.TableColumn colvarPatientJob = new TableSchema.TableColumn(schema);
                colvarPatientJob.ColumnName = "Patient_Job";
                colvarPatientJob.DataType = DbType.String;
                colvarPatientJob.MaxLength = 100;
                colvarPatientJob.AutoIncrement = false;
                colvarPatientJob.IsNullable = true;
                colvarPatientJob.IsPrimaryKey = false;
                colvarPatientJob.IsForeignKey = false;
                colvarPatientJob.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientJob);
                
                TableSchema.TableColumn colvarOffices = new TableSchema.TableColumn(schema);
                colvarOffices.ColumnName = "Offices";
                colvarOffices.DataType = DbType.String;
                colvarOffices.MaxLength = 100;
                colvarOffices.AutoIncrement = false;
                colvarOffices.IsNullable = true;
                colvarOffices.IsPrimaryKey = false;
                colvarOffices.IsForeignKey = false;
                colvarOffices.IsReadOnly = false;
                
                schema.Columns.Add(colvarOffices);
                
                TableSchema.TableColumn colvarIdentifyNum = new TableSchema.TableColumn(schema);
                colvarIdentifyNum.ColumnName = "Identify_Num";
                colvarIdentifyNum.DataType = DbType.AnsiString;
                colvarIdentifyNum.MaxLength = 50;
                colvarIdentifyNum.AutoIncrement = false;
                colvarIdentifyNum.IsNullable = true;
                colvarIdentifyNum.IsPrimaryKey = false;
                colvarIdentifyNum.IsForeignKey = false;
                colvarIdentifyNum.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdentifyNum);
                
                TableSchema.TableColumn colvarCountryId = new TableSchema.TableColumn(schema);
                colvarCountryId.ColumnName = "Country_ID";
                colvarCountryId.DataType = DbType.Int16;
                colvarCountryId.MaxLength = 0;
                colvarCountryId.AutoIncrement = false;
                colvarCountryId.IsNullable = true;
                colvarCountryId.IsPrimaryKey = false;
                colvarCountryId.IsForeignKey = false;
                colvarCountryId.IsReadOnly = false;
                
                schema.Columns.Add(colvarCountryId);
                
                TableSchema.TableColumn colvarPatientPhone = new TableSchema.TableColumn(schema);
                colvarPatientPhone.ColumnName = "Patient_Phone";
                colvarPatientPhone.DataType = DbType.String;
                colvarPatientPhone.MaxLength = 50;
                colvarPatientPhone.AutoIncrement = false;
                colvarPatientPhone.IsNullable = true;
                colvarPatientPhone.IsPrimaryKey = false;
                colvarPatientPhone.IsForeignKey = false;
                colvarPatientPhone.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientPhone);
                
                TableSchema.TableColumn colvarPatientEmail = new TableSchema.TableColumn(schema);
                colvarPatientEmail.ColumnName = "Patient_Email";
                colvarPatientEmail.DataType = DbType.String;
                colvarPatientEmail.MaxLength = 50;
                colvarPatientEmail.AutoIncrement = false;
                colvarPatientEmail.IsNullable = true;
                colvarPatientEmail.IsPrimaryKey = false;
                colvarPatientEmail.IsForeignKey = false;
                colvarPatientEmail.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientEmail);
                
                TableSchema.TableColumn colvarAge = new TableSchema.TableColumn(schema);
                colvarAge.ColumnName = "Age";
                colvarAge.DataType = DbType.Int32;
                colvarAge.MaxLength = 0;
                colvarAge.AutoIncrement = false;
                colvarAge.IsNullable = true;
                colvarAge.IsPrimaryKey = false;
                colvarAge.IsForeignKey = false;
                colvarAge.IsReadOnly = false;
                
                schema.Columns.Add(colvarAge);
                
                TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
                colvarStatus.ColumnName = "Status";
                colvarStatus.DataType = DbType.Byte;
                colvarStatus.MaxLength = 0;
                colvarStatus.AutoIncrement = false;
                colvarStatus.IsNullable = true;
                colvarStatus.IsPrimaryKey = false;
                colvarStatus.IsForeignKey = false;
                colvarStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarStatus);
                
                TableSchema.TableColumn colvarDepartmentName = new TableSchema.TableColumn(schema);
                colvarDepartmentName.ColumnName = "Department_Name";
                colvarDepartmentName.DataType = DbType.String;
                colvarDepartmentName.MaxLength = 100;
                colvarDepartmentName.AutoIncrement = false;
                colvarDepartmentName.IsNullable = true;
                colvarDepartmentName.IsPrimaryKey = false;
                colvarDepartmentName.IsForeignKey = false;
                colvarDepartmentName.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepartmentName);
                
                TableSchema.TableColumn colvarRegDate = new TableSchema.TableColumn(schema);
                colvarRegDate.ColumnName = "Reg_Date";
                colvarRegDate.DataType = DbType.DateTime;
                colvarRegDate.MaxLength = 0;
                colvarRegDate.AutoIncrement = false;
                colvarRegDate.IsNullable = true;
                colvarRegDate.IsPrimaryKey = false;
                colvarRegDate.IsForeignKey = false;
                colvarRegDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarRegDate);
                
                TableSchema.TableColumn colvarObjectTypeName = new TableSchema.TableColumn(schema);
                colvarObjectTypeName.ColumnName = "ObjectType_Name";
                colvarObjectTypeName.DataType = DbType.String;
                colvarObjectTypeName.MaxLength = 100;
                colvarObjectTypeName.AutoIncrement = false;
                colvarObjectTypeName.IsNullable = true;
                colvarObjectTypeName.IsPrimaryKey = false;
                colvarObjectTypeName.IsForeignKey = false;
                colvarObjectTypeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarObjectTypeName);
                
                TableSchema.TableColumn colvarTenLanKham = new TableSchema.TableColumn(schema);
                colvarTenLanKham.ColumnName = "TEN_LAN_KHAM";
                colvarTenLanKham.DataType = DbType.String;
                colvarTenLanKham.MaxLength = 100;
                colvarTenLanKham.AutoIncrement = false;
                colvarTenLanKham.IsNullable = true;
                colvarTenLanKham.IsPrimaryKey = false;
                colvarTenLanKham.IsForeignKey = false;
                colvarTenLanKham.IsReadOnly = false;
                
                schema.Columns.Add(colvarTenLanKham);
                
                TableSchema.TableColumn colvarMaLanKham = new TableSchema.TableColumn(schema);
                colvarMaLanKham.ColumnName = "MA_LAN_KHAM";
                colvarMaLanKham.DataType = DbType.String;
                colvarMaLanKham.MaxLength = 50;
                colvarMaLanKham.AutoIncrement = false;
                colvarMaLanKham.IsNullable = true;
                colvarMaLanKham.IsPrimaryKey = false;
                colvarMaLanKham.IsForeignKey = false;
                colvarMaLanKham.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaLanKham);
                
                TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
                colvarTrongGoi.ColumnName = "TRONG_GOI";
                colvarTrongGoi.DataType = DbType.Int32;
                colvarTrongGoi.MaxLength = 0;
                colvarTrongGoi.AutoIncrement = false;
                colvarTrongGoi.IsNullable = false;
                colvarTrongGoi.IsPrimaryKey = false;
                colvarTrongGoi.IsForeignKey = false;
                colvarTrongGoi.IsReadOnly = false;
                
                schema.Columns.Add(colvarTrongGoi);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("view_TimKiemThamKham",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewTimKiemThamKham()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewTimKiemThamKham(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewTimKiemThamKham(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewTimKiemThamKham(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("RegId")]
        [Bindable(true)]
        public long RegId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Reg_ID");
		    }
            set 
		    {
			    SetColumnValue("Reg_ID", value);
            }
        }
	      
        [XmlAttribute("MaKhoaThien")]
        [Bindable(true)]
        public string MaKhoaThien 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_KHOA_THIEN");
		    }
            set 
		    {
			    SetColumnValue("MA_KHOA_THIEN", value);
            }
        }
	      
        [XmlAttribute("PaymentStatus")]
        [Bindable(true)]
        public byte PaymentStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Payment_Status");
		    }
            set 
		    {
			    SetColumnValue("Payment_Status", value);
            }
        }
	      
        [XmlAttribute("SoKham")]
        [Bindable(true)]
        public short? SoKham 
	    {
		    get
		    {
			    return GetColumnValue<short?>("So_Kham");
		    }
            set 
		    {
			    SetColumnValue("So_Kham", value);
            }
        }
	      
        [XmlAttribute("ObjectTypeCode")]
        [Bindable(true)]
        public string ObjectTypeCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("ObjectType_Code");
		    }
            set 
		    {
			    SetColumnValue("ObjectType_Code", value);
            }
        }
	      
        [XmlAttribute("PaymentTypeId")]
        [Bindable(true)]
        public int PaymentTypeId 
	    {
		    get
		    {
			    return GetColumnValue<int>("PaymentType_ID");
		    }
            set 
		    {
			    SetColumnValue("PaymentType_ID", value);
            }
        }
	      
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public long PatientId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Code");
		    }
            set 
		    {
			    SetColumnValue("Patient_Code", value);
            }
        }
	      
        [XmlAttribute("ObjectTypeId")]
        [Bindable(true)]
        public short ObjectTypeId 
	    {
		    get
		    {
			    return GetColumnValue<short>("ObjectType_ID");
		    }
            set 
		    {
			    SetColumnValue("ObjectType_ID", value);
            }
        }
	      
        [XmlAttribute("HosTrans")]
        [Bindable(true)]
        public byte HosTrans 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Hos_Trans");
		    }
            set 
		    {
			    SetColumnValue("Hos_Trans", value);
            }
        }
	      
        [XmlAttribute("RelativeName")]
        [Bindable(true)]
        public string RelativeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Relative_Name");
		    }
            set 
		    {
			    SetColumnValue("Relative_Name", value);
            }
        }
	      
        [XmlAttribute("RelativePhone")]
        [Bindable(true)]
        public string RelativePhone 
	    {
		    get
		    {
			    return GetColumnValue<string>("Relative_Phone");
		    }
            set 
		    {
			    SetColumnValue("Relative_Phone", value);
            }
        }
	      
        [XmlAttribute("RelativeAddress")]
        [Bindable(true)]
        public string RelativeAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("Relative_Address");
		    }
            set 
		    {
			    SetColumnValue("Relative_Address", value);
            }
        }
	      
        [XmlAttribute("InsuranceNum")]
        [Bindable(true)]
        public string InsuranceNum 
	    {
		    get
		    {
			    return GetColumnValue<string>("Insurance_Num");
		    }
            set 
		    {
			    SetColumnValue("Insurance_Num", value);
            }
        }
	      
        [XmlAttribute("InsuranceFromDate")]
        [Bindable(true)]
        public DateTime? InsuranceFromDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Insurance_FromDate");
		    }
            set 
		    {
			    SetColumnValue("Insurance_FromDate", value);
            }
        }
	      
        [XmlAttribute("InsuranceToDate")]
        [Bindable(true)]
        public DateTime? InsuranceToDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Insurance_ToDate");
		    }
            set 
		    {
			    SetColumnValue("Insurance_ToDate", value);
            }
        }
	      
        [XmlAttribute("InsuranceSupply")]
        [Bindable(true)]
        public string InsuranceSupply 
	    {
		    get
		    {
			    return GetColumnValue<string>("Insurance_Supply");
		    }
            set 
		    {
			    SetColumnValue("Insurance_Supply", value);
            }
        }
	      
        [XmlAttribute("InsClinicCode")]
        [Bindable(true)]
        public string InsClinicCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("InsClinic_Code");
		    }
            set 
		    {
			    SetColumnValue("InsClinic_Code", value);
            }
        }
	      
        [XmlAttribute("InsObjectCode")]
        [Bindable(true)]
        public string InsObjectCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("InsObject_Code");
		    }
            set 
		    {
			    SetColumnValue("InsObject_Code", value);
            }
        }
	      
        [XmlAttribute("InsObjectCodeNumber")]
        [Bindable(true)]
        public int? InsObjectCodeNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("InsObject_CodeNumber");
		    }
            set 
		    {
			    SetColumnValue("InsObject_CodeNumber", value);
            }
        }
	      
        [XmlAttribute("InsObjectCodeTP")]
        [Bindable(true)]
        public string InsObjectCodeTP 
	    {
		    get
		    {
			    return GetColumnValue<string>("InsObject_CodeTP");
		    }
            set 
		    {
			    SetColumnValue("InsObject_CodeTP", value);
            }
        }
	      
        [XmlAttribute("InsLastObjectCode")]
        [Bindable(true)]
        public string InsLastObjectCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("InsLastObject_Code");
		    }
            set 
		    {
			    SetColumnValue("InsLastObject_Code", value);
            }
        }
	      
        [XmlAttribute("InputDate")]
        [Bindable(true)]
        public DateTime InputDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("Input_Date");
		    }
            set 
		    {
			    SetColumnValue("Input_Date", value);
            }
        }
	      
        [XmlAttribute("UserId")]
        [Bindable(true)]
        public string UserId 
	    {
		    get
		    {
			    return GetColumnValue<string>("User_ID");
		    }
            set 
		    {
			    SetColumnValue("User_ID", value);
            }
        }
	      
        [XmlAttribute("HosStatus")]
        [Bindable(true)]
        public byte HosStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Hos_status");
		    }
            set 
		    {
			    SetColumnValue("Hos_status", value);
            }
        }
	      
        [XmlAttribute("Desc")]
        [Bindable(true)]
        public string Desc 
	    {
		    get
		    {
			    return GetColumnValue<string>("Desc");
		    }
            set 
		    {
			    SetColumnValue("Desc", value);
            }
        }
	      
        [XmlAttribute("Locked")]
        [Bindable(true)]
        public byte? Locked 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Locked");
		    }
            set 
		    {
			    SetColumnValue("Locked", value);
            }
        }
	      
        [XmlAttribute("IndentityNo")]
        [Bindable(true)]
        public long? IndentityNo 
	    {
		    get
		    {
			    return GetColumnValue<long?>("Indentity_No");
		    }
            set 
		    {
			    SetColumnValue("Indentity_No", value);
            }
        }
	      
        [XmlAttribute("OutDateTime")]
        [Bindable(true)]
        public DateTime? OutDateTime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Out_DateTime");
		    }
            set 
		    {
			    SetColumnValue("Out_DateTime", value);
            }
        }
	      
        [XmlAttribute("DepartmentId")]
        [Bindable(true)]
        public int? DepartmentId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Department_ID");
		    }
            set 
		    {
			    SetColumnValue("Department_ID", value);
            }
        }
	      
        [XmlAttribute("SalaryBasic")]
        [Bindable(true)]
        public decimal? SalaryBasic 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Salary_Basic");
		    }
            set 
		    {
			    SetColumnValue("Salary_Basic", value);
            }
        }
	      
        [XmlAttribute("UnitId")]
        [Bindable(true)]
        public int? UnitId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Unit_ID");
		    }
            set 
		    {
			    SetColumnValue("Unit_ID", value);
            }
        }
	      
        [XmlAttribute("EmergencyHos")]
        [Bindable(true)]
        public int? EmergencyHos 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Emergency_Hos");
		    }
            set 
		    {
			    SetColumnValue("Emergency_Hos", value);
            }
        }
	      
        [XmlAttribute("ToHos")]
        [Bindable(true)]
        public int? ToHos 
	    {
		    get
		    {
			    return GetColumnValue<int?>("To_Hos");
		    }
            set 
		    {
			    SetColumnValue("To_Hos", value);
            }
        }
	      
        [XmlAttribute("PositionName")]
        [Bindable(true)]
        public string PositionName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Position_Name");
		    }
            set 
		    {
			    SetColumnValue("Position_Name", value);
            }
        }
	      
        [XmlAttribute("Symptoms")]
        [Bindable(true)]
        public string Symptoms 
	    {
		    get
		    {
			    return GetColumnValue<string>("Symptoms");
		    }
            set 
		    {
			    SetColumnValue("Symptoms", value);
            }
        }
	      
        [XmlAttribute("CorrectLine")]
        [Bindable(true)]
        public byte? CorrectLine 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("CorrectLine");
		    }
            set 
		    {
			    SetColumnValue("CorrectLine", value);
            }
        }
	      
        [XmlAttribute("ToClinicCode")]
        [Bindable(true)]
        public string ToClinicCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("To_ClinicCode");
		    }
            set 
		    {
			    SetColumnValue("To_ClinicCode", value);
            }
        }
	      
        [XmlAttribute("KetQuaDt")]
        [Bindable(true)]
        public byte? KetQuaDt 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("KetQua_DT");
		    }
            set 
		    {
			    SetColumnValue("KetQua_DT", value);
            }
        }
	      
        [XmlAttribute("MBenhChinh")]
        [Bindable(true)]
        public string MBenhChinh 
	    {
		    get
		    {
			    return GetColumnValue<string>("MBenh_Chinh");
		    }
            set 
		    {
			    SetColumnValue("MBenh_Chinh", value);
            }
        }
	      
        [XmlAttribute("MBenhPhu")]
        [Bindable(true)]
        public string MBenhPhu 
	    {
		    get
		    {
			    return GetColumnValue<string>("MBenh_Phu");
		    }
            set 
		    {
			    SetColumnValue("MBenh_Phu", value);
            }
        }
	      
        [XmlAttribute("MBenhSauPt")]
        [Bindable(true)]
        public string MBenhSauPt 
	    {
		    get
		    {
			    return GetColumnValue<string>("MBenh_Sau_PT");
		    }
            set 
		    {
			    SetColumnValue("MBenh_Sau_PT", value);
            }
        }
	      
        [XmlAttribute("MBenhTruocPt")]
        [Bindable(true)]
        public string MBenhTruocPt 
	    {
		    get
		    {
			    return GetColumnValue<string>("MBenh_Truoc_PT");
		    }
            set 
		    {
			    SetColumnValue("MBenh_Truoc_PT", value);
            }
        }
	      
        [XmlAttribute("TinhTrangRaVienStatus")]
        [Bindable(true)]
        public byte? TinhTrangRaVienStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("TinhTrang_RaVien_Status");
		    }
            set 
		    {
			    SetColumnValue("TinhTrang_RaVien_Status", value);
            }
        }
	      
        [XmlAttribute("GhiChuCv")]
        [Bindable(true)]
        public string GhiChuCv 
	    {
		    get
		    {
			    return GetColumnValue<string>("GhiChu_CV");
		    }
            set 
		    {
			    SetColumnValue("GhiChu_CV", value);
            }
        }
	      
        [XmlAttribute("MedicalNumber")]
        [Bindable(true)]
        public string MedicalNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("MedicalNumber");
		    }
            set 
		    {
			    SetColumnValue("MedicalNumber", value);
            }
        }
	      
        [XmlAttribute("TongSoNgayDtri")]
        [Bindable(true)]
        public int? TongSoNgayDtri 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Tong_SoNgay_Dtri");
		    }
            set 
		    {
			    SetColumnValue("Tong_SoNgay_Dtri", value);
            }
        }
	      
        [XmlAttribute("MaDoiTuong")]
        [Bindable(true)]
        public string MaDoiTuong 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ma_DoiTuong");
		    }
            set 
		    {
			    SetColumnValue("Ma_DoiTuong", value);
            }
        }
	      
        [XmlAttribute("THopStatus")]
        [Bindable(true)]
        public byte? THopStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("THop_Status");
		    }
            set 
		    {
			    SetColumnValue("THop_Status", value);
            }
        }
	      
        [XmlAttribute("KieuBn")]
        [Bindable(true)]
        public byte? KieuBn 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Kieu_BN");
		    }
            set 
		    {
			    SetColumnValue("Kieu_BN", value);
            }
        }
	      
        [XmlAttribute("IdKhoaTnhan")]
        [Bindable(true)]
        public int? IdKhoaTnhan 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ID_KHOA_TNHAN");
		    }
            set 
		    {
			    SetColumnValue("ID_KHOA_TNHAN", value);
            }
        }
	      
        [XmlAttribute("NgayNhapVien")]
        [Bindable(true)]
        public DateTime? NgayNhapVien 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("NGAY_NHAP_VIEN");
		    }
            set 
		    {
			    SetColumnValue("NGAY_NHAP_VIEN", value);
            }
        }
	      
        [XmlAttribute("SCreateDate")]
        [Bindable(true)]
        public string SCreateDate 
	    {
		    get
		    {
			    return GetColumnValue<string>("sCreate_Date");
		    }
            set 
		    {
			    SetColumnValue("sCreate_Date", value);
            }
        }
	      
        [XmlAttribute("SDepartmentId")]
        [Bindable(true)]
        public short? SDepartmentId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("sDepartment_ID");
		    }
            set 
		    {
			    SetColumnValue("sDepartment_ID", value);
            }
        }
	      
        [XmlAttribute("ExamId")]
        [Bindable(true)]
        public int? ExamId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Exam_ID");
		    }
            set 
		    {
			    SetColumnValue("Exam_ID", value);
            }
        }
	      
        [XmlAttribute("PatientName")]
        [Bindable(true)]
        public string PatientName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Name");
		    }
            set 
		    {
			    SetColumnValue("Patient_Name", value);
            }
        }
	      
        [XmlAttribute("PatientAddr")]
        [Bindable(true)]
        public string PatientAddr 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Addr");
		    }
            set 
		    {
			    SetColumnValue("Patient_Addr", value);
            }
        }
	      
        [XmlAttribute("ProvinceId")]
        [Bindable(true)]
        public string ProvinceId 
	    {
		    get
		    {
			    return GetColumnValue<string>("Province_ID");
		    }
            set 
		    {
			    SetColumnValue("Province_ID", value);
            }
        }
	      
        [XmlAttribute("DistrictId")]
        [Bindable(true)]
        public string DistrictId 
	    {
		    get
		    {
			    return GetColumnValue<string>("District_ID");
		    }
            set 
		    {
			    SetColumnValue("District_ID", value);
            }
        }
	      
        [XmlAttribute("PatientBirth")]
        [Bindable(true)]
        public DateTime? PatientBirth 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Patient_Birth");
		    }
            set 
		    {
			    SetColumnValue("Patient_Birth", value);
            }
        }
	      
        [XmlAttribute("YearOfBirth")]
        [Bindable(true)]
        public short? YearOfBirth 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Year_Of_Birth");
		    }
            set 
		    {
			    SetColumnValue("Year_Of_Birth", value);
            }
        }
	      
        [XmlAttribute("PatientSex")]
        [Bindable(true)]
        public byte PatientSex 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Patient_Sex");
		    }
            set 
		    {
			    SetColumnValue("Patient_Sex", value);
            }
        }
	      
        [XmlAttribute("PatientJob")]
        [Bindable(true)]
        public string PatientJob 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Job");
		    }
            set 
		    {
			    SetColumnValue("Patient_Job", value);
            }
        }
	      
        [XmlAttribute("Offices")]
        [Bindable(true)]
        public string Offices 
	    {
		    get
		    {
			    return GetColumnValue<string>("Offices");
		    }
            set 
		    {
			    SetColumnValue("Offices", value);
            }
        }
	      
        [XmlAttribute("IdentifyNum")]
        [Bindable(true)]
        public string IdentifyNum 
	    {
		    get
		    {
			    return GetColumnValue<string>("Identify_Num");
		    }
            set 
		    {
			    SetColumnValue("Identify_Num", value);
            }
        }
	      
        [XmlAttribute("CountryId")]
        [Bindable(true)]
        public short? CountryId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Country_ID");
		    }
            set 
		    {
			    SetColumnValue("Country_ID", value);
            }
        }
	      
        [XmlAttribute("PatientPhone")]
        [Bindable(true)]
        public string PatientPhone 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Phone");
		    }
            set 
		    {
			    SetColumnValue("Patient_Phone", value);
            }
        }
	      
        [XmlAttribute("PatientEmail")]
        [Bindable(true)]
        public string PatientEmail 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Email");
		    }
            set 
		    {
			    SetColumnValue("Patient_Email", value);
            }
        }
	      
        [XmlAttribute("Age")]
        [Bindable(true)]
        public int? Age 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Age");
		    }
            set 
		    {
			    SetColumnValue("Age", value);
            }
        }
	      
        [XmlAttribute("Status")]
        [Bindable(true)]
        public byte? Status 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Status");
		    }
            set 
		    {
			    SetColumnValue("Status", value);
            }
        }
	      
        [XmlAttribute("DepartmentName")]
        [Bindable(true)]
        public string DepartmentName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Department_Name");
		    }
            set 
		    {
			    SetColumnValue("Department_Name", value);
            }
        }
	      
        [XmlAttribute("RegDate")]
        [Bindable(true)]
        public DateTime? RegDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Reg_Date");
		    }
            set 
		    {
			    SetColumnValue("Reg_Date", value);
            }
        }
	      
        [XmlAttribute("ObjectTypeName")]
        [Bindable(true)]
        public string ObjectTypeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ObjectType_Name");
		    }
            set 
		    {
			    SetColumnValue("ObjectType_Name", value);
            }
        }
	      
        [XmlAttribute("TenLanKham")]
        [Bindable(true)]
        public string TenLanKham 
	    {
		    get
		    {
			    return GetColumnValue<string>("TEN_LAN_KHAM");
		    }
            set 
		    {
			    SetColumnValue("TEN_LAN_KHAM", value);
            }
        }
	      
        [XmlAttribute("MaLanKham")]
        [Bindable(true)]
        public string MaLanKham 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_LAN_KHAM");
		    }
            set 
		    {
			    SetColumnValue("MA_LAN_KHAM", value);
            }
        }
	      
        [XmlAttribute("TrongGoi")]
        [Bindable(true)]
        public int TrongGoi 
	    {
		    get
		    {
			    return GetColumnValue<int>("TRONG_GOI");
		    }
            set 
		    {
			    SetColumnValue("TRONG_GOI", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string RegId = @"Reg_ID";
            
            public static string MaKhoaThien = @"MA_KHOA_THIEN";
            
            public static string PaymentStatus = @"Payment_Status";
            
            public static string SoKham = @"So_Kham";
            
            public static string ObjectTypeCode = @"ObjectType_Code";
            
            public static string PaymentTypeId = @"PaymentType_ID";
            
            public static string PatientId = @"Patient_ID";
            
            public static string PatientCode = @"Patient_Code";
            
            public static string ObjectTypeId = @"ObjectType_ID";
            
            public static string HosTrans = @"Hos_Trans";
            
            public static string RelativeName = @"Relative_Name";
            
            public static string RelativePhone = @"Relative_Phone";
            
            public static string RelativeAddress = @"Relative_Address";
            
            public static string InsuranceNum = @"Insurance_Num";
            
            public static string InsuranceFromDate = @"Insurance_FromDate";
            
            public static string InsuranceToDate = @"Insurance_ToDate";
            
            public static string InsuranceSupply = @"Insurance_Supply";
            
            public static string InsClinicCode = @"InsClinic_Code";
            
            public static string InsObjectCode = @"InsObject_Code";
            
            public static string InsObjectCodeNumber = @"InsObject_CodeNumber";
            
            public static string InsObjectCodeTP = @"InsObject_CodeTP";
            
            public static string InsLastObjectCode = @"InsLastObject_Code";
            
            public static string InputDate = @"Input_Date";
            
            public static string UserId = @"User_ID";
            
            public static string HosStatus = @"Hos_status";
            
            public static string Desc = @"Desc";
            
            public static string Locked = @"Locked";
            
            public static string IndentityNo = @"Indentity_No";
            
            public static string OutDateTime = @"Out_DateTime";
            
            public static string DepartmentId = @"Department_ID";
            
            public static string SalaryBasic = @"Salary_Basic";
            
            public static string UnitId = @"Unit_ID";
            
            public static string EmergencyHos = @"Emergency_Hos";
            
            public static string ToHos = @"To_Hos";
            
            public static string PositionName = @"Position_Name";
            
            public static string Symptoms = @"Symptoms";
            
            public static string CorrectLine = @"CorrectLine";
            
            public static string ToClinicCode = @"To_ClinicCode";
            
            public static string KetQuaDt = @"KetQua_DT";
            
            public static string MBenhChinh = @"MBenh_Chinh";
            
            public static string MBenhPhu = @"MBenh_Phu";
            
            public static string MBenhSauPt = @"MBenh_Sau_PT";
            
            public static string MBenhTruocPt = @"MBenh_Truoc_PT";
            
            public static string TinhTrangRaVienStatus = @"TinhTrang_RaVien_Status";
            
            public static string GhiChuCv = @"GhiChu_CV";
            
            public static string MedicalNumber = @"MedicalNumber";
            
            public static string TongSoNgayDtri = @"Tong_SoNgay_Dtri";
            
            public static string MaDoiTuong = @"Ma_DoiTuong";
            
            public static string THopStatus = @"THop_Status";
            
            public static string KieuBn = @"Kieu_BN";
            
            public static string IdKhoaTnhan = @"ID_KHOA_TNHAN";
            
            public static string NgayNhapVien = @"NGAY_NHAP_VIEN";
            
            public static string SCreateDate = @"sCreate_Date";
            
            public static string SDepartmentId = @"sDepartment_ID";
            
            public static string ExamId = @"Exam_ID";
            
            public static string PatientName = @"Patient_Name";
            
            public static string PatientAddr = @"Patient_Addr";
            
            public static string ProvinceId = @"Province_ID";
            
            public static string DistrictId = @"District_ID";
            
            public static string PatientBirth = @"Patient_Birth";
            
            public static string YearOfBirth = @"Year_Of_Birth";
            
            public static string PatientSex = @"Patient_Sex";
            
            public static string PatientJob = @"Patient_Job";
            
            public static string Offices = @"Offices";
            
            public static string IdentifyNum = @"Identify_Num";
            
            public static string CountryId = @"Country_ID";
            
            public static string PatientPhone = @"Patient_Phone";
            
            public static string PatientEmail = @"Patient_Email";
            
            public static string Age = @"Age";
            
            public static string Status = @"Status";
            
            public static string DepartmentName = @"Department_Name";
            
            public static string RegDate = @"Reg_Date";
            
            public static string ObjectTypeName = @"ObjectType_Name";
            
            public static string TenLanKham = @"TEN_LAN_KHAM";
            
            public static string MaLanKham = @"MA_LAN_KHAM";
            
            public static string TrongGoi = @"TRONG_GOI";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
