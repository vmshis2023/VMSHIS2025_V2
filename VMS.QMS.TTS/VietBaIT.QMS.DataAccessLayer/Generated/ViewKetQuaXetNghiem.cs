using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewKetQuaXetNghiem class.
    /// </summary>
    [Serializable]
    public partial class ViewKetQuaXetNghiemCollection : ReadOnlyList<ViewKetQuaXetNghiem, ViewKetQuaXetNghiemCollection>
    {        
        public ViewKetQuaXetNghiemCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_KetQuaXetNghiem view.
    /// </summary>
    [Serializable]
    public partial class ViewKetQuaXetNghiem : ReadOnlyRecord<ViewKetQuaXetNghiem>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_KetQuaXetNghiem", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarIdKqChiTiet = new TableSchema.TableColumn(schema);
                colvarIdKqChiTiet.ColumnName = "ID_KQ_ChiTiet";
                colvarIdKqChiTiet.DataType = DbType.Int64;
                colvarIdKqChiTiet.MaxLength = 0;
                colvarIdKqChiTiet.AutoIncrement = false;
                colvarIdKqChiTiet.IsNullable = false;
                colvarIdKqChiTiet.IsPrimaryKey = false;
                colvarIdKqChiTiet.IsForeignKey = false;
                colvarIdKqChiTiet.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdKqChiTiet);
                
                TableSchema.TableColumn colvarAssignCode = new TableSchema.TableColumn(schema);
                colvarAssignCode.ColumnName = "Assign_Code";
                colvarAssignCode.DataType = DbType.String;
                colvarAssignCode.MaxLength = 50;
                colvarAssignCode.AutoIncrement = false;
                colvarAssignCode.IsNullable = true;
                colvarAssignCode.IsPrimaryKey = false;
                colvarAssignCode.IsForeignKey = false;
                colvarAssignCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignCode);
                
                TableSchema.TableColumn colvarIdChiDinh = new TableSchema.TableColumn(schema);
                colvarIdChiDinh.ColumnName = "ID_CHI_DINH";
                colvarIdChiDinh.DataType = DbType.Int32;
                colvarIdChiDinh.MaxLength = 0;
                colvarIdChiDinh.AutoIncrement = false;
                colvarIdChiDinh.IsNullable = false;
                colvarIdChiDinh.IsPrimaryKey = false;
                colvarIdChiDinh.IsForeignKey = false;
                colvarIdChiDinh.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdChiDinh);
                
                TableSchema.TableColumn colvarBarCode = new TableSchema.TableColumn(schema);
                colvarBarCode.ColumnName = "BarCode";
                colvarBarCode.DataType = DbType.AnsiString;
                colvarBarCode.MaxLength = 50;
                colvarBarCode.AutoIncrement = false;
                colvarBarCode.IsNullable = true;
                colvarBarCode.IsPrimaryKey = false;
                colvarBarCode.IsForeignKey = false;
                colvarBarCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBarCode);
                
                TableSchema.TableColumn colvarSoThuTuIn = new TableSchema.TableColumn(schema);
                colvarSoThuTuIn.ColumnName = "So_Thu_Tu_In";
                colvarSoThuTuIn.DataType = DbType.Int32;
                colvarSoThuTuIn.MaxLength = 0;
                colvarSoThuTuIn.AutoIncrement = false;
                colvarSoThuTuIn.IsNullable = true;
                colvarSoThuTuIn.IsPrimaryKey = false;
                colvarSoThuTuIn.IsForeignKey = false;
                colvarSoThuTuIn.IsReadOnly = false;
                
                schema.Columns.Add(colvarSoThuTuIn);
                
                TableSchema.TableColumn colvarKetQua = new TableSchema.TableColumn(schema);
                colvarKetQua.ColumnName = "Ket_Qua";
                colvarKetQua.DataType = DbType.String;
                colvarKetQua.MaxLength = 200;
                colvarKetQua.AutoIncrement = false;
                colvarKetQua.IsNullable = true;
                colvarKetQua.IsPrimaryKey = false;
                colvarKetQua.IsForeignKey = false;
                colvarKetQua.IsReadOnly = false;
                
                schema.Columns.Add(colvarKetQua);
                
                TableSchema.TableColumn colvarTbNu = new TableSchema.TableColumn(schema);
                colvarTbNu.ColumnName = "TB_Nu";
                colvarTbNu.DataType = DbType.String;
                colvarTbNu.MaxLength = 200;
                colvarTbNu.AutoIncrement = false;
                colvarTbNu.IsNullable = true;
                colvarTbNu.IsPrimaryKey = false;
                colvarTbNu.IsForeignKey = false;
                colvarTbNu.IsReadOnly = false;
                
                schema.Columns.Add(colvarTbNu);
                
                TableSchema.TableColumn colvarTbNam = new TableSchema.TableColumn(schema);
                colvarTbNam.ColumnName = "TB_Nam";
                colvarTbNam.DataType = DbType.String;
                colvarTbNam.MaxLength = 200;
                colvarTbNam.AutoIncrement = false;
                colvarTbNam.IsNullable = true;
                colvarTbNam.IsPrimaryKey = false;
                colvarTbNam.IsForeignKey = false;
                colvarTbNam.IsReadOnly = false;
                
                schema.Columns.Add(colvarTbNam);
                
                TableSchema.TableColumn colvarDonVi = new TableSchema.TableColumn(schema);
                colvarDonVi.ColumnName = "Don_Vi";
                colvarDonVi.DataType = DbType.String;
                colvarDonVi.MaxLength = 50;
                colvarDonVi.AutoIncrement = false;
                colvarDonVi.IsNullable = true;
                colvarDonVi.IsPrimaryKey = false;
                colvarDonVi.IsForeignKey = false;
                colvarDonVi.IsReadOnly = false;
                
                schema.Columns.Add(colvarDonVi);
                
                TableSchema.TableColumn colvarTenThongSo = new TableSchema.TableColumn(schema);
                colvarTenThongSo.ColumnName = "Ten_Thong_So";
                colvarTenThongSo.DataType = DbType.String;
                colvarTenThongSo.MaxLength = 50;
                colvarTenThongSo.AutoIncrement = false;
                colvarTenThongSo.IsNullable = true;
                colvarTenThongSo.IsPrimaryKey = false;
                colvarTenThongSo.IsForeignKey = false;
                colvarTenThongSo.IsReadOnly = false;
                
                schema.Columns.Add(colvarTenThongSo);
                
                TableSchema.TableColumn colvarTenKq = new TableSchema.TableColumn(schema);
                colvarTenKq.ColumnName = "Ten_KQ";
                colvarTenKq.DataType = DbType.String;
                colvarTenKq.MaxLength = 50;
                colvarTenKq.AutoIncrement = false;
                colvarTenKq.IsNullable = true;
                colvarTenKq.IsPrimaryKey = false;
                colvarTenKq.IsForeignKey = false;
                colvarTenKq.IsReadOnly = false;
                
                schema.Columns.Add(colvarTenKq);
                
                TableSchema.TableColumn colvarLoaiKq = new TableSchema.TableColumn(schema);
                colvarLoaiKq.ColumnName = "Loai_KQ";
                colvarLoaiKq.DataType = DbType.Int32;
                colvarLoaiKq.MaxLength = 0;
                colvarLoaiKq.AutoIncrement = false;
                colvarLoaiKq.IsNullable = true;
                colvarLoaiKq.IsPrimaryKey = false;
                colvarLoaiKq.IsForeignKey = false;
                colvarLoaiKq.IsReadOnly = false;
                
                schema.Columns.Add(colvarLoaiKq);
                
                TableSchema.TableColumn colvarChoPhepHienThi = new TableSchema.TableColumn(schema);
                colvarChoPhepHienThi.ColumnName = "Cho_Phep_Hien_Thi";
                colvarChoPhepHienThi.DataType = DbType.Int32;
                colvarChoPhepHienThi.MaxLength = 0;
                colvarChoPhepHienThi.AutoIncrement = false;
                colvarChoPhepHienThi.IsNullable = true;
                colvarChoPhepHienThi.IsPrimaryKey = false;
                colvarChoPhepHienThi.IsForeignKey = false;
                colvarChoPhepHienThi.IsReadOnly = false;
                
                schema.Columns.Add(colvarChoPhepHienThi);
                
                TableSchema.TableColumn colvarChoPhepIn = new TableSchema.TableColumn(schema);
                colvarChoPhepIn.ColumnName = "Cho_Phep_In";
                colvarChoPhepIn.DataType = DbType.Int32;
                colvarChoPhepIn.MaxLength = 0;
                colvarChoPhepIn.AutoIncrement = false;
                colvarChoPhepIn.IsNullable = true;
                colvarChoPhepIn.IsPrimaryKey = false;
                colvarChoPhepIn.IsForeignKey = false;
                colvarChoPhepIn.IsReadOnly = false;
                
                schema.Columns.Add(colvarChoPhepIn);
                
                TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
                colvarGhiChu.ColumnName = "Ghi_Chu";
                colvarGhiChu.DataType = DbType.String;
                colvarGhiChu.MaxLength = 100;
                colvarGhiChu.AutoIncrement = false;
                colvarGhiChu.IsNullable = true;
                colvarGhiChu.IsPrimaryKey = false;
                colvarGhiChu.IsForeignKey = false;
                colvarGhiChu.IsReadOnly = false;
                
                schema.Columns.Add(colvarGhiChu);
                
                TableSchema.TableColumn colvarLoaiXn = new TableSchema.TableColumn(schema);
                colvarLoaiXn.ColumnName = "Loai_XN";
                colvarLoaiXn.DataType = DbType.Int32;
                colvarLoaiXn.MaxLength = 0;
                colvarLoaiXn.AutoIncrement = false;
                colvarLoaiXn.IsNullable = true;
                colvarLoaiXn.IsPrimaryKey = false;
                colvarLoaiXn.IsForeignKey = false;
                colvarLoaiXn.IsReadOnly = false;
                
                schema.Columns.Add(colvarLoaiXn);
                
                TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
                colvarServiceId.ColumnName = "Service_ID";
                colvarServiceId.DataType = DbType.Int16;
                colvarServiceId.MaxLength = 0;
                colvarServiceId.AutoIncrement = false;
                colvarServiceId.IsNullable = true;
                colvarServiceId.IsPrimaryKey = false;
                colvarServiceId.IsForeignKey = false;
                colvarServiceId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceId);
                
                TableSchema.TableColumn colvarSIntOrder = new TableSchema.TableColumn(schema);
                colvarSIntOrder.ColumnName = "sIntOrder";
                colvarSIntOrder.DataType = DbType.Int32;
                colvarSIntOrder.MaxLength = 0;
                colvarSIntOrder.AutoIncrement = false;
                colvarSIntOrder.IsNullable = true;
                colvarSIntOrder.IsPrimaryKey = false;
                colvarSIntOrder.IsForeignKey = false;
                colvarSIntOrder.IsReadOnly = false;
                
                schema.Columns.Add(colvarSIntOrder);
                
                TableSchema.TableColumn colvarServiceName = new TableSchema.TableColumn(schema);
                colvarServiceName.ColumnName = "SERVICE_NAME";
                colvarServiceName.DataType = DbType.String;
                colvarServiceName.MaxLength = 300;
                colvarServiceName.AutoIncrement = false;
                colvarServiceName.IsNullable = true;
                colvarServiceName.IsPrimaryKey = false;
                colvarServiceName.IsForeignKey = false;
                colvarServiceName.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceName);
                
                TableSchema.TableColumn colvarGroupIntOrder = new TableSchema.TableColumn(schema);
                colvarGroupIntOrder.ColumnName = "GroupIntOrder";
                colvarGroupIntOrder.DataType = DbType.Int16;
                colvarGroupIntOrder.MaxLength = 0;
                colvarGroupIntOrder.AutoIncrement = false;
                colvarGroupIntOrder.IsNullable = true;
                colvarGroupIntOrder.IsPrimaryKey = false;
                colvarGroupIntOrder.IsForeignKey = false;
                colvarGroupIntOrder.IsReadOnly = false;
                
                schema.Columns.Add(colvarGroupIntOrder);
                
                TableSchema.TableColumn colvarPatientDeptId = new TableSchema.TableColumn(schema);
                colvarPatientDeptId.ColumnName = "PatientDept_ID";
                colvarPatientDeptId.DataType = DbType.Int32;
                colvarPatientDeptId.MaxLength = 0;
                colvarPatientDeptId.AutoIncrement = false;
                colvarPatientDeptId.IsNullable = true;
                colvarPatientDeptId.IsPrimaryKey = false;
                colvarPatientDeptId.IsForeignKey = false;
                colvarPatientDeptId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientDeptId);
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_Code";
                colvarPatientCode.DataType = DbType.AnsiString;
                colvarPatientCode.MaxLength = 20;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = false;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarExamId = new TableSchema.TableColumn(schema);
                colvarExamId.ColumnName = "Exam_ID";
                colvarExamId.DataType = DbType.Int64;
                colvarExamId.MaxLength = 0;
                colvarExamId.AutoIncrement = false;
                colvarExamId.IsNullable = true;
                colvarExamId.IsPrimaryKey = false;
                colvarExamId.IsForeignKey = false;
                colvarExamId.IsReadOnly = false;
                
                schema.Columns.Add(colvarExamId);
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Int64;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = false;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarDiagPerson = new TableSchema.TableColumn(schema);
                colvarDiagPerson.ColumnName = "Diag_Person";
                colvarDiagPerson.DataType = DbType.Int16;
                colvarDiagPerson.MaxLength = 0;
                colvarDiagPerson.AutoIncrement = false;
                colvarDiagPerson.IsNullable = true;
                colvarDiagPerson.IsPrimaryKey = false;
                colvarDiagPerson.IsForeignKey = false;
                colvarDiagPerson.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiagPerson);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("view_KetQuaXetNghiem",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewKetQuaXetNghiem()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewKetQuaXetNghiem(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewKetQuaXetNghiem(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewKetQuaXetNghiem(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("IdKqChiTiet")]
        [Bindable(true)]
        public long IdKqChiTiet 
	    {
		    get
		    {
			    return GetColumnValue<long>("ID_KQ_ChiTiet");
		    }
            set 
		    {
			    SetColumnValue("ID_KQ_ChiTiet", value);
            }
        }
	      
        [XmlAttribute("AssignCode")]
        [Bindable(true)]
        public string AssignCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Assign_Code");
		    }
            set 
		    {
			    SetColumnValue("Assign_Code", value);
            }
        }
	      
        [XmlAttribute("IdChiDinh")]
        [Bindable(true)]
        public int IdChiDinh 
	    {
		    get
		    {
			    return GetColumnValue<int>("ID_CHI_DINH");
		    }
            set 
		    {
			    SetColumnValue("ID_CHI_DINH", value);
            }
        }
	      
        [XmlAttribute("BarCode")]
        [Bindable(true)]
        public string BarCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("BarCode");
		    }
            set 
		    {
			    SetColumnValue("BarCode", value);
            }
        }
	      
        [XmlAttribute("SoThuTuIn")]
        [Bindable(true)]
        public int? SoThuTuIn 
	    {
		    get
		    {
			    return GetColumnValue<int?>("So_Thu_Tu_In");
		    }
            set 
		    {
			    SetColumnValue("So_Thu_Tu_In", value);
            }
        }
	      
        [XmlAttribute("KetQua")]
        [Bindable(true)]
        public string KetQua 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ket_Qua");
		    }
            set 
		    {
			    SetColumnValue("Ket_Qua", value);
            }
        }
	      
        [XmlAttribute("TbNu")]
        [Bindable(true)]
        public string TbNu 
	    {
		    get
		    {
			    return GetColumnValue<string>("TB_Nu");
		    }
            set 
		    {
			    SetColumnValue("TB_Nu", value);
            }
        }
	      
        [XmlAttribute("TbNam")]
        [Bindable(true)]
        public string TbNam 
	    {
		    get
		    {
			    return GetColumnValue<string>("TB_Nam");
		    }
            set 
		    {
			    SetColumnValue("TB_Nam", value);
            }
        }
	      
        [XmlAttribute("DonVi")]
        [Bindable(true)]
        public string DonVi 
	    {
		    get
		    {
			    return GetColumnValue<string>("Don_Vi");
		    }
            set 
		    {
			    SetColumnValue("Don_Vi", value);
            }
        }
	      
        [XmlAttribute("TenThongSo")]
        [Bindable(true)]
        public string TenThongSo 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ten_Thong_So");
		    }
            set 
		    {
			    SetColumnValue("Ten_Thong_So", value);
            }
        }
	      
        [XmlAttribute("TenKq")]
        [Bindable(true)]
        public string TenKq 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ten_KQ");
		    }
            set 
		    {
			    SetColumnValue("Ten_KQ", value);
            }
        }
	      
        [XmlAttribute("LoaiKq")]
        [Bindable(true)]
        public int? LoaiKq 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Loai_KQ");
		    }
            set 
		    {
			    SetColumnValue("Loai_KQ", value);
            }
        }
	      
        [XmlAttribute("ChoPhepHienThi")]
        [Bindable(true)]
        public int? ChoPhepHienThi 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Cho_Phep_Hien_Thi");
		    }
            set 
		    {
			    SetColumnValue("Cho_Phep_Hien_Thi", value);
            }
        }
	      
        [XmlAttribute("ChoPhepIn")]
        [Bindable(true)]
        public int? ChoPhepIn 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Cho_Phep_In");
		    }
            set 
		    {
			    SetColumnValue("Cho_Phep_In", value);
            }
        }
	      
        [XmlAttribute("GhiChu")]
        [Bindable(true)]
        public string GhiChu 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ghi_Chu");
		    }
            set 
		    {
			    SetColumnValue("Ghi_Chu", value);
            }
        }
	      
        [XmlAttribute("LoaiXn")]
        [Bindable(true)]
        public int? LoaiXn 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Loai_XN");
		    }
            set 
		    {
			    SetColumnValue("Loai_XN", value);
            }
        }
	      
        [XmlAttribute("ServiceId")]
        [Bindable(true)]
        public short? ServiceId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Service_ID");
		    }
            set 
		    {
			    SetColumnValue("Service_ID", value);
            }
        }
	      
        [XmlAttribute("SIntOrder")]
        [Bindable(true)]
        public int? SIntOrder 
	    {
		    get
		    {
			    return GetColumnValue<int?>("sIntOrder");
		    }
            set 
		    {
			    SetColumnValue("sIntOrder", value);
            }
        }
	      
        [XmlAttribute("ServiceName")]
        [Bindable(true)]
        public string ServiceName 
	    {
		    get
		    {
			    return GetColumnValue<string>("SERVICE_NAME");
		    }
            set 
		    {
			    SetColumnValue("SERVICE_NAME", value);
            }
        }
	      
        [XmlAttribute("GroupIntOrder")]
        [Bindable(true)]
        public short? GroupIntOrder 
	    {
		    get
		    {
			    return GetColumnValue<short?>("GroupIntOrder");
		    }
            set 
		    {
			    SetColumnValue("GroupIntOrder", value);
            }
        }
	      
        [XmlAttribute("PatientDeptId")]
        [Bindable(true)]
        public int? PatientDeptId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PatientDept_ID");
		    }
            set 
		    {
			    SetColumnValue("PatientDept_ID", value);
            }
        }
	      
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Code");
		    }
            set 
		    {
			    SetColumnValue("Patient_Code", value);
            }
        }
	      
        [XmlAttribute("ExamId")]
        [Bindable(true)]
        public long? ExamId 
	    {
		    get
		    {
			    return GetColumnValue<long?>("Exam_ID");
		    }
            set 
		    {
			    SetColumnValue("Exam_ID", value);
            }
        }
	      
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public long PatientId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("DiagPerson")]
        [Bindable(true)]
        public short? DiagPerson 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Diag_Person");
		    }
            set 
		    {
			    SetColumnValue("Diag_Person", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string IdKqChiTiet = @"ID_KQ_ChiTiet";
            
            public static string AssignCode = @"Assign_Code";
            
            public static string IdChiDinh = @"ID_CHI_DINH";
            
            public static string BarCode = @"BarCode";
            
            public static string SoThuTuIn = @"So_Thu_Tu_In";
            
            public static string KetQua = @"Ket_Qua";
            
            public static string TbNu = @"TB_Nu";
            
            public static string TbNam = @"TB_Nam";
            
            public static string DonVi = @"Don_Vi";
            
            public static string TenThongSo = @"Ten_Thong_So";
            
            public static string TenKq = @"Ten_KQ";
            
            public static string LoaiKq = @"Loai_KQ";
            
            public static string ChoPhepHienThi = @"Cho_Phep_Hien_Thi";
            
            public static string ChoPhepIn = @"Cho_Phep_In";
            
            public static string GhiChu = @"Ghi_Chu";
            
            public static string LoaiXn = @"Loai_XN";
            
            public static string ServiceId = @"Service_ID";
            
            public static string SIntOrder = @"sIntOrder";
            
            public static string ServiceName = @"SERVICE_NAME";
            
            public static string GroupIntOrder = @"GroupIntOrder";
            
            public static string PatientDeptId = @"PatientDept_ID";
            
            public static string PatientCode = @"Patient_Code";
            
            public static string ExamId = @"Exam_ID";
            
            public static string PatientId = @"Patient_ID";
            
            public static string DiagPerson = @"Diag_Person";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
