using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the LMauDichVuThuoc class.
	/// </summary>
    [Serializable]
	public partial class LMauDichVuThuocCollection : ActiveList<LMauDichVuThuoc, LMauDichVuThuocCollection>
	{	   
		public LMauDichVuThuocCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>LMauDichVuThuocCollection</returns>
		public LMauDichVuThuocCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                LMauDichVuThuoc o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the L_Mau_DichVu_Thuoc table.
	/// </summary>
	[Serializable]
	public partial class LMauDichVuThuoc : ActiveRecord<LMauDichVuThuoc>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public LMauDichVuThuoc()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public LMauDichVuThuoc(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public LMauDichVuThuoc(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public LMauDichVuThuoc(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("L_Mau_DichVu_Thuoc", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "ID";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarCode = new TableSchema.TableColumn(schema);
				colvarCode.ColumnName = "Code";
				colvarCode.DataType = DbType.String;
				colvarCode.MaxLength = 50;
				colvarCode.AutoIncrement = false;
				colvarCode.IsNullable = true;
				colvarCode.IsPrimaryKey = false;
				colvarCode.IsForeignKey = false;
				colvarCode.IsReadOnly = false;
				colvarCode.DefaultSetting = @"";
				colvarCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCode);
				
				TableSchema.TableColumn colvarTenMau = new TableSchema.TableColumn(schema);
				colvarTenMau.ColumnName = "Ten_Mau";
				colvarTenMau.DataType = DbType.String;
				colvarTenMau.MaxLength = 50;
				colvarTenMau.AutoIncrement = false;
				colvarTenMau.IsNullable = true;
				colvarTenMau.IsPrimaryKey = false;
				colvarTenMau.IsForeignKey = false;
				colvarTenMau.IsReadOnly = false;
				colvarTenMau.DefaultSetting = @"";
				colvarTenMau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenMau);
				
				TableSchema.TableColumn colvarParentId = new TableSchema.TableColumn(schema);
				colvarParentId.ColumnName = "Parent_ID";
				colvarParentId.DataType = DbType.Int32;
				colvarParentId.MaxLength = 0;
				colvarParentId.AutoIncrement = false;
				colvarParentId.IsNullable = true;
				colvarParentId.IsPrimaryKey = false;
				colvarParentId.IsForeignKey = false;
				colvarParentId.IsReadOnly = false;
				colvarParentId.DefaultSetting = @"";
				colvarParentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarParentId);
				
				TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
				colvarServiceId.ColumnName = "Service_ID";
				colvarServiceId.DataType = DbType.Int32;
				colvarServiceId.MaxLength = 0;
				colvarServiceId.AutoIncrement = false;
				colvarServiceId.IsNullable = true;
				colvarServiceId.IsPrimaryKey = false;
				colvarServiceId.IsForeignKey = false;
				colvarServiceId.IsReadOnly = false;
				colvarServiceId.DefaultSetting = @"";
				colvarServiceId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceId);
				
				TableSchema.TableColumn colvarServiceDetailId = new TableSchema.TableColumn(schema);
				colvarServiceDetailId.ColumnName = "ServiceDetail_ID";
				colvarServiceDetailId.DataType = DbType.Int32;
				colvarServiceDetailId.MaxLength = 0;
				colvarServiceDetailId.AutoIncrement = false;
				colvarServiceDetailId.IsNullable = true;
				colvarServiceDetailId.IsPrimaryKey = false;
				colvarServiceDetailId.IsForeignKey = false;
				colvarServiceDetailId.IsReadOnly = false;
				colvarServiceDetailId.DefaultSetting = @"";
				colvarServiceDetailId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceDetailId);
				
				TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
				colvarQuantity.ColumnName = "Quantity";
				colvarQuantity.DataType = DbType.Int32;
				colvarQuantity.MaxLength = 0;
				colvarQuantity.AutoIncrement = false;
				colvarQuantity.IsNullable = true;
				colvarQuantity.IsPrimaryKey = false;
				colvarQuantity.IsForeignKey = false;
				colvarQuantity.IsReadOnly = false;
				colvarQuantity.DefaultSetting = @"";
				colvarQuantity.ForeignKeyTableName = "";
				schema.Columns.Add(colvarQuantity);
				
				TableSchema.TableColumn colvarStaffId = new TableSchema.TableColumn(schema);
				colvarStaffId.ColumnName = "Staff_ID";
				colvarStaffId.DataType = DbType.Int32;
				colvarStaffId.MaxLength = 0;
				colvarStaffId.AutoIncrement = false;
				colvarStaffId.IsNullable = true;
				colvarStaffId.IsPrimaryKey = false;
				colvarStaffId.IsForeignKey = false;
				colvarStaffId.IsReadOnly = false;
				colvarStaffId.DefaultSetting = @"";
				colvarStaffId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStaffId);
				
				TableSchema.TableColumn colvarDeparmentId = new TableSchema.TableColumn(schema);
				colvarDeparmentId.ColumnName = "Deparment_ID";
				colvarDeparmentId.DataType = DbType.Int32;
				colvarDeparmentId.MaxLength = 0;
				colvarDeparmentId.AutoIncrement = false;
				colvarDeparmentId.IsNullable = true;
				colvarDeparmentId.IsPrimaryKey = false;
				colvarDeparmentId.IsForeignKey = false;
				colvarDeparmentId.IsReadOnly = false;
				colvarDeparmentId.DefaultSetting = @"";
				colvarDeparmentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDeparmentId);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "Ngay_Tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "Nguoi_Tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "Nguoi_Sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "Ngay_Sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarKieuMau = new TableSchema.TableColumn(schema);
				colvarKieuMau.ColumnName = "Kieu_Mau";
				colvarKieuMau.DataType = DbType.String;
				colvarKieuMau.MaxLength = 50;
				colvarKieuMau.AutoIncrement = false;
				colvarKieuMau.IsNullable = true;
				colvarKieuMau.IsPrimaryKey = false;
				colvarKieuMau.IsForeignKey = false;
				colvarKieuMau.IsReadOnly = false;
				colvarKieuMau.DefaultSetting = @"";
				colvarKieuMau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuMau);
				
				TableSchema.TableColumn colvarChiDan = new TableSchema.TableColumn(schema);
				colvarChiDan.ColumnName = "Chi_Dan";
				colvarChiDan.DataType = DbType.String;
				colvarChiDan.MaxLength = 500;
				colvarChiDan.AutoIncrement = false;
				colvarChiDan.IsNullable = true;
				colvarChiDan.IsPrimaryKey = false;
				colvarChiDan.IsForeignKey = false;
				colvarChiDan.IsReadOnly = false;
				colvarChiDan.DefaultSetting = @"";
				colvarChiDan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChiDan);
				
				TableSchema.TableColumn colvarMaDoiTuong = new TableSchema.TableColumn(schema);
				colvarMaDoiTuong.ColumnName = "MA_DOI_TUONG";
				colvarMaDoiTuong.DataType = DbType.String;
				colvarMaDoiTuong.MaxLength = 50;
				colvarMaDoiTuong.AutoIncrement = false;
				colvarMaDoiTuong.IsNullable = true;
				colvarMaDoiTuong.IsPrimaryKey = false;
				colvarMaDoiTuong.IsForeignKey = false;
				colvarMaDoiTuong.IsReadOnly = false;
				colvarMaDoiTuong.DefaultSetting = @"";
				colvarMaDoiTuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDoiTuong);
				
				TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
				colvarTrongGoi.ColumnName = "TRONG_GOI";
				colvarTrongGoi.DataType = DbType.Byte;
				colvarTrongGoi.MaxLength = 0;
				colvarTrongGoi.AutoIncrement = false;
				colvarTrongGoi.IsNullable = true;
				colvarTrongGoi.IsPrimaryKey = false;
				colvarTrongGoi.IsForeignKey = false;
				colvarTrongGoi.IsReadOnly = false;
				
						colvarTrongGoi.DefaultSetting = @"((0))";
				colvarTrongGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrongGoi);
				
				TableSchema.TableColumn colvarCachDung = new TableSchema.TableColumn(schema);
				colvarCachDung.ColumnName = "CACH_DUNG";
				colvarCachDung.DataType = DbType.String;
				colvarCachDung.MaxLength = 20;
				colvarCachDung.AutoIncrement = false;
				colvarCachDung.IsNullable = true;
				colvarCachDung.IsPrimaryKey = false;
				colvarCachDung.IsForeignKey = false;
				colvarCachDung.IsReadOnly = false;
				colvarCachDung.DefaultSetting = @"";
				colvarCachDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCachDung);
				
				TableSchema.TableColumn colvarChiDanThem = new TableSchema.TableColumn(schema);
				colvarChiDanThem.ColumnName = "CHI_DAN_THEM";
				colvarChiDanThem.DataType = DbType.String;
				colvarChiDanThem.MaxLength = 255;
				colvarChiDanThem.AutoIncrement = false;
				colvarChiDanThem.IsNullable = true;
				colvarChiDanThem.IsPrimaryKey = false;
				colvarChiDanThem.IsForeignKey = false;
				colvarChiDanThem.IsReadOnly = false;
				colvarChiDanThem.DefaultSetting = @"";
				colvarChiDanThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChiDanThem);
				
				TableSchema.TableColumn colvarDviDung = new TableSchema.TableColumn(schema);
				colvarDviDung.ColumnName = "DVI_DUNG";
				colvarDviDung.DataType = DbType.String;
				colvarDviDung.MaxLength = 20;
				colvarDviDung.AutoIncrement = false;
				colvarDviDung.IsNullable = true;
				colvarDviDung.IsPrimaryKey = false;
				colvarDviDung.IsForeignKey = false;
				colvarDviDung.IsReadOnly = false;
				colvarDviDung.DefaultSetting = @"";
				colvarDviDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDviDung);
				
				TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
				colvarIsPayment.ColumnName = "IsPayment";
				colvarIsPayment.DataType = DbType.Byte;
				colvarIsPayment.MaxLength = 0;
				colvarIsPayment.AutoIncrement = false;
				colvarIsPayment.IsNullable = true;
				colvarIsPayment.IsPrimaryKey = false;
				colvarIsPayment.IsForeignKey = false;
				colvarIsPayment.IsReadOnly = false;
				
						colvarIsPayment.DefaultSetting = @"((0))";
				colvarIsPayment.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsPayment);
				
				TableSchema.TableColumn colvarSoLuongDung = new TableSchema.TableColumn(schema);
				colvarSoLuongDung.ColumnName = "SO_LUONG_DUNG";
				colvarSoLuongDung.DataType = DbType.String;
				colvarSoLuongDung.MaxLength = 20;
				colvarSoLuongDung.AutoIncrement = false;
				colvarSoLuongDung.IsNullable = true;
				colvarSoLuongDung.IsPrimaryKey = false;
				colvarSoLuongDung.IsForeignKey = false;
				colvarSoLuongDung.IsReadOnly = false;
				colvarSoLuongDung.DefaultSetting = @"";
				colvarSoLuongDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuongDung);
				
				TableSchema.TableColumn colvarSoLanDung = new TableSchema.TableColumn(schema);
				colvarSoLanDung.ColumnName = "SO_LAN_DUNG";
				colvarSoLanDung.DataType = DbType.String;
				colvarSoLanDung.MaxLength = 20;
				colvarSoLanDung.AutoIncrement = false;
				colvarSoLanDung.IsNullable = true;
				colvarSoLanDung.IsPrimaryKey = false;
				colvarSoLanDung.IsForeignKey = false;
				colvarSoLanDung.IsReadOnly = false;
				colvarSoLanDung.DefaultSetting = @"";
				colvarSoLanDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLanDung);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("L_Mau_DichVu_Thuoc",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("Code")]
		[Bindable(true)]
		public string Code 
		{
			get { return GetColumnValue<string>(Columns.Code); }
			set { SetColumnValue(Columns.Code, value); }
		}
		  
		[XmlAttribute("TenMau")]
		[Bindable(true)]
		public string TenMau 
		{
			get { return GetColumnValue<string>(Columns.TenMau); }
			set { SetColumnValue(Columns.TenMau, value); }
		}
		  
		[XmlAttribute("ParentId")]
		[Bindable(true)]
		public int? ParentId 
		{
			get { return GetColumnValue<int?>(Columns.ParentId); }
			set { SetColumnValue(Columns.ParentId, value); }
		}
		  
		[XmlAttribute("ServiceId")]
		[Bindable(true)]
		public int? ServiceId 
		{
			get { return GetColumnValue<int?>(Columns.ServiceId); }
			set { SetColumnValue(Columns.ServiceId, value); }
		}
		  
		[XmlAttribute("ServiceDetailId")]
		[Bindable(true)]
		public int? ServiceDetailId 
		{
			get { return GetColumnValue<int?>(Columns.ServiceDetailId); }
			set { SetColumnValue(Columns.ServiceDetailId, value); }
		}
		  
		[XmlAttribute("Quantity")]
		[Bindable(true)]
		public int? Quantity 
		{
			get { return GetColumnValue<int?>(Columns.Quantity); }
			set { SetColumnValue(Columns.Quantity, value); }
		}
		  
		[XmlAttribute("StaffId")]
		[Bindable(true)]
		public int? StaffId 
		{
			get { return GetColumnValue<int?>(Columns.StaffId); }
			set { SetColumnValue(Columns.StaffId, value); }
		}
		  
		[XmlAttribute("DeparmentId")]
		[Bindable(true)]
		public int? DeparmentId 
		{
			get { return GetColumnValue<int?>(Columns.DeparmentId); }
			set { SetColumnValue(Columns.DeparmentId, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("KieuMau")]
		[Bindable(true)]
		public string KieuMau 
		{
			get { return GetColumnValue<string>(Columns.KieuMau); }
			set { SetColumnValue(Columns.KieuMau, value); }
		}
		  
		[XmlAttribute("ChiDan")]
		[Bindable(true)]
		public string ChiDan 
		{
			get { return GetColumnValue<string>(Columns.ChiDan); }
			set { SetColumnValue(Columns.ChiDan, value); }
		}
		  
		[XmlAttribute("MaDoiTuong")]
		[Bindable(true)]
		public string MaDoiTuong 
		{
			get { return GetColumnValue<string>(Columns.MaDoiTuong); }
			set { SetColumnValue(Columns.MaDoiTuong, value); }
		}
		  
		[XmlAttribute("TrongGoi")]
		[Bindable(true)]
		public byte? TrongGoi 
		{
			get { return GetColumnValue<byte?>(Columns.TrongGoi); }
			set { SetColumnValue(Columns.TrongGoi, value); }
		}
		  
		[XmlAttribute("CachDung")]
		[Bindable(true)]
		public string CachDung 
		{
			get { return GetColumnValue<string>(Columns.CachDung); }
			set { SetColumnValue(Columns.CachDung, value); }
		}
		  
		[XmlAttribute("ChiDanThem")]
		[Bindable(true)]
		public string ChiDanThem 
		{
			get { return GetColumnValue<string>(Columns.ChiDanThem); }
			set { SetColumnValue(Columns.ChiDanThem, value); }
		}
		  
		[XmlAttribute("DviDung")]
		[Bindable(true)]
		public string DviDung 
		{
			get { return GetColumnValue<string>(Columns.DviDung); }
			set { SetColumnValue(Columns.DviDung, value); }
		}
		  
		[XmlAttribute("IsPayment")]
		[Bindable(true)]
		public byte? IsPayment 
		{
			get { return GetColumnValue<byte?>(Columns.IsPayment); }
			set { SetColumnValue(Columns.IsPayment, value); }
		}
		  
		[XmlAttribute("SoLuongDung")]
		[Bindable(true)]
		public string SoLuongDung 
		{
			get { return GetColumnValue<string>(Columns.SoLuongDung); }
			set { SetColumnValue(Columns.SoLuongDung, value); }
		}
		  
		[XmlAttribute("SoLanDung")]
		[Bindable(true)]
		public string SoLanDung 
		{
			get { return GetColumnValue<string>(Columns.SoLanDung); }
			set { SetColumnValue(Columns.SoLanDung, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varCode,string varTenMau,int? varParentId,int? varServiceId,int? varServiceDetailId,int? varQuantity,int? varStaffId,int? varDeparmentId,DateTime? varNgayTao,string varNguoiTao,string varNguoiSua,DateTime? varNgaySua,string varKieuMau,string varChiDan,string varMaDoiTuong,byte? varTrongGoi,string varCachDung,string varChiDanThem,string varDviDung,byte? varIsPayment,string varSoLuongDung,string varSoLanDung)
		{
			LMauDichVuThuoc item = new LMauDichVuThuoc();
			
			item.Code = varCode;
			
			item.TenMau = varTenMau;
			
			item.ParentId = varParentId;
			
			item.ServiceId = varServiceId;
			
			item.ServiceDetailId = varServiceDetailId;
			
			item.Quantity = varQuantity;
			
			item.StaffId = varStaffId;
			
			item.DeparmentId = varDeparmentId;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.KieuMau = varKieuMau;
			
			item.ChiDan = varChiDan;
			
			item.MaDoiTuong = varMaDoiTuong;
			
			item.TrongGoi = varTrongGoi;
			
			item.CachDung = varCachDung;
			
			item.ChiDanThem = varChiDanThem;
			
			item.DviDung = varDviDung;
			
			item.IsPayment = varIsPayment;
			
			item.SoLuongDung = varSoLuongDung;
			
			item.SoLanDung = varSoLanDung;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,string varCode,string varTenMau,int? varParentId,int? varServiceId,int? varServiceDetailId,int? varQuantity,int? varStaffId,int? varDeparmentId,DateTime? varNgayTao,string varNguoiTao,string varNguoiSua,DateTime? varNgaySua,string varKieuMau,string varChiDan,string varMaDoiTuong,byte? varTrongGoi,string varCachDung,string varChiDanThem,string varDviDung,byte? varIsPayment,string varSoLuongDung,string varSoLanDung)
		{
			LMauDichVuThuoc item = new LMauDichVuThuoc();
			
				item.Id = varId;
			
				item.Code = varCode;
			
				item.TenMau = varTenMau;
			
				item.ParentId = varParentId;
			
				item.ServiceId = varServiceId;
			
				item.ServiceDetailId = varServiceDetailId;
			
				item.Quantity = varQuantity;
			
				item.StaffId = varStaffId;
			
				item.DeparmentId = varDeparmentId;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.KieuMau = varKieuMau;
			
				item.ChiDan = varChiDan;
			
				item.MaDoiTuong = varMaDoiTuong;
			
				item.TrongGoi = varTrongGoi;
			
				item.CachDung = varCachDung;
			
				item.ChiDanThem = varChiDanThem;
			
				item.DviDung = varDviDung;
			
				item.IsPayment = varIsPayment;
			
				item.SoLuongDung = varSoLuongDung;
			
				item.SoLanDung = varSoLanDung;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn CodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TenMauColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn ParentIdColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceIdColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceDetailIdColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn QuantityColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn StaffIdColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn DeparmentIdColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuMauColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn ChiDanColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDoiTuongColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn TrongGoiColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn CachDungColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn ChiDanThemColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn DviDungColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn IsPaymentColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongDungColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLanDungColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"ID";
			 public static string Code = @"Code";
			 public static string TenMau = @"Ten_Mau";
			 public static string ParentId = @"Parent_ID";
			 public static string ServiceId = @"Service_ID";
			 public static string ServiceDetailId = @"ServiceDetail_ID";
			 public static string Quantity = @"Quantity";
			 public static string StaffId = @"Staff_ID";
			 public static string DeparmentId = @"Deparment_ID";
			 public static string NgayTao = @"Ngay_Tao";
			 public static string NguoiTao = @"Nguoi_Tao";
			 public static string NguoiSua = @"Nguoi_Sua";
			 public static string NgaySua = @"Ngay_Sua";
			 public static string KieuMau = @"Kieu_Mau";
			 public static string ChiDan = @"Chi_Dan";
			 public static string MaDoiTuong = @"MA_DOI_TUONG";
			 public static string TrongGoi = @"TRONG_GOI";
			 public static string CachDung = @"CACH_DUNG";
			 public static string ChiDanThem = @"CHI_DAN_THEM";
			 public static string DviDung = @"DVI_DUNG";
			 public static string IsPayment = @"IsPayment";
			 public static string SoLuongDung = @"SO_LUONG_DUNG";
			 public static string SoLanDung = @"SO_LAN_DUNG";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
