using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for QMS_So_Kham
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class QmsSoKhamController
    {
        // Preload our schema..
        QmsSoKham thisSchemaLoad = new QmsSoKham();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public QmsSoKhamCollection FetchAll()
        {
            QmsSoKhamCollection coll = new QmsSoKhamCollection();
            Query qry = new Query(QmsSoKham.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public QmsSoKhamCollection FetchByID(object Id)
        {
            QmsSoKhamCollection coll = new QmsSoKhamCollection().Where("id", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public QmsSoKhamCollection FetchByQuery(Query qry)
        {
            QmsSoKhamCollection coll = new QmsSoKhamCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (QmsSoKham.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (QmsSoKham.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? SoKham,string LoaiQms,DateTime? NgayTao,string MayTao,byte? Status,string MaQuay,string IpMayTao,string PatientCode,int? PatientId,byte? IsUuTien,byte? IsDaXoa,int? SoPhong,short? DepartmentId,string MaCoSo,string MaBenhVien,string MaTram,string MaDoituongKcb)
	    {
		    QmsSoKham item = new QmsSoKham();
		    
            item.SoKham = SoKham;
            
            item.LoaiQms = LoaiQms;
            
            item.NgayTao = NgayTao;
            
            item.MayTao = MayTao;
            
            item.Status = Status;
            
            item.MaQuay = MaQuay;
            
            item.IpMayTao = IpMayTao;
            
            item.PatientCode = PatientCode;
            
            item.PatientId = PatientId;
            
            item.IsUuTien = IsUuTien;
            
            item.IsDaXoa = IsDaXoa;
            
            item.SoPhong = SoPhong;
            
            item.DepartmentId = DepartmentId;
            
            item.MaCoSo = MaCoSo;
            
            item.MaBenhVien = MaBenhVien;
            
            item.MaTram = MaTram;
            
            item.MaDoituongKcb = MaDoituongKcb;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Id,int? SoKham,string LoaiQms,DateTime? NgayTao,string MayTao,byte? Status,string MaQuay,string IpMayTao,string PatientCode,int? PatientId,byte? IsUuTien,byte? IsDaXoa,int? SoPhong,short? DepartmentId,string MaCoSo,string MaBenhVien,string MaTram,string MaDoituongKcb)
	    {
		    QmsSoKham item = new QmsSoKham();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.SoKham = SoKham;
				
			item.LoaiQms = LoaiQms;
				
			item.NgayTao = NgayTao;
				
			item.MayTao = MayTao;
				
			item.Status = Status;
				
			item.MaQuay = MaQuay;
				
			item.IpMayTao = IpMayTao;
				
			item.PatientCode = PatientCode;
				
			item.PatientId = PatientId;
				
			item.IsUuTien = IsUuTien;
				
			item.IsDaXoa = IsDaXoa;
				
			item.SoPhong = SoPhong;
				
			item.DepartmentId = DepartmentId;
				
			item.MaCoSo = MaCoSo;
				
			item.MaBenhVien = MaBenhVien;
				
			item.MaTram = MaTram;
				
			item.MaDoituongKcb = MaDoituongKcb;
				
	        item.Save(UserName);
	    }
    }
}
