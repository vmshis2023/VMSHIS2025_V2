using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the DPhieuCapphat class.
	/// </summary>
    [Serializable]
	public partial class DPhieuCapphatCollection : ActiveList<DPhieuCapphat, DPhieuCapphatCollection>
	{	   
		public DPhieuCapphatCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DPhieuCapphatCollection</returns>
		public DPhieuCapphatCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DPhieuCapphat o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the D_PHIEU_CAPPHAT table.
	/// </summary>
	[Serializable]
	public partial class DPhieuCapphat : ActiveRecord<DPhieuCapphat>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DPhieuCapphat()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DPhieuCapphat(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DPhieuCapphat(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DPhieuCapphat(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("D_PHIEU_CAPPHAT", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdCapphat = new TableSchema.TableColumn(schema);
				colvarIdCapphat.ColumnName = "ID_CAPPHAT";
				colvarIdCapphat.DataType = DbType.Int32;
				colvarIdCapphat.MaxLength = 0;
				colvarIdCapphat.AutoIncrement = true;
				colvarIdCapphat.IsNullable = false;
				colvarIdCapphat.IsPrimaryKey = true;
				colvarIdCapphat.IsForeignKey = false;
				colvarIdCapphat.IsReadOnly = false;
				colvarIdCapphat.DefaultSetting = @"";
				colvarIdCapphat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdCapphat);
				
				TableSchema.TableColumn colvarTuNgay = new TableSchema.TableColumn(schema);
				colvarTuNgay.ColumnName = "TU_NGAY";
				colvarTuNgay.DataType = DbType.DateTime;
				colvarTuNgay.MaxLength = 0;
				colvarTuNgay.AutoIncrement = false;
				colvarTuNgay.IsNullable = false;
				colvarTuNgay.IsPrimaryKey = false;
				colvarTuNgay.IsForeignKey = false;
				colvarTuNgay.IsReadOnly = false;
				colvarTuNgay.DefaultSetting = @"";
				colvarTuNgay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuNgay);
				
				TableSchema.TableColumn colvarDenNgay = new TableSchema.TableColumn(schema);
				colvarDenNgay.ColumnName = "DEN_NGAY";
				colvarDenNgay.DataType = DbType.DateTime;
				colvarDenNgay.MaxLength = 0;
				colvarDenNgay.AutoIncrement = false;
				colvarDenNgay.IsNullable = false;
				colvarDenNgay.IsPrimaryKey = false;
				colvarDenNgay.IsForeignKey = false;
				colvarDenNgay.IsReadOnly = false;
				colvarDenNgay.DefaultSetting = @"";
				colvarDenNgay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDenNgay);
				
				TableSchema.TableColumn colvarIdKhoaLinh = new TableSchema.TableColumn(schema);
				colvarIdKhoaLinh.ColumnName = "ID_KHOA_LINH";
				colvarIdKhoaLinh.DataType = DbType.Int16;
				colvarIdKhoaLinh.MaxLength = 0;
				colvarIdKhoaLinh.AutoIncrement = false;
				colvarIdKhoaLinh.IsNullable = false;
				colvarIdKhoaLinh.IsPrimaryKey = false;
				colvarIdKhoaLinh.IsForeignKey = false;
				colvarIdKhoaLinh.IsReadOnly = false;
				colvarIdKhoaLinh.DefaultSetting = @"";
				colvarIdKhoaLinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoaLinh);
				
				TableSchema.TableColumn colvarIdKhoXuat = new TableSchema.TableColumn(schema);
				colvarIdKhoXuat.ColumnName = "ID_KHO_XUAT";
				colvarIdKhoXuat.DataType = DbType.Int16;
				colvarIdKhoXuat.MaxLength = 0;
				colvarIdKhoXuat.AutoIncrement = false;
				colvarIdKhoXuat.IsNullable = false;
				colvarIdKhoXuat.IsPrimaryKey = false;
				colvarIdKhoXuat.IsForeignKey = false;
				colvarIdKhoXuat.IsReadOnly = false;
				colvarIdKhoXuat.DefaultSetting = @"";
				colvarIdKhoXuat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoXuat);
				
				TableSchema.TableColumn colvarIdNvien = new TableSchema.TableColumn(schema);
				colvarIdNvien.ColumnName = "ID_NVIEN";
				colvarIdNvien.DataType = DbType.Int16;
				colvarIdNvien.MaxLength = 0;
				colvarIdNvien.AutoIncrement = false;
				colvarIdNvien.IsNullable = false;
				colvarIdNvien.IsPrimaryKey = false;
				colvarIdNvien.IsForeignKey = false;
				colvarIdNvien.IsReadOnly = false;
				colvarIdNvien.DefaultSetting = @"";
				colvarIdNvien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNvien);
				
				TableSchema.TableColumn colvarNgayNhap = new TableSchema.TableColumn(schema);
				colvarNgayNhap.ColumnName = "NGAY_NHAP";
				colvarNgayNhap.DataType = DbType.DateTime;
				colvarNgayNhap.MaxLength = 0;
				colvarNgayNhap.AutoIncrement = false;
				colvarNgayNhap.IsNullable = false;
				colvarNgayNhap.IsPrimaryKey = false;
				colvarNgayNhap.IsForeignKey = false;
				colvarNgayNhap.IsReadOnly = false;
				colvarNgayNhap.DefaultSetting = @"";
				colvarNgayNhap.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayNhap);
				
				TableSchema.TableColumn colvarNgayXacnhan = new TableSchema.TableColumn(schema);
				colvarNgayXacnhan.ColumnName = "NGAY_XACNHAN";
				colvarNgayXacnhan.DataType = DbType.DateTime;
				colvarNgayXacnhan.MaxLength = 0;
				colvarNgayXacnhan.AutoIncrement = false;
				colvarNgayXacnhan.IsNullable = true;
				colvarNgayXacnhan.IsPrimaryKey = false;
				colvarNgayXacnhan.IsForeignKey = false;
				colvarNgayXacnhan.IsReadOnly = false;
				colvarNgayXacnhan.DefaultSetting = @"";
				colvarNgayXacnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayXacnhan);
				
				TableSchema.TableColumn colvarNguoiXacnhan = new TableSchema.TableColumn(schema);
				colvarNguoiXacnhan.ColumnName = "NGUOI_XACNHAN";
				colvarNguoiXacnhan.DataType = DbType.String;
				colvarNguoiXacnhan.MaxLength = 30;
				colvarNguoiXacnhan.AutoIncrement = false;
				colvarNguoiXacnhan.IsNullable = true;
				colvarNguoiXacnhan.IsPrimaryKey = false;
				colvarNguoiXacnhan.IsForeignKey = false;
				colvarNguoiXacnhan.IsReadOnly = false;
				colvarNguoiXacnhan.DefaultSetting = @"";
				colvarNguoiXacnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiXacnhan);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = false;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 30;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarDaCapPhat = new TableSchema.TableColumn(schema);
				colvarDaCapPhat.ColumnName = "Da_CapPhat";
				colvarDaCapPhat.DataType = DbType.Boolean;
				colvarDaCapPhat.MaxLength = 0;
				colvarDaCapPhat.AutoIncrement = false;
				colvarDaCapPhat.IsNullable = false;
				colvarDaCapPhat.IsPrimaryKey = false;
				colvarDaCapPhat.IsForeignKey = false;
				colvarDaCapPhat.IsReadOnly = false;
				
						colvarDaCapPhat.DefaultSetting = @"((0))";
				colvarDaCapPhat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaCapPhat);
				
				TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
				colvarMotaThem.ColumnName = "MOTA_THEM";
				colvarMotaThem.DataType = DbType.String;
				colvarMotaThem.MaxLength = 255;
				colvarMotaThem.AutoIncrement = false;
				colvarMotaThem.IsNullable = true;
				colvarMotaThem.IsPrimaryKey = false;
				colvarMotaThem.IsForeignKey = false;
				colvarMotaThem.IsReadOnly = false;
				colvarMotaThem.DefaultSetting = @"";
				colvarMotaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaThem);
				
				TableSchema.TableColumn colvarLoaiPhieu = new TableSchema.TableColumn(schema);
				colvarLoaiPhieu.ColumnName = "Loai_Phieu";
				colvarLoaiPhieu.DataType = DbType.String;
				colvarLoaiPhieu.MaxLength = 10;
				colvarLoaiPhieu.AutoIncrement = false;
				colvarLoaiPhieu.IsNullable = true;
				colvarLoaiPhieu.IsPrimaryKey = false;
				colvarLoaiPhieu.IsForeignKey = false;
				colvarLoaiPhieu.IsReadOnly = false;
				colvarLoaiPhieu.DefaultSetting = @"";
				colvarLoaiPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiPhieu);
				
				TableSchema.TableColumn colvarLinhBSung = new TableSchema.TableColumn(schema);
				colvarLinhBSung.ColumnName = "LinhBSung";
				colvarLinhBSung.DataType = DbType.Boolean;
				colvarLinhBSung.MaxLength = 0;
				colvarLinhBSung.AutoIncrement = false;
				colvarLinhBSung.IsNullable = true;
				colvarLinhBSung.IsPrimaryKey = false;
				colvarLinhBSung.IsForeignKey = false;
				colvarLinhBSung.IsReadOnly = false;
				
						colvarLinhBSung.DefaultSetting = @"((0))";
				colvarLinhBSung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLinhBSung);
				
				TableSchema.TableColumn colvarMaDoiTuong = new TableSchema.TableColumn(schema);
				colvarMaDoiTuong.ColumnName = "Ma_DoiTuong";
				colvarMaDoiTuong.DataType = DbType.String;
				colvarMaDoiTuong.MaxLength = 20;
				colvarMaDoiTuong.AutoIncrement = false;
				colvarMaDoiTuong.IsNullable = true;
				colvarMaDoiTuong.IsPrimaryKey = false;
				colvarMaDoiTuong.IsForeignKey = false;
				colvarMaDoiTuong.IsReadOnly = false;
				colvarMaDoiTuong.DefaultSetting = @"";
				colvarMaDoiTuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDoiTuong);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("D_PHIEU_CAPPHAT",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdCapphat")]
		[Bindable(true)]
		public int IdCapphat 
		{
			get { return GetColumnValue<int>(Columns.IdCapphat); }
			set { SetColumnValue(Columns.IdCapphat, value); }
		}
		  
		[XmlAttribute("TuNgay")]
		[Bindable(true)]
		public DateTime TuNgay 
		{
			get { return GetColumnValue<DateTime>(Columns.TuNgay); }
			set { SetColumnValue(Columns.TuNgay, value); }
		}
		  
		[XmlAttribute("DenNgay")]
		[Bindable(true)]
		public DateTime DenNgay 
		{
			get { return GetColumnValue<DateTime>(Columns.DenNgay); }
			set { SetColumnValue(Columns.DenNgay, value); }
		}
		  
		[XmlAttribute("IdKhoaLinh")]
		[Bindable(true)]
		public short IdKhoaLinh 
		{
			get { return GetColumnValue<short>(Columns.IdKhoaLinh); }
			set { SetColumnValue(Columns.IdKhoaLinh, value); }
		}
		  
		[XmlAttribute("IdKhoXuat")]
		[Bindable(true)]
		public short IdKhoXuat 
		{
			get { return GetColumnValue<short>(Columns.IdKhoXuat); }
			set { SetColumnValue(Columns.IdKhoXuat, value); }
		}
		  
		[XmlAttribute("IdNvien")]
		[Bindable(true)]
		public short IdNvien 
		{
			get { return GetColumnValue<short>(Columns.IdNvien); }
			set { SetColumnValue(Columns.IdNvien, value); }
		}
		  
		[XmlAttribute("NgayNhap")]
		[Bindable(true)]
		public DateTime NgayNhap 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayNhap); }
			set { SetColumnValue(Columns.NgayNhap, value); }
		}
		  
		[XmlAttribute("NgayXacnhan")]
		[Bindable(true)]
		public DateTime? NgayXacnhan 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayXacnhan); }
			set { SetColumnValue(Columns.NgayXacnhan, value); }
		}
		  
		[XmlAttribute("NguoiXacnhan")]
		[Bindable(true)]
		public string NguoiXacnhan 
		{
			get { return GetColumnValue<string>(Columns.NguoiXacnhan); }
			set { SetColumnValue(Columns.NguoiXacnhan, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime NgayTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("DaCapPhat")]
		[Bindable(true)]
		public bool DaCapPhat 
		{
			get { return GetColumnValue<bool>(Columns.DaCapPhat); }
			set { SetColumnValue(Columns.DaCapPhat, value); }
		}
		  
		[XmlAttribute("MotaThem")]
		[Bindable(true)]
		public string MotaThem 
		{
			get { return GetColumnValue<string>(Columns.MotaThem); }
			set { SetColumnValue(Columns.MotaThem, value); }
		}
		  
		[XmlAttribute("LoaiPhieu")]
		[Bindable(true)]
		public string LoaiPhieu 
		{
			get { return GetColumnValue<string>(Columns.LoaiPhieu); }
			set { SetColumnValue(Columns.LoaiPhieu, value); }
		}
		  
		[XmlAttribute("LinhBSung")]
		[Bindable(true)]
		public bool? LinhBSung 
		{
			get { return GetColumnValue<bool?>(Columns.LinhBSung); }
			set { SetColumnValue(Columns.LinhBSung, value); }
		}
		  
		[XmlAttribute("MaDoiTuong")]
		[Bindable(true)]
		public string MaDoiTuong 
		{
			get { return GetColumnValue<string>(Columns.MaDoiTuong); }
			set { SetColumnValue(Columns.MaDoiTuong, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(DateTime varTuNgay,DateTime varDenNgay,short varIdKhoaLinh,short varIdKhoXuat,short varIdNvien,DateTime varNgayNhap,DateTime? varNgayXacnhan,string varNguoiXacnhan,DateTime varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,bool varDaCapPhat,string varMotaThem,string varLoaiPhieu,bool? varLinhBSung,string varMaDoiTuong)
		{
			DPhieuCapphat item = new DPhieuCapphat();
			
			item.TuNgay = varTuNgay;
			
			item.DenNgay = varDenNgay;
			
			item.IdKhoaLinh = varIdKhoaLinh;
			
			item.IdKhoXuat = varIdKhoXuat;
			
			item.IdNvien = varIdNvien;
			
			item.NgayNhap = varNgayNhap;
			
			item.NgayXacnhan = varNgayXacnhan;
			
			item.NguoiXacnhan = varNguoiXacnhan;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
			item.DaCapPhat = varDaCapPhat;
			
			item.MotaThem = varMotaThem;
			
			item.LoaiPhieu = varLoaiPhieu;
			
			item.LinhBSung = varLinhBSung;
			
			item.MaDoiTuong = varMaDoiTuong;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdCapphat,DateTime varTuNgay,DateTime varDenNgay,short varIdKhoaLinh,short varIdKhoXuat,short varIdNvien,DateTime varNgayNhap,DateTime? varNgayXacnhan,string varNguoiXacnhan,DateTime varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,bool varDaCapPhat,string varMotaThem,string varLoaiPhieu,bool? varLinhBSung,string varMaDoiTuong)
		{
			DPhieuCapphat item = new DPhieuCapphat();
			
				item.IdCapphat = varIdCapphat;
			
				item.TuNgay = varTuNgay;
			
				item.DenNgay = varDenNgay;
			
				item.IdKhoaLinh = varIdKhoaLinh;
			
				item.IdKhoXuat = varIdKhoXuat;
			
				item.IdNvien = varIdNvien;
			
				item.NgayNhap = varNgayNhap;
			
				item.NgayXacnhan = varNgayXacnhan;
			
				item.NguoiXacnhan = varNguoiXacnhan;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
				item.DaCapPhat = varDaCapPhat;
			
				item.MotaThem = varMotaThem;
			
				item.LoaiPhieu = varLoaiPhieu;
			
				item.LinhBSung = varLinhBSung;
			
				item.MaDoiTuong = varMaDoiTuong;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdCapphatColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn TuNgayColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn DenNgayColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaLinhColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoXuatColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNvienColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayNhapColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayXacnhanColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiXacnhanColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn DaCapPhatColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaThemColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiPhieuColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn LinhBSungColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDoiTuongColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdCapphat = @"ID_CAPPHAT";
			 public static string TuNgay = @"TU_NGAY";
			 public static string DenNgay = @"DEN_NGAY";
			 public static string IdKhoaLinh = @"ID_KHOA_LINH";
			 public static string IdKhoXuat = @"ID_KHO_XUAT";
			 public static string IdNvien = @"ID_NVIEN";
			 public static string NgayNhap = @"NGAY_NHAP";
			 public static string NgayXacnhan = @"NGAY_XACNHAN";
			 public static string NguoiXacnhan = @"NGUOI_XACNHAN";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string DaCapPhat = @"Da_CapPhat";
			 public static string MotaThem = @"MOTA_THEM";
			 public static string LoaiPhieu = @"Loai_Phieu";
			 public static string LinhBSung = @"LinhBSung";
			 public static string MaDoiTuong = @"Ma_DoiTuong";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
