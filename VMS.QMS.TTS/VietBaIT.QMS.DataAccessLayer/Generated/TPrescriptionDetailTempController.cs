using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_Prescription_Detail_Temp
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TPrescriptionDetailTempController
    {
        // Preload our schema..
        TPrescriptionDetailTemp thisSchemaLoad = new TPrescriptionDetailTemp();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TPrescriptionDetailTempCollection FetchAll()
        {
            TPrescriptionDetailTempCollection coll = new TPrescriptionDetailTempCollection();
            Query qry = new Query(TPrescriptionDetailTemp.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TPrescriptionDetailTempCollection FetchByID(object PresDetailId)
        {
            TPrescriptionDetailTempCollection coll = new TPrescriptionDetailTempCollection().Where("PresDetail_ID", PresDetailId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TPrescriptionDetailTempCollection FetchByQuery(Query qry)
        {
            TPrescriptionDetailTempCollection coll = new TPrescriptionDetailTempCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object PresDetailId)
        {
            return (TPrescriptionDetailTemp.Delete(PresDetailId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object PresDetailId)
        {
            return (TPrescriptionDetailTemp.Destroy(PresDetailId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int PresDetailId,int PresId,int DrugId,DateTime ExpireDate,int Quantity,decimal Price,decimal? SurchargePrice,string SDesc,int? PaymentStatus,int? QuantityCancel,DateTime? PaymentDate,byte? IsPayment,int? StockId,byte? HasComfirm,byte? BhytStatus,short? ThuTuIn,decimal? GiaBhytCt,decimal? GiaBnct,string MaDTuong,int? PaymentId,byte? TrongGoi,string CachDung,string ChiDanThem,string DviDung,string SoLanDung,string SoLuongDung,DateTime? NgayTao,string NguoiTao,byte? TtChuyen,decimal? PtramBhyt,int? SluongLinh,int? SluongSua)
	    {
		    TPrescriptionDetailTemp item = new TPrescriptionDetailTemp();
		    
            item.PresDetailId = PresDetailId;
            
            item.PresId = PresId;
            
            item.DrugId = DrugId;
            
            item.ExpireDate = ExpireDate;
            
            item.Quantity = Quantity;
            
            item.Price = Price;
            
            item.SurchargePrice = SurchargePrice;
            
            item.SDesc = SDesc;
            
            item.PaymentStatus = PaymentStatus;
            
            item.QuantityCancel = QuantityCancel;
            
            item.PaymentDate = PaymentDate;
            
            item.IsPayment = IsPayment;
            
            item.StockId = StockId;
            
            item.HasComfirm = HasComfirm;
            
            item.BhytStatus = BhytStatus;
            
            item.ThuTuIn = ThuTuIn;
            
            item.GiaBhytCt = GiaBhytCt;
            
            item.GiaBnct = GiaBnct;
            
            item.MaDTuong = MaDTuong;
            
            item.PaymentId = PaymentId;
            
            item.TrongGoi = TrongGoi;
            
            item.CachDung = CachDung;
            
            item.ChiDanThem = ChiDanThem;
            
            item.DviDung = DviDung;
            
            item.SoLanDung = SoLanDung;
            
            item.SoLuongDung = SoLuongDung;
            
            item.NgayTao = NgayTao;
            
            item.NguoiTao = NguoiTao;
            
            item.TtChuyen = TtChuyen;
            
            item.PtramBhyt = PtramBhyt;
            
            item.SluongLinh = SluongLinh;
            
            item.SluongSua = SluongSua;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int PresDetailId,int PresId,int DrugId,DateTime ExpireDate,int Quantity,decimal Price,decimal? SurchargePrice,string SDesc,int? PaymentStatus,int? QuantityCancel,DateTime? PaymentDate,byte? IsPayment,int? StockId,byte? HasComfirm,byte? BhytStatus,short? ThuTuIn,decimal? GiaBhytCt,decimal? GiaBnct,string MaDTuong,int? PaymentId,byte? TrongGoi,string CachDung,string ChiDanThem,string DviDung,string SoLanDung,string SoLuongDung,DateTime? NgayTao,string NguoiTao,byte? TtChuyen,decimal? PtramBhyt,int? SluongLinh,int? SluongSua)
	    {
		    TPrescriptionDetailTemp item = new TPrescriptionDetailTemp();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.PresDetailId = PresDetailId;
				
			item.PresId = PresId;
				
			item.DrugId = DrugId;
				
			item.ExpireDate = ExpireDate;
				
			item.Quantity = Quantity;
				
			item.Price = Price;
				
			item.SurchargePrice = SurchargePrice;
				
			item.SDesc = SDesc;
				
			item.PaymentStatus = PaymentStatus;
				
			item.QuantityCancel = QuantityCancel;
				
			item.PaymentDate = PaymentDate;
				
			item.IsPayment = IsPayment;
				
			item.StockId = StockId;
				
			item.HasComfirm = HasComfirm;
				
			item.BhytStatus = BhytStatus;
				
			item.ThuTuIn = ThuTuIn;
				
			item.GiaBhytCt = GiaBhytCt;
				
			item.GiaBnct = GiaBnct;
				
			item.MaDTuong = MaDTuong;
				
			item.PaymentId = PaymentId;
				
			item.TrongGoi = TrongGoi;
				
			item.CachDung = CachDung;
				
			item.ChiDanThem = ChiDanThem;
				
			item.DviDung = DviDung;
				
			item.SoLanDung = SoLanDung;
				
			item.SoLuongDung = SoLuongDung;
				
			item.NgayTao = NgayTao;
				
			item.NguoiTao = NguoiTao;
				
			item.TtChuyen = TtChuyen;
				
			item.PtramBhyt = PtramBhyt;
				
			item.SluongLinh = SluongLinh;
				
			item.SluongSua = SluongSua;
				
	        item.Save(UserName);
	    }
    }
}
