using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TKhamSanphuKhoa class.
	/// </summary>
    [Serializable]
	public partial class TKhamSanphuKhoaCollection : ActiveList<TKhamSanphuKhoa, TKhamSanphuKhoaCollection>
	{	   
		public TKhamSanphuKhoaCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TKhamSanphuKhoaCollection</returns>
		public TKhamSanphuKhoaCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TKhamSanphuKhoa o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_KHAM_SANPHU_KHOA table.
	/// </summary>
	[Serializable]
	public partial class TKhamSanphuKhoa : ActiveRecord<TKhamSanphuKhoa>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TKhamSanphuKhoa()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TKhamSanphuKhoa(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TKhamSanphuKhoa(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TKhamSanphuKhoa(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_KHAM_SANPHU_KHOA", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdKhamSanphuKhoa = new TableSchema.TableColumn(schema);
				colvarIdKhamSanphuKhoa.ColumnName = "ID_KHAM_SANPHU_KHOA";
				colvarIdKhamSanphuKhoa.DataType = DbType.Int32;
				colvarIdKhamSanphuKhoa.MaxLength = 0;
				colvarIdKhamSanphuKhoa.AutoIncrement = false;
				colvarIdKhamSanphuKhoa.IsNullable = false;
				colvarIdKhamSanphuKhoa.IsPrimaryKey = true;
				colvarIdKhamSanphuKhoa.IsForeignKey = false;
				colvarIdKhamSanphuKhoa.IsReadOnly = false;
				colvarIdKhamSanphuKhoa.DefaultSetting = @"";
				colvarIdKhamSanphuKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhamSanphuKhoa);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int64;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = true;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.String;
				colvarPatientCode.MaxLength = 50;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = true;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarIdHsPhaThai = new TableSchema.TableColumn(schema);
				colvarIdHsPhaThai.ColumnName = "ID_HS_PHA_THAI";
				colvarIdHsPhaThai.DataType = DbType.Int32;
				colvarIdHsPhaThai.MaxLength = 0;
				colvarIdHsPhaThai.AutoIncrement = false;
				colvarIdHsPhaThai.IsNullable = true;
				colvarIdHsPhaThai.IsPrimaryKey = false;
				colvarIdHsPhaThai.IsForeignKey = false;
				colvarIdHsPhaThai.IsReadOnly = false;
				colvarIdHsPhaThai.DefaultSetting = @"";
				colvarIdHsPhaThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdHsPhaThai);
				
				TableSchema.TableColumn colvarIdPhieuVaovien = new TableSchema.TableColumn(schema);
				colvarIdPhieuVaovien.ColumnName = "ID_PHIEU_VAOVIEN";
				colvarIdPhieuVaovien.DataType = DbType.Int32;
				colvarIdPhieuVaovien.MaxLength = 0;
				colvarIdPhieuVaovien.AutoIncrement = false;
				colvarIdPhieuVaovien.IsNullable = true;
				colvarIdPhieuVaovien.IsPrimaryKey = false;
				colvarIdPhieuVaovien.IsForeignKey = false;
				colvarIdPhieuVaovien.IsReadOnly = false;
				colvarIdPhieuVaovien.DefaultSetting = @"";
				colvarIdPhieuVaovien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuVaovien);
				
				TableSchema.TableColumn colvarKhamKinhCcuoi = new TableSchema.TableColumn(schema);
				colvarKhamKinhCcuoi.ColumnName = "KHAM_KINH_CCUOI";
				colvarKhamKinhCcuoi.DataType = DbType.DateTime;
				colvarKhamKinhCcuoi.MaxLength = 0;
				colvarKhamKinhCcuoi.AutoIncrement = false;
				colvarKhamKinhCcuoi.IsNullable = true;
				colvarKhamKinhCcuoi.IsPrimaryKey = false;
				colvarKhamKinhCcuoi.IsForeignKey = false;
				colvarKhamKinhCcuoi.IsReadOnly = false;
				colvarKhamKinhCcuoi.DefaultSetting = @"";
				colvarKhamKinhCcuoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamKinhCcuoi);
				
				TableSchema.TableColumn colvarKhamAmHo = new TableSchema.TableColumn(schema);
				colvarKhamAmHo.ColumnName = "KHAM_AM_HO";
				colvarKhamAmHo.DataType = DbType.String;
				colvarKhamAmHo.MaxLength = 500;
				colvarKhamAmHo.AutoIncrement = false;
				colvarKhamAmHo.IsNullable = true;
				colvarKhamAmHo.IsPrimaryKey = false;
				colvarKhamAmHo.IsForeignKey = false;
				colvarKhamAmHo.IsReadOnly = false;
				colvarKhamAmHo.DefaultSetting = @"";
				colvarKhamAmHo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamAmHo);
				
				TableSchema.TableColumn colvarKhamAmDao = new TableSchema.TableColumn(schema);
				colvarKhamAmDao.ColumnName = "KHAM_AM_DAO";
				colvarKhamAmDao.DataType = DbType.String;
				colvarKhamAmDao.MaxLength = 500;
				colvarKhamAmDao.AutoIncrement = false;
				colvarKhamAmDao.IsNullable = true;
				colvarKhamAmDao.IsPrimaryKey = false;
				colvarKhamAmDao.IsForeignKey = false;
				colvarKhamAmDao.IsReadOnly = false;
				colvarKhamAmDao.DefaultSetting = @"";
				colvarKhamAmDao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamAmDao);
				
				TableSchema.TableColumn colvarKhamCoTuCung = new TableSchema.TableColumn(schema);
				colvarKhamCoTuCung.ColumnName = "KHAM_CO_TU_CUNG";
				colvarKhamCoTuCung.DataType = DbType.String;
				colvarKhamCoTuCung.MaxLength = 500;
				colvarKhamCoTuCung.AutoIncrement = false;
				colvarKhamCoTuCung.IsNullable = true;
				colvarKhamCoTuCung.IsPrimaryKey = false;
				colvarKhamCoTuCung.IsForeignKey = false;
				colvarKhamCoTuCung.IsReadOnly = false;
				colvarKhamCoTuCung.DefaultSetting = @"";
				colvarKhamCoTuCung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamCoTuCung);
				
				TableSchema.TableColumn colvarKhamTuCung = new TableSchema.TableColumn(schema);
				colvarKhamTuCung.ColumnName = "KHAM_TU_CUNG";
				colvarKhamTuCung.DataType = DbType.String;
				colvarKhamTuCung.MaxLength = 500;
				colvarKhamTuCung.AutoIncrement = false;
				colvarKhamTuCung.IsNullable = true;
				colvarKhamTuCung.IsPrimaryKey = false;
				colvarKhamTuCung.IsForeignKey = false;
				colvarKhamTuCung.IsReadOnly = false;
				colvarKhamTuCung.DefaultSetting = @"";
				colvarKhamTuCung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamTuCung);
				
				TableSchema.TableColumn colvarPphuPhai = new TableSchema.TableColumn(schema);
				colvarPphuPhai.ColumnName = "PPHU_PHAI";
				colvarPphuPhai.DataType = DbType.String;
				colvarPphuPhai.MaxLength = 500;
				colvarPphuPhai.AutoIncrement = false;
				colvarPphuPhai.IsNullable = true;
				colvarPphuPhai.IsPrimaryKey = false;
				colvarPphuPhai.IsForeignKey = false;
				colvarPphuPhai.IsReadOnly = false;
				colvarPphuPhai.DefaultSetting = @"";
				colvarPphuPhai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPphuPhai);
				
				TableSchema.TableColumn colvarPphuTrai = new TableSchema.TableColumn(schema);
				colvarPphuTrai.ColumnName = "PPHU_TRAI";
				colvarPphuTrai.DataType = DbType.String;
				colvarPphuTrai.MaxLength = 500;
				colvarPphuTrai.AutoIncrement = false;
				colvarPphuTrai.IsNullable = true;
				colvarPphuTrai.IsPrimaryKey = false;
				colvarPphuTrai.IsForeignKey = false;
				colvarPphuTrai.IsReadOnly = false;
				colvarPphuTrai.DefaultSetting = @"";
				colvarPphuTrai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPphuTrai);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_KHAM_SANPHU_KHOA",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdKhamSanphuKhoa")]
		[Bindable(true)]
		public int IdKhamSanphuKhoa 
		{
			get { return GetColumnValue<int>(Columns.IdKhamSanphuKhoa); }
			set { SetColumnValue(Columns.IdKhamSanphuKhoa, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public long? PatientId 
		{
			get { return GetColumnValue<long?>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("IdHsPhaThai")]
		[Bindable(true)]
		public int? IdHsPhaThai 
		{
			get { return GetColumnValue<int?>(Columns.IdHsPhaThai); }
			set { SetColumnValue(Columns.IdHsPhaThai, value); }
		}
		  
		[XmlAttribute("IdPhieuVaovien")]
		[Bindable(true)]
		public int? IdPhieuVaovien 
		{
			get { return GetColumnValue<int?>(Columns.IdPhieuVaovien); }
			set { SetColumnValue(Columns.IdPhieuVaovien, value); }
		}
		  
		[XmlAttribute("KhamKinhCcuoi")]
		[Bindable(true)]
		public DateTime? KhamKinhCcuoi 
		{
			get { return GetColumnValue<DateTime?>(Columns.KhamKinhCcuoi); }
			set { SetColumnValue(Columns.KhamKinhCcuoi, value); }
		}
		  
		[XmlAttribute("KhamAmHo")]
		[Bindable(true)]
		public string KhamAmHo 
		{
			get { return GetColumnValue<string>(Columns.KhamAmHo); }
			set { SetColumnValue(Columns.KhamAmHo, value); }
		}
		  
		[XmlAttribute("KhamAmDao")]
		[Bindable(true)]
		public string KhamAmDao 
		{
			get { return GetColumnValue<string>(Columns.KhamAmDao); }
			set { SetColumnValue(Columns.KhamAmDao, value); }
		}
		  
		[XmlAttribute("KhamCoTuCung")]
		[Bindable(true)]
		public string KhamCoTuCung 
		{
			get { return GetColumnValue<string>(Columns.KhamCoTuCung); }
			set { SetColumnValue(Columns.KhamCoTuCung, value); }
		}
		  
		[XmlAttribute("KhamTuCung")]
		[Bindable(true)]
		public string KhamTuCung 
		{
			get { return GetColumnValue<string>(Columns.KhamTuCung); }
			set { SetColumnValue(Columns.KhamTuCung, value); }
		}
		  
		[XmlAttribute("PphuPhai")]
		[Bindable(true)]
		public string PphuPhai 
		{
			get { return GetColumnValue<string>(Columns.PphuPhai); }
			set { SetColumnValue(Columns.PphuPhai, value); }
		}
		  
		[XmlAttribute("PphuTrai")]
		[Bindable(true)]
		public string PphuTrai 
		{
			get { return GetColumnValue<string>(Columns.PphuTrai); }
			set { SetColumnValue(Columns.PphuTrai, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varIdKhamSanphuKhoa,long? varPatientId,string varPatientCode,int? varIdHsPhaThai,int? varIdPhieuVaovien,DateTime? varKhamKinhCcuoi,string varKhamAmHo,string varKhamAmDao,string varKhamCoTuCung,string varKhamTuCung,string varPphuPhai,string varPphuTrai,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua)
		{
			TKhamSanphuKhoa item = new TKhamSanphuKhoa();
			
			item.IdKhamSanphuKhoa = varIdKhamSanphuKhoa;
			
			item.PatientId = varPatientId;
			
			item.PatientCode = varPatientCode;
			
			item.IdHsPhaThai = varIdHsPhaThai;
			
			item.IdPhieuVaovien = varIdPhieuVaovien;
			
			item.KhamKinhCcuoi = varKhamKinhCcuoi;
			
			item.KhamAmHo = varKhamAmHo;
			
			item.KhamAmDao = varKhamAmDao;
			
			item.KhamCoTuCung = varKhamCoTuCung;
			
			item.KhamTuCung = varKhamTuCung;
			
			item.PphuPhai = varPphuPhai;
			
			item.PphuTrai = varPphuTrai;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdKhamSanphuKhoa,long? varPatientId,string varPatientCode,int? varIdHsPhaThai,int? varIdPhieuVaovien,DateTime? varKhamKinhCcuoi,string varKhamAmHo,string varKhamAmDao,string varKhamCoTuCung,string varKhamTuCung,string varPphuPhai,string varPphuTrai,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua)
		{
			TKhamSanphuKhoa item = new TKhamSanphuKhoa();
			
				item.IdKhamSanphuKhoa = varIdKhamSanphuKhoa;
			
				item.PatientId = varPatientId;
			
				item.PatientCode = varPatientCode;
			
				item.IdHsPhaThai = varIdHsPhaThai;
			
				item.IdPhieuVaovien = varIdPhieuVaovien;
			
				item.KhamKinhCcuoi = varKhamKinhCcuoi;
			
				item.KhamAmHo = varKhamAmHo;
			
				item.KhamAmDao = varKhamAmDao;
			
				item.KhamCoTuCung = varKhamCoTuCung;
			
				item.KhamTuCung = varKhamTuCung;
			
				item.PphuPhai = varPphuPhai;
			
				item.PphuTrai = varPphuTrai;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdKhamSanphuKhoaColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdHsPhaThaiColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuVaovienColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamKinhCcuoiColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamAmHoColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamAmDaoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamCoTuCungColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamTuCungColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn PphuPhaiColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn PphuTraiColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdKhamSanphuKhoa = @"ID_KHAM_SANPHU_KHOA";
			 public static string PatientId = @"Patient_ID";
			 public static string PatientCode = @"Patient_Code";
			 public static string IdHsPhaThai = @"ID_HS_PHA_THAI";
			 public static string IdPhieuVaovien = @"ID_PHIEU_VAOVIEN";
			 public static string KhamKinhCcuoi = @"KHAM_KINH_CCUOI";
			 public static string KhamAmHo = @"KHAM_AM_HO";
			 public static string KhamAmDao = @"KHAM_AM_DAO";
			 public static string KhamCoTuCung = @"KHAM_CO_TU_CUNG";
			 public static string KhamTuCung = @"KHAM_TU_CUNG";
			 public static string PphuPhai = @"PPHU_PHAI";
			 public static string PphuTrai = @"PPHU_TRAI";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string NgaySua = @"NGAY_SUA";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
