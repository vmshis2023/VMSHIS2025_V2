using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TKhamToanthan class.
	/// </summary>
    [Serializable]
	public partial class TKhamToanthanCollection : ActiveList<TKhamToanthan, TKhamToanthanCollection>
	{	   
		public TKhamToanthanCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TKhamToanthanCollection</returns>
		public TKhamToanthanCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TKhamToanthan o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_KHAM_TOANTHAN table.
	/// </summary>
	[Serializable]
	public partial class TKhamToanthan : ActiveRecord<TKhamToanthan>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TKhamToanthan()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TKhamToanthan(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TKhamToanthan(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TKhamToanthan(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_KHAM_TOANTHAN", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdKtoanThan = new TableSchema.TableColumn(schema);
				colvarIdKtoanThan.ColumnName = "ID_KTOAN_THAN";
				colvarIdKtoanThan.DataType = DbType.Int32;
				colvarIdKtoanThan.MaxLength = 0;
				colvarIdKtoanThan.AutoIncrement = true;
				colvarIdKtoanThan.IsNullable = false;
				colvarIdKtoanThan.IsPrimaryKey = true;
				colvarIdKtoanThan.IsForeignKey = false;
				colvarIdKtoanThan.IsReadOnly = false;
				colvarIdKtoanThan.DefaultSetting = @"";
				colvarIdKtoanThan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKtoanThan);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.String;
				colvarPatientCode.MaxLength = 50;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = true;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int64;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = true;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarIdPhieuVaovien = new TableSchema.TableColumn(schema);
				colvarIdPhieuVaovien.ColumnName = "ID_PHIEU_VAOVIEN";
				colvarIdPhieuVaovien.DataType = DbType.Int32;
				colvarIdPhieuVaovien.MaxLength = 0;
				colvarIdPhieuVaovien.AutoIncrement = false;
				colvarIdPhieuVaovien.IsNullable = true;
				colvarIdPhieuVaovien.IsPrimaryKey = false;
				colvarIdPhieuVaovien.IsForeignKey = false;
				colvarIdPhieuVaovien.IsReadOnly = false;
				colvarIdPhieuVaovien.DefaultSetting = @"";
				colvarIdPhieuVaovien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuVaovien);
				
				TableSchema.TableColumn colvarMach = new TableSchema.TableColumn(schema);
				colvarMach.ColumnName = "MACH";
				colvarMach.DataType = DbType.Int32;
				colvarMach.MaxLength = 0;
				colvarMach.AutoIncrement = false;
				colvarMach.IsNullable = true;
				colvarMach.IsPrimaryKey = false;
				colvarMach.IsForeignKey = false;
				colvarMach.IsReadOnly = false;
				colvarMach.DefaultSetting = @"";
				colvarMach.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMach);
				
				TableSchema.TableColumn colvarNhietDo = new TableSchema.TableColumn(schema);
				colvarNhietDo.ColumnName = "NHIET_DO";
				colvarNhietDo.DataType = DbType.Decimal;
				colvarNhietDo.MaxLength = 0;
				colvarNhietDo.AutoIncrement = false;
				colvarNhietDo.IsNullable = true;
				colvarNhietDo.IsPrimaryKey = false;
				colvarNhietDo.IsForeignKey = false;
				colvarNhietDo.IsReadOnly = false;
				colvarNhietDo.DefaultSetting = @"";
				colvarNhietDo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhietDo);
				
				TableSchema.TableColumn colvarHuyetAp = new TableSchema.TableColumn(schema);
				colvarHuyetAp.ColumnName = "HUYET_AP";
				colvarHuyetAp.DataType = DbType.String;
				colvarHuyetAp.MaxLength = 50;
				colvarHuyetAp.AutoIncrement = false;
				colvarHuyetAp.IsNullable = true;
				colvarHuyetAp.IsPrimaryKey = false;
				colvarHuyetAp.IsForeignKey = false;
				colvarHuyetAp.IsReadOnly = false;
				colvarHuyetAp.DefaultSetting = @"";
				colvarHuyetAp.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHuyetAp);
				
				TableSchema.TableColumn colvarNhipTho = new TableSchema.TableColumn(schema);
				colvarNhipTho.ColumnName = "NHIP_THO";
				colvarNhipTho.DataType = DbType.Int32;
				colvarNhipTho.MaxLength = 0;
				colvarNhipTho.AutoIncrement = false;
				colvarNhipTho.IsNullable = true;
				colvarNhipTho.IsPrimaryKey = false;
				colvarNhipTho.IsForeignKey = false;
				colvarNhipTho.IsReadOnly = false;
				colvarNhipTho.DefaultSetting = @"";
				colvarNhipTho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhipTho);
				
				TableSchema.TableColumn colvarCanNang = new TableSchema.TableColumn(schema);
				colvarCanNang.ColumnName = "CAN_NANG";
				colvarCanNang.DataType = DbType.Decimal;
				colvarCanNang.MaxLength = 0;
				colvarCanNang.AutoIncrement = false;
				colvarCanNang.IsNullable = true;
				colvarCanNang.IsPrimaryKey = false;
				colvarCanNang.IsForeignKey = false;
				colvarCanNang.IsReadOnly = false;
				colvarCanNang.DefaultSetting = @"";
				colvarCanNang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCanNang);
				
				TableSchema.TableColumn colvarChieuCao = new TableSchema.TableColumn(schema);
				colvarChieuCao.ColumnName = "CHIEU_CAO";
				colvarChieuCao.DataType = DbType.Decimal;
				colvarChieuCao.MaxLength = 0;
				colvarChieuCao.AutoIncrement = false;
				colvarChieuCao.IsNullable = true;
				colvarChieuCao.IsPrimaryKey = false;
				colvarChieuCao.IsForeignKey = false;
				colvarChieuCao.IsReadOnly = false;
				colvarChieuCao.DefaultSetting = @"";
				colvarChieuCao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChieuCao);
				
				TableSchema.TableColumn colvarDaNmac = new TableSchema.TableColumn(schema);
				colvarDaNmac.ColumnName = "DA_NMAC";
				colvarDaNmac.DataType = DbType.String;
				colvarDaNmac.MaxLength = 500;
				colvarDaNmac.AutoIncrement = false;
				colvarDaNmac.IsNullable = true;
				colvarDaNmac.IsPrimaryKey = false;
				colvarDaNmac.IsForeignKey = false;
				colvarDaNmac.IsReadOnly = false;
				colvarDaNmac.DefaultSetting = @"";
				colvarDaNmac.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaNmac);
				
				TableSchema.TableColumn colvarKhamThoan = new TableSchema.TableColumn(schema);
				colvarKhamThoan.ColumnName = "KHAM_THOAN";
				colvarKhamThoan.DataType = DbType.String;
				colvarKhamThoan.MaxLength = 500;
				colvarKhamThoan.AutoIncrement = false;
				colvarKhamThoan.IsNullable = true;
				colvarKhamThoan.IsPrimaryKey = false;
				colvarKhamThoan.IsForeignKey = false;
				colvarKhamThoan.IsReadOnly = false;
				colvarKhamThoan.DefaultSetting = @"";
				colvarKhamThoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamThoan);
				
				TableSchema.TableColumn colvarKhamHhap = new TableSchema.TableColumn(schema);
				colvarKhamHhap.ColumnName = "KHAM_HHAP";
				colvarKhamHhap.DataType = DbType.String;
				colvarKhamHhap.MaxLength = 500;
				colvarKhamHhap.AutoIncrement = false;
				colvarKhamHhap.IsNullable = true;
				colvarKhamHhap.IsPrimaryKey = false;
				colvarKhamHhap.IsForeignKey = false;
				colvarKhamHhap.IsReadOnly = false;
				colvarKhamHhap.DefaultSetting = @"";
				colvarKhamHhap.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamHhap);
				
				TableSchema.TableColumn colvarKhamBphanKhac = new TableSchema.TableColumn(schema);
				colvarKhamBphanKhac.ColumnName = "KHAM_BPHAN_KHAC";
				colvarKhamBphanKhac.DataType = DbType.String;
				colvarKhamBphanKhac.MaxLength = 500;
				colvarKhamBphanKhac.AutoIncrement = false;
				colvarKhamBphanKhac.IsNullable = true;
				colvarKhamBphanKhac.IsPrimaryKey = false;
				colvarKhamBphanKhac.IsForeignKey = false;
				colvarKhamBphanKhac.IsReadOnly = false;
				colvarKhamBphanKhac.DefaultSetting = @"";
				colvarKhamBphanKhac.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamBphanKhac);
				
				TableSchema.TableColumn colvarIdHsPhaThai = new TableSchema.TableColumn(schema);
				colvarIdHsPhaThai.ColumnName = "ID_HS_PHA_THAI";
				colvarIdHsPhaThai.DataType = DbType.Int32;
				colvarIdHsPhaThai.MaxLength = 0;
				colvarIdHsPhaThai.AutoIncrement = false;
				colvarIdHsPhaThai.IsNullable = true;
				colvarIdHsPhaThai.IsPrimaryKey = false;
				colvarIdHsPhaThai.IsForeignKey = false;
				colvarIdHsPhaThai.IsReadOnly = false;
				colvarIdHsPhaThai.DefaultSetting = @"";
				colvarIdHsPhaThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdHsPhaThai);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_KHAM_TOANTHAN",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdKtoanThan")]
		[Bindable(true)]
		public int IdKtoanThan 
		{
			get { return GetColumnValue<int>(Columns.IdKtoanThan); }
			set { SetColumnValue(Columns.IdKtoanThan, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public long? PatientId 
		{
			get { return GetColumnValue<long?>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("IdPhieuVaovien")]
		[Bindable(true)]
		public int? IdPhieuVaovien 
		{
			get { return GetColumnValue<int?>(Columns.IdPhieuVaovien); }
			set { SetColumnValue(Columns.IdPhieuVaovien, value); }
		}
		  
		[XmlAttribute("Mach")]
		[Bindable(true)]
		public int? Mach 
		{
			get { return GetColumnValue<int?>(Columns.Mach); }
			set { SetColumnValue(Columns.Mach, value); }
		}
		  
		[XmlAttribute("NhietDo")]
		[Bindable(true)]
		public decimal? NhietDo 
		{
			get { return GetColumnValue<decimal?>(Columns.NhietDo); }
			set { SetColumnValue(Columns.NhietDo, value); }
		}
		  
		[XmlAttribute("HuyetAp")]
		[Bindable(true)]
		public string HuyetAp 
		{
			get { return GetColumnValue<string>(Columns.HuyetAp); }
			set { SetColumnValue(Columns.HuyetAp, value); }
		}
		  
		[XmlAttribute("NhipTho")]
		[Bindable(true)]
		public int? NhipTho 
		{
			get { return GetColumnValue<int?>(Columns.NhipTho); }
			set { SetColumnValue(Columns.NhipTho, value); }
		}
		  
		[XmlAttribute("CanNang")]
		[Bindable(true)]
		public decimal? CanNang 
		{
			get { return GetColumnValue<decimal?>(Columns.CanNang); }
			set { SetColumnValue(Columns.CanNang, value); }
		}
		  
		[XmlAttribute("ChieuCao")]
		[Bindable(true)]
		public decimal? ChieuCao 
		{
			get { return GetColumnValue<decimal?>(Columns.ChieuCao); }
			set { SetColumnValue(Columns.ChieuCao, value); }
		}
		  
		[XmlAttribute("DaNmac")]
		[Bindable(true)]
		public string DaNmac 
		{
			get { return GetColumnValue<string>(Columns.DaNmac); }
			set { SetColumnValue(Columns.DaNmac, value); }
		}
		  
		[XmlAttribute("KhamThoan")]
		[Bindable(true)]
		public string KhamThoan 
		{
			get { return GetColumnValue<string>(Columns.KhamThoan); }
			set { SetColumnValue(Columns.KhamThoan, value); }
		}
		  
		[XmlAttribute("KhamHhap")]
		[Bindable(true)]
		public string KhamHhap 
		{
			get { return GetColumnValue<string>(Columns.KhamHhap); }
			set { SetColumnValue(Columns.KhamHhap, value); }
		}
		  
		[XmlAttribute("KhamBphanKhac")]
		[Bindable(true)]
		public string KhamBphanKhac 
		{
			get { return GetColumnValue<string>(Columns.KhamBphanKhac); }
			set { SetColumnValue(Columns.KhamBphanKhac, value); }
		}
		  
		[XmlAttribute("IdHsPhaThai")]
		[Bindable(true)]
		public int? IdHsPhaThai 
		{
			get { return GetColumnValue<int?>(Columns.IdHsPhaThai); }
			set { SetColumnValue(Columns.IdHsPhaThai, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varPatientCode,long? varPatientId,int? varIdPhieuVaovien,int? varMach,decimal? varNhietDo,string varHuyetAp,int? varNhipTho,decimal? varCanNang,decimal? varChieuCao,string varDaNmac,string varKhamThoan,string varKhamHhap,string varKhamBphanKhac,int? varIdHsPhaThai,DateTime? varNgaySua,DateTime? varNgayTao,string varNguoiSua,string varNguoiTao)
		{
			TKhamToanthan item = new TKhamToanthan();
			
			item.PatientCode = varPatientCode;
			
			item.PatientId = varPatientId;
			
			item.IdPhieuVaovien = varIdPhieuVaovien;
			
			item.Mach = varMach;
			
			item.NhietDo = varNhietDo;
			
			item.HuyetAp = varHuyetAp;
			
			item.NhipTho = varNhipTho;
			
			item.CanNang = varCanNang;
			
			item.ChieuCao = varChieuCao;
			
			item.DaNmac = varDaNmac;
			
			item.KhamThoan = varKhamThoan;
			
			item.KhamHhap = varKhamHhap;
			
			item.KhamBphanKhac = varKhamBphanKhac;
			
			item.IdHsPhaThai = varIdHsPhaThai;
			
			item.NgaySua = varNgaySua;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NguoiTao = varNguoiTao;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdKtoanThan,string varPatientCode,long? varPatientId,int? varIdPhieuVaovien,int? varMach,decimal? varNhietDo,string varHuyetAp,int? varNhipTho,decimal? varCanNang,decimal? varChieuCao,string varDaNmac,string varKhamThoan,string varKhamHhap,string varKhamBphanKhac,int? varIdHsPhaThai,DateTime? varNgaySua,DateTime? varNgayTao,string varNguoiSua,string varNguoiTao)
		{
			TKhamToanthan item = new TKhamToanthan();
			
				item.IdKtoanThan = varIdKtoanThan;
			
				item.PatientCode = varPatientCode;
			
				item.PatientId = varPatientId;
			
				item.IdPhieuVaovien = varIdPhieuVaovien;
			
				item.Mach = varMach;
			
				item.NhietDo = varNhietDo;
			
				item.HuyetAp = varHuyetAp;
			
				item.NhipTho = varNhipTho;
			
				item.CanNang = varCanNang;
			
				item.ChieuCao = varChieuCao;
			
				item.DaNmac = varDaNmac;
			
				item.KhamThoan = varKhamThoan;
			
				item.KhamHhap = varKhamHhap;
			
				item.KhamBphanKhac = varKhamBphanKhac;
			
				item.IdHsPhaThai = varIdHsPhaThai;
			
				item.NgaySua = varNgaySua;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NguoiTao = varNguoiTao;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdKtoanThanColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuVaovienColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn MachColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn NhietDoColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn HuyetApColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NhipThoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn CanNangColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn ChieuCaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn DaNmacColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamThoanColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamHhapColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamBphanKhacColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn IdHsPhaThaiColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdKtoanThan = @"ID_KTOAN_THAN";
			 public static string PatientCode = @"Patient_Code";
			 public static string PatientId = @"Patient_ID";
			 public static string IdPhieuVaovien = @"ID_PHIEU_VAOVIEN";
			 public static string Mach = @"MACH";
			 public static string NhietDo = @"NHIET_DO";
			 public static string HuyetAp = @"HUYET_AP";
			 public static string NhipTho = @"NHIP_THO";
			 public static string CanNang = @"CAN_NANG";
			 public static string ChieuCao = @"CHIEU_CAO";
			 public static string DaNmac = @"DA_NMAC";
			 public static string KhamThoan = @"KHAM_THOAN";
			 public static string KhamHhap = @"KHAM_HHAP";
			 public static string KhamBphanKhac = @"KHAM_BPHAN_KHAC";
			 public static string IdHsPhaThai = @"ID_HS_PHA_THAI";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string NguoiTao = @"NGUOI_TAO";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
