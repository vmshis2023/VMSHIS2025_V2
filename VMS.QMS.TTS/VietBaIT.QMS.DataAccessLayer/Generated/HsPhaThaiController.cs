using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for HS_PHA_THAI
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class HsPhaThaiController
    {
        // Preload our schema..
        HsPhaThai thisSchemaLoad = new HsPhaThai();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public HsPhaThaiCollection FetchAll()
        {
            HsPhaThaiCollection coll = new HsPhaThaiCollection();
            Query qry = new Query(HsPhaThai.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public HsPhaThaiCollection FetchByID(object IdHsPhaThai)
        {
            HsPhaThaiCollection coll = new HsPhaThaiCollection().Where("ID_HS_PHA_THAI", IdHsPhaThai).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public HsPhaThaiCollection FetchByQuery(Query qry)
        {
            HsPhaThaiCollection coll = new HsPhaThaiCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdHsPhaThai)
        {
            return (HsPhaThai.Delete(IdHsPhaThai) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdHsPhaThai)
        {
            return (HsPhaThai.Destroy(IdHsPhaThai) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int IdHsPhaThai,string PatientCode,long? PatientId,int? ExamId,int? IdPhieuVaovien,string KhamKinhCcuoi,string KhamAmHo,string KhamAmDao,string KhamCoTuCung,string KhamTuCung,string PphuPhai,string PphuTrai,string XnTestThuThai,string XnSieuAm,string XnKhac,string ChanDoan,string PphapGiamDau,string PphapPhaThai,string KtraChutSluong,string KtraChutCluong,string KtrChutCtxVoiTthai,string Thuoc,string BienchungXuly,string TdToantrang,int? TdMach,string TdHuyetap,string TdDau,string TdRamau,string PphaptranhthaiSautt,string KhamlaiChandoan,string KhamlaiDieutri,int? IdKhamSanphuKhoa,string Bptt,byte? SuDungBptt,string NguoiTao,DateTime? NgayTao,string NguoiSua,DateTime? NgaySua)
	    {
		    HsPhaThai item = new HsPhaThai();
		    
            item.IdHsPhaThai = IdHsPhaThai;
            
            item.PatientCode = PatientCode;
            
            item.PatientId = PatientId;
            
            item.ExamId = ExamId;
            
            item.IdPhieuVaovien = IdPhieuVaovien;
            
            item.KhamKinhCcuoi = KhamKinhCcuoi;
            
            item.KhamAmHo = KhamAmHo;
            
            item.KhamAmDao = KhamAmDao;
            
            item.KhamCoTuCung = KhamCoTuCung;
            
            item.KhamTuCung = KhamTuCung;
            
            item.PphuPhai = PphuPhai;
            
            item.PphuTrai = PphuTrai;
            
            item.XnTestThuThai = XnTestThuThai;
            
            item.XnSieuAm = XnSieuAm;
            
            item.XnKhac = XnKhac;
            
            item.ChanDoan = ChanDoan;
            
            item.PphapGiamDau = PphapGiamDau;
            
            item.PphapPhaThai = PphapPhaThai;
            
            item.KtraChutSluong = KtraChutSluong;
            
            item.KtraChutCluong = KtraChutCluong;
            
            item.KtrChutCtxVoiTthai = KtrChutCtxVoiTthai;
            
            item.Thuoc = Thuoc;
            
            item.BienchungXuly = BienchungXuly;
            
            item.TdToantrang = TdToantrang;
            
            item.TdMach = TdMach;
            
            item.TdHuyetap = TdHuyetap;
            
            item.TdDau = TdDau;
            
            item.TdRamau = TdRamau;
            
            item.PphaptranhthaiSautt = PphaptranhthaiSautt;
            
            item.KhamlaiChandoan = KhamlaiChandoan;
            
            item.KhamlaiDieutri = KhamlaiDieutri;
            
            item.IdKhamSanphuKhoa = IdKhamSanphuKhoa;
            
            item.Bptt = Bptt;
            
            item.SuDungBptt = SuDungBptt;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NgaySua = NgaySua;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int IdHsPhaThai,string PatientCode,long? PatientId,int? ExamId,int? IdPhieuVaovien,string KhamKinhCcuoi,string KhamAmHo,string KhamAmDao,string KhamCoTuCung,string KhamTuCung,string PphuPhai,string PphuTrai,string XnTestThuThai,string XnSieuAm,string XnKhac,string ChanDoan,string PphapGiamDau,string PphapPhaThai,string KtraChutSluong,string KtraChutCluong,string KtrChutCtxVoiTthai,string Thuoc,string BienchungXuly,string TdToantrang,int? TdMach,string TdHuyetap,string TdDau,string TdRamau,string PphaptranhthaiSautt,string KhamlaiChandoan,string KhamlaiDieutri,int? IdKhamSanphuKhoa,string Bptt,byte? SuDungBptt,string NguoiTao,DateTime? NgayTao,string NguoiSua,DateTime? NgaySua)
	    {
		    HsPhaThai item = new HsPhaThai();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdHsPhaThai = IdHsPhaThai;
				
			item.PatientCode = PatientCode;
				
			item.PatientId = PatientId;
				
			item.ExamId = ExamId;
				
			item.IdPhieuVaovien = IdPhieuVaovien;
				
			item.KhamKinhCcuoi = KhamKinhCcuoi;
				
			item.KhamAmHo = KhamAmHo;
				
			item.KhamAmDao = KhamAmDao;
				
			item.KhamCoTuCung = KhamCoTuCung;
				
			item.KhamTuCung = KhamTuCung;
				
			item.PphuPhai = PphuPhai;
				
			item.PphuTrai = PphuTrai;
				
			item.XnTestThuThai = XnTestThuThai;
				
			item.XnSieuAm = XnSieuAm;
				
			item.XnKhac = XnKhac;
				
			item.ChanDoan = ChanDoan;
				
			item.PphapGiamDau = PphapGiamDau;
				
			item.PphapPhaThai = PphapPhaThai;
				
			item.KtraChutSluong = KtraChutSluong;
				
			item.KtraChutCluong = KtraChutCluong;
				
			item.KtrChutCtxVoiTthai = KtrChutCtxVoiTthai;
				
			item.Thuoc = Thuoc;
				
			item.BienchungXuly = BienchungXuly;
				
			item.TdToantrang = TdToantrang;
				
			item.TdMach = TdMach;
				
			item.TdHuyetap = TdHuyetap;
				
			item.TdDau = TdDau;
				
			item.TdRamau = TdRamau;
				
			item.PphaptranhthaiSautt = PphaptranhthaiSautt;
				
			item.KhamlaiChandoan = KhamlaiChandoan;
				
			item.KhamlaiDieutri = KhamlaiDieutri;
				
			item.IdKhamSanphuKhoa = IdKhamSanphuKhoa;
				
			item.Bptt = Bptt;
				
			item.SuDungBptt = SuDungBptt;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NgaySua = NgaySua;
				
	        item.Save(UserName);
	    }
    }
}
