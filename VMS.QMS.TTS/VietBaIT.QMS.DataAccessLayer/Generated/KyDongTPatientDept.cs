using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the KyDongTPatientDept class.
	/// </summary>
    [Serializable]
	public partial class KyDongTPatientDeptCollection : ActiveList<KyDongTPatientDept, KyDongTPatientDeptCollection>
	{	   
		public KyDongTPatientDeptCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KyDongTPatientDeptCollection</returns>
		public KyDongTPatientDeptCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KyDongTPatientDept o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the KyDong_T_PatientDept table.
	/// </summary>
	[Serializable]
	public partial class KyDongTPatientDept : ActiveRecord<KyDongTPatientDept>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KyDongTPatientDept()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KyDongTPatientDept(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KyDongTPatientDept(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KyDongTPatientDept(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("KyDong_T_PatientDept", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarPatientDeptId = new TableSchema.TableColumn(schema);
				colvarPatientDeptId.ColumnName = "PatientDept_ID";
				colvarPatientDeptId.DataType = DbType.Int32;
				colvarPatientDeptId.MaxLength = 0;
				colvarPatientDeptId.AutoIncrement = true;
				colvarPatientDeptId.IsNullable = false;
				colvarPatientDeptId.IsPrimaryKey = true;
				colvarPatientDeptId.IsForeignKey = false;
				colvarPatientDeptId.IsReadOnly = false;
				colvarPatientDeptId.DefaultSetting = @"";
				colvarPatientDeptId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientDeptId);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.String;
				colvarPatientCode.MaxLength = 50;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = false;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int32;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = false;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarPrice = new TableSchema.TableColumn(schema);
				colvarPrice.ColumnName = "Price";
				colvarPrice.DataType = DbType.Decimal;
				colvarPrice.MaxLength = 0;
				colvarPrice.AutoIncrement = false;
				colvarPrice.IsNullable = false;
				colvarPrice.IsPrimaryKey = false;
				colvarPrice.IsForeignKey = false;
				colvarPrice.IsReadOnly = false;
				colvarPrice.DefaultSetting = @"";
				colvarPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPrice);
				
				TableSchema.TableColumn colvarSurchargePrice = new TableSchema.TableColumn(schema);
				colvarSurchargePrice.ColumnName = "Surcharge_Price";
				colvarSurchargePrice.DataType = DbType.Decimal;
				colvarSurchargePrice.MaxLength = 0;
				colvarSurchargePrice.AutoIncrement = false;
				colvarSurchargePrice.IsNullable = true;
				colvarSurchargePrice.IsPrimaryKey = false;
				colvarSurchargePrice.IsForeignKey = false;
				colvarSurchargePrice.IsReadOnly = false;
				colvarSurchargePrice.DefaultSetting = @"";
				colvarSurchargePrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSurchargePrice);
				
				TableSchema.TableColumn colvarGiaBhct = new TableSchema.TableColumn(schema);
				colvarGiaBhct.ColumnName = "Gia_BHCT";
				colvarGiaBhct.DataType = DbType.Decimal;
				colvarGiaBhct.MaxLength = 0;
				colvarGiaBhct.AutoIncrement = false;
				colvarGiaBhct.IsNullable = true;
				colvarGiaBhct.IsPrimaryKey = false;
				colvarGiaBhct.IsForeignKey = false;
				colvarGiaBhct.IsReadOnly = false;
				colvarGiaBhct.DefaultSetting = @"";
				colvarGiaBhct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaBhct);
				
				TableSchema.TableColumn colvarGiaBnct = new TableSchema.TableColumn(schema);
				colvarGiaBnct.ColumnName = "Gia_BNCT";
				colvarGiaBnct.DataType = DbType.Decimal;
				colvarGiaBnct.MaxLength = 0;
				colvarGiaBnct.AutoIncrement = false;
				colvarGiaBnct.IsNullable = true;
				colvarGiaBnct.IsPrimaryKey = false;
				colvarGiaBnct.IsForeignKey = false;
				colvarGiaBnct.IsReadOnly = false;
				colvarGiaBnct.DefaultSetting = @"";
				colvarGiaBnct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaBnct);
				
				TableSchema.TableColumn colvarRoomId = new TableSchema.TableColumn(schema);
				colvarRoomId.ColumnName = "Room_ID";
				colvarRoomId.DataType = DbType.Int16;
				colvarRoomId.MaxLength = 0;
				colvarRoomId.AutoIncrement = false;
				colvarRoomId.IsNullable = true;
				colvarRoomId.IsPrimaryKey = false;
				colvarRoomId.IsForeignKey = false;
				colvarRoomId.IsReadOnly = false;
				colvarRoomId.DefaultSetting = @"";
				colvarRoomId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRoomId);
				
				TableSchema.TableColumn colvarBedId = new TableSchema.TableColumn(schema);
				colvarBedId.ColumnName = "Bed_ID";
				colvarBedId.DataType = DbType.Int16;
				colvarBedId.MaxLength = 0;
				colvarBedId.AutoIncrement = false;
				colvarBedId.IsNullable = true;
				colvarBedId.IsPrimaryKey = false;
				colvarBedId.IsForeignKey = false;
				colvarBedId.IsReadOnly = false;
				colvarBedId.DefaultSetting = @"";
				colvarBedId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBedId);
				
				TableSchema.TableColumn colvarBedType = new TableSchema.TableColumn(schema);
				colvarBedType.ColumnName = "Bed_Type";
				colvarBedType.DataType = DbType.Byte;
				colvarBedType.MaxLength = 0;
				colvarBedType.AutoIncrement = false;
				colvarBedType.IsNullable = true;
				colvarBedType.IsPrimaryKey = false;
				colvarBedType.IsForeignKey = false;
				colvarBedType.IsReadOnly = false;
				colvarBedType.DefaultSetting = @"";
				colvarBedType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBedType);
				
				TableSchema.TableColumn colvarRegDate = new TableSchema.TableColumn(schema);
				colvarRegDate.ColumnName = "Reg_Date";
				colvarRegDate.DataType = DbType.DateTime;
				colvarRegDate.MaxLength = 0;
				colvarRegDate.AutoIncrement = false;
				colvarRegDate.IsNullable = false;
				colvarRegDate.IsPrimaryKey = false;
				colvarRegDate.IsForeignKey = false;
				colvarRegDate.IsReadOnly = false;
				colvarRegDate.DefaultSetting = @"";
				colvarRegDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegDate);
				
				TableSchema.TableColumn colvarEndDate = new TableSchema.TableColumn(schema);
				colvarEndDate.ColumnName = "End_Date";
				colvarEndDate.DataType = DbType.DateTime;
				colvarEndDate.MaxLength = 0;
				colvarEndDate.AutoIncrement = false;
				colvarEndDate.IsNullable = true;
				colvarEndDate.IsPrimaryKey = false;
				colvarEndDate.IsForeignKey = false;
				colvarEndDate.IsReadOnly = false;
				colvarEndDate.DefaultSetting = @"";
				colvarEndDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEndDate);
				
				TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
				colvarQuantity.ColumnName = "Quantity";
				colvarQuantity.DataType = DbType.Int32;
				colvarQuantity.MaxLength = 0;
				colvarQuantity.AutoIncrement = false;
				colvarQuantity.IsNullable = true;
				colvarQuantity.IsPrimaryKey = false;
				colvarQuantity.IsForeignKey = false;
				colvarQuantity.IsReadOnly = false;
				colvarQuantity.DefaultSetting = @"";
				colvarQuantity.ForeignKeyTableName = "";
				schema.Columns.Add(colvarQuantity);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "Nguoi_Tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "Ngay_Tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
				colvarPaymentId.ColumnName = "Payment_ID";
				colvarPaymentId.DataType = DbType.Int32;
				colvarPaymentId.MaxLength = 0;
				colvarPaymentId.AutoIncrement = false;
				colvarPaymentId.IsNullable = true;
				colvarPaymentId.IsPrimaryKey = false;
				colvarPaymentId.IsForeignKey = false;
				colvarPaymentId.IsReadOnly = false;
				colvarPaymentId.DefaultSetting = @"";
				colvarPaymentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentId);
				
				TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
				colvarPaymentDate.ColumnName = "Payment_Date";
				colvarPaymentDate.DataType = DbType.DateTime;
				colvarPaymentDate.MaxLength = 0;
				colvarPaymentDate.AutoIncrement = false;
				colvarPaymentDate.IsNullable = true;
				colvarPaymentDate.IsPrimaryKey = false;
				colvarPaymentDate.IsForeignKey = false;
				colvarPaymentDate.IsReadOnly = false;
				colvarPaymentDate.DefaultSetting = @"";
				colvarPaymentDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentDate);
				
				TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
				colvarPaymentStatus.ColumnName = "Payment_Status";
				colvarPaymentStatus.DataType = DbType.Byte;
				colvarPaymentStatus.MaxLength = 0;
				colvarPaymentStatus.AutoIncrement = false;
				colvarPaymentStatus.IsNullable = true;
				colvarPaymentStatus.IsPrimaryKey = false;
				colvarPaymentStatus.IsForeignKey = false;
				colvarPaymentStatus.IsReadOnly = false;
				
						colvarPaymentStatus.DefaultSetting = @"((0))";
				colvarPaymentStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentStatus);
				
				TableSchema.TableColumn colvarIdLoaiBg = new TableSchema.TableColumn(schema);
				colvarIdLoaiBg.ColumnName = "ID_LOAI_BG";
				colvarIdLoaiBg.DataType = DbType.Int16;
				colvarIdLoaiBg.MaxLength = 0;
				colvarIdLoaiBg.AutoIncrement = false;
				colvarIdLoaiBg.IsNullable = true;
				colvarIdLoaiBg.IsPrimaryKey = false;
				colvarIdLoaiBg.IsForeignKey = false;
				colvarIdLoaiBg.IsReadOnly = false;
				colvarIdLoaiBg.DefaultSetting = @"";
				colvarIdLoaiBg.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdLoaiBg);
				
				TableSchema.TableColumn colvarNoiTru = new TableSchema.TableColumn(schema);
				colvarNoiTru.ColumnName = "NoiTru";
				colvarNoiTru.DataType = DbType.Byte;
				colvarNoiTru.MaxLength = 0;
				colvarNoiTru.AutoIncrement = false;
				colvarNoiTru.IsNullable = true;
				colvarNoiTru.IsPrimaryKey = false;
				colvarNoiTru.IsForeignKey = false;
				colvarNoiTru.IsReadOnly = false;
				colvarNoiTru.DefaultSetting = @"";
				colvarNoiTru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoiTru);
				
				TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
				colvarDepartmentId.ColumnName = "Department_ID";
				colvarDepartmentId.DataType = DbType.Int16;
				colvarDepartmentId.MaxLength = 0;
				colvarDepartmentId.AutoIncrement = false;
				colvarDepartmentId.IsNullable = true;
				colvarDepartmentId.IsPrimaryKey = false;
				colvarDepartmentId.IsForeignKey = false;
				colvarDepartmentId.IsReadOnly = false;
				colvarDepartmentId.DefaultSetting = @"";
				colvarDepartmentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDepartmentId);
				
				TableSchema.TableColumn colvarFromDepartmentId = new TableSchema.TableColumn(schema);
				colvarFromDepartmentId.ColumnName = "FromDepartment_ID";
				colvarFromDepartmentId.DataType = DbType.Int16;
				colvarFromDepartmentId.MaxLength = 0;
				colvarFromDepartmentId.AutoIncrement = false;
				colvarFromDepartmentId.IsNullable = true;
				colvarFromDepartmentId.IsPrimaryKey = false;
				colvarFromDepartmentId.IsForeignKey = false;
				colvarFromDepartmentId.IsReadOnly = false;
				colvarFromDepartmentId.DefaultSetting = @"";
				colvarFromDepartmentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFromDepartmentId);
				
				TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
				colvarStatus.ColumnName = "Status";
				colvarStatus.DataType = DbType.Byte;
				colvarStatus.MaxLength = 0;
				colvarStatus.AutoIncrement = false;
				colvarStatus.IsNullable = true;
				colvarStatus.IsPrimaryKey = false;
				colvarStatus.IsForeignKey = false;
				colvarStatus.IsReadOnly = false;
				colvarStatus.DefaultSetting = @"";
				colvarStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStatus);
				
				TableSchema.TableColumn colvarPtramBhyt = new TableSchema.TableColumn(schema);
				colvarPtramBhyt.ColumnName = "Ptram_BHYT";
				colvarPtramBhyt.DataType = DbType.Int32;
				colvarPtramBhyt.MaxLength = 0;
				colvarPtramBhyt.AutoIncrement = false;
				colvarPtramBhyt.IsNullable = true;
				colvarPtramBhyt.IsPrimaryKey = false;
				colvarPtramBhyt.IsForeignKey = false;
				colvarPtramBhyt.IsReadOnly = false;
				colvarPtramBhyt.DefaultSetting = @"";
				colvarPtramBhyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPtramBhyt);
				
				TableSchema.TableColumn colvarIdNhanVien = new TableSchema.TableColumn(schema);
				colvarIdNhanVien.ColumnName = "ID_NhanVien";
				colvarIdNhanVien.DataType = DbType.Int16;
				colvarIdNhanVien.MaxLength = 0;
				colvarIdNhanVien.AutoIncrement = false;
				colvarIdNhanVien.IsNullable = true;
				colvarIdNhanVien.IsPrimaryKey = false;
				colvarIdNhanVien.IsForeignKey = false;
				colvarIdNhanVien.IsReadOnly = false;
				colvarIdNhanVien.DefaultSetting = @"";
				colvarIdNhanVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhanVien);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("KyDong_T_PatientDept",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("PatientDeptId")]
		[Bindable(true)]
		public int PatientDeptId 
		{
			get { return GetColumnValue<int>(Columns.PatientDeptId); }
			set { SetColumnValue(Columns.PatientDeptId, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public int PatientId 
		{
			get { return GetColumnValue<int>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("Price")]
		[Bindable(true)]
		public decimal Price 
		{
			get { return GetColumnValue<decimal>(Columns.Price); }
			set { SetColumnValue(Columns.Price, value); }
		}
		  
		[XmlAttribute("SurchargePrice")]
		[Bindable(true)]
		public decimal? SurchargePrice 
		{
			get { return GetColumnValue<decimal?>(Columns.SurchargePrice); }
			set { SetColumnValue(Columns.SurchargePrice, value); }
		}
		  
		[XmlAttribute("GiaBhct")]
		[Bindable(true)]
		public decimal? GiaBhct 
		{
			get { return GetColumnValue<decimal?>(Columns.GiaBhct); }
			set { SetColumnValue(Columns.GiaBhct, value); }
		}
		  
		[XmlAttribute("GiaBnct")]
		[Bindable(true)]
		public decimal? GiaBnct 
		{
			get { return GetColumnValue<decimal?>(Columns.GiaBnct); }
			set { SetColumnValue(Columns.GiaBnct, value); }
		}
		  
		[XmlAttribute("RoomId")]
		[Bindable(true)]
		public short? RoomId 
		{
			get { return GetColumnValue<short?>(Columns.RoomId); }
			set { SetColumnValue(Columns.RoomId, value); }
		}
		  
		[XmlAttribute("BedId")]
		[Bindable(true)]
		public short? BedId 
		{
			get { return GetColumnValue<short?>(Columns.BedId); }
			set { SetColumnValue(Columns.BedId, value); }
		}
		  
		[XmlAttribute("BedType")]
		[Bindable(true)]
		public byte? BedType 
		{
			get { return GetColumnValue<byte?>(Columns.BedType); }
			set { SetColumnValue(Columns.BedType, value); }
		}
		  
		[XmlAttribute("RegDate")]
		[Bindable(true)]
		public DateTime RegDate 
		{
			get { return GetColumnValue<DateTime>(Columns.RegDate); }
			set { SetColumnValue(Columns.RegDate, value); }
		}
		  
		[XmlAttribute("EndDate")]
		[Bindable(true)]
		public DateTime? EndDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.EndDate); }
			set { SetColumnValue(Columns.EndDate, value); }
		}
		  
		[XmlAttribute("Quantity")]
		[Bindable(true)]
		public int? Quantity 
		{
			get { return GetColumnValue<int?>(Columns.Quantity); }
			set { SetColumnValue(Columns.Quantity, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("PaymentId")]
		[Bindable(true)]
		public int? PaymentId 
		{
			get { return GetColumnValue<int?>(Columns.PaymentId); }
			set { SetColumnValue(Columns.PaymentId, value); }
		}
		  
		[XmlAttribute("PaymentDate")]
		[Bindable(true)]
		public DateTime? PaymentDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.PaymentDate); }
			set { SetColumnValue(Columns.PaymentDate, value); }
		}
		  
		[XmlAttribute("PaymentStatus")]
		[Bindable(true)]
		public byte? PaymentStatus 
		{
			get { return GetColumnValue<byte?>(Columns.PaymentStatus); }
			set { SetColumnValue(Columns.PaymentStatus, value); }
		}
		  
		[XmlAttribute("IdLoaiBg")]
		[Bindable(true)]
		public short? IdLoaiBg 
		{
			get { return GetColumnValue<short?>(Columns.IdLoaiBg); }
			set { SetColumnValue(Columns.IdLoaiBg, value); }
		}
		  
		[XmlAttribute("NoiTru")]
		[Bindable(true)]
		public byte? NoiTru 
		{
			get { return GetColumnValue<byte?>(Columns.NoiTru); }
			set { SetColumnValue(Columns.NoiTru, value); }
		}
		  
		[XmlAttribute("DepartmentId")]
		[Bindable(true)]
		public short? DepartmentId 
		{
			get { return GetColumnValue<short?>(Columns.DepartmentId); }
			set { SetColumnValue(Columns.DepartmentId, value); }
		}
		  
		[XmlAttribute("FromDepartmentId")]
		[Bindable(true)]
		public short? FromDepartmentId 
		{
			get { return GetColumnValue<short?>(Columns.FromDepartmentId); }
			set { SetColumnValue(Columns.FromDepartmentId, value); }
		}
		  
		[XmlAttribute("Status")]
		[Bindable(true)]
		public byte? Status 
		{
			get { return GetColumnValue<byte?>(Columns.Status); }
			set { SetColumnValue(Columns.Status, value); }
		}
		  
		[XmlAttribute("PtramBhyt")]
		[Bindable(true)]
		public int? PtramBhyt 
		{
			get { return GetColumnValue<int?>(Columns.PtramBhyt); }
			set { SetColumnValue(Columns.PtramBhyt, value); }
		}
		  
		[XmlAttribute("IdNhanVien")]
		[Bindable(true)]
		public short? IdNhanVien 
		{
			get { return GetColumnValue<short?>(Columns.IdNhanVien); }
			set { SetColumnValue(Columns.IdNhanVien, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varPatientCode,int varPatientId,decimal varPrice,decimal? varSurchargePrice,decimal? varGiaBhct,decimal? varGiaBnct,short? varRoomId,short? varBedId,byte? varBedType,DateTime varRegDate,DateTime? varEndDate,int? varQuantity,string varNguoiTao,DateTime? varNgayTao,int? varPaymentId,DateTime? varPaymentDate,byte? varPaymentStatus,short? varIdLoaiBg,byte? varNoiTru,short? varDepartmentId,short? varFromDepartmentId,byte? varStatus,int? varPtramBhyt,short? varIdNhanVien)
		{
			KyDongTPatientDept item = new KyDongTPatientDept();
			
			item.PatientCode = varPatientCode;
			
			item.PatientId = varPatientId;
			
			item.Price = varPrice;
			
			item.SurchargePrice = varSurchargePrice;
			
			item.GiaBhct = varGiaBhct;
			
			item.GiaBnct = varGiaBnct;
			
			item.RoomId = varRoomId;
			
			item.BedId = varBedId;
			
			item.BedType = varBedType;
			
			item.RegDate = varRegDate;
			
			item.EndDate = varEndDate;
			
			item.Quantity = varQuantity;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.PaymentId = varPaymentId;
			
			item.PaymentDate = varPaymentDate;
			
			item.PaymentStatus = varPaymentStatus;
			
			item.IdLoaiBg = varIdLoaiBg;
			
			item.NoiTru = varNoiTru;
			
			item.DepartmentId = varDepartmentId;
			
			item.FromDepartmentId = varFromDepartmentId;
			
			item.Status = varStatus;
			
			item.PtramBhyt = varPtramBhyt;
			
			item.IdNhanVien = varIdNhanVien;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varPatientDeptId,string varPatientCode,int varPatientId,decimal varPrice,decimal? varSurchargePrice,decimal? varGiaBhct,decimal? varGiaBnct,short? varRoomId,short? varBedId,byte? varBedType,DateTime varRegDate,DateTime? varEndDate,int? varQuantity,string varNguoiTao,DateTime? varNgayTao,int? varPaymentId,DateTime? varPaymentDate,byte? varPaymentStatus,short? varIdLoaiBg,byte? varNoiTru,short? varDepartmentId,short? varFromDepartmentId,byte? varStatus,int? varPtramBhyt,short? varIdNhanVien)
		{
			KyDongTPatientDept item = new KyDongTPatientDept();
			
				item.PatientDeptId = varPatientDeptId;
			
				item.PatientCode = varPatientCode;
			
				item.PatientId = varPatientId;
			
				item.Price = varPrice;
			
				item.SurchargePrice = varSurchargePrice;
			
				item.GiaBhct = varGiaBhct;
			
				item.GiaBnct = varGiaBnct;
			
				item.RoomId = varRoomId;
			
				item.BedId = varBedId;
			
				item.BedType = varBedType;
			
				item.RegDate = varRegDate;
			
				item.EndDate = varEndDate;
			
				item.Quantity = varQuantity;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.PaymentId = varPaymentId;
			
				item.PaymentDate = varPaymentDate;
			
				item.PaymentStatus = varPaymentStatus;
			
				item.IdLoaiBg = varIdLoaiBg;
			
				item.NoiTru = varNoiTru;
			
				item.DepartmentId = varDepartmentId;
			
				item.FromDepartmentId = varFromDepartmentId;
			
				item.Status = varStatus;
			
				item.PtramBhyt = varPtramBhyt;
			
				item.IdNhanVien = varIdNhanVien;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn PatientDeptIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn PriceColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn SurchargePriceColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaBhctColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaBnctColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn RoomIdColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn BedIdColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn BedTypeColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn RegDateColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn EndDateColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn QuantityColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentIdColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentDateColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentStatusColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn IdLoaiBgColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn NoiTruColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn DepartmentIdColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn FromDepartmentIdColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn StatusColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn PtramBhytColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhanVienColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string PatientDeptId = @"PatientDept_ID";
			 public static string PatientCode = @"Patient_Code";
			 public static string PatientId = @"Patient_ID";
			 public static string Price = @"Price";
			 public static string SurchargePrice = @"Surcharge_Price";
			 public static string GiaBhct = @"Gia_BHCT";
			 public static string GiaBnct = @"Gia_BNCT";
			 public static string RoomId = @"Room_ID";
			 public static string BedId = @"Bed_ID";
			 public static string BedType = @"Bed_Type";
			 public static string RegDate = @"Reg_Date";
			 public static string EndDate = @"End_Date";
			 public static string Quantity = @"Quantity";
			 public static string NguoiTao = @"Nguoi_Tao";
			 public static string NgayTao = @"Ngay_Tao";
			 public static string PaymentId = @"Payment_ID";
			 public static string PaymentDate = @"Payment_Date";
			 public static string PaymentStatus = @"Payment_Status";
			 public static string IdLoaiBg = @"ID_LOAI_BG";
			 public static string NoiTru = @"NoiTru";
			 public static string DepartmentId = @"Department_ID";
			 public static string FromDepartmentId = @"FromDepartment_ID";
			 public static string Status = @"Status";
			 public static string PtramBhyt = @"Ptram_BHYT";
			 public static string IdNhanVien = @"ID_NhanVien";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
