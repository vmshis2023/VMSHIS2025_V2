using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the LService class.
	/// </summary>
    [Serializable]
	public partial class LServiceCollection : ActiveList<LService, LServiceCollection>
	{	   
		public LServiceCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>LServiceCollection</returns>
		public LServiceCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                LService o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the L_Services table.
	/// </summary>
	[Serializable]
	public partial class LService : ActiveRecord<LService>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public LService()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public LService(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public LService(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public LService(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("L_Services", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
				colvarServiceId.ColumnName = "Service_ID";
				colvarServiceId.DataType = DbType.Int16;
				colvarServiceId.MaxLength = 0;
				colvarServiceId.AutoIncrement = true;
				colvarServiceId.IsNullable = false;
				colvarServiceId.IsPrimaryKey = true;
				colvarServiceId.IsForeignKey = false;
				colvarServiceId.IsReadOnly = false;
				colvarServiceId.DefaultSetting = @"";
				colvarServiceId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceId);
				
				TableSchema.TableColumn colvarServiceTypeId = new TableSchema.TableColumn(schema);
				colvarServiceTypeId.ColumnName = "ServiceType_ID";
				colvarServiceTypeId.DataType = DbType.Int16;
				colvarServiceTypeId.MaxLength = 0;
				colvarServiceTypeId.AutoIncrement = false;
				colvarServiceTypeId.IsNullable = false;
				colvarServiceTypeId.IsPrimaryKey = false;
				colvarServiceTypeId.IsForeignKey = false;
				colvarServiceTypeId.IsReadOnly = false;
				colvarServiceTypeId.DefaultSetting = @"";
				colvarServiceTypeId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceTypeId);
				
				TableSchema.TableColumn colvarServiceCode = new TableSchema.TableColumn(schema);
				colvarServiceCode.ColumnName = "ServiceCode";
				colvarServiceCode.DataType = DbType.AnsiString;
				colvarServiceCode.MaxLength = 20;
				colvarServiceCode.AutoIncrement = false;
				colvarServiceCode.IsNullable = true;
				colvarServiceCode.IsPrimaryKey = false;
				colvarServiceCode.IsForeignKey = false;
				colvarServiceCode.IsReadOnly = false;
				colvarServiceCode.DefaultSetting = @"";
				colvarServiceCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceCode);
				
				TableSchema.TableColumn colvarServiceName = new TableSchema.TableColumn(schema);
				colvarServiceName.ColumnName = "Service_Name";
				colvarServiceName.DataType = DbType.String;
				colvarServiceName.MaxLength = 300;
				colvarServiceName.AutoIncrement = false;
				colvarServiceName.IsNullable = false;
				colvarServiceName.IsPrimaryKey = false;
				colvarServiceName.IsForeignKey = false;
				colvarServiceName.IsReadOnly = false;
				colvarServiceName.DefaultSetting = @"";
				colvarServiceName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceName);
				
				TableSchema.TableColumn colvarPrice = new TableSchema.TableColumn(schema);
				colvarPrice.ColumnName = "Price";
				colvarPrice.DataType = DbType.Decimal;
				colvarPrice.MaxLength = 0;
				colvarPrice.AutoIncrement = false;
				colvarPrice.IsNullable = false;
				colvarPrice.IsPrimaryKey = false;
				colvarPrice.IsForeignKey = false;
				colvarPrice.IsReadOnly = false;
				colvarPrice.DefaultSetting = @"";
				colvarPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPrice);
				
				TableSchema.TableColumn colvarValid = new TableSchema.TableColumn(schema);
				colvarValid.ColumnName = "Valid";
				colvarValid.DataType = DbType.Byte;
				colvarValid.MaxLength = 0;
				colvarValid.AutoIncrement = false;
				colvarValid.IsNullable = false;
				colvarValid.IsPrimaryKey = false;
				colvarValid.IsForeignKey = false;
				colvarValid.IsReadOnly = false;
				colvarValid.DefaultSetting = @"";
				colvarValid.ForeignKeyTableName = "";
				schema.Columns.Add(colvarValid);
				
				TableSchema.TableColumn colvarHtechService = new TableSchema.TableColumn(schema);
				colvarHtechService.ColumnName = "Htech_Service";
				colvarHtechService.DataType = DbType.Int16;
				colvarHtechService.MaxLength = 0;
				colvarHtechService.AutoIncrement = false;
				colvarHtechService.IsNullable = true;
				colvarHtechService.IsPrimaryKey = false;
				colvarHtechService.IsForeignKey = false;
				colvarHtechService.IsReadOnly = false;
				colvarHtechService.DefaultSetting = @"";
				colvarHtechService.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHtechService);
				
				TableSchema.TableColumn colvarIntOrder = new TableSchema.TableColumn(schema);
				colvarIntOrder.ColumnName = "intOrder";
				colvarIntOrder.DataType = DbType.Int16;
				colvarIntOrder.MaxLength = 0;
				colvarIntOrder.AutoIncrement = false;
				colvarIntOrder.IsNullable = false;
				colvarIntOrder.IsPrimaryKey = false;
				colvarIntOrder.IsForeignKey = false;
				colvarIntOrder.IsReadOnly = false;
				colvarIntOrder.DefaultSetting = @"";
				colvarIntOrder.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIntOrder);
				
				TableSchema.TableColumn colvarServiceDetail = new TableSchema.TableColumn(schema);
				colvarServiceDetail.ColumnName = "Service_Detail";
				colvarServiceDetail.DataType = DbType.Byte;
				colvarServiceDetail.MaxLength = 0;
				colvarServiceDetail.AutoIncrement = false;
				colvarServiceDetail.IsNullable = true;
				colvarServiceDetail.IsPrimaryKey = false;
				colvarServiceDetail.IsForeignKey = false;
				colvarServiceDetail.IsReadOnly = false;
				
						colvarServiceDetail.DefaultSetting = @"((1))";
				colvarServiceDetail.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceDetail);
				
				TableSchema.TableColumn colvarSDesc = new TableSchema.TableColumn(schema);
				colvarSDesc.ColumnName = "SDesc";
				colvarSDesc.DataType = DbType.String;
				colvarSDesc.MaxLength = 255;
				colvarSDesc.AutoIncrement = false;
				colvarSDesc.IsNullable = true;
				colvarSDesc.IsPrimaryKey = false;
				colvarSDesc.IsForeignKey = false;
				colvarSDesc.IsReadOnly = false;
				colvarSDesc.DefaultSetting = @"";
				colvarSDesc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSDesc);
				
				TableSchema.TableColumn colvarMaKetNoi = new TableSchema.TableColumn(schema);
				colvarMaKetNoi.ColumnName = "Ma_KetNoi";
				colvarMaKetNoi.DataType = DbType.AnsiString;
				colvarMaKetNoi.MaxLength = 50;
				colvarMaKetNoi.AutoIncrement = false;
				colvarMaKetNoi.IsNullable = true;
				colvarMaKetNoi.IsPrimaryKey = false;
				colvarMaKetNoi.IsForeignKey = false;
				colvarMaKetNoi.IsReadOnly = false;
				colvarMaKetNoi.DefaultSetting = @"";
				colvarMaKetNoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKetNoi);
				
				TableSchema.TableColumn colvarMaNhom = new TableSchema.TableColumn(schema);
				colvarMaNhom.ColumnName = "MA_NHOM";
				colvarMaNhom.DataType = DbType.String;
				colvarMaNhom.MaxLength = 50;
				colvarMaNhom.AutoIncrement = false;
				colvarMaNhom.IsNullable = true;
				colvarMaNhom.IsPrimaryKey = false;
				colvarMaNhom.IsForeignKey = false;
				colvarMaNhom.IsReadOnly = false;
				colvarMaNhom.DefaultSetting = @"";
				colvarMaNhom.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNhom);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
				colvarDepartmentId.ColumnName = "Department_ID";
				colvarDepartmentId.DataType = DbType.Int16;
				colvarDepartmentId.MaxLength = 0;
				colvarDepartmentId.AutoIncrement = false;
				colvarDepartmentId.IsNullable = true;
				colvarDepartmentId.IsPrimaryKey = false;
				colvarDepartmentId.IsForeignKey = false;
				colvarDepartmentId.IsReadOnly = false;
				colvarDepartmentId.DefaultSetting = @"";
				colvarDepartmentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDepartmentId);
				
				TableSchema.TableColumn colvarTieuDePhieuCls = new TableSchema.TableColumn(schema);
				colvarTieuDePhieuCls.ColumnName = "TieuDe_Phieu_CLS";
				colvarTieuDePhieuCls.DataType = DbType.String;
				colvarTieuDePhieuCls.MaxLength = 100;
				colvarTieuDePhieuCls.AutoIncrement = false;
				colvarTieuDePhieuCls.IsNullable = true;
				colvarTieuDePhieuCls.IsPrimaryKey = false;
				colvarTieuDePhieuCls.IsForeignKey = false;
				colvarTieuDePhieuCls.IsReadOnly = false;
				colvarTieuDePhieuCls.DefaultSetting = @"";
				colvarTieuDePhieuCls.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTieuDePhieuCls);
				
				TableSchema.TableColumn colvarMaInPhieu = new TableSchema.TableColumn(schema);
				colvarMaInPhieu.ColumnName = "Ma_InPhieu";
				colvarMaInPhieu.DataType = DbType.AnsiString;
				colvarMaInPhieu.MaxLength = 30;
				colvarMaInPhieu.AutoIncrement = false;
				colvarMaInPhieu.IsNullable = true;
				colvarMaInPhieu.IsPrimaryKey = false;
				colvarMaInPhieu.IsForeignKey = false;
				colvarMaInPhieu.IsReadOnly = false;
				colvarMaInPhieu.DefaultSetting = @"";
				colvarMaInPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaInPhieu);
				
				TableSchema.TableColumn colvarMaInPhieuHa = new TableSchema.TableColumn(schema);
				colvarMaInPhieuHa.ColumnName = "Ma_InPhieu_HA";
				colvarMaInPhieuHa.DataType = DbType.AnsiString;
				colvarMaInPhieuHa.MaxLength = 30;
				colvarMaInPhieuHa.AutoIncrement = false;
				colvarMaInPhieuHa.IsNullable = true;
				colvarMaInPhieuHa.IsPrimaryKey = false;
				colvarMaInPhieuHa.IsForeignKey = false;
				colvarMaInPhieuHa.IsReadOnly = false;
				colvarMaInPhieuHa.DefaultSetting = @"";
				colvarMaInPhieuHa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaInPhieuHa);
				
				TableSchema.TableColumn colvarIsChiPhiThem = new TableSchema.TableColumn(schema);
				colvarIsChiPhiThem.ColumnName = "IsChiPhi_Them";
				colvarIsChiPhiThem.DataType = DbType.Boolean;
				colvarIsChiPhiThem.MaxLength = 0;
				colvarIsChiPhiThem.AutoIncrement = false;
				colvarIsChiPhiThem.IsNullable = true;
				colvarIsChiPhiThem.IsPrimaryKey = false;
				colvarIsChiPhiThem.IsForeignKey = false;
				colvarIsChiPhiThem.IsReadOnly = false;
				colvarIsChiPhiThem.DefaultSetting = @"";
				colvarIsChiPhiThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsChiPhiThem);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("L_Services",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("ServiceId")]
		[Bindable(true)]
		public short ServiceId 
		{
			get { return GetColumnValue<short>(Columns.ServiceId); }
			set { SetColumnValue(Columns.ServiceId, value); }
		}
		  
		[XmlAttribute("ServiceTypeId")]
		[Bindable(true)]
		public short ServiceTypeId 
		{
			get { return GetColumnValue<short>(Columns.ServiceTypeId); }
			set { SetColumnValue(Columns.ServiceTypeId, value); }
		}
		  
		[XmlAttribute("ServiceCode")]
		[Bindable(true)]
		public string ServiceCode 
		{
			get { return GetColumnValue<string>(Columns.ServiceCode); }
			set { SetColumnValue(Columns.ServiceCode, value); }
		}
		  
		[XmlAttribute("ServiceName")]
		[Bindable(true)]
		public string ServiceName 
		{
			get { return GetColumnValue<string>(Columns.ServiceName); }
			set { SetColumnValue(Columns.ServiceName, value); }
		}
		  
		[XmlAttribute("Price")]
		[Bindable(true)]
		public decimal Price 
		{
			get { return GetColumnValue<decimal>(Columns.Price); }
			set { SetColumnValue(Columns.Price, value); }
		}
		  
		[XmlAttribute("Valid")]
		[Bindable(true)]
		public byte Valid 
		{
			get { return GetColumnValue<byte>(Columns.Valid); }
			set { SetColumnValue(Columns.Valid, value); }
		}
		  
		[XmlAttribute("HtechService")]
		[Bindable(true)]
		public short? HtechService 
		{
			get { return GetColumnValue<short?>(Columns.HtechService); }
			set { SetColumnValue(Columns.HtechService, value); }
		}
		  
		[XmlAttribute("IntOrder")]
		[Bindable(true)]
		public short IntOrder 
		{
			get { return GetColumnValue<short>(Columns.IntOrder); }
			set { SetColumnValue(Columns.IntOrder, value); }
		}
		  
		[XmlAttribute("ServiceDetail")]
		[Bindable(true)]
		public byte? ServiceDetail 
		{
			get { return GetColumnValue<byte?>(Columns.ServiceDetail); }
			set { SetColumnValue(Columns.ServiceDetail, value); }
		}
		  
		[XmlAttribute("SDesc")]
		[Bindable(true)]
		public string SDesc 
		{
			get { return GetColumnValue<string>(Columns.SDesc); }
			set { SetColumnValue(Columns.SDesc, value); }
		}
		  
		[XmlAttribute("MaKetNoi")]
		[Bindable(true)]
		public string MaKetNoi 
		{
			get { return GetColumnValue<string>(Columns.MaKetNoi); }
			set { SetColumnValue(Columns.MaKetNoi, value); }
		}
		  
		[XmlAttribute("MaNhom")]
		[Bindable(true)]
		public string MaNhom 
		{
			get { return GetColumnValue<string>(Columns.MaNhom); }
			set { SetColumnValue(Columns.MaNhom, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("DepartmentId")]
		[Bindable(true)]
		public short? DepartmentId 
		{
			get { return GetColumnValue<short?>(Columns.DepartmentId); }
			set { SetColumnValue(Columns.DepartmentId, value); }
		}
		  
		[XmlAttribute("TieuDePhieuCls")]
		[Bindable(true)]
		public string TieuDePhieuCls 
		{
			get { return GetColumnValue<string>(Columns.TieuDePhieuCls); }
			set { SetColumnValue(Columns.TieuDePhieuCls, value); }
		}
		  
		[XmlAttribute("MaInPhieu")]
		[Bindable(true)]
		public string MaInPhieu 
		{
			get { return GetColumnValue<string>(Columns.MaInPhieu); }
			set { SetColumnValue(Columns.MaInPhieu, value); }
		}
		  
		[XmlAttribute("MaInPhieuHa")]
		[Bindable(true)]
		public string MaInPhieuHa 
		{
			get { return GetColumnValue<string>(Columns.MaInPhieuHa); }
			set { SetColumnValue(Columns.MaInPhieuHa, value); }
		}
		  
		[XmlAttribute("IsChiPhiThem")]
		[Bindable(true)]
		public bool? IsChiPhiThem 
		{
			get { return GetColumnValue<bool?>(Columns.IsChiPhiThem); }
			set { SetColumnValue(Columns.IsChiPhiThem, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(short varServiceTypeId,string varServiceCode,string varServiceName,decimal varPrice,byte varValid,short? varHtechService,short varIntOrder,byte? varServiceDetail,string varSDesc,string varMaKetNoi,string varMaNhom,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,short? varDepartmentId,string varTieuDePhieuCls,string varMaInPhieu,string varMaInPhieuHa,bool? varIsChiPhiThem)
		{
			LService item = new LService();
			
			item.ServiceTypeId = varServiceTypeId;
			
			item.ServiceCode = varServiceCode;
			
			item.ServiceName = varServiceName;
			
			item.Price = varPrice;
			
			item.Valid = varValid;
			
			item.HtechService = varHtechService;
			
			item.IntOrder = varIntOrder;
			
			item.ServiceDetail = varServiceDetail;
			
			item.SDesc = varSDesc;
			
			item.MaKetNoi = varMaKetNoi;
			
			item.MaNhom = varMaNhom;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.DepartmentId = varDepartmentId;
			
			item.TieuDePhieuCls = varTieuDePhieuCls;
			
			item.MaInPhieu = varMaInPhieu;
			
			item.MaInPhieuHa = varMaInPhieuHa;
			
			item.IsChiPhiThem = varIsChiPhiThem;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(short varServiceId,short varServiceTypeId,string varServiceCode,string varServiceName,decimal varPrice,byte varValid,short? varHtechService,short varIntOrder,byte? varServiceDetail,string varSDesc,string varMaKetNoi,string varMaNhom,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,short? varDepartmentId,string varTieuDePhieuCls,string varMaInPhieu,string varMaInPhieuHa,bool? varIsChiPhiThem)
		{
			LService item = new LService();
			
				item.ServiceId = varServiceId;
			
				item.ServiceTypeId = varServiceTypeId;
			
				item.ServiceCode = varServiceCode;
			
				item.ServiceName = varServiceName;
			
				item.Price = varPrice;
			
				item.Valid = varValid;
			
				item.HtechService = varHtechService;
			
				item.IntOrder = varIntOrder;
			
				item.ServiceDetail = varServiceDetail;
			
				item.SDesc = varSDesc;
			
				item.MaKetNoi = varMaKetNoi;
			
				item.MaNhom = varMaNhom;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.DepartmentId = varDepartmentId;
			
				item.TieuDePhieuCls = varTieuDePhieuCls;
			
				item.MaInPhieu = varMaInPhieu;
			
				item.MaInPhieuHa = varMaInPhieuHa;
			
				item.IsChiPhiThem = varIsChiPhiThem;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn ServiceIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceTypeIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceCodeColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceNameColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn PriceColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn ValidColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn HtechServiceColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn IntOrderColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceDetailColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn SDescColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKetNoiColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNhomColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn DepartmentIdColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn TieuDePhieuClsColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn MaInPhieuColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn MaInPhieuHaColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn IsChiPhiThemColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string ServiceId = @"Service_ID";
			 public static string ServiceTypeId = @"ServiceType_ID";
			 public static string ServiceCode = @"ServiceCode";
			 public static string ServiceName = @"Service_Name";
			 public static string Price = @"Price";
			 public static string Valid = @"Valid";
			 public static string HtechService = @"Htech_Service";
			 public static string IntOrder = @"intOrder";
			 public static string ServiceDetail = @"Service_Detail";
			 public static string SDesc = @"SDesc";
			 public static string MaKetNoi = @"Ma_KetNoi";
			 public static string MaNhom = @"MA_NHOM";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string DepartmentId = @"Department_ID";
			 public static string TieuDePhieuCls = @"TieuDe_Phieu_CLS";
			 public static string MaInPhieu = @"Ma_InPhieu";
			 public static string MaInPhieuHa = @"Ma_InPhieu_HA";
			 public static string IsChiPhiThem = @"IsChiPhi_Them";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
