using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewTPayment class.
    /// </summary>
    [Serializable]
    public partial class ViewTPaymentCollection : ReadOnlyList<ViewTPayment, ViewTPaymentCollection>
    {        
        public ViewTPaymentCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_TPayment view.
    /// </summary>
    [Serializable]
    public partial class ViewTPayment : ReadOnlyRecord<ViewTPayment>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_TPayment", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
                colvarPaymentId.ColumnName = "Payment_ID";
                colvarPaymentId.DataType = DbType.Int64;
                colvarPaymentId.MaxLength = 0;
                colvarPaymentId.AutoIncrement = false;
                colvarPaymentId.IsNullable = false;
                colvarPaymentId.IsPrimaryKey = false;
                colvarPaymentId.IsForeignKey = false;
                colvarPaymentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentId);
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_Code";
                colvarPatientCode.DataType = DbType.AnsiString;
                colvarPatientCode.MaxLength = 20;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = false;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Int32;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = false;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
                colvarPaymentDate.ColumnName = "Payment_Date";
                colvarPaymentDate.DataType = DbType.DateTime;
                colvarPaymentDate.MaxLength = 0;
                colvarPaymentDate.AutoIncrement = false;
                colvarPaymentDate.IsNullable = true;
                colvarPaymentDate.IsPrimaryKey = false;
                colvarPaymentDate.IsForeignKey = false;
                colvarPaymentDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentDate);
                
                TableSchema.TableColumn colvarStaffId = new TableSchema.TableColumn(schema);
                colvarStaffId.ColumnName = "Staff_ID";
                colvarStaffId.DataType = DbType.Int32;
                colvarStaffId.MaxLength = 0;
                colvarStaffId.AutoIncrement = false;
                colvarStaffId.IsNullable = true;
                colvarStaffId.IsPrimaryKey = false;
                colvarStaffId.IsForeignKey = false;
                colvarStaffId.IsReadOnly = false;
                
                schema.Columns.Add(colvarStaffId);
                
                TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
                colvarStatus.ColumnName = "Status";
                colvarStatus.DataType = DbType.Int32;
                colvarStatus.MaxLength = 0;
                colvarStatus.AutoIncrement = false;
                colvarStatus.IsNullable = true;
                colvarStatus.IsPrimaryKey = false;
                colvarStatus.IsForeignKey = false;
                colvarStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarStatus);
                
                TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);
                colvarCreatedBy.ColumnName = "Created_By";
                colvarCreatedBy.DataType = DbType.String;
                colvarCreatedBy.MaxLength = 50;
                colvarCreatedBy.AutoIncrement = false;
                colvarCreatedBy.IsNullable = true;
                colvarCreatedBy.IsPrimaryKey = false;
                colvarCreatedBy.IsForeignKey = false;
                colvarCreatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreatedBy);
                
                TableSchema.TableColumn colvarCreatedDate = new TableSchema.TableColumn(schema);
                colvarCreatedDate.ColumnName = "Created_Date";
                colvarCreatedDate.DataType = DbType.DateTime;
                colvarCreatedDate.MaxLength = 0;
                colvarCreatedDate.AutoIncrement = false;
                colvarCreatedDate.IsNullable = true;
                colvarCreatedDate.IsPrimaryKey = false;
                colvarCreatedDate.IsForeignKey = false;
                colvarCreatedDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreatedDate);
                
                TableSchema.TableColumn colvarModifyDate = new TableSchema.TableColumn(schema);
                colvarModifyDate.ColumnName = "Modify_Date";
                colvarModifyDate.DataType = DbType.DateTime;
                colvarModifyDate.MaxLength = 0;
                colvarModifyDate.AutoIncrement = false;
                colvarModifyDate.IsNullable = true;
                colvarModifyDate.IsPrimaryKey = false;
                colvarModifyDate.IsForeignKey = false;
                colvarModifyDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifyDate);
                
                TableSchema.TableColumn colvarModifyBy = new TableSchema.TableColumn(schema);
                colvarModifyBy.ColumnName = "Modify_By";
                colvarModifyBy.DataType = DbType.String;
                colvarModifyBy.MaxLength = 50;
                colvarModifyBy.AutoIncrement = false;
                colvarModifyBy.IsNullable = true;
                colvarModifyBy.IsPrimaryKey = false;
                colvarModifyBy.IsForeignKey = false;
                colvarModifyBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifyBy);
                
                TableSchema.TableColumn colvarPaymentCode = new TableSchema.TableColumn(schema);
                colvarPaymentCode.ColumnName = "Payment_Code";
                colvarPaymentCode.DataType = DbType.AnsiString;
                colvarPaymentCode.MaxLength = 50;
                colvarPaymentCode.AutoIncrement = false;
                colvarPaymentCode.IsNullable = true;
                colvarPaymentCode.IsPrimaryKey = false;
                colvarPaymentCode.IsForeignKey = false;
                colvarPaymentCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentCode);
                
                TableSchema.TableColumn colvarKieuThanhToan = new TableSchema.TableColumn(schema);
                colvarKieuThanhToan.ColumnName = "Kieu_ThanhToan";
                colvarKieuThanhToan.DataType = DbType.Int32;
                colvarKieuThanhToan.MaxLength = 0;
                colvarKieuThanhToan.AutoIncrement = false;
                colvarKieuThanhToan.IsNullable = true;
                colvarKieuThanhToan.IsPrimaryKey = false;
                colvarKieuThanhToan.IsForeignKey = false;
                colvarKieuThanhToan.IsReadOnly = false;
                
                schema.Columns.Add(colvarKieuThanhToan);
                
                TableSchema.TableColumn colvarDaIn = new TableSchema.TableColumn(schema);
                colvarDaIn.ColumnName = "Da_In";
                colvarDaIn.DataType = DbType.Int32;
                colvarDaIn.MaxLength = 0;
                colvarDaIn.AutoIncrement = false;
                colvarDaIn.IsNullable = true;
                colvarDaIn.IsPrimaryKey = false;
                colvarDaIn.IsForeignKey = false;
                colvarDaIn.IsReadOnly = false;
                
                schema.Columns.Add(colvarDaIn);
                
                TableSchema.TableColumn colvarNgayIn = new TableSchema.TableColumn(schema);
                colvarNgayIn.ColumnName = "Ngay_In";
                colvarNgayIn.DataType = DbType.DateTime;
                colvarNgayIn.MaxLength = 0;
                colvarNgayIn.AutoIncrement = false;
                colvarNgayIn.IsNullable = true;
                colvarNgayIn.IsPrimaryKey = false;
                colvarNgayIn.IsForeignKey = false;
                colvarNgayIn.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgayIn);
                
                TableSchema.TableColumn colvarNguoiIn = new TableSchema.TableColumn(schema);
                colvarNguoiIn.ColumnName = "Nguoi_In";
                colvarNguoiIn.DataType = DbType.String;
                colvarNguoiIn.MaxLength = 50;
                colvarNguoiIn.AutoIncrement = false;
                colvarNguoiIn.IsNullable = true;
                colvarNguoiIn.IsPrimaryKey = false;
                colvarNguoiIn.IsForeignKey = false;
                colvarNguoiIn.IsReadOnly = false;
                
                schema.Columns.Add(colvarNguoiIn);
                
                TableSchema.TableColumn colvarNgayTHop = new TableSchema.TableColumn(schema);
                colvarNgayTHop.ColumnName = "Ngay_THop";
                colvarNgayTHop.DataType = DbType.DateTime;
                colvarNgayTHop.MaxLength = 0;
                colvarNgayTHop.AutoIncrement = false;
                colvarNgayTHop.IsNullable = true;
                colvarNgayTHop.IsPrimaryKey = false;
                colvarNgayTHop.IsForeignKey = false;
                colvarNgayTHop.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgayTHop);
                
                TableSchema.TableColumn colvarNguoiTHop = new TableSchema.TableColumn(schema);
                colvarNguoiTHop.ColumnName = "Nguoi_THop";
                colvarNguoiTHop.DataType = DbType.String;
                colvarNguoiTHop.MaxLength = 50;
                colvarNguoiTHop.AutoIncrement = false;
                colvarNguoiTHop.IsNullable = true;
                colvarNguoiTHop.IsPrimaryKey = false;
                colvarNguoiTHop.IsForeignKey = false;
                colvarNguoiTHop.IsReadOnly = false;
                
                schema.Columns.Add(colvarNguoiTHop);
                
                TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
                colvarTrongGoi.ColumnName = "TRONG_GOI";
                colvarTrongGoi.DataType = DbType.Int32;
                colvarTrongGoi.MaxLength = 0;
                colvarTrongGoi.AutoIncrement = false;
                colvarTrongGoi.IsNullable = true;
                colvarTrongGoi.IsPrimaryKey = false;
                colvarTrongGoi.IsForeignKey = false;
                colvarTrongGoi.IsReadOnly = false;
                
                schema.Columns.Add(colvarTrongGoi);
                
                TableSchema.TableColumn colvarMaKieuTtoan = new TableSchema.TableColumn(schema);
                colvarMaKieuTtoan.ColumnName = "MA_KIEU_TTOAN";
                colvarMaKieuTtoan.DataType = DbType.String;
                colvarMaKieuTtoan.MaxLength = 50;
                colvarMaKieuTtoan.AutoIncrement = false;
                colvarMaKieuTtoan.IsNullable = true;
                colvarMaKieuTtoan.IsPrimaryKey = false;
                colvarMaKieuTtoan.IsForeignKey = false;
                colvarMaKieuTtoan.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaKieuTtoan);
                
                TableSchema.TableColumn colvarIpMacSua = new TableSchema.TableColumn(schema);
                colvarIpMacSua.ColumnName = "IP_MAC_SUA";
                colvarIpMacSua.DataType = DbType.String;
                colvarIpMacSua.MaxLength = 100;
                colvarIpMacSua.AutoIncrement = false;
                colvarIpMacSua.IsNullable = true;
                colvarIpMacSua.IsPrimaryKey = false;
                colvarIpMacSua.IsForeignKey = false;
                colvarIpMacSua.IsReadOnly = false;
                
                schema.Columns.Add(colvarIpMacSua);
                
                TableSchema.TableColumn colvarIpMacTao = new TableSchema.TableColumn(schema);
                colvarIpMacTao.ColumnName = "IP_MAC_TAO";
                colvarIpMacTao.DataType = DbType.String;
                colvarIpMacTao.MaxLength = 100;
                colvarIpMacTao.AutoIncrement = false;
                colvarIpMacTao.IsNullable = true;
                colvarIpMacTao.IsPrimaryKey = false;
                colvarIpMacTao.IsForeignKey = false;
                colvarIpMacTao.IsReadOnly = false;
                
                schema.Columns.Add(colvarIpMacTao);
                
                TableSchema.TableColumn colvarIpMaySua = new TableSchema.TableColumn(schema);
                colvarIpMaySua.ColumnName = "IP_MAY_SUA";
                colvarIpMaySua.DataType = DbType.String;
                colvarIpMaySua.MaxLength = 50;
                colvarIpMaySua.AutoIncrement = false;
                colvarIpMaySua.IsNullable = true;
                colvarIpMaySua.IsPrimaryKey = false;
                colvarIpMaySua.IsForeignKey = false;
                colvarIpMaySua.IsReadOnly = false;
                
                schema.Columns.Add(colvarIpMaySua);
                
                TableSchema.TableColumn colvarIpMayTao = new TableSchema.TableColumn(schema);
                colvarIpMayTao.ColumnName = "IP_MAY_TAO";
                colvarIpMayTao.DataType = DbType.String;
                colvarIpMayTao.MaxLength = 50;
                colvarIpMayTao.AutoIncrement = false;
                colvarIpMayTao.IsNullable = true;
                colvarIpMayTao.IsPrimaryKey = false;
                colvarIpMayTao.IsForeignKey = false;
                colvarIpMayTao.IsReadOnly = false;
                
                schema.Columns.Add(colvarIpMayTao);
                
                TableSchema.TableColumn colvarLyDoHuy = new TableSchema.TableColumn(schema);
                colvarLyDoHuy.ColumnName = "LY_DO_HUY";
                colvarLyDoHuy.DataType = DbType.String;
                colvarLyDoHuy.MaxLength = 300;
                colvarLyDoHuy.AutoIncrement = false;
                colvarLyDoHuy.IsNullable = true;
                colvarLyDoHuy.IsPrimaryKey = false;
                colvarLyDoHuy.IsForeignKey = false;
                colvarLyDoHuy.IsReadOnly = false;
                
                schema.Columns.Add(colvarLyDoHuy);
                
                TableSchema.TableColumn colvarMaKhoaThien = new TableSchema.TableColumn(schema);
                colvarMaKhoaThien.ColumnName = "MA_KHOA_THIEN";
                colvarMaKhoaThien.DataType = DbType.String;
                colvarMaKhoaThien.MaxLength = 10;
                colvarMaKhoaThien.AutoIncrement = false;
                colvarMaKhoaThien.IsNullable = true;
                colvarMaKhoaThien.IsPrimaryKey = false;
                colvarMaKhoaThien.IsForeignKey = false;
                colvarMaKhoaThien.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaKhoaThien);
                
                TableSchema.TableColumn colvarTthaiChuyen = new TableSchema.TableColumn(schema);
                colvarTthaiChuyen.ColumnName = "TTHAI_CHUYEN";
                colvarTthaiChuyen.DataType = DbType.Int32;
                colvarTthaiChuyen.MaxLength = 0;
                colvarTthaiChuyen.AutoIncrement = false;
                colvarTthaiChuyen.IsNullable = true;
                colvarTthaiChuyen.IsPrimaryKey = false;
                colvarTthaiChuyen.IsForeignKey = false;
                colvarTthaiChuyen.IsReadOnly = false;
                
                schema.Columns.Add(colvarTthaiChuyen);
                
                TableSchema.TableColumn colvarNgayChot = new TableSchema.TableColumn(schema);
                colvarNgayChot.ColumnName = "NGAY_CHOT";
                colvarNgayChot.DataType = DbType.DateTime;
                colvarNgayChot.MaxLength = 0;
                colvarNgayChot.AutoIncrement = false;
                colvarNgayChot.IsNullable = true;
                colvarNgayChot.IsPrimaryKey = false;
                colvarNgayChot.IsForeignKey = false;
                colvarNgayChot.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgayChot);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("view_TPayment",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewTPayment()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewTPayment(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewTPayment(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewTPayment(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("PaymentId")]
        [Bindable(true)]
        public long PaymentId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Payment_ID");
		    }
            set 
		    {
			    SetColumnValue("Payment_ID", value);
            }
        }
	      
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Code");
		    }
            set 
		    {
			    SetColumnValue("Patient_Code", value);
            }
        }
	      
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public int PatientId 
	    {
		    get
		    {
			    return GetColumnValue<int>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("PaymentDate")]
        [Bindable(true)]
        public DateTime? PaymentDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Payment_Date");
		    }
            set 
		    {
			    SetColumnValue("Payment_Date", value);
            }
        }
	      
        [XmlAttribute("StaffId")]
        [Bindable(true)]
        public int? StaffId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Staff_ID");
		    }
            set 
		    {
			    SetColumnValue("Staff_ID", value);
            }
        }
	      
        [XmlAttribute("Status")]
        [Bindable(true)]
        public int? Status 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Status");
		    }
            set 
		    {
			    SetColumnValue("Status", value);
            }
        }
	      
        [XmlAttribute("CreatedBy")]
        [Bindable(true)]
        public string CreatedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("Created_By");
		    }
            set 
		    {
			    SetColumnValue("Created_By", value);
            }
        }
	      
        [XmlAttribute("CreatedDate")]
        [Bindable(true)]
        public DateTime? CreatedDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Created_Date");
		    }
            set 
		    {
			    SetColumnValue("Created_Date", value);
            }
        }
	      
        [XmlAttribute("ModifyDate")]
        [Bindable(true)]
        public DateTime? ModifyDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Modify_Date");
		    }
            set 
		    {
			    SetColumnValue("Modify_Date", value);
            }
        }
	      
        [XmlAttribute("ModifyBy")]
        [Bindable(true)]
        public string ModifyBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("Modify_By");
		    }
            set 
		    {
			    SetColumnValue("Modify_By", value);
            }
        }
	      
        [XmlAttribute("PaymentCode")]
        [Bindable(true)]
        public string PaymentCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Payment_Code");
		    }
            set 
		    {
			    SetColumnValue("Payment_Code", value);
            }
        }
	      
        [XmlAttribute("KieuThanhToan")]
        [Bindable(true)]
        public int? KieuThanhToan 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Kieu_ThanhToan");
		    }
            set 
		    {
			    SetColumnValue("Kieu_ThanhToan", value);
            }
        }
	      
        [XmlAttribute("DaIn")]
        [Bindable(true)]
        public int? DaIn 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Da_In");
		    }
            set 
		    {
			    SetColumnValue("Da_In", value);
            }
        }
	      
        [XmlAttribute("NgayIn")]
        [Bindable(true)]
        public DateTime? NgayIn 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Ngay_In");
		    }
            set 
		    {
			    SetColumnValue("Ngay_In", value);
            }
        }
	      
        [XmlAttribute("NguoiIn")]
        [Bindable(true)]
        public string NguoiIn 
	    {
		    get
		    {
			    return GetColumnValue<string>("Nguoi_In");
		    }
            set 
		    {
			    SetColumnValue("Nguoi_In", value);
            }
        }
	      
        [XmlAttribute("NgayTHop")]
        [Bindable(true)]
        public DateTime? NgayTHop 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Ngay_THop");
		    }
            set 
		    {
			    SetColumnValue("Ngay_THop", value);
            }
        }
	      
        [XmlAttribute("NguoiTHop")]
        [Bindable(true)]
        public string NguoiTHop 
	    {
		    get
		    {
			    return GetColumnValue<string>("Nguoi_THop");
		    }
            set 
		    {
			    SetColumnValue("Nguoi_THop", value);
            }
        }
	      
        [XmlAttribute("TrongGoi")]
        [Bindable(true)]
        public int? TrongGoi 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TRONG_GOI");
		    }
            set 
		    {
			    SetColumnValue("TRONG_GOI", value);
            }
        }
	      
        [XmlAttribute("MaKieuTtoan")]
        [Bindable(true)]
        public string MaKieuTtoan 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_KIEU_TTOAN");
		    }
            set 
		    {
			    SetColumnValue("MA_KIEU_TTOAN", value);
            }
        }
	      
        [XmlAttribute("IpMacSua")]
        [Bindable(true)]
        public string IpMacSua 
	    {
		    get
		    {
			    return GetColumnValue<string>("IP_MAC_SUA");
		    }
            set 
		    {
			    SetColumnValue("IP_MAC_SUA", value);
            }
        }
	      
        [XmlAttribute("IpMacTao")]
        [Bindable(true)]
        public string IpMacTao 
	    {
		    get
		    {
			    return GetColumnValue<string>("IP_MAC_TAO");
		    }
            set 
		    {
			    SetColumnValue("IP_MAC_TAO", value);
            }
        }
	      
        [XmlAttribute("IpMaySua")]
        [Bindable(true)]
        public string IpMaySua 
	    {
		    get
		    {
			    return GetColumnValue<string>("IP_MAY_SUA");
		    }
            set 
		    {
			    SetColumnValue("IP_MAY_SUA", value);
            }
        }
	      
        [XmlAttribute("IpMayTao")]
        [Bindable(true)]
        public string IpMayTao 
	    {
		    get
		    {
			    return GetColumnValue<string>("IP_MAY_TAO");
		    }
            set 
		    {
			    SetColumnValue("IP_MAY_TAO", value);
            }
        }
	      
        [XmlAttribute("LyDoHuy")]
        [Bindable(true)]
        public string LyDoHuy 
	    {
		    get
		    {
			    return GetColumnValue<string>("LY_DO_HUY");
		    }
            set 
		    {
			    SetColumnValue("LY_DO_HUY", value);
            }
        }
	      
        [XmlAttribute("MaKhoaThien")]
        [Bindable(true)]
        public string MaKhoaThien 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_KHOA_THIEN");
		    }
            set 
		    {
			    SetColumnValue("MA_KHOA_THIEN", value);
            }
        }
	      
        [XmlAttribute("TthaiChuyen")]
        [Bindable(true)]
        public int? TthaiChuyen 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TTHAI_CHUYEN");
		    }
            set 
		    {
			    SetColumnValue("TTHAI_CHUYEN", value);
            }
        }
	      
        [XmlAttribute("NgayChot")]
        [Bindable(true)]
        public DateTime? NgayChot 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("NGAY_CHOT");
		    }
            set 
		    {
			    SetColumnValue("NGAY_CHOT", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string PaymentId = @"Payment_ID";
            
            public static string PatientCode = @"Patient_Code";
            
            public static string PatientId = @"Patient_ID";
            
            public static string PaymentDate = @"Payment_Date";
            
            public static string StaffId = @"Staff_ID";
            
            public static string Status = @"Status";
            
            public static string CreatedBy = @"Created_By";
            
            public static string CreatedDate = @"Created_Date";
            
            public static string ModifyDate = @"Modify_Date";
            
            public static string ModifyBy = @"Modify_By";
            
            public static string PaymentCode = @"Payment_Code";
            
            public static string KieuThanhToan = @"Kieu_ThanhToan";
            
            public static string DaIn = @"Da_In";
            
            public static string NgayIn = @"Ngay_In";
            
            public static string NguoiIn = @"Nguoi_In";
            
            public static string NgayTHop = @"Ngay_THop";
            
            public static string NguoiTHop = @"Nguoi_THop";
            
            public static string TrongGoi = @"TRONG_GOI";
            
            public static string MaKieuTtoan = @"MA_KIEU_TTOAN";
            
            public static string IpMacSua = @"IP_MAC_SUA";
            
            public static string IpMacTao = @"IP_MAC_TAO";
            
            public static string IpMaySua = @"IP_MAY_SUA";
            
            public static string IpMayTao = @"IP_MAY_TAO";
            
            public static string LyDoHuy = @"LY_DO_HUY";
            
            public static string MaKhoaThien = @"MA_KHOA_THIEN";
            
            public static string TthaiChuyen = @"TTHAI_CHUYEN";
            
            public static string NgayChot = @"NGAY_CHOT";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
