using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for L_RoomBed_ObjectType
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class LRoomBedObjectTypeController
    {
        // Preload our schema..
        LRoomBedObjectType thisSchemaLoad = new LRoomBedObjectType();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public LRoomBedObjectTypeCollection FetchAll()
        {
            LRoomBedObjectTypeCollection coll = new LRoomBedObjectTypeCollection();
            Query qry = new Query(LRoomBedObjectType.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public LRoomBedObjectTypeCollection FetchByID(object Id)
        {
            LRoomBedObjectTypeCollection coll = new LRoomBedObjectTypeCollection().Where("ID", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public LRoomBedObjectTypeCollection FetchByQuery(Query qry)
        {
            LRoomBedObjectTypeCollection coll = new LRoomBedObjectTypeCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (LRoomBedObjectType.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (LRoomBedObjectType.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int RomId,int BedId,decimal LastPrice,decimal Surcharge,string SDesc,string ObjectTypeCode,int? ObjectTypeType,int? IsPayment,string KieuThue,decimal? GiaCu)
	    {
		    LRoomBedObjectType item = new LRoomBedObjectType();
		    
            item.RomId = RomId;
            
            item.BedId = BedId;
            
            item.LastPrice = LastPrice;
            
            item.Surcharge = Surcharge;
            
            item.SDesc = SDesc;
            
            item.ObjectTypeCode = ObjectTypeCode;
            
            item.ObjectTypeType = ObjectTypeType;
            
            item.IsPayment = IsPayment;
            
            item.KieuThue = KieuThue;
            
            item.GiaCu = GiaCu;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Id,int RomId,int BedId,decimal LastPrice,decimal Surcharge,string SDesc,string ObjectTypeCode,int? ObjectTypeType,int? IsPayment,string KieuThue,decimal? GiaCu)
	    {
		    LRoomBedObjectType item = new LRoomBedObjectType();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.RomId = RomId;
				
			item.BedId = BedId;
				
			item.LastPrice = LastPrice;
				
			item.Surcharge = Surcharge;
				
			item.SDesc = SDesc;
				
			item.ObjectTypeCode = ObjectTypeCode;
				
			item.ObjectTypeType = ObjectTypeType;
				
			item.IsPayment = IsPayment;
				
			item.KieuThue = KieuThue;
				
			item.GiaCu = GiaCu;
				
	        item.Save(UserName);
	    }
    }
}
