using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the QmsSoKham class.
	/// </summary>
    [Serializable]
	public partial class QmsSoKhamCollection : ActiveList<QmsSoKham, QmsSoKhamCollection>
	{	   
		public QmsSoKhamCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>QmsSoKhamCollection</returns>
		public QmsSoKhamCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                QmsSoKham o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the QMS_So_Kham table.
	/// </summary>
	[Serializable]
	public partial class QmsSoKham : ActiveRecord<QmsSoKham>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public QmsSoKham()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public QmsSoKham(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public QmsSoKham(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public QmsSoKham(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("QMS_So_Kham", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarSoKham = new TableSchema.TableColumn(schema);
				colvarSoKham.ColumnName = "So_Kham";
				colvarSoKham.DataType = DbType.Int32;
				colvarSoKham.MaxLength = 0;
				colvarSoKham.AutoIncrement = false;
				colvarSoKham.IsNullable = true;
				colvarSoKham.IsPrimaryKey = false;
				colvarSoKham.IsForeignKey = false;
				colvarSoKham.IsReadOnly = false;
				colvarSoKham.DefaultSetting = @"";
				colvarSoKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoKham);
				
				TableSchema.TableColumn colvarLoaiQms = new TableSchema.TableColumn(schema);
				colvarLoaiQms.ColumnName = "loai_qms";
				colvarLoaiQms.DataType = DbType.String;
				colvarLoaiQms.MaxLength = 20;
				colvarLoaiQms.AutoIncrement = false;
				colvarLoaiQms.IsNullable = true;
				colvarLoaiQms.IsPrimaryKey = false;
				colvarLoaiQms.IsForeignKey = false;
				colvarLoaiQms.IsReadOnly = false;
				colvarLoaiQms.DefaultSetting = @"";
				colvarLoaiQms.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiQms);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "Ngay_Tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarMayTao = new TableSchema.TableColumn(schema);
				colvarMayTao.ColumnName = "May_Tao";
				colvarMayTao.DataType = DbType.String;
				colvarMayTao.MaxLength = 50;
				colvarMayTao.AutoIncrement = false;
				colvarMayTao.IsNullable = true;
				colvarMayTao.IsPrimaryKey = false;
				colvarMayTao.IsForeignKey = false;
				colvarMayTao.IsReadOnly = false;
				colvarMayTao.DefaultSetting = @"";
				colvarMayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMayTao);
				
				TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
				colvarStatus.ColumnName = "Status";
				colvarStatus.DataType = DbType.Byte;
				colvarStatus.MaxLength = 0;
				colvarStatus.AutoIncrement = false;
				colvarStatus.IsNullable = true;
				colvarStatus.IsPrimaryKey = false;
				colvarStatus.IsForeignKey = false;
				colvarStatus.IsReadOnly = false;
				
						colvarStatus.DefaultSetting = @"((0))";
				colvarStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStatus);
				
				TableSchema.TableColumn colvarMaQuay = new TableSchema.TableColumn(schema);
				colvarMaQuay.ColumnName = "Ma_Quay";
				colvarMaQuay.DataType = DbType.String;
				colvarMaQuay.MaxLength = 50;
				colvarMaQuay.AutoIncrement = false;
				colvarMaQuay.IsNullable = true;
				colvarMaQuay.IsPrimaryKey = false;
				colvarMaQuay.IsForeignKey = false;
				colvarMaQuay.IsReadOnly = false;
				colvarMaQuay.DefaultSetting = @"";
				colvarMaQuay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaQuay);
				
				TableSchema.TableColumn colvarIpMayTao = new TableSchema.TableColumn(schema);
				colvarIpMayTao.ColumnName = "Ip_May_Tao";
				colvarIpMayTao.DataType = DbType.String;
				colvarIpMayTao.MaxLength = 50;
				colvarIpMayTao.AutoIncrement = false;
				colvarIpMayTao.IsNullable = true;
				colvarIpMayTao.IsPrimaryKey = false;
				colvarIpMayTao.IsForeignKey = false;
				colvarIpMayTao.IsReadOnly = false;
				colvarIpMayTao.DefaultSetting = @"";
				colvarIpMayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMayTao);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.String;
				colvarPatientCode.MaxLength = 50;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = true;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int32;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = true;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarIsUuTien = new TableSchema.TableColumn(schema);
				colvarIsUuTien.ColumnName = "Is_UuTien";
				colvarIsUuTien.DataType = DbType.Byte;
				colvarIsUuTien.MaxLength = 0;
				colvarIsUuTien.AutoIncrement = false;
				colvarIsUuTien.IsNullable = true;
				colvarIsUuTien.IsPrimaryKey = false;
				colvarIsUuTien.IsForeignKey = false;
				colvarIsUuTien.IsReadOnly = false;
				
						colvarIsUuTien.DefaultSetting = @"((0))";
				colvarIsUuTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsUuTien);
				
				TableSchema.TableColumn colvarIsDaXoa = new TableSchema.TableColumn(schema);
				colvarIsDaXoa.ColumnName = "Is_DaXoa";
				colvarIsDaXoa.DataType = DbType.Byte;
				colvarIsDaXoa.MaxLength = 0;
				colvarIsDaXoa.AutoIncrement = false;
				colvarIsDaXoa.IsNullable = true;
				colvarIsDaXoa.IsPrimaryKey = false;
				colvarIsDaXoa.IsForeignKey = false;
				colvarIsDaXoa.IsReadOnly = false;
				
						colvarIsDaXoa.DefaultSetting = @"((0))";
				colvarIsDaXoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsDaXoa);
				
				TableSchema.TableColumn colvarSoPhong = new TableSchema.TableColumn(schema);
				colvarSoPhong.ColumnName = "So_Phong";
				colvarSoPhong.DataType = DbType.Int32;
				colvarSoPhong.MaxLength = 0;
				colvarSoPhong.AutoIncrement = false;
				colvarSoPhong.IsNullable = true;
				colvarSoPhong.IsPrimaryKey = false;
				colvarSoPhong.IsForeignKey = false;
				colvarSoPhong.IsReadOnly = false;
				colvarSoPhong.DefaultSetting = @"";
				colvarSoPhong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoPhong);
				
				TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
				colvarDepartmentId.ColumnName = "Department_ID";
				colvarDepartmentId.DataType = DbType.Int16;
				colvarDepartmentId.MaxLength = 0;
				colvarDepartmentId.AutoIncrement = false;
				colvarDepartmentId.IsNullable = true;
				colvarDepartmentId.IsPrimaryKey = false;
				colvarDepartmentId.IsForeignKey = false;
				colvarDepartmentId.IsReadOnly = false;
				colvarDepartmentId.DefaultSetting = @"";
				colvarDepartmentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDepartmentId);
				
				TableSchema.TableColumn colvarMaCoSo = new TableSchema.TableColumn(schema);
				colvarMaCoSo.ColumnName = "Ma_CoSo";
				colvarMaCoSo.DataType = DbType.String;
				colvarMaCoSo.MaxLength = 10;
				colvarMaCoSo.AutoIncrement = false;
				colvarMaCoSo.IsNullable = true;
				colvarMaCoSo.IsPrimaryKey = false;
				colvarMaCoSo.IsForeignKey = false;
				colvarMaCoSo.IsReadOnly = false;
				
						colvarMaCoSo.DefaultSetting = @"(N'BV02')";
				colvarMaCoSo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaCoSo);
				
				TableSchema.TableColumn colvarMaBenhVien = new TableSchema.TableColumn(schema);
				colvarMaBenhVien.ColumnName = "Ma_BenhVien";
				colvarMaBenhVien.DataType = DbType.String;
				colvarMaBenhVien.MaxLength = 10;
				colvarMaBenhVien.AutoIncrement = false;
				colvarMaBenhVien.IsNullable = true;
				colvarMaBenhVien.IsPrimaryKey = false;
				colvarMaBenhVien.IsForeignKey = false;
				colvarMaBenhVien.IsReadOnly = false;
				
						colvarMaBenhVien.DefaultSetting = @"(N'NTTW')";
				colvarMaBenhVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaBenhVien);
				
				TableSchema.TableColumn colvarMaTram = new TableSchema.TableColumn(schema);
				colvarMaTram.ColumnName = "Ma_Tram";
				colvarMaTram.DataType = DbType.String;
				colvarMaTram.MaxLength = 10;
				colvarMaTram.AutoIncrement = false;
				colvarMaTram.IsNullable = true;
				colvarMaTram.IsPrimaryKey = false;
				colvarMaTram.IsForeignKey = false;
				colvarMaTram.IsReadOnly = false;
				
						colvarMaTram.DefaultSetting = @"(N'T01')";
				colvarMaTram.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaTram);
				
				TableSchema.TableColumn colvarMaDoituongKcb = new TableSchema.TableColumn(schema);
				colvarMaDoituongKcb.ColumnName = "ma_doituongKcb";
				colvarMaDoituongKcb.DataType = DbType.String;
				colvarMaDoituongKcb.MaxLength = 5;
				colvarMaDoituongKcb.AutoIncrement = false;
				colvarMaDoituongKcb.IsNullable = true;
				colvarMaDoituongKcb.IsPrimaryKey = false;
				colvarMaDoituongKcb.IsForeignKey = false;
				colvarMaDoituongKcb.IsReadOnly = false;
				
						colvarMaDoituongKcb.DefaultSetting = @"('ALL')";
				colvarMaDoituongKcb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDoituongKcb);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("QMS_So_Kham",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("SoKham")]
		[Bindable(true)]
		public int? SoKham 
		{
			get { return GetColumnValue<int?>(Columns.SoKham); }
			set { SetColumnValue(Columns.SoKham, value); }
		}
		  
		[XmlAttribute("LoaiQms")]
		[Bindable(true)]
		public string LoaiQms 
		{
			get { return GetColumnValue<string>(Columns.LoaiQms); }
			set { SetColumnValue(Columns.LoaiQms, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("MayTao")]
		[Bindable(true)]
		public string MayTao 
		{
			get { return GetColumnValue<string>(Columns.MayTao); }
			set { SetColumnValue(Columns.MayTao, value); }
		}
		  
		[XmlAttribute("Status")]
		[Bindable(true)]
		public byte? Status 
		{
			get { return GetColumnValue<byte?>(Columns.Status); }
			set { SetColumnValue(Columns.Status, value); }
		}
		  
		[XmlAttribute("MaQuay")]
		[Bindable(true)]
		public string MaQuay 
		{
			get { return GetColumnValue<string>(Columns.MaQuay); }
			set { SetColumnValue(Columns.MaQuay, value); }
		}
		  
		[XmlAttribute("IpMayTao")]
		[Bindable(true)]
		public string IpMayTao 
		{
			get { return GetColumnValue<string>(Columns.IpMayTao); }
			set { SetColumnValue(Columns.IpMayTao, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public int? PatientId 
		{
			get { return GetColumnValue<int?>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("IsUuTien")]
		[Bindable(true)]
		public byte? IsUuTien 
		{
			get { return GetColumnValue<byte?>(Columns.IsUuTien); }
			set { SetColumnValue(Columns.IsUuTien, value); }
		}
		  
		[XmlAttribute("IsDaXoa")]
		[Bindable(true)]
		public byte? IsDaXoa 
		{
			get { return GetColumnValue<byte?>(Columns.IsDaXoa); }
			set { SetColumnValue(Columns.IsDaXoa, value); }
		}
		  
		[XmlAttribute("SoPhong")]
		[Bindable(true)]
		public int? SoPhong 
		{
			get { return GetColumnValue<int?>(Columns.SoPhong); }
			set { SetColumnValue(Columns.SoPhong, value); }
		}
		  
		[XmlAttribute("DepartmentId")]
		[Bindable(true)]
		public short? DepartmentId 
		{
			get { return GetColumnValue<short?>(Columns.DepartmentId); }
			set { SetColumnValue(Columns.DepartmentId, value); }
		}
		  
		[XmlAttribute("MaCoSo")]
		[Bindable(true)]
		public string MaCoSo 
		{
			get { return GetColumnValue<string>(Columns.MaCoSo); }
			set { SetColumnValue(Columns.MaCoSo, value); }
		}
		  
		[XmlAttribute("MaBenhVien")]
		[Bindable(true)]
		public string MaBenhVien 
		{
			get { return GetColumnValue<string>(Columns.MaBenhVien); }
			set { SetColumnValue(Columns.MaBenhVien, value); }
		}
		  
		[XmlAttribute("MaTram")]
		[Bindable(true)]
		public string MaTram 
		{
			get { return GetColumnValue<string>(Columns.MaTram); }
			set { SetColumnValue(Columns.MaTram, value); }
		}
		  
		[XmlAttribute("MaDoituongKcb")]
		[Bindable(true)]
		public string MaDoituongKcb 
		{
			get { return GetColumnValue<string>(Columns.MaDoituongKcb); }
			set { SetColumnValue(Columns.MaDoituongKcb, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int? varSoKham,string varLoaiQms,DateTime? varNgayTao,string varMayTao,byte? varStatus,string varMaQuay,string varIpMayTao,string varPatientCode,int? varPatientId,byte? varIsUuTien,byte? varIsDaXoa,int? varSoPhong,short? varDepartmentId,string varMaCoSo,string varMaBenhVien,string varMaTram,string varMaDoituongKcb)
		{
			QmsSoKham item = new QmsSoKham();
			
			item.SoKham = varSoKham;
			
			item.LoaiQms = varLoaiQms;
			
			item.NgayTao = varNgayTao;
			
			item.MayTao = varMayTao;
			
			item.Status = varStatus;
			
			item.MaQuay = varMaQuay;
			
			item.IpMayTao = varIpMayTao;
			
			item.PatientCode = varPatientCode;
			
			item.PatientId = varPatientId;
			
			item.IsUuTien = varIsUuTien;
			
			item.IsDaXoa = varIsDaXoa;
			
			item.SoPhong = varSoPhong;
			
			item.DepartmentId = varDepartmentId;
			
			item.MaCoSo = varMaCoSo;
			
			item.MaBenhVien = varMaBenhVien;
			
			item.MaTram = varMaTram;
			
			item.MaDoituongKcb = varMaDoituongKcb;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,int? varSoKham,string varLoaiQms,DateTime? varNgayTao,string varMayTao,byte? varStatus,string varMaQuay,string varIpMayTao,string varPatientCode,int? varPatientId,byte? varIsUuTien,byte? varIsDaXoa,int? varSoPhong,short? varDepartmentId,string varMaCoSo,string varMaBenhVien,string varMaTram,string varMaDoituongKcb)
		{
			QmsSoKham item = new QmsSoKham();
			
				item.Id = varId;
			
				item.SoKham = varSoKham;
			
				item.LoaiQms = varLoaiQms;
			
				item.NgayTao = varNgayTao;
			
				item.MayTao = varMayTao;
			
				item.Status = varStatus;
			
				item.MaQuay = varMaQuay;
			
				item.IpMayTao = varIpMayTao;
			
				item.PatientCode = varPatientCode;
			
				item.PatientId = varPatientId;
			
				item.IsUuTien = varIsUuTien;
			
				item.IsDaXoa = varIsDaXoa;
			
				item.SoPhong = varSoPhong;
			
				item.DepartmentId = varDepartmentId;
			
				item.MaCoSo = varMaCoSo;
			
				item.MaBenhVien = varMaBenhVien;
			
				item.MaTram = varMaTram;
			
				item.MaDoituongKcb = varMaDoituongKcb;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn SoKhamColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiQmsColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn MayTaoColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn StatusColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn MaQuayColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMayTaoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn IsUuTienColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn IsDaXoaColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn SoPhongColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn DepartmentIdColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn MaCoSoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn MaBenhVienColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn MaTramColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDoituongKcbColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string SoKham = @"So_Kham";
			 public static string LoaiQms = @"loai_qms";
			 public static string NgayTao = @"Ngay_Tao";
			 public static string MayTao = @"May_Tao";
			 public static string Status = @"Status";
			 public static string MaQuay = @"Ma_Quay";
			 public static string IpMayTao = @"Ip_May_Tao";
			 public static string PatientCode = @"Patient_Code";
			 public static string PatientId = @"Patient_ID";
			 public static string IsUuTien = @"Is_UuTien";
			 public static string IsDaXoa = @"Is_DaXoa";
			 public static string SoPhong = @"So_Phong";
			 public static string DepartmentId = @"Department_ID";
			 public static string MaCoSo = @"Ma_CoSo";
			 public static string MaBenhVien = @"Ma_BenhVien";
			 public static string MaTram = @"Ma_Tram";
			 public static string MaDoituongKcb = @"ma_doituongKcb";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
