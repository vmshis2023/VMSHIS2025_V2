using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_Assign_Info
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TAssignInfoController
    {
        // Preload our schema..
        TAssignInfo thisSchemaLoad = new TAssignInfo();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TAssignInfoCollection FetchAll()
        {
            TAssignInfoCollection coll = new TAssignInfoCollection();
            Query qry = new Query(TAssignInfo.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TAssignInfoCollection FetchByID(object AssignId)
        {
            TAssignInfoCollection coll = new TAssignInfoCollection().Where("Assign_ID", AssignId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TAssignInfoCollection FetchByQuery(Query qry)
        {
            TAssignInfoCollection coll = new TAssignInfoCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object AssignId)
        {
            return (TAssignInfo.Delete(AssignId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object AssignId)
        {
            return (TAssignInfo.Destroy(AssignId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long? ExamId,int? TreatId,int? PatientDeptId,string PatientCode,long PatientId,short? ServiceId,short? ServiceTypeId,DateTime RegDate,short? DiagPerson,short? DepartmentId,byte PaymentStatus,byte? AssignStatus,string CreatedBy,DateTime? CreateDate,string ModifiedBy,DateTime? ModifiedDate,string AssignCode,byte? Actived,byte? PrintId,byte? SendId,string Barcode,short? ObjectTypeId,byte? NoiTru,string MaKhoaThien,byte? IsPHIDvuKtheo,string MaChidinh,DateTime? NgayBPham)
	    {
		    TAssignInfo item = new TAssignInfo();
		    
            item.ExamId = ExamId;
            
            item.TreatId = TreatId;
            
            item.PatientDeptId = PatientDeptId;
            
            item.PatientCode = PatientCode;
            
            item.PatientId = PatientId;
            
            item.ServiceId = ServiceId;
            
            item.ServiceTypeId = ServiceTypeId;
            
            item.RegDate = RegDate;
            
            item.DiagPerson = DiagPerson;
            
            item.DepartmentId = DepartmentId;
            
            item.PaymentStatus = PaymentStatus;
            
            item.AssignStatus = AssignStatus;
            
            item.CreatedBy = CreatedBy;
            
            item.CreateDate = CreateDate;
            
            item.ModifiedBy = ModifiedBy;
            
            item.ModifiedDate = ModifiedDate;
            
            item.AssignCode = AssignCode;
            
            item.Actived = Actived;
            
            item.PrintId = PrintId;
            
            item.SendId = SendId;
            
            item.Barcode = Barcode;
            
            item.ObjectTypeId = ObjectTypeId;
            
            item.NoiTru = NoiTru;
            
            item.MaKhoaThien = MaKhoaThien;
            
            item.IsPHIDvuKtheo = IsPHIDvuKtheo;
            
            item.MaChidinh = MaChidinh;
            
            item.NgayBPham = NgayBPham;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long AssignId,long? ExamId,int? TreatId,int? PatientDeptId,string PatientCode,long PatientId,short? ServiceId,short? ServiceTypeId,DateTime RegDate,short? DiagPerson,short? DepartmentId,byte PaymentStatus,byte? AssignStatus,string CreatedBy,DateTime? CreateDate,string ModifiedBy,DateTime? ModifiedDate,string AssignCode,byte? Actived,byte? PrintId,byte? SendId,string Barcode,short? ObjectTypeId,byte? NoiTru,string MaKhoaThien,byte? IsPHIDvuKtheo,string MaChidinh,DateTime? NgayBPham)
	    {
		    TAssignInfo item = new TAssignInfo();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.AssignId = AssignId;
				
			item.ExamId = ExamId;
				
			item.TreatId = TreatId;
				
			item.PatientDeptId = PatientDeptId;
				
			item.PatientCode = PatientCode;
				
			item.PatientId = PatientId;
				
			item.ServiceId = ServiceId;
				
			item.ServiceTypeId = ServiceTypeId;
				
			item.RegDate = RegDate;
				
			item.DiagPerson = DiagPerson;
				
			item.DepartmentId = DepartmentId;
				
			item.PaymentStatus = PaymentStatus;
				
			item.AssignStatus = AssignStatus;
				
			item.CreatedBy = CreatedBy;
				
			item.CreateDate = CreateDate;
				
			item.ModifiedBy = ModifiedBy;
				
			item.ModifiedDate = ModifiedDate;
				
			item.AssignCode = AssignCode;
				
			item.Actived = Actived;
				
			item.PrintId = PrintId;
				
			item.SendId = SendId;
				
			item.Barcode = Barcode;
				
			item.ObjectTypeId = ObjectTypeId;
				
			item.NoiTru = NoiTru;
				
			item.MaKhoaThien = MaKhoaThien;
				
			item.IsPHIDvuKtheo = IsPHIDvuKtheo;
				
			item.MaChidinh = MaChidinh;
				
			item.NgayBPham = NgayBPham;
				
	        item.Save(UserName);
	    }
    }
}
