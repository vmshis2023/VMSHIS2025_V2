using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TPhieuDct class.
	/// </summary>
    [Serializable]
	public partial class TPhieuDctCollection : ActiveList<TPhieuDct, TPhieuDctCollection>
	{	   
		public TPhieuDctCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TPhieuDctCollection</returns>
		public TPhieuDctCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TPhieuDct o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_PHIEU_DCT table.
	/// </summary>
	[Serializable]
	public partial class TPhieuDct : ActiveRecord<TPhieuDct>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TPhieuDct()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TPhieuDct(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TPhieuDct(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TPhieuDct(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_PHIEU_DCT", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdPhieuDct = new TableSchema.TableColumn(schema);
				colvarIdPhieuDct.ColumnName = "ID_PHIEU_DCT";
				colvarIdPhieuDct.DataType = DbType.Int32;
				colvarIdPhieuDct.MaxLength = 0;
				colvarIdPhieuDct.AutoIncrement = true;
				colvarIdPhieuDct.IsNullable = false;
				colvarIdPhieuDct.IsPrimaryKey = true;
				colvarIdPhieuDct.IsForeignKey = false;
				colvarIdPhieuDct.IsReadOnly = false;
				colvarIdPhieuDct.DefaultSetting = @"";
				colvarIdPhieuDct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuDct);
				
				TableSchema.TableColumn colvarMaPhieuDct = new TableSchema.TableColumn(schema);
				colvarMaPhieuDct.ColumnName = "MA_PHIEU_DCT";
				colvarMaPhieuDct.DataType = DbType.String;
				colvarMaPhieuDct.MaxLength = 50;
				colvarMaPhieuDct.AutoIncrement = false;
				colvarMaPhieuDct.IsNullable = false;
				colvarMaPhieuDct.IsPrimaryKey = false;
				colvarMaPhieuDct.IsForeignKey = false;
				colvarMaPhieuDct.IsReadOnly = false;
				colvarMaPhieuDct.DefaultSetting = @"";
				colvarMaPhieuDct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaPhieuDct);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.String;
				colvarPatientCode.MaxLength = 50;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = true;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int32;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = true;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarTienGoc = new TableSchema.TableColumn(schema);
				colvarTienGoc.ColumnName = "TIEN_GOC";
				colvarTienGoc.DataType = DbType.Decimal;
				colvarTienGoc.MaxLength = 0;
				colvarTienGoc.AutoIncrement = false;
				colvarTienGoc.IsNullable = true;
				colvarTienGoc.IsPrimaryKey = false;
				colvarTienGoc.IsForeignKey = false;
				colvarTienGoc.IsReadOnly = false;
				colvarTienGoc.DefaultSetting = @"";
				colvarTienGoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTienGoc);
				
				TableSchema.TableColumn colvarTienBhct = new TableSchema.TableColumn(schema);
				colvarTienBhct.ColumnName = "TIEN_BHCT";
				colvarTienBhct.DataType = DbType.Decimal;
				colvarTienBhct.MaxLength = 0;
				colvarTienBhct.AutoIncrement = false;
				colvarTienBhct.IsNullable = true;
				colvarTienBhct.IsPrimaryKey = false;
				colvarTienBhct.IsForeignKey = false;
				colvarTienBhct.IsReadOnly = false;
				colvarTienBhct.DefaultSetting = @"";
				colvarTienBhct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTienBhct);
				
				TableSchema.TableColumn colvarTienBnct = new TableSchema.TableColumn(schema);
				colvarTienBnct.ColumnName = "TIEN_BNCT";
				colvarTienBnct.DataType = DbType.Decimal;
				colvarTienBnct.MaxLength = 0;
				colvarTienBnct.AutoIncrement = false;
				colvarTienBnct.IsNullable = true;
				colvarTienBnct.IsPrimaryKey = false;
				colvarTienBnct.IsForeignKey = false;
				colvarTienBnct.IsReadOnly = false;
				colvarTienBnct.DefaultSetting = @"";
				colvarTienBnct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTienBnct);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				
						colvarNgayTao.DefaultSetting = @"(getdate())";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarKieuThanhtoan = new TableSchema.TableColumn(schema);
				colvarKieuThanhtoan.ColumnName = "KIEU_THANHTOAN";
				colvarKieuThanhtoan.DataType = DbType.Byte;
				colvarKieuThanhtoan.MaxLength = 0;
				colvarKieuThanhtoan.AutoIncrement = false;
				colvarKieuThanhtoan.IsNullable = true;
				colvarKieuThanhtoan.IsPrimaryKey = false;
				colvarKieuThanhtoan.IsForeignKey = false;
				colvarKieuThanhtoan.IsReadOnly = false;
				
						colvarKieuThanhtoan.DefaultSetting = @"((0))";
				colvarKieuThanhtoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuThanhtoan);
				
				TableSchema.TableColumn colvarMaKhoaThien = new TableSchema.TableColumn(schema);
				colvarMaKhoaThien.ColumnName = "MA_KHOA_THIEN";
				colvarMaKhoaThien.DataType = DbType.String;
				colvarMaKhoaThien.MaxLength = 50;
				colvarMaKhoaThien.AutoIncrement = false;
				colvarMaKhoaThien.IsNullable = true;
				colvarMaKhoaThien.IsPrimaryKey = false;
				colvarMaKhoaThien.IsForeignKey = false;
				colvarMaKhoaThien.IsReadOnly = false;
				colvarMaKhoaThien.DefaultSetting = @"";
				colvarMaKhoaThien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKhoaThien);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_PHIEU_DCT",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdPhieuDct")]
		[Bindable(true)]
		public int IdPhieuDct 
		{
			get { return GetColumnValue<int>(Columns.IdPhieuDct); }
			set { SetColumnValue(Columns.IdPhieuDct, value); }
		}
		  
		[XmlAttribute("MaPhieuDct")]
		[Bindable(true)]
		public string MaPhieuDct 
		{
			get { return GetColumnValue<string>(Columns.MaPhieuDct); }
			set { SetColumnValue(Columns.MaPhieuDct, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public int? PatientId 
		{
			get { return GetColumnValue<int?>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("TienGoc")]
		[Bindable(true)]
		public decimal? TienGoc 
		{
			get { return GetColumnValue<decimal?>(Columns.TienGoc); }
			set { SetColumnValue(Columns.TienGoc, value); }
		}
		  
		[XmlAttribute("TienBhct")]
		[Bindable(true)]
		public decimal? TienBhct 
		{
			get { return GetColumnValue<decimal?>(Columns.TienBhct); }
			set { SetColumnValue(Columns.TienBhct, value); }
		}
		  
		[XmlAttribute("TienBnct")]
		[Bindable(true)]
		public decimal? TienBnct 
		{
			get { return GetColumnValue<decimal?>(Columns.TienBnct); }
			set { SetColumnValue(Columns.TienBnct, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("KieuThanhtoan")]
		[Bindable(true)]
		public byte? KieuThanhtoan 
		{
			get { return GetColumnValue<byte?>(Columns.KieuThanhtoan); }
			set { SetColumnValue(Columns.KieuThanhtoan, value); }
		}
		  
		[XmlAttribute("MaKhoaThien")]
		[Bindable(true)]
		public string MaKhoaThien 
		{
			get { return GetColumnValue<string>(Columns.MaKhoaThien); }
			set { SetColumnValue(Columns.MaKhoaThien, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaPhieuDct,string varPatientCode,int? varPatientId,decimal? varTienGoc,decimal? varTienBhct,decimal? varTienBnct,string varNguoiTao,DateTime? varNgayTao,byte? varKieuThanhtoan,string varMaKhoaThien,DateTime? varNgaySua,string varNguoiSua)
		{
			TPhieuDct item = new TPhieuDct();
			
			item.MaPhieuDct = varMaPhieuDct;
			
			item.PatientCode = varPatientCode;
			
			item.PatientId = varPatientId;
			
			item.TienGoc = varTienGoc;
			
			item.TienBhct = varTienBhct;
			
			item.TienBnct = varTienBnct;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.KieuThanhtoan = varKieuThanhtoan;
			
			item.MaKhoaThien = varMaKhoaThien;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdPhieuDct,string varMaPhieuDct,string varPatientCode,int? varPatientId,decimal? varTienGoc,decimal? varTienBhct,decimal? varTienBnct,string varNguoiTao,DateTime? varNgayTao,byte? varKieuThanhtoan,string varMaKhoaThien,DateTime? varNgaySua,string varNguoiSua)
		{
			TPhieuDct item = new TPhieuDct();
			
				item.IdPhieuDct = varIdPhieuDct;
			
				item.MaPhieuDct = varMaPhieuDct;
			
				item.PatientCode = varPatientCode;
			
				item.PatientId = varPatientId;
			
				item.TienGoc = varTienGoc;
			
				item.TienBhct = varTienBhct;
			
				item.TienBnct = varTienBnct;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.KieuThanhtoan = varKieuThanhtoan;
			
				item.MaKhoaThien = varMaKhoaThien;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdPhieuDctColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaPhieuDctColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn TienGocColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TienBhctColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn TienBnctColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuThanhtoanColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhoaThienColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdPhieuDct = @"ID_PHIEU_DCT";
			 public static string MaPhieuDct = @"MA_PHIEU_DCT";
			 public static string PatientCode = @"Patient_Code";
			 public static string PatientId = @"Patient_ID";
			 public static string TienGoc = @"TIEN_GOC";
			 public static string TienBhct = @"TIEN_BHCT";
			 public static string TienBnct = @"TIEN_BNCT";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string KieuThanhtoan = @"KIEU_THANHTOAN";
			 public static string MaKhoaThien = @"MA_KHOA_THIEN";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string NguoiSua = @"NGUOI_SUA";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
