using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_MIEN_GIAM_THANHTOAN
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TMienGiamThanhtoanController
    {
        // Preload our schema..
        TMienGiamThanhtoan thisSchemaLoad = new TMienGiamThanhtoan();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TMienGiamThanhtoanCollection FetchAll()
        {
            TMienGiamThanhtoanCollection coll = new TMienGiamThanhtoanCollection();
            Query qry = new Query(TMienGiamThanhtoan.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TMienGiamThanhtoanCollection FetchByID(object IdCkhau)
        {
            TMienGiamThanhtoanCollection coll = new TMienGiamThanhtoanCollection().Where("ID_CKHAU", IdCkhau).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TMienGiamThanhtoanCollection FetchByQuery(Query qry)
        {
            TMienGiamThanhtoanCollection coll = new TMienGiamThanhtoanCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdCkhau)
        {
            return (TMienGiamThanhtoan.Delete(IdCkhau) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdCkhau)
        {
            return (TMienGiamThanhtoan.Destroy(IdCkhau) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string PatientCode,int? PatientId,short? IdNhanvien,DateTime? NgayCkhau,string NguoiKyMg,string NguoiTao,string NguoiSua,DateTime? NgayTao,DateTime? NgaySua,decimal? SoTienCkhau,byte? NoiTru,byte? HienThi,int? PkIdCkhau,string LyDo,int? PaymentId,short? PtramMg,string KieuMg)
	    {
		    TMienGiamThanhtoan item = new TMienGiamThanhtoan();
		    
            item.PatientCode = PatientCode;
            
            item.PatientId = PatientId;
            
            item.IdNhanvien = IdNhanvien;
            
            item.NgayCkhau = NgayCkhau;
            
            item.NguoiKyMg = NguoiKyMg;
            
            item.NguoiTao = NguoiTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NgayTao = NgayTao;
            
            item.NgaySua = NgaySua;
            
            item.SoTienCkhau = SoTienCkhau;
            
            item.NoiTru = NoiTru;
            
            item.HienThi = HienThi;
            
            item.PkIdCkhau = PkIdCkhau;
            
            item.LyDo = LyDo;
            
            item.PaymentId = PaymentId;
            
            item.PtramMg = PtramMg;
            
            item.KieuMg = KieuMg;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int IdCkhau,string PatientCode,int? PatientId,short? IdNhanvien,DateTime? NgayCkhau,string NguoiKyMg,string NguoiTao,string NguoiSua,DateTime? NgayTao,DateTime? NgaySua,decimal? SoTienCkhau,byte? NoiTru,byte? HienThi,int? PkIdCkhau,string LyDo,int? PaymentId,short? PtramMg,string KieuMg)
	    {
		    TMienGiamThanhtoan item = new TMienGiamThanhtoan();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdCkhau = IdCkhau;
				
			item.PatientCode = PatientCode;
				
			item.PatientId = PatientId;
				
			item.IdNhanvien = IdNhanvien;
				
			item.NgayCkhau = NgayCkhau;
				
			item.NguoiKyMg = NguoiKyMg;
				
			item.NguoiTao = NguoiTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NgayTao = NgayTao;
				
			item.NgaySua = NgaySua;
				
			item.SoTienCkhau = SoTienCkhau;
				
			item.NoiTru = NoiTru;
				
			item.HienThi = HienThi;
				
			item.PkIdCkhau = PkIdCkhau;
				
			item.LyDo = LyDo;
				
			item.PaymentId = PaymentId;
				
			item.PtramMg = PtramMg;
				
			item.KieuMg = KieuMg;
				
	        item.Save(UserName);
	    }
    }
}
