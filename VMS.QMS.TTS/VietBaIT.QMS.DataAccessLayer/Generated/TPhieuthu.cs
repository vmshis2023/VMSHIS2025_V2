using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TPhieuthu class.
	/// </summary>
    [Serializable]
	public partial class TPhieuthuCollection : ActiveList<TPhieuthu, TPhieuthuCollection>
	{	   
		public TPhieuthuCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TPhieuthuCollection</returns>
		public TPhieuthuCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TPhieuthu o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_PHIEUTHU table.
	/// </summary>
	[Serializable]
	public partial class TPhieuthu : ActiveRecord<TPhieuthu>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TPhieuthu()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TPhieuthu(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TPhieuthu(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TPhieuthu(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_PHIEUTHU", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarMaPthu = new TableSchema.TableColumn(schema);
				colvarMaPthu.ColumnName = "MA_PTHU";
				colvarMaPthu.DataType = DbType.String;
				colvarMaPthu.MaxLength = 50;
				colvarMaPthu.AutoIncrement = false;
				colvarMaPthu.IsNullable = false;
				colvarMaPthu.IsPrimaryKey = true;
				colvarMaPthu.IsForeignKey = false;
				colvarMaPthu.IsReadOnly = false;
				colvarMaPthu.DefaultSetting = @"";
				colvarMaPthu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaPthu);
				
				TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
				colvarPaymentId.ColumnName = "Payment_ID";
				colvarPaymentId.DataType = DbType.Int64;
				colvarPaymentId.MaxLength = 0;
				colvarPaymentId.AutoIncrement = false;
				colvarPaymentId.IsNullable = false;
				colvarPaymentId.IsPrimaryKey = true;
				colvarPaymentId.IsForeignKey = false;
				colvarPaymentId.IsReadOnly = false;
				colvarPaymentId.DefaultSetting = @"";
				colvarPaymentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentId);
				
				TableSchema.TableColumn colvarNgayThien = new TableSchema.TableColumn(schema);
				colvarNgayThien.ColumnName = "NGAY_THIEN";
				colvarNgayThien.DataType = DbType.DateTime;
				colvarNgayThien.MaxLength = 0;
				colvarNgayThien.AutoIncrement = false;
				colvarNgayThien.IsNullable = false;
				colvarNgayThien.IsPrimaryKey = false;
				colvarNgayThien.IsForeignKey = false;
				colvarNgayThien.IsReadOnly = false;
				colvarNgayThien.DefaultSetting = @"";
				colvarNgayThien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayThien);
				
				TableSchema.TableColumn colvarNguoiNop = new TableSchema.TableColumn(schema);
				colvarNguoiNop.ColumnName = "NGUOI_NOP";
				colvarNguoiNop.DataType = DbType.String;
				colvarNguoiNop.MaxLength = 100;
				colvarNguoiNop.AutoIncrement = false;
				colvarNguoiNop.IsNullable = false;
				colvarNguoiNop.IsPrimaryKey = false;
				colvarNguoiNop.IsForeignKey = false;
				colvarNguoiNop.IsReadOnly = false;
				colvarNguoiNop.DefaultSetting = @"";
				colvarNguoiNop.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiNop);
				
				TableSchema.TableColumn colvarLdoNop = new TableSchema.TableColumn(schema);
				colvarLdoNop.ColumnName = "LDO_NOP";
				colvarLdoNop.DataType = DbType.String;
				colvarLdoNop.MaxLength = 500;
				colvarLdoNop.AutoIncrement = false;
				colvarLdoNop.IsNullable = false;
				colvarLdoNop.IsPrimaryKey = false;
				colvarLdoNop.IsForeignKey = false;
				colvarLdoNop.IsReadOnly = false;
				colvarLdoNop.DefaultSetting = @"";
				colvarLdoNop.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLdoNop);
				
				TableSchema.TableColumn colvarSoTien = new TableSchema.TableColumn(schema);
				colvarSoTien.ColumnName = "SO_TIEN";
				colvarSoTien.DataType = DbType.Currency;
				colvarSoTien.MaxLength = 0;
				colvarSoTien.AutoIncrement = false;
				colvarSoTien.IsNullable = false;
				colvarSoTien.IsPrimaryKey = false;
				colvarSoTien.IsForeignKey = false;
				colvarSoTien.IsReadOnly = false;
				colvarSoTien.DefaultSetting = @"";
				colvarSoTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoTien);
				
				TableSchema.TableColumn colvarSluongCtuGoc = new TableSchema.TableColumn(schema);
				colvarSluongCtuGoc.ColumnName = "SLUONG_CTU_GOC";
				colvarSluongCtuGoc.DataType = DbType.Int16;
				colvarSluongCtuGoc.MaxLength = 0;
				colvarSluongCtuGoc.AutoIncrement = false;
				colvarSluongCtuGoc.IsNullable = true;
				colvarSluongCtuGoc.IsPrimaryKey = false;
				colvarSluongCtuGoc.IsForeignKey = false;
				colvarSluongCtuGoc.IsReadOnly = false;
				
						colvarSluongCtuGoc.DefaultSetting = @"((1))";
				colvarSluongCtuGoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSluongCtuGoc);
				
				TableSchema.TableColumn colvarTkhoanNo = new TableSchema.TableColumn(schema);
				colvarTkhoanNo.ColumnName = "TKHOAN_NO";
				colvarTkhoanNo.DataType = DbType.String;
				colvarTkhoanNo.MaxLength = 10;
				colvarTkhoanNo.AutoIncrement = false;
				colvarTkhoanNo.IsNullable = true;
				colvarTkhoanNo.IsPrimaryKey = false;
				colvarTkhoanNo.IsForeignKey = false;
				colvarTkhoanNo.IsReadOnly = false;
				colvarTkhoanNo.DefaultSetting = @"";
				colvarTkhoanNo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTkhoanNo);
				
				TableSchema.TableColumn colvarTkhoanCo = new TableSchema.TableColumn(schema);
				colvarTkhoanCo.ColumnName = "TKHOAN_CO";
				colvarTkhoanCo.DataType = DbType.String;
				colvarTkhoanCo.MaxLength = 10;
				colvarTkhoanCo.AutoIncrement = false;
				colvarTkhoanCo.IsNullable = true;
				colvarTkhoanCo.IsPrimaryKey = false;
				colvarTkhoanCo.IsForeignKey = false;
				colvarTkhoanCo.IsReadOnly = false;
				colvarTkhoanCo.DefaultSetting = @"";
				colvarTkhoanCo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTkhoanCo);
				
				TableSchema.TableColumn colvarLoaiPhieu = new TableSchema.TableColumn(schema);
				colvarLoaiPhieu.ColumnName = "LOAI_PHIEU";
				colvarLoaiPhieu.DataType = DbType.Byte;
				colvarLoaiPhieu.MaxLength = 0;
				colvarLoaiPhieu.AutoIncrement = false;
				colvarLoaiPhieu.IsNullable = true;
				colvarLoaiPhieu.IsPrimaryKey = false;
				colvarLoaiPhieu.IsForeignKey = false;
				colvarLoaiPhieu.IsReadOnly = false;
				colvarLoaiPhieu.DefaultSetting = @"";
				colvarLoaiPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiPhieu);
				
				TableSchema.TableColumn colvarIpMaySua = new TableSchema.TableColumn(schema);
				colvarIpMaySua.ColumnName = "IP_MAY_SUA";
				colvarIpMaySua.DataType = DbType.String;
				colvarIpMaySua.MaxLength = 50;
				colvarIpMaySua.AutoIncrement = false;
				colvarIpMaySua.IsNullable = true;
				colvarIpMaySua.IsPrimaryKey = false;
				colvarIpMaySua.IsForeignKey = false;
				colvarIpMaySua.IsReadOnly = false;
				colvarIpMaySua.DefaultSetting = @"";
				colvarIpMaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaySua);
				
				TableSchema.TableColumn colvarIpMayTao = new TableSchema.TableColumn(schema);
				colvarIpMayTao.ColumnName = "IP_MAY_TAO";
				colvarIpMayTao.DataType = DbType.String;
				colvarIpMayTao.MaxLength = 50;
				colvarIpMayTao.AutoIncrement = false;
				colvarIpMayTao.IsNullable = true;
				colvarIpMayTao.IsPrimaryKey = false;
				colvarIpMayTao.IsForeignKey = false;
				colvarIpMayTao.IsReadOnly = false;
				colvarIpMayTao.DefaultSetting = @"";
				colvarIpMayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMayTao);
				
				TableSchema.TableColumn colvarIdKhoa = new TableSchema.TableColumn(schema);
				colvarIdKhoa.ColumnName = "ID_KHOA";
				colvarIdKhoa.DataType = DbType.Int16;
				colvarIdKhoa.MaxLength = 0;
				colvarIdKhoa.AutoIncrement = false;
				colvarIdKhoa.IsNullable = true;
				colvarIdKhoa.IsPrimaryKey = false;
				colvarIdKhoa.IsForeignKey = false;
				colvarIdKhoa.IsReadOnly = false;
				colvarIdKhoa.DefaultSetting = @"";
				colvarIdKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoa);
				
				TableSchema.TableColumn colvarIdNhanVien = new TableSchema.TableColumn(schema);
				colvarIdNhanVien.ColumnName = "ID_NHAN_VIEN";
				colvarIdNhanVien.DataType = DbType.Int16;
				colvarIdNhanVien.MaxLength = 0;
				colvarIdNhanVien.AutoIncrement = false;
				colvarIdNhanVien.IsNullable = true;
				colvarIdNhanVien.IsPrimaryKey = false;
				colvarIdNhanVien.IsForeignKey = false;
				colvarIdNhanVien.IsReadOnly = false;
				colvarIdNhanVien.DefaultSetting = @"";
				colvarIdNhanVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhanVien);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_PHIEUTHU",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("MaPthu")]
		[Bindable(true)]
		public string MaPthu 
		{
			get { return GetColumnValue<string>(Columns.MaPthu); }
			set { SetColumnValue(Columns.MaPthu, value); }
		}
		  
		[XmlAttribute("PaymentId")]
		[Bindable(true)]
		public long PaymentId 
		{
			get { return GetColumnValue<long>(Columns.PaymentId); }
			set { SetColumnValue(Columns.PaymentId, value); }
		}
		  
		[XmlAttribute("NgayThien")]
		[Bindable(true)]
		public DateTime NgayThien 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayThien); }
			set { SetColumnValue(Columns.NgayThien, value); }
		}
		  
		[XmlAttribute("NguoiNop")]
		[Bindable(true)]
		public string NguoiNop 
		{
			get { return GetColumnValue<string>(Columns.NguoiNop); }
			set { SetColumnValue(Columns.NguoiNop, value); }
		}
		  
		[XmlAttribute("LdoNop")]
		[Bindable(true)]
		public string LdoNop 
		{
			get { return GetColumnValue<string>(Columns.LdoNop); }
			set { SetColumnValue(Columns.LdoNop, value); }
		}
		  
		[XmlAttribute("SoTien")]
		[Bindable(true)]
		public decimal SoTien 
		{
			get { return GetColumnValue<decimal>(Columns.SoTien); }
			set { SetColumnValue(Columns.SoTien, value); }
		}
		  
		[XmlAttribute("SluongCtuGoc")]
		[Bindable(true)]
		public short? SluongCtuGoc 
		{
			get { return GetColumnValue<short?>(Columns.SluongCtuGoc); }
			set { SetColumnValue(Columns.SluongCtuGoc, value); }
		}
		  
		[XmlAttribute("TkhoanNo")]
		[Bindable(true)]
		public string TkhoanNo 
		{
			get { return GetColumnValue<string>(Columns.TkhoanNo); }
			set { SetColumnValue(Columns.TkhoanNo, value); }
		}
		  
		[XmlAttribute("TkhoanCo")]
		[Bindable(true)]
		public string TkhoanCo 
		{
			get { return GetColumnValue<string>(Columns.TkhoanCo); }
			set { SetColumnValue(Columns.TkhoanCo, value); }
		}
		  
		[XmlAttribute("LoaiPhieu")]
		[Bindable(true)]
		public byte? LoaiPhieu 
		{
			get { return GetColumnValue<byte?>(Columns.LoaiPhieu); }
			set { SetColumnValue(Columns.LoaiPhieu, value); }
		}
		  
		[XmlAttribute("IpMaySua")]
		[Bindable(true)]
		public string IpMaySua 
		{
			get { return GetColumnValue<string>(Columns.IpMaySua); }
			set { SetColumnValue(Columns.IpMaySua, value); }
		}
		  
		[XmlAttribute("IpMayTao")]
		[Bindable(true)]
		public string IpMayTao 
		{
			get { return GetColumnValue<string>(Columns.IpMayTao); }
			set { SetColumnValue(Columns.IpMayTao, value); }
		}
		  
		[XmlAttribute("IdKhoa")]
		[Bindable(true)]
		public short? IdKhoa 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoa); }
			set { SetColumnValue(Columns.IdKhoa, value); }
		}
		  
		[XmlAttribute("IdNhanVien")]
		[Bindable(true)]
		public short? IdNhanVien 
		{
			get { return GetColumnValue<short?>(Columns.IdNhanVien); }
			set { SetColumnValue(Columns.IdNhanVien, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaPthu,long varPaymentId,DateTime varNgayThien,string varNguoiNop,string varLdoNop,decimal varSoTien,short? varSluongCtuGoc,string varTkhoanNo,string varTkhoanCo,byte? varLoaiPhieu,string varIpMaySua,string varIpMayTao,short? varIdKhoa,short? varIdNhanVien,DateTime? varNgaySua,DateTime? varNgayTao,string varNguoiSua,string varNguoiTao)
		{
			TPhieuthu item = new TPhieuthu();
			
			item.MaPthu = varMaPthu;
			
			item.PaymentId = varPaymentId;
			
			item.NgayThien = varNgayThien;
			
			item.NguoiNop = varNguoiNop;
			
			item.LdoNop = varLdoNop;
			
			item.SoTien = varSoTien;
			
			item.SluongCtuGoc = varSluongCtuGoc;
			
			item.TkhoanNo = varTkhoanNo;
			
			item.TkhoanCo = varTkhoanCo;
			
			item.LoaiPhieu = varLoaiPhieu;
			
			item.IpMaySua = varIpMaySua;
			
			item.IpMayTao = varIpMayTao;
			
			item.IdKhoa = varIdKhoa;
			
			item.IdNhanVien = varIdNhanVien;
			
			item.NgaySua = varNgaySua;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NguoiTao = varNguoiTao;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(string varMaPthu,long varPaymentId,DateTime varNgayThien,string varNguoiNop,string varLdoNop,decimal varSoTien,short? varSluongCtuGoc,string varTkhoanNo,string varTkhoanCo,byte? varLoaiPhieu,string varIpMaySua,string varIpMayTao,short? varIdKhoa,short? varIdNhanVien,DateTime? varNgaySua,DateTime? varNgayTao,string varNguoiSua,string varNguoiTao)
		{
			TPhieuthu item = new TPhieuthu();
			
				item.MaPthu = varMaPthu;
			
				item.PaymentId = varPaymentId;
			
				item.NgayThien = varNgayThien;
			
				item.NguoiNop = varNguoiNop;
			
				item.LdoNop = varLdoNop;
			
				item.SoTien = varSoTien;
			
				item.SluongCtuGoc = varSluongCtuGoc;
			
				item.TkhoanNo = varTkhoanNo;
			
				item.TkhoanCo = varTkhoanCo;
			
				item.LoaiPhieu = varLoaiPhieu;
			
				item.IpMaySua = varIpMaySua;
			
				item.IpMayTao = varIpMayTao;
			
				item.IdKhoa = varIdKhoa;
			
				item.IdNhanVien = varIdNhanVien;
			
				item.NgaySua = varNgaySua;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NguoiTao = varNguoiTao;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn MaPthuColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayThienColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiNopColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn LdoNopColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn SoTienColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn SluongCtuGocColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn TkhoanNoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn TkhoanCoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiPhieuColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaySuaColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMayTaoColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhanVienColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string MaPthu = @"MA_PTHU";
			 public static string PaymentId = @"Payment_ID";
			 public static string NgayThien = @"NGAY_THIEN";
			 public static string NguoiNop = @"NGUOI_NOP";
			 public static string LdoNop = @"LDO_NOP";
			 public static string SoTien = @"SO_TIEN";
			 public static string SluongCtuGoc = @"SLUONG_CTU_GOC";
			 public static string TkhoanNo = @"TKHOAN_NO";
			 public static string TkhoanCo = @"TKHOAN_CO";
			 public static string LoaiPhieu = @"LOAI_PHIEU";
			 public static string IpMaySua = @"IP_MAY_SUA";
			 public static string IpMayTao = @"IP_MAY_TAO";
			 public static string IdKhoa = @"ID_KHOA";
			 public static string IdNhanVien = @"ID_NHAN_VIEN";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string NguoiTao = @"NGUOI_TAO";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
