using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_TONTHUOC
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TTonthuocController
    {
        // Preload our schema..
        TTonthuoc thisSchemaLoad = new TTonthuoc();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TTonthuocCollection FetchAll()
        {
            TTonthuocCollection coll = new TTonthuocCollection();
            Query qry = new Query(TTonthuoc.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TTonthuocCollection FetchByID(object DrugId)
        {
            TTonthuocCollection coll = new TTonthuocCollection().Where("DRUG_ID", DrugId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TTonthuocCollection FetchByQuery(Query qry)
        {
            TTonthuocCollection coll = new TTonthuocCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object DrugId)
        {
            return (TTonthuoc.Delete(DrugId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object DrugId)
        {
            return (TTonthuoc.Destroy(DrugId) == 1);
        }
        
        
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(long DrugId,short StockId,DateTime ExpiredDate,decimal Price,DateTime Ngay)
        {
            Query qry = new Query(TTonthuoc.Schema);
            qry.QueryType = QueryType.Delete;
            qry.AddWhere("DrugId", DrugId).AND("StockId", StockId).AND("ExpiredDate", ExpiredDate).AND("Price", Price).AND("Ngay", Ngay);
            qry.Execute();
            return (true);
        }        
       
    	
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long DrugId,short StockId,DateTime ExpiredDate,decimal Price,DateTime Ngay,int TonDaungay,int NhapTrongngay,int XuatTrongngay,int? NhapchotTrongngay,int? XuatchotTrongngay)
	    {
		    TTonthuoc item = new TTonthuoc();
		    
            item.DrugId = DrugId;
            
            item.StockId = StockId;
            
            item.ExpiredDate = ExpiredDate;
            
            item.Price = Price;
            
            item.Ngay = Ngay;
            
            item.TonDaungay = TonDaungay;
            
            item.NhapTrongngay = NhapTrongngay;
            
            item.XuatTrongngay = XuatTrongngay;
            
            item.NhapchotTrongngay = NhapchotTrongngay;
            
            item.XuatchotTrongngay = XuatchotTrongngay;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long DrugId,short StockId,DateTime ExpiredDate,decimal Price,DateTime Ngay,int TonDaungay,int NhapTrongngay,int XuatTrongngay,int? NhapchotTrongngay,int? XuatchotTrongngay)
	    {
		    TTonthuoc item = new TTonthuoc();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.DrugId = DrugId;
				
			item.StockId = StockId;
				
			item.ExpiredDate = ExpiredDate;
				
			item.Price = Price;
				
			item.Ngay = Ngay;
				
			item.TonDaungay = TonDaungay;
				
			item.NhapTrongngay = NhapTrongngay;
				
			item.XuatTrongngay = XuatTrongngay;
				
			item.NhapchotTrongngay = NhapchotTrongngay;
				
			item.XuatchotTrongngay = XuatchotTrongngay;
				
	        item.Save(UserName);
	    }
    }
}
