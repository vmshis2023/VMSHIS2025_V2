using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_Heath_Care
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class THeathCareController
    {
        // Preload our schema..
        THeathCare thisSchemaLoad = new THeathCare();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public THeathCareCollection FetchAll()
        {
            THeathCareCollection coll = new THeathCareCollection();
            Query qry = new Query(THeathCare.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public THeathCareCollection FetchByID(object HeathId)
        {
            THeathCareCollection coll = new THeathCareCollection().Where("Heath_ID", HeathId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public THeathCareCollection FetchByQuery(Query qry)
        {
            THeathCareCollection coll = new THeathCareCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object HeathId)
        {
            return (THeathCare.Delete(HeathId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object HeathId)
        {
            return (THeathCare.Destroy(HeathId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string PatientCode,int? PatientId,short? DepartmentId,short? StaffId,string Events,string Reviews,DateTime CreateDate,string CreateBy,DateTime? ModifyDate,string ModifyBy,DateTime? NgayDky,string GioDky)
	    {
		    THeathCare item = new THeathCare();
		    
            item.PatientCode = PatientCode;
            
            item.PatientId = PatientId;
            
            item.DepartmentId = DepartmentId;
            
            item.StaffId = StaffId;
            
            item.Events = Events;
            
            item.Reviews = Reviews;
            
            item.CreateDate = CreateDate;
            
            item.CreateBy = CreateBy;
            
            item.ModifyDate = ModifyDate;
            
            item.ModifyBy = ModifyBy;
            
            item.NgayDky = NgayDky;
            
            item.GioDky = GioDky;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int HeathId,string PatientCode,int? PatientId,short? DepartmentId,short? StaffId,string Events,string Reviews,DateTime CreateDate,string CreateBy,DateTime? ModifyDate,string ModifyBy,DateTime? NgayDky,string GioDky)
	    {
		    THeathCare item = new THeathCare();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.HeathId = HeathId;
				
			item.PatientCode = PatientCode;
				
			item.PatientId = PatientId;
				
			item.DepartmentId = DepartmentId;
				
			item.StaffId = StaffId;
				
			item.Events = Events;
				
			item.Reviews = Reviews;
				
			item.CreateDate = CreateDate;
				
			item.CreateBy = CreateBy;
				
			item.ModifyDate = ModifyDate;
				
			item.ModifyBy = ModifyBy;
				
			item.NgayDky = NgayDky;
				
			item.GioDky = GioDky;
				
	        item.Save(UserName);
	    }
    }
}
