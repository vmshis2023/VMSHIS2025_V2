using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the DPhieuTraKhoaVeKho class.
	/// </summary>
    [Serializable]
	public partial class DPhieuTraKhoaVeKhoCollection : ActiveList<DPhieuTraKhoaVeKho, DPhieuTraKhoaVeKhoCollection>
	{	   
		public DPhieuTraKhoaVeKhoCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DPhieuTraKhoaVeKhoCollection</returns>
		public DPhieuTraKhoaVeKhoCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DPhieuTraKhoaVeKho o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the D_PhieuTra_Khoa_VeKho table.
	/// </summary>
	[Serializable]
	public partial class DPhieuTraKhoaVeKho : ActiveRecord<DPhieuTraKhoaVeKho>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DPhieuTraKhoaVeKho()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DPhieuTraKhoaVeKho(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DPhieuTraKhoaVeKho(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DPhieuTraKhoaVeKho(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("D_PhieuTra_Khoa_VeKho", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdPhieuTraKho = new TableSchema.TableColumn(schema);
				colvarIdPhieuTraKho.ColumnName = "Id_PhieuTra_Kho";
				colvarIdPhieuTraKho.DataType = DbType.Int32;
				colvarIdPhieuTraKho.MaxLength = 0;
				colvarIdPhieuTraKho.AutoIncrement = true;
				colvarIdPhieuTraKho.IsNullable = false;
				colvarIdPhieuTraKho.IsPrimaryKey = true;
				colvarIdPhieuTraKho.IsForeignKey = false;
				colvarIdPhieuTraKho.IsReadOnly = false;
				colvarIdPhieuTraKho.DefaultSetting = @"";
				colvarIdPhieuTraKho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuTraKho);
				
				TableSchema.TableColumn colvarNgayTra = new TableSchema.TableColumn(schema);
				colvarNgayTra.ColumnName = "Ngay_Tra";
				colvarNgayTra.DataType = DbType.DateTime;
				colvarNgayTra.MaxLength = 0;
				colvarNgayTra.AutoIncrement = false;
				colvarNgayTra.IsNullable = true;
				colvarNgayTra.IsPrimaryKey = false;
				colvarNgayTra.IsForeignKey = false;
				colvarNgayTra.IsReadOnly = false;
				colvarNgayTra.DefaultSetting = @"";
				colvarNgayTra.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTra);
				
				TableSchema.TableColumn colvarIdNhanVien = new TableSchema.TableColumn(schema);
				colvarIdNhanVien.ColumnName = "Id_NhanVien";
				colvarIdNhanVien.DataType = DbType.Int16;
				colvarIdNhanVien.MaxLength = 0;
				colvarIdNhanVien.AutoIncrement = false;
				colvarIdNhanVien.IsNullable = true;
				colvarIdNhanVien.IsPrimaryKey = false;
				colvarIdNhanVien.IsForeignKey = false;
				colvarIdNhanVien.IsReadOnly = false;
				colvarIdNhanVien.DefaultSetting = @"";
				colvarIdNhanVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhanVien);
				
				TableSchema.TableColumn colvarIdKhoNhan = new TableSchema.TableColumn(schema);
				colvarIdKhoNhan.ColumnName = "Id_Kho_Nhan";
				colvarIdKhoNhan.DataType = DbType.Int16;
				colvarIdKhoNhan.MaxLength = 0;
				colvarIdKhoNhan.AutoIncrement = false;
				colvarIdKhoNhan.IsNullable = true;
				colvarIdKhoNhan.IsPrimaryKey = false;
				colvarIdKhoNhan.IsForeignKey = false;
				colvarIdKhoNhan.IsReadOnly = false;
				colvarIdKhoNhan.DefaultSetting = @"";
				colvarIdKhoNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoNhan);
				
				TableSchema.TableColumn colvarIdKhoaTra = new TableSchema.TableColumn(schema);
				colvarIdKhoaTra.ColumnName = "Id_Khoa_Tra";
				colvarIdKhoaTra.DataType = DbType.Int16;
				colvarIdKhoaTra.MaxLength = 0;
				colvarIdKhoaTra.AutoIncrement = false;
				colvarIdKhoaTra.IsNullable = true;
				colvarIdKhoaTra.IsPrimaryKey = false;
				colvarIdKhoaTra.IsForeignKey = false;
				colvarIdKhoaTra.IsReadOnly = false;
				colvarIdKhoaTra.DefaultSetting = @"";
				colvarIdKhoaTra.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoaTra);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "Nguoi_Tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "Ngay_Tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "Nguoi_Sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 20;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "Ngay_Sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarDaTra = new TableSchema.TableColumn(schema);
				colvarDaTra.ColumnName = "Da_Tra";
				colvarDaTra.DataType = DbType.Boolean;
				colvarDaTra.MaxLength = 0;
				colvarDaTra.AutoIncrement = false;
				colvarDaTra.IsNullable = true;
				colvarDaTra.IsPrimaryKey = false;
				colvarDaTra.IsForeignKey = false;
				colvarDaTra.IsReadOnly = false;
				
						colvarDaTra.DefaultSetting = @"((0))";
				colvarDaTra.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaTra);
				
				TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
				colvarGhiChu.ColumnName = "Ghi_Chu";
				colvarGhiChu.DataType = DbType.String;
				colvarGhiChu.MaxLength = 500;
				colvarGhiChu.AutoIncrement = false;
				colvarGhiChu.IsNullable = true;
				colvarGhiChu.IsPrimaryKey = false;
				colvarGhiChu.IsForeignKey = false;
				colvarGhiChu.IsReadOnly = false;
				colvarGhiChu.DefaultSetting = @"";
				colvarGhiChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChu);
				
				TableSchema.TableColumn colvarNguoiXacNhan = new TableSchema.TableColumn(schema);
				colvarNguoiXacNhan.ColumnName = "Nguoi_XacNhan";
				colvarNguoiXacNhan.DataType = DbType.String;
				colvarNguoiXacNhan.MaxLength = 20;
				colvarNguoiXacNhan.AutoIncrement = false;
				colvarNguoiXacNhan.IsNullable = true;
				colvarNguoiXacNhan.IsPrimaryKey = false;
				colvarNguoiXacNhan.IsForeignKey = false;
				colvarNguoiXacNhan.IsReadOnly = false;
				colvarNguoiXacNhan.DefaultSetting = @"";
				colvarNguoiXacNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiXacNhan);
				
				TableSchema.TableColumn colvarNgayXacNhan = new TableSchema.TableColumn(schema);
				colvarNgayXacNhan.ColumnName = "Ngay_XacNhan";
				colvarNgayXacNhan.DataType = DbType.DateTime;
				colvarNgayXacNhan.MaxLength = 0;
				colvarNgayXacNhan.AutoIncrement = false;
				colvarNgayXacNhan.IsNullable = true;
				colvarNgayXacNhan.IsPrimaryKey = false;
				colvarNgayXacNhan.IsForeignKey = false;
				colvarNgayXacNhan.IsReadOnly = false;
				colvarNgayXacNhan.DefaultSetting = @"";
				colvarNgayXacNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayXacNhan);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("D_PhieuTra_Khoa_VeKho",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdPhieuTraKho")]
		[Bindable(true)]
		public int IdPhieuTraKho 
		{
			get { return GetColumnValue<int>(Columns.IdPhieuTraKho); }
			set { SetColumnValue(Columns.IdPhieuTraKho, value); }
		}
		  
		[XmlAttribute("NgayTra")]
		[Bindable(true)]
		public DateTime? NgayTra 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTra); }
			set { SetColumnValue(Columns.NgayTra, value); }
		}
		  
		[XmlAttribute("IdNhanVien")]
		[Bindable(true)]
		public short? IdNhanVien 
		{
			get { return GetColumnValue<short?>(Columns.IdNhanVien); }
			set { SetColumnValue(Columns.IdNhanVien, value); }
		}
		  
		[XmlAttribute("IdKhoNhan")]
		[Bindable(true)]
		public short? IdKhoNhan 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoNhan); }
			set { SetColumnValue(Columns.IdKhoNhan, value); }
		}
		  
		[XmlAttribute("IdKhoaTra")]
		[Bindable(true)]
		public short? IdKhoaTra 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoaTra); }
			set { SetColumnValue(Columns.IdKhoaTra, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("DaTra")]
		[Bindable(true)]
		public bool? DaTra 
		{
			get { return GetColumnValue<bool?>(Columns.DaTra); }
			set { SetColumnValue(Columns.DaTra, value); }
		}
		  
		[XmlAttribute("GhiChu")]
		[Bindable(true)]
		public string GhiChu 
		{
			get { return GetColumnValue<string>(Columns.GhiChu); }
			set { SetColumnValue(Columns.GhiChu, value); }
		}
		  
		[XmlAttribute("NguoiXacNhan")]
		[Bindable(true)]
		public string NguoiXacNhan 
		{
			get { return GetColumnValue<string>(Columns.NguoiXacNhan); }
			set { SetColumnValue(Columns.NguoiXacNhan, value); }
		}
		  
		[XmlAttribute("NgayXacNhan")]
		[Bindable(true)]
		public DateTime? NgayXacNhan 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayXacNhan); }
			set { SetColumnValue(Columns.NgayXacNhan, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(DateTime? varNgayTra,short? varIdNhanVien,short? varIdKhoNhan,short? varIdKhoaTra,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,bool? varDaTra,string varGhiChu,string varNguoiXacNhan,DateTime? varNgayXacNhan)
		{
			DPhieuTraKhoaVeKho item = new DPhieuTraKhoaVeKho();
			
			item.NgayTra = varNgayTra;
			
			item.IdNhanVien = varIdNhanVien;
			
			item.IdKhoNhan = varIdKhoNhan;
			
			item.IdKhoaTra = varIdKhoaTra;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.DaTra = varDaTra;
			
			item.GhiChu = varGhiChu;
			
			item.NguoiXacNhan = varNguoiXacNhan;
			
			item.NgayXacNhan = varNgayXacNhan;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdPhieuTraKho,DateTime? varNgayTra,short? varIdNhanVien,short? varIdKhoNhan,short? varIdKhoaTra,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,bool? varDaTra,string varGhiChu,string varNguoiXacNhan,DateTime? varNgayXacNhan)
		{
			DPhieuTraKhoaVeKho item = new DPhieuTraKhoaVeKho();
			
				item.IdPhieuTraKho = varIdPhieuTraKho;
			
				item.NgayTra = varNgayTra;
			
				item.IdNhanVien = varIdNhanVien;
			
				item.IdKhoNhan = varIdKhoNhan;
			
				item.IdKhoaTra = varIdKhoaTra;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.DaTra = varDaTra;
			
				item.GhiChu = varGhiChu;
			
				item.NguoiXacNhan = varNguoiXacNhan;
			
				item.NgayXacNhan = varNgayXacNhan;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdPhieuTraKhoColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTraColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhanVienColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoNhanColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaTraColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn DaTraColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiXacNhanColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayXacNhanColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdPhieuTraKho = @"Id_PhieuTra_Kho";
			 public static string NgayTra = @"Ngay_Tra";
			 public static string IdNhanVien = @"Id_NhanVien";
			 public static string IdKhoNhan = @"Id_Kho_Nhan";
			 public static string IdKhoaTra = @"Id_Khoa_Tra";
			 public static string NguoiTao = @"Nguoi_Tao";
			 public static string NgayTao = @"Ngay_Tao";
			 public static string NguoiSua = @"Nguoi_Sua";
			 public static string NgaySua = @"Ngay_Sua";
			 public static string DaTra = @"Da_Tra";
			 public static string GhiChu = @"Ghi_Chu";
			 public static string NguoiXacNhan = @"Nguoi_XacNhan";
			 public static string NgayXacNhan = @"Ngay_XacNhan";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
