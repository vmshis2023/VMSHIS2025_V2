using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_PATIENT_INFO
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TPatientInfoController
    {
        // Preload our schema..
        TPatientInfo thisSchemaLoad = new TPatientInfo();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TPatientInfoCollection FetchAll()
        {
            TPatientInfoCollection coll = new TPatientInfoCollection();
            Query qry = new Query(TPatientInfo.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TPatientInfoCollection FetchByID(object PatientId)
        {
            TPatientInfoCollection coll = new TPatientInfoCollection().Where("Patient_ID", PatientId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TPatientInfoCollection FetchByQuery(Query qry)
        {
            TPatientInfoCollection coll = new TPatientInfoCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object PatientId)
        {
            return (TPatientInfo.Delete(PatientId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object PatientId)
        {
            return (TPatientInfo.Destroy(PatientId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string PatientName,string PatientAddr,string ProvinceId,string DistrictId,DateTime? PatientBirth,short? YearOfBirth,byte PatientSex,string PatientJob,string Offices,string IdentifyNum,short? CountryId,string PatientPhone,string PatientEmail,DateTime InputDate,string UserId,byte? Locked,string DeleteUserBy,DateTime? DeleteDateBy,string DeleteReasonBy,short? DanToc,string NgoaiKieu,byte? TtHonNhan,DateTime? NgaySua,DateTime? NgayTao,string NguoiSua,string NguoiTao,string IpMaySua,string IpMayTao,string TenKhongDau,string DiaChiBn,int? SoLo)
	    {
		    TPatientInfo item = new TPatientInfo();
		    
            item.PatientName = PatientName;
            
            item.PatientAddr = PatientAddr;
            
            item.ProvinceId = ProvinceId;
            
            item.DistrictId = DistrictId;
            
            item.PatientBirth = PatientBirth;
            
            item.YearOfBirth = YearOfBirth;
            
            item.PatientSex = PatientSex;
            
            item.PatientJob = PatientJob;
            
            item.Offices = Offices;
            
            item.IdentifyNum = IdentifyNum;
            
            item.CountryId = CountryId;
            
            item.PatientPhone = PatientPhone;
            
            item.PatientEmail = PatientEmail;
            
            item.InputDate = InputDate;
            
            item.UserId = UserId;
            
            item.Locked = Locked;
            
            item.DeleteUserBy = DeleteUserBy;
            
            item.DeleteDateBy = DeleteDateBy;
            
            item.DeleteReasonBy = DeleteReasonBy;
            
            item.DanToc = DanToc;
            
            item.NgoaiKieu = NgoaiKieu;
            
            item.TtHonNhan = TtHonNhan;
            
            item.NgaySua = NgaySua;
            
            item.NgayTao = NgayTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NguoiTao = NguoiTao;
            
            item.IpMaySua = IpMaySua;
            
            item.IpMayTao = IpMayTao;
            
            item.TenKhongDau = TenKhongDau;
            
            item.DiaChiBn = DiaChiBn;
            
            item.SoLo = SoLo;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long PatientId,string PatientName,string PatientAddr,string ProvinceId,string DistrictId,DateTime? PatientBirth,short? YearOfBirth,byte PatientSex,string PatientJob,string Offices,string IdentifyNum,short? CountryId,string PatientPhone,string PatientEmail,DateTime InputDate,string UserId,byte? Locked,string DeleteUserBy,DateTime? DeleteDateBy,string DeleteReasonBy,short? DanToc,string NgoaiKieu,byte? TtHonNhan,DateTime? NgaySua,DateTime? NgayTao,string NguoiSua,string NguoiTao,string IpMaySua,string IpMayTao,string TenKhongDau,string DiaChiBn,int? SoLo)
	    {
		    TPatientInfo item = new TPatientInfo();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.PatientId = PatientId;
				
			item.PatientName = PatientName;
				
			item.PatientAddr = PatientAddr;
				
			item.ProvinceId = ProvinceId;
				
			item.DistrictId = DistrictId;
				
			item.PatientBirth = PatientBirth;
				
			item.YearOfBirth = YearOfBirth;
				
			item.PatientSex = PatientSex;
				
			item.PatientJob = PatientJob;
				
			item.Offices = Offices;
				
			item.IdentifyNum = IdentifyNum;
				
			item.CountryId = CountryId;
				
			item.PatientPhone = PatientPhone;
				
			item.PatientEmail = PatientEmail;
				
			item.InputDate = InputDate;
				
			item.UserId = UserId;
				
			item.Locked = Locked;
				
			item.DeleteUserBy = DeleteUserBy;
				
			item.DeleteDateBy = DeleteDateBy;
				
			item.DeleteReasonBy = DeleteReasonBy;
				
			item.DanToc = DanToc;
				
			item.NgoaiKieu = NgoaiKieu;
				
			item.TtHonNhan = TtHonNhan;
				
			item.NgaySua = NgaySua;
				
			item.NgayTao = NgayTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NguoiTao = NguoiTao;
				
			item.IpMaySua = IpMaySua;
				
			item.IpMayTao = IpMayTao;
				
			item.TenKhongDau = TenKhongDau;
				
			item.DiaChiBn = DiaChiBn;
				
			item.SoLo = SoLo;
				
	        item.Save(UserName);
	    }
    }
}
