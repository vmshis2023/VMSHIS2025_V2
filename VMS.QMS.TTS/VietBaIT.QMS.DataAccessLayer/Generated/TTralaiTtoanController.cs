using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_TRALAI_TTOAN
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TTralaiTtoanController
    {
        // Preload our schema..
        TTralaiTtoan thisSchemaLoad = new TTralaiTtoan();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TTralaiTtoanCollection FetchAll()
        {
            TTralaiTtoanCollection coll = new TTralaiTtoanCollection();
            Query qry = new Query(TTralaiTtoan.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TTralaiTtoanCollection FetchByID(object IdChitiet)
        {
            TTralaiTtoanCollection coll = new TTralaiTtoanCollection().Where("ID_CHITIET", IdChitiet).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TTralaiTtoanCollection FetchByQuery(Query qry)
        {
            TTralaiTtoanCollection coll = new TTralaiTtoanCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdChitiet)
        {
            return (TTralaiTtoan.Delete(IdChitiet) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdChitiet)
        {
            return (TTralaiTtoan.Destroy(IdChitiet) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? PaymentId,int? Quanity,decimal? OriginPrice,decimal? DiscountPrice,decimal? DiscountRate,decimal? SurchargePrice,int? ServiceId,int? ServiceDetailId,int? PaymentTypeId,decimal? PTramBh,string ServiceDetailName,string DonViTinh,string MaKieuTtoan,string MaDv,int? IsPayment,int? IdPhieu,int? IdPhieuCtiet)
	    {
		    TTralaiTtoan item = new TTralaiTtoan();
		    
            item.PaymentId = PaymentId;
            
            item.Quanity = Quanity;
            
            item.OriginPrice = OriginPrice;
            
            item.DiscountPrice = DiscountPrice;
            
            item.DiscountRate = DiscountRate;
            
            item.SurchargePrice = SurchargePrice;
            
            item.ServiceId = ServiceId;
            
            item.ServiceDetailId = ServiceDetailId;
            
            item.PaymentTypeId = PaymentTypeId;
            
            item.PTramBh = PTramBh;
            
            item.ServiceDetailName = ServiceDetailName;
            
            item.DonViTinh = DonViTinh;
            
            item.MaKieuTtoan = MaKieuTtoan;
            
            item.MaDv = MaDv;
            
            item.IsPayment = IsPayment;
            
            item.IdPhieu = IdPhieu;
            
            item.IdPhieuCtiet = IdPhieuCtiet;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int IdChitiet,int? PaymentId,int? Quanity,decimal? OriginPrice,decimal? DiscountPrice,decimal? DiscountRate,decimal? SurchargePrice,int? ServiceId,int? ServiceDetailId,int? PaymentTypeId,decimal? PTramBh,string ServiceDetailName,string DonViTinh,string MaKieuTtoan,string MaDv,int? IsPayment,int? IdPhieu,int? IdPhieuCtiet)
	    {
		    TTralaiTtoan item = new TTralaiTtoan();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdChitiet = IdChitiet;
				
			item.PaymentId = PaymentId;
				
			item.Quanity = Quanity;
				
			item.OriginPrice = OriginPrice;
				
			item.DiscountPrice = DiscountPrice;
				
			item.DiscountRate = DiscountRate;
				
			item.SurchargePrice = SurchargePrice;
				
			item.ServiceId = ServiceId;
				
			item.ServiceDetailId = ServiceDetailId;
				
			item.PaymentTypeId = PaymentTypeId;
				
			item.PTramBh = PTramBh;
				
			item.ServiceDetailName = ServiceDetailName;
				
			item.DonViTinh = DonViTinh;
				
			item.MaKieuTtoan = MaKieuTtoan;
				
			item.MaDv = MaDv;
				
			item.IsPayment = IsPayment;
				
			item.IdPhieu = IdPhieu;
				
			item.IdPhieuCtiet = IdPhieuCtiet;
				
	        item.Save(UserName);
	    }
    }
}
