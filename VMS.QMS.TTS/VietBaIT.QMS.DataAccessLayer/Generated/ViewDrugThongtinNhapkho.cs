using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewDrugThongtinNhapkho class.
    /// </summary>
    [Serializable]
    public partial class ViewDrugThongtinNhapkhoCollection : ReadOnlyList<ViewDrugThongtinNhapkho, ViewDrugThongtinNhapkhoCollection>
    {        
        public ViewDrugThongtinNhapkhoCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VIEW_DRUG_THONGTIN_NHAPKHO view.
    /// </summary>
    [Serializable]
    public partial class ViewDrugThongtinNhapkho : ReadOnlyRecord<ViewDrugThongtinNhapkho>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VIEW_DRUG_THONGTIN_NHAPKHO", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarReceiptId = new TableSchema.TableColumn(schema);
                colvarReceiptId.ColumnName = "Receipt_ID";
                colvarReceiptId.DataType = DbType.Int32;
                colvarReceiptId.MaxLength = 0;
                colvarReceiptId.AutoIncrement = false;
                colvarReceiptId.IsNullable = false;
                colvarReceiptId.IsPrimaryKey = false;
                colvarReceiptId.IsForeignKey = false;
                colvarReceiptId.IsReadOnly = false;
                
                schema.Columns.Add(colvarReceiptId);
                
                TableSchema.TableColumn colvarFromStockId = new TableSchema.TableColumn(schema);
                colvarFromStockId.ColumnName = "FromStock_ID";
                colvarFromStockId.DataType = DbType.Int16;
                colvarFromStockId.MaxLength = 0;
                colvarFromStockId.AutoIncrement = false;
                colvarFromStockId.IsNullable = true;
                colvarFromStockId.IsPrimaryKey = false;
                colvarFromStockId.IsForeignKey = false;
                colvarFromStockId.IsReadOnly = false;
                
                schema.Columns.Add(colvarFromStockId);
                
                TableSchema.TableColumn colvarToStockId = new TableSchema.TableColumn(schema);
                colvarToStockId.ColumnName = "ToStock_ID";
                colvarToStockId.DataType = DbType.Int16;
                colvarToStockId.MaxLength = 0;
                colvarToStockId.AutoIncrement = false;
                colvarToStockId.IsNullable = false;
                colvarToStockId.IsPrimaryKey = false;
                colvarToStockId.IsForeignKey = false;
                colvarToStockId.IsReadOnly = false;
                
                schema.Columns.Add(colvarToStockId);
                
                TableSchema.TableColumn colvarNgaynhapKho = new TableSchema.TableColumn(schema);
                colvarNgaynhapKho.ColumnName = "ngaynhap_kho";
                colvarNgaynhapKho.DataType = DbType.AnsiString;
                colvarNgaynhapKho.MaxLength = 10;
                colvarNgaynhapKho.AutoIncrement = false;
                colvarNgaynhapKho.IsNullable = true;
                colvarNgaynhapKho.IsPrimaryKey = false;
                colvarNgaynhapKho.IsForeignKey = false;
                colvarNgaynhapKho.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgaynhapKho);
                
                TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
                colvarStatus.ColumnName = "Status";
                colvarStatus.DataType = DbType.Byte;
                colvarStatus.MaxLength = 0;
                colvarStatus.AutoIncrement = false;
                colvarStatus.IsNullable = false;
                colvarStatus.IsPrimaryKey = false;
                colvarStatus.IsForeignKey = false;
                colvarStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarStatus);
                
                TableSchema.TableColumn colvarInputDate = new TableSchema.TableColumn(schema);
                colvarInputDate.ColumnName = "Input_Date";
                colvarInputDate.DataType = DbType.DateTime;
                colvarInputDate.MaxLength = 0;
                colvarInputDate.AutoIncrement = false;
                colvarInputDate.IsNullable = false;
                colvarInputDate.IsPrimaryKey = false;
                colvarInputDate.IsForeignKey = false;
                colvarInputDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInputDate);
                
                TableSchema.TableColumn colvarInputUser = new TableSchema.TableColumn(schema);
                colvarInputUser.ColumnName = "Input_User";
                colvarInputUser.DataType = DbType.Int16;
                colvarInputUser.MaxLength = 0;
                colvarInputUser.AutoIncrement = false;
                colvarInputUser.IsNullable = false;
                colvarInputUser.IsPrimaryKey = false;
                colvarInputUser.IsForeignKey = false;
                colvarInputUser.IsReadOnly = false;
                
                schema.Columns.Add(colvarInputUser);
                
                TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);
                colvarCreatedBy.ColumnName = "CreatedBy";
                colvarCreatedBy.DataType = DbType.AnsiString;
                colvarCreatedBy.MaxLength = 50;
                colvarCreatedBy.AutoIncrement = false;
                colvarCreatedBy.IsNullable = false;
                colvarCreatedBy.IsPrimaryKey = false;
                colvarCreatedBy.IsForeignKey = false;
                colvarCreatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreatedBy);
                
                TableSchema.TableColumn colvarCreatedDate = new TableSchema.TableColumn(schema);
                colvarCreatedDate.ColumnName = "CreatedDate";
                colvarCreatedDate.DataType = DbType.DateTime;
                colvarCreatedDate.MaxLength = 0;
                colvarCreatedDate.AutoIncrement = false;
                colvarCreatedDate.IsNullable = false;
                colvarCreatedDate.IsPrimaryKey = false;
                colvarCreatedDate.IsForeignKey = false;
                colvarCreatedDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreatedDate);
                
                TableSchema.TableColumn colvarModifiedBy = new TableSchema.TableColumn(schema);
                colvarModifiedBy.ColumnName = "ModifiedBy";
                colvarModifiedBy.DataType = DbType.AnsiString;
                colvarModifiedBy.MaxLength = 50;
                colvarModifiedBy.AutoIncrement = false;
                colvarModifiedBy.IsNullable = true;
                colvarModifiedBy.IsPrimaryKey = false;
                colvarModifiedBy.IsForeignKey = false;
                colvarModifiedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifiedBy);
                
                TableSchema.TableColumn colvarModifiedDate = new TableSchema.TableColumn(schema);
                colvarModifiedDate.ColumnName = "ModifiedDate";
                colvarModifiedDate.DataType = DbType.DateTime;
                colvarModifiedDate.MaxLength = 0;
                colvarModifiedDate.AutoIncrement = false;
                colvarModifiedDate.IsNullable = true;
                colvarModifiedDate.IsPrimaryKey = false;
                colvarModifiedDate.IsForeignKey = false;
                colvarModifiedDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifiedDate);
                
                TableSchema.TableColumn colvarLot = new TableSchema.TableColumn(schema);
                colvarLot.ColumnName = "Lot";
                colvarLot.DataType = DbType.String;
                colvarLot.MaxLength = 100;
                colvarLot.AutoIncrement = false;
                colvarLot.IsNullable = true;
                colvarLot.IsPrimaryKey = false;
                colvarLot.IsForeignKey = false;
                colvarLot.IsReadOnly = false;
                
                schema.Columns.Add(colvarLot);
                
                TableSchema.TableColumn colvarSupplyUnitId = new TableSchema.TableColumn(schema);
                colvarSupplyUnitId.ColumnName = "SupplyUnit_ID";
                colvarSupplyUnitId.DataType = DbType.Int16;
                colvarSupplyUnitId.MaxLength = 0;
                colvarSupplyUnitId.AutoIncrement = false;
                colvarSupplyUnitId.IsNullable = true;
                colvarSupplyUnitId.IsPrimaryKey = false;
                colvarSupplyUnitId.IsForeignKey = false;
                colvarSupplyUnitId.IsReadOnly = false;
                
                schema.Columns.Add(colvarSupplyUnitId);
                
                TableSchema.TableColumn colvarHasUpdatedPrice = new TableSchema.TableColumn(schema);
                colvarHasUpdatedPrice.ColumnName = "hasUpdatedPrice";
                colvarHasUpdatedPrice.DataType = DbType.Int16;
                colvarHasUpdatedPrice.MaxLength = 0;
                colvarHasUpdatedPrice.AutoIncrement = false;
                colvarHasUpdatedPrice.IsNullable = true;
                colvarHasUpdatedPrice.IsPrimaryKey = false;
                colvarHasUpdatedPrice.IsForeignKey = false;
                colvarHasUpdatedPrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarHasUpdatedPrice);
                
                TableSchema.TableColumn colvarStockName = new TableSchema.TableColumn(schema);
                colvarStockName.ColumnName = "Stock_Name";
                colvarStockName.DataType = DbType.String;
                colvarStockName.MaxLength = 100;
                colvarStockName.AutoIncrement = false;
                colvarStockName.IsNullable = true;
                colvarStockName.IsPrimaryKey = false;
                colvarStockName.IsForeignKey = false;
                colvarStockName.IsReadOnly = false;
                
                schema.Columns.Add(colvarStockName);
                
                TableSchema.TableColumn colvarStaffName = new TableSchema.TableColumn(schema);
                colvarStaffName.ColumnName = "Staff_name";
                colvarStaffName.DataType = DbType.String;
                colvarStaffName.MaxLength = 100;
                colvarStaffName.AutoIncrement = false;
                colvarStaffName.IsNullable = true;
                colvarStaffName.IsPrimaryKey = false;
                colvarStaffName.IsForeignKey = false;
                colvarStaffName.IsReadOnly = false;
                
                schema.Columns.Add(colvarStaffName);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("VIEW_DRUG_THONGTIN_NHAPKHO",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewDrugThongtinNhapkho()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewDrugThongtinNhapkho(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewDrugThongtinNhapkho(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewDrugThongtinNhapkho(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("ReceiptId")]
        [Bindable(true)]
        public int ReceiptId 
	    {
		    get
		    {
			    return GetColumnValue<int>("Receipt_ID");
		    }
            set 
		    {
			    SetColumnValue("Receipt_ID", value);
            }
        }
	      
        [XmlAttribute("FromStockId")]
        [Bindable(true)]
        public short? FromStockId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("FromStock_ID");
		    }
            set 
		    {
			    SetColumnValue("FromStock_ID", value);
            }
        }
	      
        [XmlAttribute("ToStockId")]
        [Bindable(true)]
        public short ToStockId 
	    {
		    get
		    {
			    return GetColumnValue<short>("ToStock_ID");
		    }
            set 
		    {
			    SetColumnValue("ToStock_ID", value);
            }
        }
	      
        [XmlAttribute("NgaynhapKho")]
        [Bindable(true)]
        public string NgaynhapKho 
	    {
		    get
		    {
			    return GetColumnValue<string>("ngaynhap_kho");
		    }
            set 
		    {
			    SetColumnValue("ngaynhap_kho", value);
            }
        }
	      
        [XmlAttribute("Status")]
        [Bindable(true)]
        public byte Status 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Status");
		    }
            set 
		    {
			    SetColumnValue("Status", value);
            }
        }
	      
        [XmlAttribute("InputDate")]
        [Bindable(true)]
        public DateTime InputDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("Input_Date");
		    }
            set 
		    {
			    SetColumnValue("Input_Date", value);
            }
        }
	      
        [XmlAttribute("InputUser")]
        [Bindable(true)]
        public short InputUser 
	    {
		    get
		    {
			    return GetColumnValue<short>("Input_User");
		    }
            set 
		    {
			    SetColumnValue("Input_User", value);
            }
        }
	      
        [XmlAttribute("CreatedBy")]
        [Bindable(true)]
        public string CreatedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("CreatedBy");
		    }
            set 
		    {
			    SetColumnValue("CreatedBy", value);
            }
        }
	      
        [XmlAttribute("CreatedDate")]
        [Bindable(true)]
        public DateTime CreatedDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("CreatedDate");
		    }
            set 
		    {
			    SetColumnValue("CreatedDate", value);
            }
        }
	      
        [XmlAttribute("ModifiedBy")]
        [Bindable(true)]
        public string ModifiedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("ModifiedBy");
		    }
            set 
		    {
			    SetColumnValue("ModifiedBy", value);
            }
        }
	      
        [XmlAttribute("ModifiedDate")]
        [Bindable(true)]
        public DateTime? ModifiedDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ModifiedDate");
		    }
            set 
		    {
			    SetColumnValue("ModifiedDate", value);
            }
        }
	      
        [XmlAttribute("Lot")]
        [Bindable(true)]
        public string Lot 
	    {
		    get
		    {
			    return GetColumnValue<string>("Lot");
		    }
            set 
		    {
			    SetColumnValue("Lot", value);
            }
        }
	      
        [XmlAttribute("SupplyUnitId")]
        [Bindable(true)]
        public short? SupplyUnitId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("SupplyUnit_ID");
		    }
            set 
		    {
			    SetColumnValue("SupplyUnit_ID", value);
            }
        }
	      
        [XmlAttribute("HasUpdatedPrice")]
        [Bindable(true)]
        public short? HasUpdatedPrice 
	    {
		    get
		    {
			    return GetColumnValue<short?>("hasUpdatedPrice");
		    }
            set 
		    {
			    SetColumnValue("hasUpdatedPrice", value);
            }
        }
	      
        [XmlAttribute("StockName")]
        [Bindable(true)]
        public string StockName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Stock_Name");
		    }
            set 
		    {
			    SetColumnValue("Stock_Name", value);
            }
        }
	      
        [XmlAttribute("StaffName")]
        [Bindable(true)]
        public string StaffName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Staff_name");
		    }
            set 
		    {
			    SetColumnValue("Staff_name", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string ReceiptId = @"Receipt_ID";
            
            public static string FromStockId = @"FromStock_ID";
            
            public static string ToStockId = @"ToStock_ID";
            
            public static string NgaynhapKho = @"ngaynhap_kho";
            
            public static string Status = @"Status";
            
            public static string InputDate = @"Input_Date";
            
            public static string InputUser = @"Input_User";
            
            public static string CreatedBy = @"CreatedBy";
            
            public static string CreatedDate = @"CreatedDate";
            
            public static string ModifiedBy = @"ModifiedBy";
            
            public static string ModifiedDate = @"ModifiedDate";
            
            public static string Lot = @"Lot";
            
            public static string SupplyUnitId = @"SupplyUnit_ID";
            
            public static string HasUpdatedPrice = @"hasUpdatedPrice";
            
            public static string StockName = @"Stock_Name";
            
            public static string StaffName = @"Staff_name";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
