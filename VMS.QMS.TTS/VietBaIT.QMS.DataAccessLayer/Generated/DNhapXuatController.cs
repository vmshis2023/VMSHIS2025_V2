using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for D_NHAP_XUAT
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class DNhapXuatController
    {
        // Preload our schema..
        DNhapXuat thisSchemaLoad = new DNhapXuat();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public DNhapXuatCollection FetchAll()
        {
            DNhapXuatCollection coll = new DNhapXuatCollection();
            Query qry = new Query(DNhapXuat.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public DNhapXuatCollection FetchByID(object IdChiTiet)
        {
            DNhapXuatCollection coll = new DNhapXuatCollection().Where("ID_CHI_TIET", IdChiTiet).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public DNhapXuatCollection FetchByQuery(Query qry)
        {
            DNhapXuatCollection coll = new DNhapXuatCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdChiTiet)
        {
            return (DNhapXuat.Delete(IdChiTiet) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdChiTiet)
        {
            return (DNhapXuat.Destroy(IdChiTiet) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string MaPhieu,short? IdKho,int IdThuoc,DateTime? NgayHetHan,int? SoLuong,decimal? DonGia,decimal? ThanhTien,decimal? PhuThu,int? IdPhieuCt,int? IdPhieu,int? Vat,string SoHoaDon,int? IdNhaCcap,byte? LoaiPhieu,string MaKieuLoaiPhieu,DateTime? NgayNhapXuat,short? IdNhanVien,string NguoiTao,DateTime? NgayTao,string IpMayTao,short? IdKhoaLinh,decimal? GiaBan)
	    {
		    DNhapXuat item = new DNhapXuat();
		    
            item.MaPhieu = MaPhieu;
            
            item.IdKho = IdKho;
            
            item.IdThuoc = IdThuoc;
            
            item.NgayHetHan = NgayHetHan;
            
            item.SoLuong = SoLuong;
            
            item.DonGia = DonGia;
            
            item.ThanhTien = ThanhTien;
            
            item.PhuThu = PhuThu;
            
            item.IdPhieuCt = IdPhieuCt;
            
            item.IdPhieu = IdPhieu;
            
            item.Vat = Vat;
            
            item.SoHoaDon = SoHoaDon;
            
            item.IdNhaCcap = IdNhaCcap;
            
            item.LoaiPhieu = LoaiPhieu;
            
            item.MaKieuLoaiPhieu = MaKieuLoaiPhieu;
            
            item.NgayNhapXuat = NgayNhapXuat;
            
            item.IdNhanVien = IdNhanVien;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.IpMayTao = IpMayTao;
            
            item.IdKhoaLinh = IdKhoaLinh;
            
            item.GiaBan = GiaBan;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long IdChiTiet,string MaPhieu,short? IdKho,int IdThuoc,DateTime? NgayHetHan,int? SoLuong,decimal? DonGia,decimal? ThanhTien,decimal? PhuThu,int? IdPhieuCt,int? IdPhieu,int? Vat,string SoHoaDon,int? IdNhaCcap,byte? LoaiPhieu,string MaKieuLoaiPhieu,DateTime? NgayNhapXuat,short? IdNhanVien,string NguoiTao,DateTime? NgayTao,string IpMayTao,short? IdKhoaLinh,decimal? GiaBan)
	    {
		    DNhapXuat item = new DNhapXuat();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdChiTiet = IdChiTiet;
				
			item.MaPhieu = MaPhieu;
				
			item.IdKho = IdKho;
				
			item.IdThuoc = IdThuoc;
				
			item.NgayHetHan = NgayHetHan;
				
			item.SoLuong = SoLuong;
				
			item.DonGia = DonGia;
				
			item.ThanhTien = ThanhTien;
				
			item.PhuThu = PhuThu;
				
			item.IdPhieuCt = IdPhieuCt;
				
			item.IdPhieu = IdPhieu;
				
			item.Vat = Vat;
				
			item.SoHoaDon = SoHoaDon;
				
			item.IdNhaCcap = IdNhaCcap;
				
			item.LoaiPhieu = LoaiPhieu;
				
			item.MaKieuLoaiPhieu = MaKieuLoaiPhieu;
				
			item.NgayNhapXuat = NgayNhapXuat;
				
			item.IdNhanVien = IdNhanVien;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.IpMayTao = IpMayTao;
				
			item.IdKhoaLinh = IdKhoaLinh;
				
			item.GiaBan = GiaBan;
				
	        item.Save(UserName);
	    }
    }
}
