using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TPayment class.
	/// </summary>
    [Serializable]
	public partial class TPaymentCollection : ActiveList<TPayment, TPaymentCollection>
	{	   
		public TPaymentCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TPaymentCollection</returns>
		public TPaymentCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TPayment o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_Payment table.
	/// </summary>
	[Serializable]
	public partial class TPayment : ActiveRecord<TPayment>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TPayment()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TPayment(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TPayment(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TPayment(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_Payment", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
				colvarPaymentId.ColumnName = "Payment_ID";
				colvarPaymentId.DataType = DbType.Int64;
				colvarPaymentId.MaxLength = 0;
				colvarPaymentId.AutoIncrement = true;
				colvarPaymentId.IsNullable = false;
				colvarPaymentId.IsPrimaryKey = true;
				colvarPaymentId.IsForeignKey = false;
				colvarPaymentId.IsReadOnly = false;
				colvarPaymentId.DefaultSetting = @"";
				colvarPaymentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentId);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.AnsiString;
				colvarPatientCode.MaxLength = 20;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = false;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int32;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = false;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
				colvarPaymentDate.ColumnName = "Payment_Date";
				colvarPaymentDate.DataType = DbType.DateTime;
				colvarPaymentDate.MaxLength = 0;
				colvarPaymentDate.AutoIncrement = false;
				colvarPaymentDate.IsNullable = true;
				colvarPaymentDate.IsPrimaryKey = false;
				colvarPaymentDate.IsForeignKey = false;
				colvarPaymentDate.IsReadOnly = false;
				colvarPaymentDate.DefaultSetting = @"";
				colvarPaymentDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentDate);
				
				TableSchema.TableColumn colvarStaffId = new TableSchema.TableColumn(schema);
				colvarStaffId.ColumnName = "Staff_ID";
				colvarStaffId.DataType = DbType.Int32;
				colvarStaffId.MaxLength = 0;
				colvarStaffId.AutoIncrement = false;
				colvarStaffId.IsNullable = true;
				colvarStaffId.IsPrimaryKey = false;
				colvarStaffId.IsForeignKey = false;
				colvarStaffId.IsReadOnly = false;
				colvarStaffId.DefaultSetting = @"";
				colvarStaffId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStaffId);
				
				TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
				colvarStatus.ColumnName = "Status";
				colvarStatus.DataType = DbType.Int32;
				colvarStatus.MaxLength = 0;
				colvarStatus.AutoIncrement = false;
				colvarStatus.IsNullable = true;
				colvarStatus.IsPrimaryKey = false;
				colvarStatus.IsForeignKey = false;
				colvarStatus.IsReadOnly = false;
				
						colvarStatus.DefaultSetting = @"((0))";
				colvarStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStatus);
				
				TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);
				colvarCreatedBy.ColumnName = "Created_By";
				colvarCreatedBy.DataType = DbType.String;
				colvarCreatedBy.MaxLength = 50;
				colvarCreatedBy.AutoIncrement = false;
				colvarCreatedBy.IsNullable = true;
				colvarCreatedBy.IsPrimaryKey = false;
				colvarCreatedBy.IsForeignKey = false;
				colvarCreatedBy.IsReadOnly = false;
				colvarCreatedBy.DefaultSetting = @"";
				colvarCreatedBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreatedBy);
				
				TableSchema.TableColumn colvarCreatedDate = new TableSchema.TableColumn(schema);
				colvarCreatedDate.ColumnName = "Created_Date";
				colvarCreatedDate.DataType = DbType.DateTime;
				colvarCreatedDate.MaxLength = 0;
				colvarCreatedDate.AutoIncrement = false;
				colvarCreatedDate.IsNullable = true;
				colvarCreatedDate.IsPrimaryKey = false;
				colvarCreatedDate.IsForeignKey = false;
				colvarCreatedDate.IsReadOnly = false;
				colvarCreatedDate.DefaultSetting = @"";
				colvarCreatedDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreatedDate);
				
				TableSchema.TableColumn colvarModifyDate = new TableSchema.TableColumn(schema);
				colvarModifyDate.ColumnName = "Modify_Date";
				colvarModifyDate.DataType = DbType.DateTime;
				colvarModifyDate.MaxLength = 0;
				colvarModifyDate.AutoIncrement = false;
				colvarModifyDate.IsNullable = true;
				colvarModifyDate.IsPrimaryKey = false;
				colvarModifyDate.IsForeignKey = false;
				colvarModifyDate.IsReadOnly = false;
				colvarModifyDate.DefaultSetting = @"";
				colvarModifyDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModifyDate);
				
				TableSchema.TableColumn colvarModifyBy = new TableSchema.TableColumn(schema);
				colvarModifyBy.ColumnName = "Modify_By";
				colvarModifyBy.DataType = DbType.String;
				colvarModifyBy.MaxLength = 50;
				colvarModifyBy.AutoIncrement = false;
				colvarModifyBy.IsNullable = true;
				colvarModifyBy.IsPrimaryKey = false;
				colvarModifyBy.IsForeignKey = false;
				colvarModifyBy.IsReadOnly = false;
				colvarModifyBy.DefaultSetting = @"";
				colvarModifyBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModifyBy);
				
				TableSchema.TableColumn colvarPaymentCode = new TableSchema.TableColumn(schema);
				colvarPaymentCode.ColumnName = "Payment_Code";
				colvarPaymentCode.DataType = DbType.AnsiString;
				colvarPaymentCode.MaxLength = 50;
				colvarPaymentCode.AutoIncrement = false;
				colvarPaymentCode.IsNullable = true;
				colvarPaymentCode.IsPrimaryKey = false;
				colvarPaymentCode.IsForeignKey = false;
				colvarPaymentCode.IsReadOnly = false;
				colvarPaymentCode.DefaultSetting = @"";
				colvarPaymentCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentCode);
				
				TableSchema.TableColumn colvarKieuThanhToan = new TableSchema.TableColumn(schema);
				colvarKieuThanhToan.ColumnName = "Kieu_ThanhToan";
				colvarKieuThanhToan.DataType = DbType.Int32;
				colvarKieuThanhToan.MaxLength = 0;
				colvarKieuThanhToan.AutoIncrement = false;
				colvarKieuThanhToan.IsNullable = true;
				colvarKieuThanhToan.IsPrimaryKey = false;
				colvarKieuThanhToan.IsForeignKey = false;
				colvarKieuThanhToan.IsReadOnly = false;
				
						colvarKieuThanhToan.DefaultSetting = @"((0))";
				colvarKieuThanhToan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuThanhToan);
				
				TableSchema.TableColumn colvarDaIn = new TableSchema.TableColumn(schema);
				colvarDaIn.ColumnName = "Da_In";
				colvarDaIn.DataType = DbType.Int32;
				colvarDaIn.MaxLength = 0;
				colvarDaIn.AutoIncrement = false;
				colvarDaIn.IsNullable = true;
				colvarDaIn.IsPrimaryKey = false;
				colvarDaIn.IsForeignKey = false;
				colvarDaIn.IsReadOnly = false;
				colvarDaIn.DefaultSetting = @"";
				colvarDaIn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaIn);
				
				TableSchema.TableColumn colvarNgayIn = new TableSchema.TableColumn(schema);
				colvarNgayIn.ColumnName = "Ngay_In";
				colvarNgayIn.DataType = DbType.DateTime;
				colvarNgayIn.MaxLength = 0;
				colvarNgayIn.AutoIncrement = false;
				colvarNgayIn.IsNullable = true;
				colvarNgayIn.IsPrimaryKey = false;
				colvarNgayIn.IsForeignKey = false;
				colvarNgayIn.IsReadOnly = false;
				colvarNgayIn.DefaultSetting = @"";
				colvarNgayIn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayIn);
				
				TableSchema.TableColumn colvarNguoiIn = new TableSchema.TableColumn(schema);
				colvarNguoiIn.ColumnName = "Nguoi_In";
				colvarNguoiIn.DataType = DbType.String;
				colvarNguoiIn.MaxLength = 50;
				colvarNguoiIn.AutoIncrement = false;
				colvarNguoiIn.IsNullable = true;
				colvarNguoiIn.IsPrimaryKey = false;
				colvarNguoiIn.IsForeignKey = false;
				colvarNguoiIn.IsReadOnly = false;
				colvarNguoiIn.DefaultSetting = @"";
				colvarNguoiIn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiIn);
				
				TableSchema.TableColumn colvarNgayTHop = new TableSchema.TableColumn(schema);
				colvarNgayTHop.ColumnName = "Ngay_THop";
				colvarNgayTHop.DataType = DbType.DateTime;
				colvarNgayTHop.MaxLength = 0;
				colvarNgayTHop.AutoIncrement = false;
				colvarNgayTHop.IsNullable = true;
				colvarNgayTHop.IsPrimaryKey = false;
				colvarNgayTHop.IsForeignKey = false;
				colvarNgayTHop.IsReadOnly = false;
				colvarNgayTHop.DefaultSetting = @"";
				colvarNgayTHop.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTHop);
				
				TableSchema.TableColumn colvarNguoiTHop = new TableSchema.TableColumn(schema);
				colvarNguoiTHop.ColumnName = "Nguoi_THop";
				colvarNguoiTHop.DataType = DbType.String;
				colvarNguoiTHop.MaxLength = 50;
				colvarNguoiTHop.AutoIncrement = false;
				colvarNguoiTHop.IsNullable = true;
				colvarNguoiTHop.IsPrimaryKey = false;
				colvarNguoiTHop.IsForeignKey = false;
				colvarNguoiTHop.IsReadOnly = false;
				colvarNguoiTHop.DefaultSetting = @"";
				colvarNguoiTHop.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTHop);
				
				TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
				colvarTrongGoi.ColumnName = "TRONG_GOI";
				colvarTrongGoi.DataType = DbType.Int32;
				colvarTrongGoi.MaxLength = 0;
				colvarTrongGoi.AutoIncrement = false;
				colvarTrongGoi.IsNullable = true;
				colvarTrongGoi.IsPrimaryKey = false;
				colvarTrongGoi.IsForeignKey = false;
				colvarTrongGoi.IsReadOnly = false;
				colvarTrongGoi.DefaultSetting = @"";
				colvarTrongGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrongGoi);
				
				TableSchema.TableColumn colvarMaKieuTtoan = new TableSchema.TableColumn(schema);
				colvarMaKieuTtoan.ColumnName = "MA_KIEU_TTOAN";
				colvarMaKieuTtoan.DataType = DbType.String;
				colvarMaKieuTtoan.MaxLength = 50;
				colvarMaKieuTtoan.AutoIncrement = false;
				colvarMaKieuTtoan.IsNullable = true;
				colvarMaKieuTtoan.IsPrimaryKey = false;
				colvarMaKieuTtoan.IsForeignKey = false;
				colvarMaKieuTtoan.IsReadOnly = false;
				colvarMaKieuTtoan.DefaultSetting = @"";
				colvarMaKieuTtoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKieuTtoan);
				
				TableSchema.TableColumn colvarIpMacSua = new TableSchema.TableColumn(schema);
				colvarIpMacSua.ColumnName = "IP_MAC_SUA";
				colvarIpMacSua.DataType = DbType.String;
				colvarIpMacSua.MaxLength = 100;
				colvarIpMacSua.AutoIncrement = false;
				colvarIpMacSua.IsNullable = true;
				colvarIpMacSua.IsPrimaryKey = false;
				colvarIpMacSua.IsForeignKey = false;
				colvarIpMacSua.IsReadOnly = false;
				colvarIpMacSua.DefaultSetting = @"";
				colvarIpMacSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMacSua);
				
				TableSchema.TableColumn colvarIpMacTao = new TableSchema.TableColumn(schema);
				colvarIpMacTao.ColumnName = "IP_MAC_TAO";
				colvarIpMacTao.DataType = DbType.String;
				colvarIpMacTao.MaxLength = 100;
				colvarIpMacTao.AutoIncrement = false;
				colvarIpMacTao.IsNullable = true;
				colvarIpMacTao.IsPrimaryKey = false;
				colvarIpMacTao.IsForeignKey = false;
				colvarIpMacTao.IsReadOnly = false;
				colvarIpMacTao.DefaultSetting = @"";
				colvarIpMacTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMacTao);
				
				TableSchema.TableColumn colvarIpMaySua = new TableSchema.TableColumn(schema);
				colvarIpMaySua.ColumnName = "IP_MAY_SUA";
				colvarIpMaySua.DataType = DbType.String;
				colvarIpMaySua.MaxLength = 50;
				colvarIpMaySua.AutoIncrement = false;
				colvarIpMaySua.IsNullable = true;
				colvarIpMaySua.IsPrimaryKey = false;
				colvarIpMaySua.IsForeignKey = false;
				colvarIpMaySua.IsReadOnly = false;
				colvarIpMaySua.DefaultSetting = @"";
				colvarIpMaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaySua);
				
				TableSchema.TableColumn colvarIpMayTao = new TableSchema.TableColumn(schema);
				colvarIpMayTao.ColumnName = "IP_MAY_TAO";
				colvarIpMayTao.DataType = DbType.String;
				colvarIpMayTao.MaxLength = 50;
				colvarIpMayTao.AutoIncrement = false;
				colvarIpMayTao.IsNullable = true;
				colvarIpMayTao.IsPrimaryKey = false;
				colvarIpMayTao.IsForeignKey = false;
				colvarIpMayTao.IsReadOnly = false;
				colvarIpMayTao.DefaultSetting = @"";
				colvarIpMayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMayTao);
				
				TableSchema.TableColumn colvarLyDoHuy = new TableSchema.TableColumn(schema);
				colvarLyDoHuy.ColumnName = "LY_DO_HUY";
				colvarLyDoHuy.DataType = DbType.String;
				colvarLyDoHuy.MaxLength = 300;
				colvarLyDoHuy.AutoIncrement = false;
				colvarLyDoHuy.IsNullable = true;
				colvarLyDoHuy.IsPrimaryKey = false;
				colvarLyDoHuy.IsForeignKey = false;
				colvarLyDoHuy.IsReadOnly = false;
				colvarLyDoHuy.DefaultSetting = @"";
				colvarLyDoHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLyDoHuy);
				
				TableSchema.TableColumn colvarMaKhoaThien = new TableSchema.TableColumn(schema);
				colvarMaKhoaThien.ColumnName = "MA_KHOA_THIEN";
				colvarMaKhoaThien.DataType = DbType.String;
				colvarMaKhoaThien.MaxLength = 10;
				colvarMaKhoaThien.AutoIncrement = false;
				colvarMaKhoaThien.IsNullable = true;
				colvarMaKhoaThien.IsPrimaryKey = false;
				colvarMaKhoaThien.IsForeignKey = false;
				colvarMaKhoaThien.IsReadOnly = false;
				colvarMaKhoaThien.DefaultSetting = @"";
				colvarMaKhoaThien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKhoaThien);
				
				TableSchema.TableColumn colvarTthaiChuyen = new TableSchema.TableColumn(schema);
				colvarTthaiChuyen.ColumnName = "TTHAI_CHUYEN";
				colvarTthaiChuyen.DataType = DbType.Int32;
				colvarTthaiChuyen.MaxLength = 0;
				colvarTthaiChuyen.AutoIncrement = false;
				colvarTthaiChuyen.IsNullable = true;
				colvarTthaiChuyen.IsPrimaryKey = false;
				colvarTthaiChuyen.IsForeignKey = false;
				colvarTthaiChuyen.IsReadOnly = false;
				
						colvarTthaiChuyen.DefaultSetting = @"((0))";
				colvarTthaiChuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTthaiChuyen);
				
				TableSchema.TableColumn colvarNgayChot = new TableSchema.TableColumn(schema);
				colvarNgayChot.ColumnName = "NGAY_CHOT";
				colvarNgayChot.DataType = DbType.DateTime;
				colvarNgayChot.MaxLength = 0;
				colvarNgayChot.AutoIncrement = false;
				colvarNgayChot.IsNullable = true;
				colvarNgayChot.IsPrimaryKey = false;
				colvarNgayChot.IsForeignKey = false;
				colvarNgayChot.IsReadOnly = false;
				colvarNgayChot.DefaultSetting = @"";
				colvarNgayChot.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayChot);
				
				TableSchema.TableColumn colvarDaChot = new TableSchema.TableColumn(schema);
				colvarDaChot.ColumnName = "DA_CHOT";
				colvarDaChot.DataType = DbType.Byte;
				colvarDaChot.MaxLength = 0;
				colvarDaChot.AutoIncrement = false;
				colvarDaChot.IsNullable = true;
				colvarDaChot.IsPrimaryKey = false;
				colvarDaChot.IsForeignKey = false;
				colvarDaChot.IsReadOnly = false;
				
						colvarDaChot.DefaultSetting = @"((0))";
				colvarDaChot.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaChot);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_Payment",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("PaymentId")]
		[Bindable(true)]
		public long PaymentId 
		{
			get { return GetColumnValue<long>(Columns.PaymentId); }
			set { SetColumnValue(Columns.PaymentId, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public int PatientId 
		{
			get { return GetColumnValue<int>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("PaymentDate")]
		[Bindable(true)]
		public DateTime? PaymentDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.PaymentDate); }
			set { SetColumnValue(Columns.PaymentDate, value); }
		}
		  
		[XmlAttribute("StaffId")]
		[Bindable(true)]
		public int? StaffId 
		{
			get { return GetColumnValue<int?>(Columns.StaffId); }
			set { SetColumnValue(Columns.StaffId, value); }
		}
		  
		[XmlAttribute("Status")]
		[Bindable(true)]
		public int? Status 
		{
			get { return GetColumnValue<int?>(Columns.Status); }
			set { SetColumnValue(Columns.Status, value); }
		}
		  
		[XmlAttribute("CreatedBy")]
		[Bindable(true)]
		public string CreatedBy 
		{
			get { return GetColumnValue<string>(Columns.CreatedBy); }
			set { SetColumnValue(Columns.CreatedBy, value); }
		}
		  
		[XmlAttribute("CreatedDate")]
		[Bindable(true)]
		public DateTime? CreatedDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.CreatedDate); }
			set { SetColumnValue(Columns.CreatedDate, value); }
		}
		  
		[XmlAttribute("ModifyDate")]
		[Bindable(true)]
		public DateTime? ModifyDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.ModifyDate); }
			set { SetColumnValue(Columns.ModifyDate, value); }
		}
		  
		[XmlAttribute("ModifyBy")]
		[Bindable(true)]
		public string ModifyBy 
		{
			get { return GetColumnValue<string>(Columns.ModifyBy); }
			set { SetColumnValue(Columns.ModifyBy, value); }
		}
		  
		[XmlAttribute("PaymentCode")]
		[Bindable(true)]
		public string PaymentCode 
		{
			get { return GetColumnValue<string>(Columns.PaymentCode); }
			set { SetColumnValue(Columns.PaymentCode, value); }
		}
		  
		[XmlAttribute("KieuThanhToan")]
		[Bindable(true)]
		public int? KieuThanhToan 
		{
			get { return GetColumnValue<int?>(Columns.KieuThanhToan); }
			set { SetColumnValue(Columns.KieuThanhToan, value); }
		}
		  
		[XmlAttribute("DaIn")]
		[Bindable(true)]
		public int? DaIn 
		{
			get { return GetColumnValue<int?>(Columns.DaIn); }
			set { SetColumnValue(Columns.DaIn, value); }
		}
		  
		[XmlAttribute("NgayIn")]
		[Bindable(true)]
		public DateTime? NgayIn 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayIn); }
			set { SetColumnValue(Columns.NgayIn, value); }
		}
		  
		[XmlAttribute("NguoiIn")]
		[Bindable(true)]
		public string NguoiIn 
		{
			get { return GetColumnValue<string>(Columns.NguoiIn); }
			set { SetColumnValue(Columns.NguoiIn, value); }
		}
		  
		[XmlAttribute("NgayTHop")]
		[Bindable(true)]
		public DateTime? NgayTHop 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTHop); }
			set { SetColumnValue(Columns.NgayTHop, value); }
		}
		  
		[XmlAttribute("NguoiTHop")]
		[Bindable(true)]
		public string NguoiTHop 
		{
			get { return GetColumnValue<string>(Columns.NguoiTHop); }
			set { SetColumnValue(Columns.NguoiTHop, value); }
		}
		  
		[XmlAttribute("TrongGoi")]
		[Bindable(true)]
		public int? TrongGoi 
		{
			get { return GetColumnValue<int?>(Columns.TrongGoi); }
			set { SetColumnValue(Columns.TrongGoi, value); }
		}
		  
		[XmlAttribute("MaKieuTtoan")]
		[Bindable(true)]
		public string MaKieuTtoan 
		{
			get { return GetColumnValue<string>(Columns.MaKieuTtoan); }
			set { SetColumnValue(Columns.MaKieuTtoan, value); }
		}
		  
		[XmlAttribute("IpMacSua")]
		[Bindable(true)]
		public string IpMacSua 
		{
			get { return GetColumnValue<string>(Columns.IpMacSua); }
			set { SetColumnValue(Columns.IpMacSua, value); }
		}
		  
		[XmlAttribute("IpMacTao")]
		[Bindable(true)]
		public string IpMacTao 
		{
			get { return GetColumnValue<string>(Columns.IpMacTao); }
			set { SetColumnValue(Columns.IpMacTao, value); }
		}
		  
		[XmlAttribute("IpMaySua")]
		[Bindable(true)]
		public string IpMaySua 
		{
			get { return GetColumnValue<string>(Columns.IpMaySua); }
			set { SetColumnValue(Columns.IpMaySua, value); }
		}
		  
		[XmlAttribute("IpMayTao")]
		[Bindable(true)]
		public string IpMayTao 
		{
			get { return GetColumnValue<string>(Columns.IpMayTao); }
			set { SetColumnValue(Columns.IpMayTao, value); }
		}
		  
		[XmlAttribute("LyDoHuy")]
		[Bindable(true)]
		public string LyDoHuy 
		{
			get { return GetColumnValue<string>(Columns.LyDoHuy); }
			set { SetColumnValue(Columns.LyDoHuy, value); }
		}
		  
		[XmlAttribute("MaKhoaThien")]
		[Bindable(true)]
		public string MaKhoaThien 
		{
			get { return GetColumnValue<string>(Columns.MaKhoaThien); }
			set { SetColumnValue(Columns.MaKhoaThien, value); }
		}
		  
		[XmlAttribute("TthaiChuyen")]
		[Bindable(true)]
		public int? TthaiChuyen 
		{
			get { return GetColumnValue<int?>(Columns.TthaiChuyen); }
			set { SetColumnValue(Columns.TthaiChuyen, value); }
		}
		  
		[XmlAttribute("NgayChot")]
		[Bindable(true)]
		public DateTime? NgayChot 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayChot); }
			set { SetColumnValue(Columns.NgayChot, value); }
		}
		  
		[XmlAttribute("DaChot")]
		[Bindable(true)]
		public byte? DaChot 
		{
			get { return GetColumnValue<byte?>(Columns.DaChot); }
			set { SetColumnValue(Columns.DaChot, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varPatientCode,int varPatientId,DateTime? varPaymentDate,int? varStaffId,int? varStatus,string varCreatedBy,DateTime? varCreatedDate,DateTime? varModifyDate,string varModifyBy,string varPaymentCode,int? varKieuThanhToan,int? varDaIn,DateTime? varNgayIn,string varNguoiIn,DateTime? varNgayTHop,string varNguoiTHop,int? varTrongGoi,string varMaKieuTtoan,string varIpMacSua,string varIpMacTao,string varIpMaySua,string varIpMayTao,string varLyDoHuy,string varMaKhoaThien,int? varTthaiChuyen,DateTime? varNgayChot,byte? varDaChot)
		{
			TPayment item = new TPayment();
			
			item.PatientCode = varPatientCode;
			
			item.PatientId = varPatientId;
			
			item.PaymentDate = varPaymentDate;
			
			item.StaffId = varStaffId;
			
			item.Status = varStatus;
			
			item.CreatedBy = varCreatedBy;
			
			item.CreatedDate = varCreatedDate;
			
			item.ModifyDate = varModifyDate;
			
			item.ModifyBy = varModifyBy;
			
			item.PaymentCode = varPaymentCode;
			
			item.KieuThanhToan = varKieuThanhToan;
			
			item.DaIn = varDaIn;
			
			item.NgayIn = varNgayIn;
			
			item.NguoiIn = varNguoiIn;
			
			item.NgayTHop = varNgayTHop;
			
			item.NguoiTHop = varNguoiTHop;
			
			item.TrongGoi = varTrongGoi;
			
			item.MaKieuTtoan = varMaKieuTtoan;
			
			item.IpMacSua = varIpMacSua;
			
			item.IpMacTao = varIpMacTao;
			
			item.IpMaySua = varIpMaySua;
			
			item.IpMayTao = varIpMayTao;
			
			item.LyDoHuy = varLyDoHuy;
			
			item.MaKhoaThien = varMaKhoaThien;
			
			item.TthaiChuyen = varTthaiChuyen;
			
			item.NgayChot = varNgayChot;
			
			item.DaChot = varDaChot;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varPaymentId,string varPatientCode,int varPatientId,DateTime? varPaymentDate,int? varStaffId,int? varStatus,string varCreatedBy,DateTime? varCreatedDate,DateTime? varModifyDate,string varModifyBy,string varPaymentCode,int? varKieuThanhToan,int? varDaIn,DateTime? varNgayIn,string varNguoiIn,DateTime? varNgayTHop,string varNguoiTHop,int? varTrongGoi,string varMaKieuTtoan,string varIpMacSua,string varIpMacTao,string varIpMaySua,string varIpMayTao,string varLyDoHuy,string varMaKhoaThien,int? varTthaiChuyen,DateTime? varNgayChot,byte? varDaChot)
		{
			TPayment item = new TPayment();
			
				item.PaymentId = varPaymentId;
			
				item.PatientCode = varPatientCode;
			
				item.PatientId = varPatientId;
			
				item.PaymentDate = varPaymentDate;
			
				item.StaffId = varStaffId;
			
				item.Status = varStatus;
			
				item.CreatedBy = varCreatedBy;
			
				item.CreatedDate = varCreatedDate;
			
				item.ModifyDate = varModifyDate;
			
				item.ModifyBy = varModifyBy;
			
				item.PaymentCode = varPaymentCode;
			
				item.KieuThanhToan = varKieuThanhToan;
			
				item.DaIn = varDaIn;
			
				item.NgayIn = varNgayIn;
			
				item.NguoiIn = varNguoiIn;
			
				item.NgayTHop = varNgayTHop;
			
				item.NguoiTHop = varNguoiTHop;
			
				item.TrongGoi = varTrongGoi;
			
				item.MaKieuTtoan = varMaKieuTtoan;
			
				item.IpMacSua = varIpMacSua;
			
				item.IpMacTao = varIpMacTao;
			
				item.IpMaySua = varIpMaySua;
			
				item.IpMayTao = varIpMayTao;
			
				item.LyDoHuy = varLyDoHuy;
			
				item.MaKhoaThien = varMaKhoaThien;
			
				item.TthaiChuyen = varTthaiChuyen;
			
				item.NgayChot = varNgayChot;
			
				item.DaChot = varDaChot;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn PaymentIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentDateColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn StaffIdColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn StatusColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedByColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedDateColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifyDateColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifyByColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentCodeColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuThanhToanColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn DaInColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayInColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiInColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTHopColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTHopColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn TrongGoiColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKieuTtoanColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMacSuaColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMacTaoColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaySuaColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMayTaoColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn LyDoHuyColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhoaThienColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn TthaiChuyenColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayChotColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn DaChotColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string PaymentId = @"Payment_ID";
			 public static string PatientCode = @"Patient_Code";
			 public static string PatientId = @"Patient_ID";
			 public static string PaymentDate = @"Payment_Date";
			 public static string StaffId = @"Staff_ID";
			 public static string Status = @"Status";
			 public static string CreatedBy = @"Created_By";
			 public static string CreatedDate = @"Created_Date";
			 public static string ModifyDate = @"Modify_Date";
			 public static string ModifyBy = @"Modify_By";
			 public static string PaymentCode = @"Payment_Code";
			 public static string KieuThanhToan = @"Kieu_ThanhToan";
			 public static string DaIn = @"Da_In";
			 public static string NgayIn = @"Ngay_In";
			 public static string NguoiIn = @"Nguoi_In";
			 public static string NgayTHop = @"Ngay_THop";
			 public static string NguoiTHop = @"Nguoi_THop";
			 public static string TrongGoi = @"TRONG_GOI";
			 public static string MaKieuTtoan = @"MA_KIEU_TTOAN";
			 public static string IpMacSua = @"IP_MAC_SUA";
			 public static string IpMacTao = @"IP_MAC_TAO";
			 public static string IpMaySua = @"IP_MAY_SUA";
			 public static string IpMayTao = @"IP_MAY_TAO";
			 public static string LyDoHuy = @"LY_DO_HUY";
			 public static string MaKhoaThien = @"MA_KHOA_THIEN";
			 public static string TthaiChuyen = @"TTHAI_CHUYEN";
			 public static string NgayChot = @"NGAY_CHOT";
			 public static string DaChot = @"DA_CHOT";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
