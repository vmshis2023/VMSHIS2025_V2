using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the DNhapXuat class.
	/// </summary>
    [Serializable]
	public partial class DNhapXuatCollection : ActiveList<DNhapXuat, DNhapXuatCollection>
	{	   
		public DNhapXuatCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DNhapXuatCollection</returns>
		public DNhapXuatCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DNhapXuat o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the D_NHAP_XUAT table.
	/// </summary>
	[Serializable]
	public partial class DNhapXuat : ActiveRecord<DNhapXuat>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DNhapXuat()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DNhapXuat(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DNhapXuat(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DNhapXuat(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("D_NHAP_XUAT", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdChiTiet = new TableSchema.TableColumn(schema);
				colvarIdChiTiet.ColumnName = "ID_CHI_TIET";
				colvarIdChiTiet.DataType = DbType.Int64;
				colvarIdChiTiet.MaxLength = 0;
				colvarIdChiTiet.AutoIncrement = true;
				colvarIdChiTiet.IsNullable = false;
				colvarIdChiTiet.IsPrimaryKey = true;
				colvarIdChiTiet.IsForeignKey = false;
				colvarIdChiTiet.IsReadOnly = false;
				colvarIdChiTiet.DefaultSetting = @"";
				colvarIdChiTiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdChiTiet);
				
				TableSchema.TableColumn colvarMaPhieu = new TableSchema.TableColumn(schema);
				colvarMaPhieu.ColumnName = "MA_PHIEU";
				colvarMaPhieu.DataType = DbType.String;
				colvarMaPhieu.MaxLength = 20;
				colvarMaPhieu.AutoIncrement = false;
				colvarMaPhieu.IsNullable = true;
				colvarMaPhieu.IsPrimaryKey = false;
				colvarMaPhieu.IsForeignKey = false;
				colvarMaPhieu.IsReadOnly = false;
				colvarMaPhieu.DefaultSetting = @"";
				colvarMaPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaPhieu);
				
				TableSchema.TableColumn colvarIdKho = new TableSchema.TableColumn(schema);
				colvarIdKho.ColumnName = "ID_KHO";
				colvarIdKho.DataType = DbType.Int16;
				colvarIdKho.MaxLength = 0;
				colvarIdKho.AutoIncrement = false;
				colvarIdKho.IsNullable = true;
				colvarIdKho.IsPrimaryKey = false;
				colvarIdKho.IsForeignKey = false;
				colvarIdKho.IsReadOnly = false;
				colvarIdKho.DefaultSetting = @"";
				colvarIdKho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKho);
				
				TableSchema.TableColumn colvarIdThuoc = new TableSchema.TableColumn(schema);
				colvarIdThuoc.ColumnName = "ID_THUOC";
				colvarIdThuoc.DataType = DbType.Int32;
				colvarIdThuoc.MaxLength = 0;
				colvarIdThuoc.AutoIncrement = false;
				colvarIdThuoc.IsNullable = false;
				colvarIdThuoc.IsPrimaryKey = false;
				colvarIdThuoc.IsForeignKey = false;
				colvarIdThuoc.IsReadOnly = false;
				colvarIdThuoc.DefaultSetting = @"";
				colvarIdThuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdThuoc);
				
				TableSchema.TableColumn colvarNgayHetHan = new TableSchema.TableColumn(schema);
				colvarNgayHetHan.ColumnName = "NGAY_HET_HAN";
				colvarNgayHetHan.DataType = DbType.DateTime;
				colvarNgayHetHan.MaxLength = 0;
				colvarNgayHetHan.AutoIncrement = false;
				colvarNgayHetHan.IsNullable = true;
				colvarNgayHetHan.IsPrimaryKey = false;
				colvarNgayHetHan.IsForeignKey = false;
				colvarNgayHetHan.IsReadOnly = false;
				colvarNgayHetHan.DefaultSetting = @"";
				colvarNgayHetHan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayHetHan);
				
				TableSchema.TableColumn colvarSoLuong = new TableSchema.TableColumn(schema);
				colvarSoLuong.ColumnName = "SO_LUONG";
				colvarSoLuong.DataType = DbType.Int32;
				colvarSoLuong.MaxLength = 0;
				colvarSoLuong.AutoIncrement = false;
				colvarSoLuong.IsNullable = true;
				colvarSoLuong.IsPrimaryKey = false;
				colvarSoLuong.IsForeignKey = false;
				colvarSoLuong.IsReadOnly = false;
				colvarSoLuong.DefaultSetting = @"";
				colvarSoLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuong);
				
				TableSchema.TableColumn colvarDonGia = new TableSchema.TableColumn(schema);
				colvarDonGia.ColumnName = "DON_GIA";
				colvarDonGia.DataType = DbType.Decimal;
				colvarDonGia.MaxLength = 0;
				colvarDonGia.AutoIncrement = false;
				colvarDonGia.IsNullable = true;
				colvarDonGia.IsPrimaryKey = false;
				colvarDonGia.IsForeignKey = false;
				colvarDonGia.IsReadOnly = false;
				colvarDonGia.DefaultSetting = @"";
				colvarDonGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGia);
				
				TableSchema.TableColumn colvarThanhTien = new TableSchema.TableColumn(schema);
				colvarThanhTien.ColumnName = "THANH_TIEN";
				colvarThanhTien.DataType = DbType.Decimal;
				colvarThanhTien.MaxLength = 0;
				colvarThanhTien.AutoIncrement = false;
				colvarThanhTien.IsNullable = true;
				colvarThanhTien.IsPrimaryKey = false;
				colvarThanhTien.IsForeignKey = false;
				colvarThanhTien.IsReadOnly = false;
				colvarThanhTien.DefaultSetting = @"";
				colvarThanhTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThanhTien);
				
				TableSchema.TableColumn colvarPhuThu = new TableSchema.TableColumn(schema);
				colvarPhuThu.ColumnName = "PHU_THU";
				colvarPhuThu.DataType = DbType.Decimal;
				colvarPhuThu.MaxLength = 0;
				colvarPhuThu.AutoIncrement = false;
				colvarPhuThu.IsNullable = true;
				colvarPhuThu.IsPrimaryKey = false;
				colvarPhuThu.IsForeignKey = false;
				colvarPhuThu.IsReadOnly = false;
				colvarPhuThu.DefaultSetting = @"";
				colvarPhuThu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhuThu);
				
				TableSchema.TableColumn colvarIdPhieuCt = new TableSchema.TableColumn(schema);
				colvarIdPhieuCt.ColumnName = "ID_PHIEU_CT";
				colvarIdPhieuCt.DataType = DbType.Int32;
				colvarIdPhieuCt.MaxLength = 0;
				colvarIdPhieuCt.AutoIncrement = false;
				colvarIdPhieuCt.IsNullable = true;
				colvarIdPhieuCt.IsPrimaryKey = false;
				colvarIdPhieuCt.IsForeignKey = false;
				colvarIdPhieuCt.IsReadOnly = false;
				colvarIdPhieuCt.DefaultSetting = @"";
				colvarIdPhieuCt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuCt);
				
				TableSchema.TableColumn colvarIdPhieu = new TableSchema.TableColumn(schema);
				colvarIdPhieu.ColumnName = "ID_PHIEU";
				colvarIdPhieu.DataType = DbType.Int32;
				colvarIdPhieu.MaxLength = 0;
				colvarIdPhieu.AutoIncrement = false;
				colvarIdPhieu.IsNullable = true;
				colvarIdPhieu.IsPrimaryKey = false;
				colvarIdPhieu.IsForeignKey = false;
				colvarIdPhieu.IsReadOnly = false;
				colvarIdPhieu.DefaultSetting = @"";
				colvarIdPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieu);
				
				TableSchema.TableColumn colvarVat = new TableSchema.TableColumn(schema);
				colvarVat.ColumnName = "VAT";
				colvarVat.DataType = DbType.Int32;
				colvarVat.MaxLength = 0;
				colvarVat.AutoIncrement = false;
				colvarVat.IsNullable = true;
				colvarVat.IsPrimaryKey = false;
				colvarVat.IsForeignKey = false;
				colvarVat.IsReadOnly = false;
				colvarVat.DefaultSetting = @"";
				colvarVat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarVat);
				
				TableSchema.TableColumn colvarSoHoaDon = new TableSchema.TableColumn(schema);
				colvarSoHoaDon.ColumnName = "SO_HOA_DON";
				colvarSoHoaDon.DataType = DbType.String;
				colvarSoHoaDon.MaxLength = 50;
				colvarSoHoaDon.AutoIncrement = false;
				colvarSoHoaDon.IsNullable = true;
				colvarSoHoaDon.IsPrimaryKey = false;
				colvarSoHoaDon.IsForeignKey = false;
				colvarSoHoaDon.IsReadOnly = false;
				colvarSoHoaDon.DefaultSetting = @"";
				colvarSoHoaDon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoHoaDon);
				
				TableSchema.TableColumn colvarIdNhaCcap = new TableSchema.TableColumn(schema);
				colvarIdNhaCcap.ColumnName = "ID_NHA_CCAP";
				colvarIdNhaCcap.DataType = DbType.Int32;
				colvarIdNhaCcap.MaxLength = 0;
				colvarIdNhaCcap.AutoIncrement = false;
				colvarIdNhaCcap.IsNullable = true;
				colvarIdNhaCcap.IsPrimaryKey = false;
				colvarIdNhaCcap.IsForeignKey = false;
				colvarIdNhaCcap.IsReadOnly = false;
				colvarIdNhaCcap.DefaultSetting = @"";
				colvarIdNhaCcap.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhaCcap);
				
				TableSchema.TableColumn colvarLoaiPhieu = new TableSchema.TableColumn(schema);
				colvarLoaiPhieu.ColumnName = "LOAI_PHIEU";
				colvarLoaiPhieu.DataType = DbType.Byte;
				colvarLoaiPhieu.MaxLength = 0;
				colvarLoaiPhieu.AutoIncrement = false;
				colvarLoaiPhieu.IsNullable = true;
				colvarLoaiPhieu.IsPrimaryKey = false;
				colvarLoaiPhieu.IsForeignKey = false;
				colvarLoaiPhieu.IsReadOnly = false;
				colvarLoaiPhieu.DefaultSetting = @"";
				colvarLoaiPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiPhieu);
				
				TableSchema.TableColumn colvarMaKieuLoaiPhieu = new TableSchema.TableColumn(schema);
				colvarMaKieuLoaiPhieu.ColumnName = "MA_KIEU_LOAI_PHIEU";
				colvarMaKieuLoaiPhieu.DataType = DbType.String;
				colvarMaKieuLoaiPhieu.MaxLength = 20;
				colvarMaKieuLoaiPhieu.AutoIncrement = false;
				colvarMaKieuLoaiPhieu.IsNullable = true;
				colvarMaKieuLoaiPhieu.IsPrimaryKey = false;
				colvarMaKieuLoaiPhieu.IsForeignKey = false;
				colvarMaKieuLoaiPhieu.IsReadOnly = false;
				colvarMaKieuLoaiPhieu.DefaultSetting = @"";
				colvarMaKieuLoaiPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKieuLoaiPhieu);
				
				TableSchema.TableColumn colvarNgayNhapXuat = new TableSchema.TableColumn(schema);
				colvarNgayNhapXuat.ColumnName = "NGAY_NHAP_XUAT";
				colvarNgayNhapXuat.DataType = DbType.DateTime;
				colvarNgayNhapXuat.MaxLength = 0;
				colvarNgayNhapXuat.AutoIncrement = false;
				colvarNgayNhapXuat.IsNullable = true;
				colvarNgayNhapXuat.IsPrimaryKey = false;
				colvarNgayNhapXuat.IsForeignKey = false;
				colvarNgayNhapXuat.IsReadOnly = false;
				colvarNgayNhapXuat.DefaultSetting = @"";
				colvarNgayNhapXuat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayNhapXuat);
				
				TableSchema.TableColumn colvarIdNhanVien = new TableSchema.TableColumn(schema);
				colvarIdNhanVien.ColumnName = "ID_NHAN_VIEN";
				colvarIdNhanVien.DataType = DbType.Int16;
				colvarIdNhanVien.MaxLength = 0;
				colvarIdNhanVien.AutoIncrement = false;
				colvarIdNhanVien.IsNullable = true;
				colvarIdNhanVien.IsPrimaryKey = false;
				colvarIdNhanVien.IsForeignKey = false;
				colvarIdNhanVien.IsReadOnly = false;
				colvarIdNhanVien.DefaultSetting = @"";
				colvarIdNhanVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhanVien);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				
						colvarNgayTao.DefaultSetting = @"(getdate())";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarIpMayTao = new TableSchema.TableColumn(schema);
				colvarIpMayTao.ColumnName = "IP_MAY_TAO";
				colvarIpMayTao.DataType = DbType.String;
				colvarIpMayTao.MaxLength = 20;
				colvarIpMayTao.AutoIncrement = false;
				colvarIpMayTao.IsNullable = true;
				colvarIpMayTao.IsPrimaryKey = false;
				colvarIpMayTao.IsForeignKey = false;
				colvarIpMayTao.IsReadOnly = false;
				colvarIpMayTao.DefaultSetting = @"";
				colvarIpMayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMayTao);
				
				TableSchema.TableColumn colvarIdKhoaLinh = new TableSchema.TableColumn(schema);
				colvarIdKhoaLinh.ColumnName = "ID_KHOA_LINH";
				colvarIdKhoaLinh.DataType = DbType.Int16;
				colvarIdKhoaLinh.MaxLength = 0;
				colvarIdKhoaLinh.AutoIncrement = false;
				colvarIdKhoaLinh.IsNullable = true;
				colvarIdKhoaLinh.IsPrimaryKey = false;
				colvarIdKhoaLinh.IsForeignKey = false;
				colvarIdKhoaLinh.IsReadOnly = false;
				colvarIdKhoaLinh.DefaultSetting = @"";
				colvarIdKhoaLinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoaLinh);
				
				TableSchema.TableColumn colvarGiaBan = new TableSchema.TableColumn(schema);
				colvarGiaBan.ColumnName = "GIA_BAN";
				colvarGiaBan.DataType = DbType.Decimal;
				colvarGiaBan.MaxLength = 0;
				colvarGiaBan.AutoIncrement = false;
				colvarGiaBan.IsNullable = true;
				colvarGiaBan.IsPrimaryKey = false;
				colvarGiaBan.IsForeignKey = false;
				colvarGiaBan.IsReadOnly = false;
				
						colvarGiaBan.DefaultSetting = @"((0))";
				colvarGiaBan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaBan);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("D_NHAP_XUAT",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdChiTiet")]
		[Bindable(true)]
		public long IdChiTiet 
		{
			get { return GetColumnValue<long>(Columns.IdChiTiet); }
			set { SetColumnValue(Columns.IdChiTiet, value); }
		}
		  
		[XmlAttribute("MaPhieu")]
		[Bindable(true)]
		public string MaPhieu 
		{
			get { return GetColumnValue<string>(Columns.MaPhieu); }
			set { SetColumnValue(Columns.MaPhieu, value); }
		}
		  
		[XmlAttribute("IdKho")]
		[Bindable(true)]
		public short? IdKho 
		{
			get { return GetColumnValue<short?>(Columns.IdKho); }
			set { SetColumnValue(Columns.IdKho, value); }
		}
		  
		[XmlAttribute("IdThuoc")]
		[Bindable(true)]
		public int IdThuoc 
		{
			get { return GetColumnValue<int>(Columns.IdThuoc); }
			set { SetColumnValue(Columns.IdThuoc, value); }
		}
		  
		[XmlAttribute("NgayHetHan")]
		[Bindable(true)]
		public DateTime? NgayHetHan 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayHetHan); }
			set { SetColumnValue(Columns.NgayHetHan, value); }
		}
		  
		[XmlAttribute("SoLuong")]
		[Bindable(true)]
		public int? SoLuong 
		{
			get { return GetColumnValue<int?>(Columns.SoLuong); }
			set { SetColumnValue(Columns.SoLuong, value); }
		}
		  
		[XmlAttribute("DonGia")]
		[Bindable(true)]
		public decimal? DonGia 
		{
			get { return GetColumnValue<decimal?>(Columns.DonGia); }
			set { SetColumnValue(Columns.DonGia, value); }
		}
		  
		[XmlAttribute("ThanhTien")]
		[Bindable(true)]
		public decimal? ThanhTien 
		{
			get { return GetColumnValue<decimal?>(Columns.ThanhTien); }
			set { SetColumnValue(Columns.ThanhTien, value); }
		}
		  
		[XmlAttribute("PhuThu")]
		[Bindable(true)]
		public decimal? PhuThu 
		{
			get { return GetColumnValue<decimal?>(Columns.PhuThu); }
			set { SetColumnValue(Columns.PhuThu, value); }
		}
		  
		[XmlAttribute("IdPhieuCt")]
		[Bindable(true)]
		public int? IdPhieuCt 
		{
			get { return GetColumnValue<int?>(Columns.IdPhieuCt); }
			set { SetColumnValue(Columns.IdPhieuCt, value); }
		}
		  
		[XmlAttribute("IdPhieu")]
		[Bindable(true)]
		public int? IdPhieu 
		{
			get { return GetColumnValue<int?>(Columns.IdPhieu); }
			set { SetColumnValue(Columns.IdPhieu, value); }
		}
		  
		[XmlAttribute("Vat")]
		[Bindable(true)]
		public int? Vat 
		{
			get { return GetColumnValue<int?>(Columns.Vat); }
			set { SetColumnValue(Columns.Vat, value); }
		}
		  
		[XmlAttribute("SoHoaDon")]
		[Bindable(true)]
		public string SoHoaDon 
		{
			get { return GetColumnValue<string>(Columns.SoHoaDon); }
			set { SetColumnValue(Columns.SoHoaDon, value); }
		}
		  
		[XmlAttribute("IdNhaCcap")]
		[Bindable(true)]
		public int? IdNhaCcap 
		{
			get { return GetColumnValue<int?>(Columns.IdNhaCcap); }
			set { SetColumnValue(Columns.IdNhaCcap, value); }
		}
		  
		[XmlAttribute("LoaiPhieu")]
		[Bindable(true)]
		public byte? LoaiPhieu 
		{
			get { return GetColumnValue<byte?>(Columns.LoaiPhieu); }
			set { SetColumnValue(Columns.LoaiPhieu, value); }
		}
		  
		[XmlAttribute("MaKieuLoaiPhieu")]
		[Bindable(true)]
		public string MaKieuLoaiPhieu 
		{
			get { return GetColumnValue<string>(Columns.MaKieuLoaiPhieu); }
			set { SetColumnValue(Columns.MaKieuLoaiPhieu, value); }
		}
		  
		[XmlAttribute("NgayNhapXuat")]
		[Bindable(true)]
		public DateTime? NgayNhapXuat 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayNhapXuat); }
			set { SetColumnValue(Columns.NgayNhapXuat, value); }
		}
		  
		[XmlAttribute("IdNhanVien")]
		[Bindable(true)]
		public short? IdNhanVien 
		{
			get { return GetColumnValue<short?>(Columns.IdNhanVien); }
			set { SetColumnValue(Columns.IdNhanVien, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("IpMayTao")]
		[Bindable(true)]
		public string IpMayTao 
		{
			get { return GetColumnValue<string>(Columns.IpMayTao); }
			set { SetColumnValue(Columns.IpMayTao, value); }
		}
		  
		[XmlAttribute("IdKhoaLinh")]
		[Bindable(true)]
		public short? IdKhoaLinh 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoaLinh); }
			set { SetColumnValue(Columns.IdKhoaLinh, value); }
		}
		  
		[XmlAttribute("GiaBan")]
		[Bindable(true)]
		public decimal? GiaBan 
		{
			get { return GetColumnValue<decimal?>(Columns.GiaBan); }
			set { SetColumnValue(Columns.GiaBan, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaPhieu,short? varIdKho,int varIdThuoc,DateTime? varNgayHetHan,int? varSoLuong,decimal? varDonGia,decimal? varThanhTien,decimal? varPhuThu,int? varIdPhieuCt,int? varIdPhieu,int? varVat,string varSoHoaDon,int? varIdNhaCcap,byte? varLoaiPhieu,string varMaKieuLoaiPhieu,DateTime? varNgayNhapXuat,short? varIdNhanVien,string varNguoiTao,DateTime? varNgayTao,string varIpMayTao,short? varIdKhoaLinh,decimal? varGiaBan)
		{
			DNhapXuat item = new DNhapXuat();
			
			item.MaPhieu = varMaPhieu;
			
			item.IdKho = varIdKho;
			
			item.IdThuoc = varIdThuoc;
			
			item.NgayHetHan = varNgayHetHan;
			
			item.SoLuong = varSoLuong;
			
			item.DonGia = varDonGia;
			
			item.ThanhTien = varThanhTien;
			
			item.PhuThu = varPhuThu;
			
			item.IdPhieuCt = varIdPhieuCt;
			
			item.IdPhieu = varIdPhieu;
			
			item.Vat = varVat;
			
			item.SoHoaDon = varSoHoaDon;
			
			item.IdNhaCcap = varIdNhaCcap;
			
			item.LoaiPhieu = varLoaiPhieu;
			
			item.MaKieuLoaiPhieu = varMaKieuLoaiPhieu;
			
			item.NgayNhapXuat = varNgayNhapXuat;
			
			item.IdNhanVien = varIdNhanVien;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.IpMayTao = varIpMayTao;
			
			item.IdKhoaLinh = varIdKhoaLinh;
			
			item.GiaBan = varGiaBan;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varIdChiTiet,string varMaPhieu,short? varIdKho,int varIdThuoc,DateTime? varNgayHetHan,int? varSoLuong,decimal? varDonGia,decimal? varThanhTien,decimal? varPhuThu,int? varIdPhieuCt,int? varIdPhieu,int? varVat,string varSoHoaDon,int? varIdNhaCcap,byte? varLoaiPhieu,string varMaKieuLoaiPhieu,DateTime? varNgayNhapXuat,short? varIdNhanVien,string varNguoiTao,DateTime? varNgayTao,string varIpMayTao,short? varIdKhoaLinh,decimal? varGiaBan)
		{
			DNhapXuat item = new DNhapXuat();
			
				item.IdChiTiet = varIdChiTiet;
			
				item.MaPhieu = varMaPhieu;
			
				item.IdKho = varIdKho;
			
				item.IdThuoc = varIdThuoc;
			
				item.NgayHetHan = varNgayHetHan;
			
				item.SoLuong = varSoLuong;
			
				item.DonGia = varDonGia;
			
				item.ThanhTien = varThanhTien;
			
				item.PhuThu = varPhuThu;
			
				item.IdPhieuCt = varIdPhieuCt;
			
				item.IdPhieu = varIdPhieu;
			
				item.Vat = varVat;
			
				item.SoHoaDon = varSoHoaDon;
			
				item.IdNhaCcap = varIdNhaCcap;
			
				item.LoaiPhieu = varLoaiPhieu;
			
				item.MaKieuLoaiPhieu = varMaKieuLoaiPhieu;
			
				item.NgayNhapXuat = varNgayNhapXuat;
			
				item.IdNhanVien = varIdNhanVien;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.IpMayTao = varIpMayTao;
			
				item.IdKhoaLinh = varIdKhoaLinh;
			
				item.GiaBan = varGiaBan;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdChiTietColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaPhieuColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdThuocColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayHetHanColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn ThanhTienColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn PhuThuColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuCtColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn VatColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn SoHoaDonColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhaCcapColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiPhieuColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKieuLoaiPhieuColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayNhapXuatColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhanVienColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMayTaoColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaLinhColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaBanColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdChiTiet = @"ID_CHI_TIET";
			 public static string MaPhieu = @"MA_PHIEU";
			 public static string IdKho = @"ID_KHO";
			 public static string IdThuoc = @"ID_THUOC";
			 public static string NgayHetHan = @"NGAY_HET_HAN";
			 public static string SoLuong = @"SO_LUONG";
			 public static string DonGia = @"DON_GIA";
			 public static string ThanhTien = @"THANH_TIEN";
			 public static string PhuThu = @"PHU_THU";
			 public static string IdPhieuCt = @"ID_PHIEU_CT";
			 public static string IdPhieu = @"ID_PHIEU";
			 public static string Vat = @"VAT";
			 public static string SoHoaDon = @"SO_HOA_DON";
			 public static string IdNhaCcap = @"ID_NHA_CCAP";
			 public static string LoaiPhieu = @"LOAI_PHIEU";
			 public static string MaKieuLoaiPhieu = @"MA_KIEU_LOAI_PHIEU";
			 public static string NgayNhapXuat = @"NGAY_NHAP_XUAT";
			 public static string IdNhanVien = @"ID_NHAN_VIEN";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string IpMayTao = @"IP_MAY_TAO";
			 public static string IdKhoaLinh = @"ID_KHOA_LINH";
			 public static string GiaBan = @"GIA_BAN";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
