using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TPrescriptionDetailTemp class.
	/// </summary>
    [Serializable]
	public partial class TPrescriptionDetailTempCollection : ActiveList<TPrescriptionDetailTemp, TPrescriptionDetailTempCollection>
	{	   
		public TPrescriptionDetailTempCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TPrescriptionDetailTempCollection</returns>
		public TPrescriptionDetailTempCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TPrescriptionDetailTemp o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_Prescription_Detail_Temp table.
	/// </summary>
	[Serializable]
	public partial class TPrescriptionDetailTemp : ActiveRecord<TPrescriptionDetailTemp>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TPrescriptionDetailTemp()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TPrescriptionDetailTemp(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TPrescriptionDetailTemp(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TPrescriptionDetailTemp(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_Prescription_Detail_Temp", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarPresDetailId = new TableSchema.TableColumn(schema);
				colvarPresDetailId.ColumnName = "PresDetail_ID";
				colvarPresDetailId.DataType = DbType.Int32;
				colvarPresDetailId.MaxLength = 0;
				colvarPresDetailId.AutoIncrement = false;
				colvarPresDetailId.IsNullable = false;
				colvarPresDetailId.IsPrimaryKey = true;
				colvarPresDetailId.IsForeignKey = false;
				colvarPresDetailId.IsReadOnly = false;
				colvarPresDetailId.DefaultSetting = @"";
				colvarPresDetailId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPresDetailId);
				
				TableSchema.TableColumn colvarPresId = new TableSchema.TableColumn(schema);
				colvarPresId.ColumnName = "Pres_ID";
				colvarPresId.DataType = DbType.Int32;
				colvarPresId.MaxLength = 0;
				colvarPresId.AutoIncrement = false;
				colvarPresId.IsNullable = false;
				colvarPresId.IsPrimaryKey = false;
				colvarPresId.IsForeignKey = false;
				colvarPresId.IsReadOnly = false;
				colvarPresId.DefaultSetting = @"";
				colvarPresId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPresId);
				
				TableSchema.TableColumn colvarDrugId = new TableSchema.TableColumn(schema);
				colvarDrugId.ColumnName = "Drug_ID";
				colvarDrugId.DataType = DbType.Int32;
				colvarDrugId.MaxLength = 0;
				colvarDrugId.AutoIncrement = false;
				colvarDrugId.IsNullable = false;
				colvarDrugId.IsPrimaryKey = false;
				colvarDrugId.IsForeignKey = false;
				colvarDrugId.IsReadOnly = false;
				colvarDrugId.DefaultSetting = @"";
				colvarDrugId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDrugId);
				
				TableSchema.TableColumn colvarExpireDate = new TableSchema.TableColumn(schema);
				colvarExpireDate.ColumnName = "Expire_Date";
				colvarExpireDate.DataType = DbType.DateTime;
				colvarExpireDate.MaxLength = 0;
				colvarExpireDate.AutoIncrement = false;
				colvarExpireDate.IsNullable = false;
				colvarExpireDate.IsPrimaryKey = false;
				colvarExpireDate.IsForeignKey = false;
				colvarExpireDate.IsReadOnly = false;
				colvarExpireDate.DefaultSetting = @"";
				colvarExpireDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarExpireDate);
				
				TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
				colvarQuantity.ColumnName = "Quantity";
				colvarQuantity.DataType = DbType.Int32;
				colvarQuantity.MaxLength = 0;
				colvarQuantity.AutoIncrement = false;
				colvarQuantity.IsNullable = false;
				colvarQuantity.IsPrimaryKey = false;
				colvarQuantity.IsForeignKey = false;
				colvarQuantity.IsReadOnly = false;
				colvarQuantity.DefaultSetting = @"";
				colvarQuantity.ForeignKeyTableName = "";
				schema.Columns.Add(colvarQuantity);
				
				TableSchema.TableColumn colvarPrice = new TableSchema.TableColumn(schema);
				colvarPrice.ColumnName = "Price";
				colvarPrice.DataType = DbType.Decimal;
				colvarPrice.MaxLength = 0;
				colvarPrice.AutoIncrement = false;
				colvarPrice.IsNullable = false;
				colvarPrice.IsPrimaryKey = false;
				colvarPrice.IsForeignKey = false;
				colvarPrice.IsReadOnly = false;
				colvarPrice.DefaultSetting = @"";
				colvarPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPrice);
				
				TableSchema.TableColumn colvarSurchargePrice = new TableSchema.TableColumn(schema);
				colvarSurchargePrice.ColumnName = "Surcharge_Price";
				colvarSurchargePrice.DataType = DbType.Decimal;
				colvarSurchargePrice.MaxLength = 0;
				colvarSurchargePrice.AutoIncrement = false;
				colvarSurchargePrice.IsNullable = true;
				colvarSurchargePrice.IsPrimaryKey = false;
				colvarSurchargePrice.IsForeignKey = false;
				colvarSurchargePrice.IsReadOnly = false;
				colvarSurchargePrice.DefaultSetting = @"";
				colvarSurchargePrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSurchargePrice);
				
				TableSchema.TableColumn colvarSDesc = new TableSchema.TableColumn(schema);
				colvarSDesc.ColumnName = "sDesc";
				colvarSDesc.DataType = DbType.String;
				colvarSDesc.MaxLength = 500;
				colvarSDesc.AutoIncrement = false;
				colvarSDesc.IsNullable = true;
				colvarSDesc.IsPrimaryKey = false;
				colvarSDesc.IsForeignKey = false;
				colvarSDesc.IsReadOnly = false;
				colvarSDesc.DefaultSetting = @"";
				colvarSDesc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSDesc);
				
				TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
				colvarPaymentStatus.ColumnName = "Payment_Status";
				colvarPaymentStatus.DataType = DbType.Int32;
				colvarPaymentStatus.MaxLength = 0;
				colvarPaymentStatus.AutoIncrement = false;
				colvarPaymentStatus.IsNullable = true;
				colvarPaymentStatus.IsPrimaryKey = false;
				colvarPaymentStatus.IsForeignKey = false;
				colvarPaymentStatus.IsReadOnly = false;
				colvarPaymentStatus.DefaultSetting = @"";
				colvarPaymentStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentStatus);
				
				TableSchema.TableColumn colvarQuantityCancel = new TableSchema.TableColumn(schema);
				colvarQuantityCancel.ColumnName = "Quantity_Cancel";
				colvarQuantityCancel.DataType = DbType.Int32;
				colvarQuantityCancel.MaxLength = 0;
				colvarQuantityCancel.AutoIncrement = false;
				colvarQuantityCancel.IsNullable = true;
				colvarQuantityCancel.IsPrimaryKey = false;
				colvarQuantityCancel.IsForeignKey = false;
				colvarQuantityCancel.IsReadOnly = false;
				colvarQuantityCancel.DefaultSetting = @"";
				colvarQuantityCancel.ForeignKeyTableName = "";
				schema.Columns.Add(colvarQuantityCancel);
				
				TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
				colvarPaymentDate.ColumnName = "Payment_Date";
				colvarPaymentDate.DataType = DbType.DateTime;
				colvarPaymentDate.MaxLength = 0;
				colvarPaymentDate.AutoIncrement = false;
				colvarPaymentDate.IsNullable = true;
				colvarPaymentDate.IsPrimaryKey = false;
				colvarPaymentDate.IsForeignKey = false;
				colvarPaymentDate.IsReadOnly = false;
				colvarPaymentDate.DefaultSetting = @"";
				colvarPaymentDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentDate);
				
				TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
				colvarIsPayment.ColumnName = "IsPayment";
				colvarIsPayment.DataType = DbType.Byte;
				colvarIsPayment.MaxLength = 0;
				colvarIsPayment.AutoIncrement = false;
				colvarIsPayment.IsNullable = true;
				colvarIsPayment.IsPrimaryKey = false;
				colvarIsPayment.IsForeignKey = false;
				colvarIsPayment.IsReadOnly = false;
				colvarIsPayment.DefaultSetting = @"";
				colvarIsPayment.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsPayment);
				
				TableSchema.TableColumn colvarStockId = new TableSchema.TableColumn(schema);
				colvarStockId.ColumnName = "Stock_ID";
				colvarStockId.DataType = DbType.Int32;
				colvarStockId.MaxLength = 0;
				colvarStockId.AutoIncrement = false;
				colvarStockId.IsNullable = true;
				colvarStockId.IsPrimaryKey = false;
				colvarStockId.IsForeignKey = false;
				colvarStockId.IsReadOnly = false;
				colvarStockId.DefaultSetting = @"";
				colvarStockId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStockId);
				
				TableSchema.TableColumn colvarHasComfirm = new TableSchema.TableColumn(schema);
				colvarHasComfirm.ColumnName = "HasComfirm";
				colvarHasComfirm.DataType = DbType.Byte;
				colvarHasComfirm.MaxLength = 0;
				colvarHasComfirm.AutoIncrement = false;
				colvarHasComfirm.IsNullable = true;
				colvarHasComfirm.IsPrimaryKey = false;
				colvarHasComfirm.IsForeignKey = false;
				colvarHasComfirm.IsReadOnly = false;
				colvarHasComfirm.DefaultSetting = @"";
				colvarHasComfirm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHasComfirm);
				
				TableSchema.TableColumn colvarBhytStatus = new TableSchema.TableColumn(schema);
				colvarBhytStatus.ColumnName = "BHYT_Status";
				colvarBhytStatus.DataType = DbType.Byte;
				colvarBhytStatus.MaxLength = 0;
				colvarBhytStatus.AutoIncrement = false;
				colvarBhytStatus.IsNullable = true;
				colvarBhytStatus.IsPrimaryKey = false;
				colvarBhytStatus.IsForeignKey = false;
				colvarBhytStatus.IsReadOnly = false;
				colvarBhytStatus.DefaultSetting = @"";
				colvarBhytStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBhytStatus);
				
				TableSchema.TableColumn colvarThuTuIn = new TableSchema.TableColumn(schema);
				colvarThuTuIn.ColumnName = "Thu_Tu_In";
				colvarThuTuIn.DataType = DbType.Int16;
				colvarThuTuIn.MaxLength = 0;
				colvarThuTuIn.AutoIncrement = false;
				colvarThuTuIn.IsNullable = true;
				colvarThuTuIn.IsPrimaryKey = false;
				colvarThuTuIn.IsForeignKey = false;
				colvarThuTuIn.IsReadOnly = false;
				colvarThuTuIn.DefaultSetting = @"";
				colvarThuTuIn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThuTuIn);
				
				TableSchema.TableColumn colvarGiaBhytCt = new TableSchema.TableColumn(schema);
				colvarGiaBhytCt.ColumnName = "Gia_BHYT_CT";
				colvarGiaBhytCt.DataType = DbType.Decimal;
				colvarGiaBhytCt.MaxLength = 0;
				colvarGiaBhytCt.AutoIncrement = false;
				colvarGiaBhytCt.IsNullable = true;
				colvarGiaBhytCt.IsPrimaryKey = false;
				colvarGiaBhytCt.IsForeignKey = false;
				colvarGiaBhytCt.IsReadOnly = false;
				colvarGiaBhytCt.DefaultSetting = @"";
				colvarGiaBhytCt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaBhytCt);
				
				TableSchema.TableColumn colvarGiaBnct = new TableSchema.TableColumn(schema);
				colvarGiaBnct.ColumnName = "Gia_BNCT";
				colvarGiaBnct.DataType = DbType.Decimal;
				colvarGiaBnct.MaxLength = 0;
				colvarGiaBnct.AutoIncrement = false;
				colvarGiaBnct.IsNullable = true;
				colvarGiaBnct.IsPrimaryKey = false;
				colvarGiaBnct.IsForeignKey = false;
				colvarGiaBnct.IsReadOnly = false;
				colvarGiaBnct.DefaultSetting = @"";
				colvarGiaBnct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaBnct);
				
				TableSchema.TableColumn colvarMaDTuong = new TableSchema.TableColumn(schema);
				colvarMaDTuong.ColumnName = "Ma_DTuong";
				colvarMaDTuong.DataType = DbType.AnsiString;
				colvarMaDTuong.MaxLength = 50;
				colvarMaDTuong.AutoIncrement = false;
				colvarMaDTuong.IsNullable = true;
				colvarMaDTuong.IsPrimaryKey = false;
				colvarMaDTuong.IsForeignKey = false;
				colvarMaDTuong.IsReadOnly = false;
				colvarMaDTuong.DefaultSetting = @"";
				colvarMaDTuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDTuong);
				
				TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
				colvarPaymentId.ColumnName = "Payment_ID";
				colvarPaymentId.DataType = DbType.Int32;
				colvarPaymentId.MaxLength = 0;
				colvarPaymentId.AutoIncrement = false;
				colvarPaymentId.IsNullable = true;
				colvarPaymentId.IsPrimaryKey = false;
				colvarPaymentId.IsForeignKey = false;
				colvarPaymentId.IsReadOnly = false;
				colvarPaymentId.DefaultSetting = @"";
				colvarPaymentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentId);
				
				TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
				colvarTrongGoi.ColumnName = "TRONG_GOI";
				colvarTrongGoi.DataType = DbType.Byte;
				colvarTrongGoi.MaxLength = 0;
				colvarTrongGoi.AutoIncrement = false;
				colvarTrongGoi.IsNullable = true;
				colvarTrongGoi.IsPrimaryKey = false;
				colvarTrongGoi.IsForeignKey = false;
				colvarTrongGoi.IsReadOnly = false;
				colvarTrongGoi.DefaultSetting = @"";
				colvarTrongGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrongGoi);
				
				TableSchema.TableColumn colvarCachDung = new TableSchema.TableColumn(schema);
				colvarCachDung.ColumnName = "CACH_DUNG";
				colvarCachDung.DataType = DbType.String;
				colvarCachDung.MaxLength = 20;
				colvarCachDung.AutoIncrement = false;
				colvarCachDung.IsNullable = true;
				colvarCachDung.IsPrimaryKey = false;
				colvarCachDung.IsForeignKey = false;
				colvarCachDung.IsReadOnly = false;
				colvarCachDung.DefaultSetting = @"";
				colvarCachDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCachDung);
				
				TableSchema.TableColumn colvarChiDanThem = new TableSchema.TableColumn(schema);
				colvarChiDanThem.ColumnName = "CHI_DAN_THEM";
				colvarChiDanThem.DataType = DbType.String;
				colvarChiDanThem.MaxLength = 255;
				colvarChiDanThem.AutoIncrement = false;
				colvarChiDanThem.IsNullable = true;
				colvarChiDanThem.IsPrimaryKey = false;
				colvarChiDanThem.IsForeignKey = false;
				colvarChiDanThem.IsReadOnly = false;
				colvarChiDanThem.DefaultSetting = @"";
				colvarChiDanThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChiDanThem);
				
				TableSchema.TableColumn colvarDviDung = new TableSchema.TableColumn(schema);
				colvarDviDung.ColumnName = "DVI_DUNG";
				colvarDviDung.DataType = DbType.String;
				colvarDviDung.MaxLength = 20;
				colvarDviDung.AutoIncrement = false;
				colvarDviDung.IsNullable = true;
				colvarDviDung.IsPrimaryKey = false;
				colvarDviDung.IsForeignKey = false;
				colvarDviDung.IsReadOnly = false;
				colvarDviDung.DefaultSetting = @"";
				colvarDviDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDviDung);
				
				TableSchema.TableColumn colvarSoLanDung = new TableSchema.TableColumn(schema);
				colvarSoLanDung.ColumnName = "SO_LAN_DUNG";
				colvarSoLanDung.DataType = DbType.String;
				colvarSoLanDung.MaxLength = 10;
				colvarSoLanDung.AutoIncrement = false;
				colvarSoLanDung.IsNullable = true;
				colvarSoLanDung.IsPrimaryKey = false;
				colvarSoLanDung.IsForeignKey = false;
				colvarSoLanDung.IsReadOnly = false;
				colvarSoLanDung.DefaultSetting = @"";
				colvarSoLanDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLanDung);
				
				TableSchema.TableColumn colvarSoLuongDung = new TableSchema.TableColumn(schema);
				colvarSoLuongDung.ColumnName = "SO_LUONG_DUNG";
				colvarSoLuongDung.DataType = DbType.String;
				colvarSoLuongDung.MaxLength = 10;
				colvarSoLuongDung.AutoIncrement = false;
				colvarSoLuongDung.IsNullable = true;
				colvarSoLuongDung.IsPrimaryKey = false;
				colvarSoLuongDung.IsForeignKey = false;
				colvarSoLuongDung.IsReadOnly = false;
				colvarSoLuongDung.DefaultSetting = @"";
				colvarSoLuongDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuongDung);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarTtChuyen = new TableSchema.TableColumn(schema);
				colvarTtChuyen.ColumnName = "TT_CHUYEN";
				colvarTtChuyen.DataType = DbType.Byte;
				colvarTtChuyen.MaxLength = 0;
				colvarTtChuyen.AutoIncrement = false;
				colvarTtChuyen.IsNullable = true;
				colvarTtChuyen.IsPrimaryKey = false;
				colvarTtChuyen.IsForeignKey = false;
				colvarTtChuyen.IsReadOnly = false;
				colvarTtChuyen.DefaultSetting = @"";
				colvarTtChuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTtChuyen);
				
				TableSchema.TableColumn colvarPtramBhyt = new TableSchema.TableColumn(schema);
				colvarPtramBhyt.ColumnName = "PTRAM_BHYT";
				colvarPtramBhyt.DataType = DbType.Decimal;
				colvarPtramBhyt.MaxLength = 0;
				colvarPtramBhyt.AutoIncrement = false;
				colvarPtramBhyt.IsNullable = true;
				colvarPtramBhyt.IsPrimaryKey = false;
				colvarPtramBhyt.IsForeignKey = false;
				colvarPtramBhyt.IsReadOnly = false;
				colvarPtramBhyt.DefaultSetting = @"";
				colvarPtramBhyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPtramBhyt);
				
				TableSchema.TableColumn colvarSluongLinh = new TableSchema.TableColumn(schema);
				colvarSluongLinh.ColumnName = "SLUONG_LINH";
				colvarSluongLinh.DataType = DbType.Int32;
				colvarSluongLinh.MaxLength = 0;
				colvarSluongLinh.AutoIncrement = false;
				colvarSluongLinh.IsNullable = true;
				colvarSluongLinh.IsPrimaryKey = false;
				colvarSluongLinh.IsForeignKey = false;
				colvarSluongLinh.IsReadOnly = false;
				colvarSluongLinh.DefaultSetting = @"";
				colvarSluongLinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSluongLinh);
				
				TableSchema.TableColumn colvarSluongSua = new TableSchema.TableColumn(schema);
				colvarSluongSua.ColumnName = "SLUONG_SUA";
				colvarSluongSua.DataType = DbType.Int32;
				colvarSluongSua.MaxLength = 0;
				colvarSluongSua.AutoIncrement = false;
				colvarSluongSua.IsNullable = true;
				colvarSluongSua.IsPrimaryKey = false;
				colvarSluongSua.IsForeignKey = false;
				colvarSluongSua.IsReadOnly = false;
				colvarSluongSua.DefaultSetting = @"";
				colvarSluongSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSluongSua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_Prescription_Detail_Temp",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("PresDetailId")]
		[Bindable(true)]
		public int PresDetailId 
		{
			get { return GetColumnValue<int>(Columns.PresDetailId); }
			set { SetColumnValue(Columns.PresDetailId, value); }
		}
		  
		[XmlAttribute("PresId")]
		[Bindable(true)]
		public int PresId 
		{
			get { return GetColumnValue<int>(Columns.PresId); }
			set { SetColumnValue(Columns.PresId, value); }
		}
		  
		[XmlAttribute("DrugId")]
		[Bindable(true)]
		public int DrugId 
		{
			get { return GetColumnValue<int>(Columns.DrugId); }
			set { SetColumnValue(Columns.DrugId, value); }
		}
		  
		[XmlAttribute("ExpireDate")]
		[Bindable(true)]
		public DateTime ExpireDate 
		{
			get { return GetColumnValue<DateTime>(Columns.ExpireDate); }
			set { SetColumnValue(Columns.ExpireDate, value); }
		}
		  
		[XmlAttribute("Quantity")]
		[Bindable(true)]
		public int Quantity 
		{
			get { return GetColumnValue<int>(Columns.Quantity); }
			set { SetColumnValue(Columns.Quantity, value); }
		}
		  
		[XmlAttribute("Price")]
		[Bindable(true)]
		public decimal Price 
		{
			get { return GetColumnValue<decimal>(Columns.Price); }
			set { SetColumnValue(Columns.Price, value); }
		}
		  
		[XmlAttribute("SurchargePrice")]
		[Bindable(true)]
		public decimal? SurchargePrice 
		{
			get { return GetColumnValue<decimal?>(Columns.SurchargePrice); }
			set { SetColumnValue(Columns.SurchargePrice, value); }
		}
		  
		[XmlAttribute("SDesc")]
		[Bindable(true)]
		public string SDesc 
		{
			get { return GetColumnValue<string>(Columns.SDesc); }
			set { SetColumnValue(Columns.SDesc, value); }
		}
		  
		[XmlAttribute("PaymentStatus")]
		[Bindable(true)]
		public int? PaymentStatus 
		{
			get { return GetColumnValue<int?>(Columns.PaymentStatus); }
			set { SetColumnValue(Columns.PaymentStatus, value); }
		}
		  
		[XmlAttribute("QuantityCancel")]
		[Bindable(true)]
		public int? QuantityCancel 
		{
			get { return GetColumnValue<int?>(Columns.QuantityCancel); }
			set { SetColumnValue(Columns.QuantityCancel, value); }
		}
		  
		[XmlAttribute("PaymentDate")]
		[Bindable(true)]
		public DateTime? PaymentDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.PaymentDate); }
			set { SetColumnValue(Columns.PaymentDate, value); }
		}
		  
		[XmlAttribute("IsPayment")]
		[Bindable(true)]
		public byte? IsPayment 
		{
			get { return GetColumnValue<byte?>(Columns.IsPayment); }
			set { SetColumnValue(Columns.IsPayment, value); }
		}
		  
		[XmlAttribute("StockId")]
		[Bindable(true)]
		public int? StockId 
		{
			get { return GetColumnValue<int?>(Columns.StockId); }
			set { SetColumnValue(Columns.StockId, value); }
		}
		  
		[XmlAttribute("HasComfirm")]
		[Bindable(true)]
		public byte? HasComfirm 
		{
			get { return GetColumnValue<byte?>(Columns.HasComfirm); }
			set { SetColumnValue(Columns.HasComfirm, value); }
		}
		  
		[XmlAttribute("BhytStatus")]
		[Bindable(true)]
		public byte? BhytStatus 
		{
			get { return GetColumnValue<byte?>(Columns.BhytStatus); }
			set { SetColumnValue(Columns.BhytStatus, value); }
		}
		  
		[XmlAttribute("ThuTuIn")]
		[Bindable(true)]
		public short? ThuTuIn 
		{
			get { return GetColumnValue<short?>(Columns.ThuTuIn); }
			set { SetColumnValue(Columns.ThuTuIn, value); }
		}
		  
		[XmlAttribute("GiaBhytCt")]
		[Bindable(true)]
		public decimal? GiaBhytCt 
		{
			get { return GetColumnValue<decimal?>(Columns.GiaBhytCt); }
			set { SetColumnValue(Columns.GiaBhytCt, value); }
		}
		  
		[XmlAttribute("GiaBnct")]
		[Bindable(true)]
		public decimal? GiaBnct 
		{
			get { return GetColumnValue<decimal?>(Columns.GiaBnct); }
			set { SetColumnValue(Columns.GiaBnct, value); }
		}
		  
		[XmlAttribute("MaDTuong")]
		[Bindable(true)]
		public string MaDTuong 
		{
			get { return GetColumnValue<string>(Columns.MaDTuong); }
			set { SetColumnValue(Columns.MaDTuong, value); }
		}
		  
		[XmlAttribute("PaymentId")]
		[Bindable(true)]
		public int? PaymentId 
		{
			get { return GetColumnValue<int?>(Columns.PaymentId); }
			set { SetColumnValue(Columns.PaymentId, value); }
		}
		  
		[XmlAttribute("TrongGoi")]
		[Bindable(true)]
		public byte? TrongGoi 
		{
			get { return GetColumnValue<byte?>(Columns.TrongGoi); }
			set { SetColumnValue(Columns.TrongGoi, value); }
		}
		  
		[XmlAttribute("CachDung")]
		[Bindable(true)]
		public string CachDung 
		{
			get { return GetColumnValue<string>(Columns.CachDung); }
			set { SetColumnValue(Columns.CachDung, value); }
		}
		  
		[XmlAttribute("ChiDanThem")]
		[Bindable(true)]
		public string ChiDanThem 
		{
			get { return GetColumnValue<string>(Columns.ChiDanThem); }
			set { SetColumnValue(Columns.ChiDanThem, value); }
		}
		  
		[XmlAttribute("DviDung")]
		[Bindable(true)]
		public string DviDung 
		{
			get { return GetColumnValue<string>(Columns.DviDung); }
			set { SetColumnValue(Columns.DviDung, value); }
		}
		  
		[XmlAttribute("SoLanDung")]
		[Bindable(true)]
		public string SoLanDung 
		{
			get { return GetColumnValue<string>(Columns.SoLanDung); }
			set { SetColumnValue(Columns.SoLanDung, value); }
		}
		  
		[XmlAttribute("SoLuongDung")]
		[Bindable(true)]
		public string SoLuongDung 
		{
			get { return GetColumnValue<string>(Columns.SoLuongDung); }
			set { SetColumnValue(Columns.SoLuongDung, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("TtChuyen")]
		[Bindable(true)]
		public byte? TtChuyen 
		{
			get { return GetColumnValue<byte?>(Columns.TtChuyen); }
			set { SetColumnValue(Columns.TtChuyen, value); }
		}
		  
		[XmlAttribute("PtramBhyt")]
		[Bindable(true)]
		public decimal? PtramBhyt 
		{
			get { return GetColumnValue<decimal?>(Columns.PtramBhyt); }
			set { SetColumnValue(Columns.PtramBhyt, value); }
		}
		  
		[XmlAttribute("SluongLinh")]
		[Bindable(true)]
		public int? SluongLinh 
		{
			get { return GetColumnValue<int?>(Columns.SluongLinh); }
			set { SetColumnValue(Columns.SluongLinh, value); }
		}
		  
		[XmlAttribute("SluongSua")]
		[Bindable(true)]
		public int? SluongSua 
		{
			get { return GetColumnValue<int?>(Columns.SluongSua); }
			set { SetColumnValue(Columns.SluongSua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varPresDetailId,int varPresId,int varDrugId,DateTime varExpireDate,int varQuantity,decimal varPrice,decimal? varSurchargePrice,string varSDesc,int? varPaymentStatus,int? varQuantityCancel,DateTime? varPaymentDate,byte? varIsPayment,int? varStockId,byte? varHasComfirm,byte? varBhytStatus,short? varThuTuIn,decimal? varGiaBhytCt,decimal? varGiaBnct,string varMaDTuong,int? varPaymentId,byte? varTrongGoi,string varCachDung,string varChiDanThem,string varDviDung,string varSoLanDung,string varSoLuongDung,DateTime? varNgayTao,string varNguoiTao,byte? varTtChuyen,decimal? varPtramBhyt,int? varSluongLinh,int? varSluongSua)
		{
			TPrescriptionDetailTemp item = new TPrescriptionDetailTemp();
			
			item.PresDetailId = varPresDetailId;
			
			item.PresId = varPresId;
			
			item.DrugId = varDrugId;
			
			item.ExpireDate = varExpireDate;
			
			item.Quantity = varQuantity;
			
			item.Price = varPrice;
			
			item.SurchargePrice = varSurchargePrice;
			
			item.SDesc = varSDesc;
			
			item.PaymentStatus = varPaymentStatus;
			
			item.QuantityCancel = varQuantityCancel;
			
			item.PaymentDate = varPaymentDate;
			
			item.IsPayment = varIsPayment;
			
			item.StockId = varStockId;
			
			item.HasComfirm = varHasComfirm;
			
			item.BhytStatus = varBhytStatus;
			
			item.ThuTuIn = varThuTuIn;
			
			item.GiaBhytCt = varGiaBhytCt;
			
			item.GiaBnct = varGiaBnct;
			
			item.MaDTuong = varMaDTuong;
			
			item.PaymentId = varPaymentId;
			
			item.TrongGoi = varTrongGoi;
			
			item.CachDung = varCachDung;
			
			item.ChiDanThem = varChiDanThem;
			
			item.DviDung = varDviDung;
			
			item.SoLanDung = varSoLanDung;
			
			item.SoLuongDung = varSoLuongDung;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.TtChuyen = varTtChuyen;
			
			item.PtramBhyt = varPtramBhyt;
			
			item.SluongLinh = varSluongLinh;
			
			item.SluongSua = varSluongSua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varPresDetailId,int varPresId,int varDrugId,DateTime varExpireDate,int varQuantity,decimal varPrice,decimal? varSurchargePrice,string varSDesc,int? varPaymentStatus,int? varQuantityCancel,DateTime? varPaymentDate,byte? varIsPayment,int? varStockId,byte? varHasComfirm,byte? varBhytStatus,short? varThuTuIn,decimal? varGiaBhytCt,decimal? varGiaBnct,string varMaDTuong,int? varPaymentId,byte? varTrongGoi,string varCachDung,string varChiDanThem,string varDviDung,string varSoLanDung,string varSoLuongDung,DateTime? varNgayTao,string varNguoiTao,byte? varTtChuyen,decimal? varPtramBhyt,int? varSluongLinh,int? varSluongSua)
		{
			TPrescriptionDetailTemp item = new TPrescriptionDetailTemp();
			
				item.PresDetailId = varPresDetailId;
			
				item.PresId = varPresId;
			
				item.DrugId = varDrugId;
			
				item.ExpireDate = varExpireDate;
			
				item.Quantity = varQuantity;
			
				item.Price = varPrice;
			
				item.SurchargePrice = varSurchargePrice;
			
				item.SDesc = varSDesc;
			
				item.PaymentStatus = varPaymentStatus;
			
				item.QuantityCancel = varQuantityCancel;
			
				item.PaymentDate = varPaymentDate;
			
				item.IsPayment = varIsPayment;
			
				item.StockId = varStockId;
			
				item.HasComfirm = varHasComfirm;
			
				item.BhytStatus = varBhytStatus;
			
				item.ThuTuIn = varThuTuIn;
			
				item.GiaBhytCt = varGiaBhytCt;
			
				item.GiaBnct = varGiaBnct;
			
				item.MaDTuong = varMaDTuong;
			
				item.PaymentId = varPaymentId;
			
				item.TrongGoi = varTrongGoi;
			
				item.CachDung = varCachDung;
			
				item.ChiDanThem = varChiDanThem;
			
				item.DviDung = varDviDung;
			
				item.SoLanDung = varSoLanDung;
			
				item.SoLuongDung = varSoLuongDung;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.TtChuyen = varTtChuyen;
			
				item.PtramBhyt = varPtramBhyt;
			
				item.SluongLinh = varSluongLinh;
			
				item.SluongSua = varSluongSua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn PresDetailIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PresIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn DrugIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn ExpireDateColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn QuantityColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn PriceColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn SurchargePriceColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn SDescColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentStatusColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn QuantityCancelColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentDateColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn IsPaymentColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn StockIdColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn HasComfirmColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn BhytStatusColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn ThuTuInColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaBhytCtColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaBnctColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDTuongColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentIdColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn TrongGoiColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn CachDungColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn ChiDanThemColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn DviDungColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLanDungColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongDungColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn TtChuyenColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn PtramBhytColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn SluongLinhColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn SluongSuaColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string PresDetailId = @"PresDetail_ID";
			 public static string PresId = @"Pres_ID";
			 public static string DrugId = @"Drug_ID";
			 public static string ExpireDate = @"Expire_Date";
			 public static string Quantity = @"Quantity";
			 public static string Price = @"Price";
			 public static string SurchargePrice = @"Surcharge_Price";
			 public static string SDesc = @"sDesc";
			 public static string PaymentStatus = @"Payment_Status";
			 public static string QuantityCancel = @"Quantity_Cancel";
			 public static string PaymentDate = @"Payment_Date";
			 public static string IsPayment = @"IsPayment";
			 public static string StockId = @"Stock_ID";
			 public static string HasComfirm = @"HasComfirm";
			 public static string BhytStatus = @"BHYT_Status";
			 public static string ThuTuIn = @"Thu_Tu_In";
			 public static string GiaBhytCt = @"Gia_BHYT_CT";
			 public static string GiaBnct = @"Gia_BNCT";
			 public static string MaDTuong = @"Ma_DTuong";
			 public static string PaymentId = @"Payment_ID";
			 public static string TrongGoi = @"TRONG_GOI";
			 public static string CachDung = @"CACH_DUNG";
			 public static string ChiDanThem = @"CHI_DAN_THEM";
			 public static string DviDung = @"DVI_DUNG";
			 public static string SoLanDung = @"SO_LAN_DUNG";
			 public static string SoLuongDung = @"SO_LUONG_DUNG";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string TtChuyen = @"TT_CHUYEN";
			 public static string PtramBhyt = @"PTRAM_BHYT";
			 public static string SluongLinh = @"SLUONG_LINH";
			 public static string SluongSua = @"SLUONG_SUA";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
