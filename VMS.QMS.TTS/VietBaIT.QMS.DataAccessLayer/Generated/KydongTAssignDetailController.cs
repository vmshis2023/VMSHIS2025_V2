using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for KYDONG_T_Assign_Detail
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class KydongTAssignDetailController
    {
        // Preload our schema..
        KydongTAssignDetail thisSchemaLoad = new KydongTAssignDetail();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public KydongTAssignDetailCollection FetchAll()
        {
            KydongTAssignDetailCollection coll = new KydongTAssignDetailCollection();
            Query qry = new Query(KydongTAssignDetail.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public KydongTAssignDetailCollection FetchByID(object AssignDetailId)
        {
            KydongTAssignDetailCollection coll = new KydongTAssignDetailCollection().Where("AssignDetail_ID", AssignDetailId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public KydongTAssignDetailCollection FetchByQuery(Query qry)
        {
            KydongTAssignDetailCollection coll = new KydongTAssignDetailCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object AssignDetailId)
        {
            return (KydongTAssignDetail.Delete(AssignDetailId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object AssignDetailId)
        {
            return (KydongTAssignDetail.Destroy(AssignDetailId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long? ExamId,long AssignId,short? ServiceId,int ServiceDetailId,string MeasureUnit,byte? MeasureType,string NormalLevel0,string NormalLevel1,short? DiagPerson,decimal? DiscountRate,byte? DiscountType,decimal OriginPrice,decimal? DiscountPrice,decimal? SurchargePrice,string UserId,byte? AssignTypeId,DateTime? InputDate,DateTime? ModifyDate,string ModifyBy,byte? PaymentStatus,DateTime? PaymentDate,int? IsCancel,int? IsPayment,int? ObjectTypeId,int? Quantity,string Summary,int? AssignDetailStatus,string SDesc,string SPathImage1,string SPathImage2,int? BhytStatus,string Proposal,string VungKs,string BsThucHien,DateTime? NgayThucHien,string AssignDetailCode,decimal? GiaBhct,decimal? GiaBnct,int? PTramBhyt,int? PaymentId)
	    {
		    KydongTAssignDetail item = new KydongTAssignDetail();
		    
            item.ExamId = ExamId;
            
            item.AssignId = AssignId;
            
            item.ServiceId = ServiceId;
            
            item.ServiceDetailId = ServiceDetailId;
            
            item.MeasureUnit = MeasureUnit;
            
            item.MeasureType = MeasureType;
            
            item.NormalLevel0 = NormalLevel0;
            
            item.NormalLevel1 = NormalLevel1;
            
            item.DiagPerson = DiagPerson;
            
            item.DiscountRate = DiscountRate;
            
            item.DiscountType = DiscountType;
            
            item.OriginPrice = OriginPrice;
            
            item.DiscountPrice = DiscountPrice;
            
            item.SurchargePrice = SurchargePrice;
            
            item.UserId = UserId;
            
            item.AssignTypeId = AssignTypeId;
            
            item.InputDate = InputDate;
            
            item.ModifyDate = ModifyDate;
            
            item.ModifyBy = ModifyBy;
            
            item.PaymentStatus = PaymentStatus;
            
            item.PaymentDate = PaymentDate;
            
            item.IsCancel = IsCancel;
            
            item.IsPayment = IsPayment;
            
            item.ObjectTypeId = ObjectTypeId;
            
            item.Quantity = Quantity;
            
            item.Summary = Summary;
            
            item.AssignDetailStatus = AssignDetailStatus;
            
            item.SDesc = SDesc;
            
            item.SPathImage1 = SPathImage1;
            
            item.SPathImage2 = SPathImage2;
            
            item.BhytStatus = BhytStatus;
            
            item.Proposal = Proposal;
            
            item.VungKs = VungKs;
            
            item.BsThucHien = BsThucHien;
            
            item.NgayThucHien = NgayThucHien;
            
            item.AssignDetailCode = AssignDetailCode;
            
            item.GiaBhct = GiaBhct;
            
            item.GiaBnct = GiaBnct;
            
            item.PTramBhyt = PTramBhyt;
            
            item.PaymentId = PaymentId;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long AssignDetailId,long? ExamId,long AssignId,short? ServiceId,int ServiceDetailId,string MeasureUnit,byte? MeasureType,string NormalLevel0,string NormalLevel1,short? DiagPerson,decimal? DiscountRate,byte? DiscountType,decimal OriginPrice,decimal? DiscountPrice,decimal? SurchargePrice,string UserId,byte? AssignTypeId,DateTime? InputDate,DateTime? ModifyDate,string ModifyBy,byte? PaymentStatus,DateTime? PaymentDate,int? IsCancel,int? IsPayment,int? ObjectTypeId,int? Quantity,string Summary,int? AssignDetailStatus,string SDesc,string SPathImage1,string SPathImage2,int? BhytStatus,string Proposal,string VungKs,string BsThucHien,DateTime? NgayThucHien,string AssignDetailCode,decimal? GiaBhct,decimal? GiaBnct,int? PTramBhyt,int? PaymentId)
	    {
		    KydongTAssignDetail item = new KydongTAssignDetail();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.AssignDetailId = AssignDetailId;
				
			item.ExamId = ExamId;
				
			item.AssignId = AssignId;
				
			item.ServiceId = ServiceId;
				
			item.ServiceDetailId = ServiceDetailId;
				
			item.MeasureUnit = MeasureUnit;
				
			item.MeasureType = MeasureType;
				
			item.NormalLevel0 = NormalLevel0;
				
			item.NormalLevel1 = NormalLevel1;
				
			item.DiagPerson = DiagPerson;
				
			item.DiscountRate = DiscountRate;
				
			item.DiscountType = DiscountType;
				
			item.OriginPrice = OriginPrice;
				
			item.DiscountPrice = DiscountPrice;
				
			item.SurchargePrice = SurchargePrice;
				
			item.UserId = UserId;
				
			item.AssignTypeId = AssignTypeId;
				
			item.InputDate = InputDate;
				
			item.ModifyDate = ModifyDate;
				
			item.ModifyBy = ModifyBy;
				
			item.PaymentStatus = PaymentStatus;
				
			item.PaymentDate = PaymentDate;
				
			item.IsCancel = IsCancel;
				
			item.IsPayment = IsPayment;
				
			item.ObjectTypeId = ObjectTypeId;
				
			item.Quantity = Quantity;
				
			item.Summary = Summary;
				
			item.AssignDetailStatus = AssignDetailStatus;
				
			item.SDesc = SDesc;
				
			item.SPathImage1 = SPathImage1;
				
			item.SPathImage2 = SPathImage2;
				
			item.BhytStatus = BhytStatus;
				
			item.Proposal = Proposal;
				
			item.VungKs = VungKs;
				
			item.BsThucHien = BsThucHien;
				
			item.NgayThucHien = NgayThucHien;
				
			item.AssignDetailCode = AssignDetailCode;
				
			item.GiaBhct = GiaBhct;
				
			item.GiaBnct = GiaBnct;
				
			item.PTramBhyt = PTramBhyt;
				
			item.PaymentId = PaymentId;
				
	        item.Save(UserName);
	    }
    }
}
