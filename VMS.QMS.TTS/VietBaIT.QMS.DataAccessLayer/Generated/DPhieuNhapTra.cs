using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the DPhieuNhapTra class.
	/// </summary>
    [Serializable]
	public partial class DPhieuNhapTraCollection : ActiveList<DPhieuNhapTra, DPhieuNhapTraCollection>
	{	   
		public DPhieuNhapTraCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DPhieuNhapTraCollection</returns>
		public DPhieuNhapTraCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DPhieuNhapTra o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the D_PHIEU_NHAP_TRA table.
	/// </summary>
	[Serializable]
	public partial class DPhieuNhapTra : ActiveRecord<DPhieuNhapTra>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DPhieuNhapTra()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DPhieuNhapTra(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DPhieuNhapTra(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DPhieuNhapTra(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("D_PHIEU_NHAP_TRA", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdPhieuNhapTra = new TableSchema.TableColumn(schema);
				colvarIdPhieuNhapTra.ColumnName = "ID_PHIEU_NHAP_TRA";
				colvarIdPhieuNhapTra.DataType = DbType.Int32;
				colvarIdPhieuNhapTra.MaxLength = 0;
				colvarIdPhieuNhapTra.AutoIncrement = true;
				colvarIdPhieuNhapTra.IsNullable = false;
				colvarIdPhieuNhapTra.IsPrimaryKey = true;
				colvarIdPhieuNhapTra.IsForeignKey = false;
				colvarIdPhieuNhapTra.IsReadOnly = false;
				colvarIdPhieuNhapTra.DefaultSetting = @"";
				colvarIdPhieuNhapTra.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuNhapTra);
				
				TableSchema.TableColumn colvarMaPhieuNhapTra = new TableSchema.TableColumn(schema);
				colvarMaPhieuNhapTra.ColumnName = "MA_PHIEU_NHAP_TRA";
				colvarMaPhieuNhapTra.DataType = DbType.String;
				colvarMaPhieuNhapTra.MaxLength = 20;
				colvarMaPhieuNhapTra.AutoIncrement = false;
				colvarMaPhieuNhapTra.IsNullable = false;
				colvarMaPhieuNhapTra.IsPrimaryKey = false;
				colvarMaPhieuNhapTra.IsForeignKey = false;
				colvarMaPhieuNhapTra.IsReadOnly = false;
				colvarMaPhieuNhapTra.DefaultSetting = @"";
				colvarMaPhieuNhapTra.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaPhieuNhapTra);
				
				TableSchema.TableColumn colvarNgayNhapTra = new TableSchema.TableColumn(schema);
				colvarNgayNhapTra.ColumnName = "NGAY_NHAP_TRA";
				colvarNgayNhapTra.DataType = DbType.DateTime;
				colvarNgayNhapTra.MaxLength = 0;
				colvarNgayNhapTra.AutoIncrement = false;
				colvarNgayNhapTra.IsNullable = true;
				colvarNgayNhapTra.IsPrimaryKey = false;
				colvarNgayNhapTra.IsForeignKey = false;
				colvarNgayNhapTra.IsReadOnly = false;
				colvarNgayNhapTra.DefaultSetting = @"";
				colvarNgayNhapTra.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayNhapTra);
				
				TableSchema.TableColumn colvarIdNhanVien = new TableSchema.TableColumn(schema);
				colvarIdNhanVien.ColumnName = "ID_NHAN_VIEN";
				colvarIdNhanVien.DataType = DbType.Int16;
				colvarIdNhanVien.MaxLength = 0;
				colvarIdNhanVien.AutoIncrement = false;
				colvarIdNhanVien.IsNullable = true;
				colvarIdNhanVien.IsPrimaryKey = false;
				colvarIdNhanVien.IsForeignKey = false;
				colvarIdNhanVien.IsReadOnly = false;
				colvarIdNhanVien.DefaultSetting = @"";
				colvarIdNhanVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhanVien);
				
				TableSchema.TableColumn colvarIdKhoTra = new TableSchema.TableColumn(schema);
				colvarIdKhoTra.ColumnName = "ID_KHO_TRA";
				colvarIdKhoTra.DataType = DbType.Int16;
				colvarIdKhoTra.MaxLength = 0;
				colvarIdKhoTra.AutoIncrement = false;
				colvarIdKhoTra.IsNullable = true;
				colvarIdKhoTra.IsPrimaryKey = false;
				colvarIdKhoTra.IsForeignKey = false;
				colvarIdKhoTra.IsReadOnly = false;
				colvarIdKhoTra.DefaultSetting = @"";
				colvarIdKhoTra.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoTra);
				
				TableSchema.TableColumn colvarIdKhoaTra = new TableSchema.TableColumn(schema);
				colvarIdKhoaTra.ColumnName = "ID_KHOA_TRA";
				colvarIdKhoaTra.DataType = DbType.Int16;
				colvarIdKhoaTra.MaxLength = 0;
				colvarIdKhoaTra.AutoIncrement = false;
				colvarIdKhoaTra.IsNullable = true;
				colvarIdKhoaTra.IsPrimaryKey = false;
				colvarIdKhoaTra.IsForeignKey = false;
				colvarIdKhoaTra.IsReadOnly = false;
				colvarIdKhoaTra.DefaultSetting = @"";
				colvarIdKhoaTra.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoaTra);
				
				TableSchema.TableColumn colvarIdKhoLinh = new TableSchema.TableColumn(schema);
				colvarIdKhoLinh.ColumnName = "ID_KHO_LINH";
				colvarIdKhoLinh.DataType = DbType.Int16;
				colvarIdKhoLinh.MaxLength = 0;
				colvarIdKhoLinh.AutoIncrement = false;
				colvarIdKhoLinh.IsNullable = true;
				colvarIdKhoLinh.IsPrimaryKey = false;
				colvarIdKhoLinh.IsForeignKey = false;
				colvarIdKhoLinh.IsReadOnly = false;
				colvarIdKhoLinh.DefaultSetting = @"";
				colvarIdKhoLinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoLinh);
				
				TableSchema.TableColumn colvarIdKhoaThien = new TableSchema.TableColumn(schema);
				colvarIdKhoaThien.ColumnName = "ID_KHOA_THIEN";
				colvarIdKhoaThien.DataType = DbType.Int16;
				colvarIdKhoaThien.MaxLength = 0;
				colvarIdKhoaThien.AutoIncrement = false;
				colvarIdKhoaThien.IsNullable = true;
				colvarIdKhoaThien.IsPrimaryKey = false;
				colvarIdKhoaThien.IsForeignKey = false;
				colvarIdKhoaThien.IsReadOnly = false;
				colvarIdKhoaThien.DefaultSetting = @"";
				colvarIdKhoaThien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoaThien);
				
				TableSchema.TableColumn colvarNhapTraTuTruc = new TableSchema.TableColumn(schema);
				colvarNhapTraTuTruc.ColumnName = "NHAP_TRA_TU_TRUC";
				colvarNhapTraTuTruc.DataType = DbType.Byte;
				colvarNhapTraTuTruc.MaxLength = 0;
				colvarNhapTraTuTruc.AutoIncrement = false;
				colvarNhapTraTuTruc.IsNullable = true;
				colvarNhapTraTuTruc.IsPrimaryKey = false;
				colvarNhapTraTuTruc.IsForeignKey = false;
				colvarNhapTraTuTruc.IsReadOnly = false;
				colvarNhapTraTuTruc.DefaultSetting = @"";
				colvarNhapTraTuTruc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhapTraTuTruc);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarIdDonThuoc = new TableSchema.TableColumn(schema);
				colvarIdDonThuoc.ColumnName = "ID_DON_THUOC";
				colvarIdDonThuoc.DataType = DbType.Int32;
				colvarIdDonThuoc.MaxLength = 0;
				colvarIdDonThuoc.AutoIncrement = false;
				colvarIdDonThuoc.IsNullable = true;
				colvarIdDonThuoc.IsPrimaryKey = false;
				colvarIdDonThuoc.IsForeignKey = false;
				colvarIdDonThuoc.IsReadOnly = false;
				colvarIdDonThuoc.DefaultSetting = @"";
				colvarIdDonThuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDonThuoc);
				
				TableSchema.TableColumn colvarIdNhaCcap = new TableSchema.TableColumn(schema);
				colvarIdNhaCcap.ColumnName = "ID_NHA_CCAP";
				colvarIdNhaCcap.DataType = DbType.Int16;
				colvarIdNhaCcap.MaxLength = 0;
				colvarIdNhaCcap.AutoIncrement = false;
				colvarIdNhaCcap.IsNullable = true;
				colvarIdNhaCcap.IsPrimaryKey = false;
				colvarIdNhaCcap.IsForeignKey = false;
				colvarIdNhaCcap.IsReadOnly = false;
				colvarIdNhaCcap.DefaultSetting = @"";
				colvarIdNhaCcap.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhaCcap);
				
				TableSchema.TableColumn colvarIdPhieuBn = new TableSchema.TableColumn(schema);
				colvarIdPhieuBn.ColumnName = "ID_PHIEU_BN";
				colvarIdPhieuBn.DataType = DbType.Int32;
				colvarIdPhieuBn.MaxLength = 0;
				colvarIdPhieuBn.AutoIncrement = false;
				colvarIdPhieuBn.IsNullable = true;
				colvarIdPhieuBn.IsPrimaryKey = false;
				colvarIdPhieuBn.IsForeignKey = false;
				colvarIdPhieuBn.IsReadOnly = false;
				colvarIdPhieuBn.DefaultSetting = @"";
				colvarIdPhieuBn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuBn);
				
				TableSchema.TableColumn colvarLoaiPhieu = new TableSchema.TableColumn(schema);
				colvarLoaiPhieu.ColumnName = "LOAI_PHIEU";
				colvarLoaiPhieu.DataType = DbType.Byte;
				colvarLoaiPhieu.MaxLength = 0;
				colvarLoaiPhieu.AutoIncrement = false;
				colvarLoaiPhieu.IsNullable = true;
				colvarLoaiPhieu.IsPrimaryKey = false;
				colvarLoaiPhieu.IsForeignKey = false;
				colvarLoaiPhieu.IsReadOnly = false;
				colvarLoaiPhieu.DefaultSetting = @"";
				colvarLoaiPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiPhieu);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "TRANG_THAI";
				colvarTrangThai.DataType = DbType.Byte;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = true;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				colvarTrangThai.DefaultSetting = @"";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarIpMaySua = new TableSchema.TableColumn(schema);
				colvarIpMaySua.ColumnName = "IP_MAY_SUA";
				colvarIpMaySua.DataType = DbType.String;
				colvarIpMaySua.MaxLength = 20;
				colvarIpMaySua.AutoIncrement = false;
				colvarIpMaySua.IsNullable = true;
				colvarIpMaySua.IsPrimaryKey = false;
				colvarIpMaySua.IsForeignKey = false;
				colvarIpMaySua.IsReadOnly = false;
				colvarIpMaySua.DefaultSetting = @"";
				colvarIpMaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaySua);
				
				TableSchema.TableColumn colvarIpMayTao = new TableSchema.TableColumn(schema);
				colvarIpMayTao.ColumnName = "IP_MAY_TAO";
				colvarIpMayTao.DataType = DbType.String;
				colvarIpMayTao.MaxLength = 20;
				colvarIpMayTao.AutoIncrement = false;
				colvarIpMayTao.IsNullable = true;
				colvarIpMayTao.IsPrimaryKey = false;
				colvarIpMayTao.IsForeignKey = false;
				colvarIpMayTao.IsReadOnly = false;
				colvarIpMayTao.DefaultSetting = @"";
				colvarIpMayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMayTao);
				
				TableSchema.TableColumn colvarMaLoaiPhieu = new TableSchema.TableColumn(schema);
				colvarMaLoaiPhieu.ColumnName = "MA_LOAI_PHIEU";
				colvarMaLoaiPhieu.DataType = DbType.String;
				colvarMaLoaiPhieu.MaxLength = 10;
				colvarMaLoaiPhieu.AutoIncrement = false;
				colvarMaLoaiPhieu.IsNullable = true;
				colvarMaLoaiPhieu.IsPrimaryKey = false;
				colvarMaLoaiPhieu.IsForeignKey = false;
				colvarMaLoaiPhieu.IsReadOnly = false;
				colvarMaLoaiPhieu.DefaultSetting = @"";
				colvarMaLoaiPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLoaiPhieu);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNgayXacNhan = new TableSchema.TableColumn(schema);
				colvarNgayXacNhan.ColumnName = "NGAY_XAC_NHAN";
				colvarNgayXacNhan.DataType = DbType.DateTime;
				colvarNgayXacNhan.MaxLength = 0;
				colvarNgayXacNhan.AutoIncrement = false;
				colvarNgayXacNhan.IsNullable = true;
				colvarNgayXacNhan.IsPrimaryKey = false;
				colvarNgayXacNhan.IsForeignKey = false;
				colvarNgayXacNhan.IsReadOnly = false;
				colvarNgayXacNhan.DefaultSetting = @"";
				colvarNgayXacNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayXacNhan);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 20;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNguoiXacNhan = new TableSchema.TableColumn(schema);
				colvarNguoiXacNhan.ColumnName = "NGUOI_XAC_NHAN";
				colvarNguoiXacNhan.DataType = DbType.String;
				colvarNguoiXacNhan.MaxLength = 20;
				colvarNguoiXacNhan.AutoIncrement = false;
				colvarNguoiXacNhan.IsNullable = true;
				colvarNguoiXacNhan.IsPrimaryKey = false;
				colvarNguoiXacNhan.IsForeignKey = false;
				colvarNguoiXacNhan.IsReadOnly = false;
				colvarNguoiXacNhan.DefaultSetting = @"";
				colvarNguoiXacNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiXacNhan);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("D_PHIEU_NHAP_TRA",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdPhieuNhapTra")]
		[Bindable(true)]
		public int IdPhieuNhapTra 
		{
			get { return GetColumnValue<int>(Columns.IdPhieuNhapTra); }
			set { SetColumnValue(Columns.IdPhieuNhapTra, value); }
		}
		  
		[XmlAttribute("MaPhieuNhapTra")]
		[Bindable(true)]
		public string MaPhieuNhapTra 
		{
			get { return GetColumnValue<string>(Columns.MaPhieuNhapTra); }
			set { SetColumnValue(Columns.MaPhieuNhapTra, value); }
		}
		  
		[XmlAttribute("NgayNhapTra")]
		[Bindable(true)]
		public DateTime? NgayNhapTra 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayNhapTra); }
			set { SetColumnValue(Columns.NgayNhapTra, value); }
		}
		  
		[XmlAttribute("IdNhanVien")]
		[Bindable(true)]
		public short? IdNhanVien 
		{
			get { return GetColumnValue<short?>(Columns.IdNhanVien); }
			set { SetColumnValue(Columns.IdNhanVien, value); }
		}
		  
		[XmlAttribute("IdKhoTra")]
		[Bindable(true)]
		public short? IdKhoTra 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoTra); }
			set { SetColumnValue(Columns.IdKhoTra, value); }
		}
		  
		[XmlAttribute("IdKhoaTra")]
		[Bindable(true)]
		public short? IdKhoaTra 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoaTra); }
			set { SetColumnValue(Columns.IdKhoaTra, value); }
		}
		  
		[XmlAttribute("IdKhoLinh")]
		[Bindable(true)]
		public short? IdKhoLinh 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoLinh); }
			set { SetColumnValue(Columns.IdKhoLinh, value); }
		}
		  
		[XmlAttribute("IdKhoaThien")]
		[Bindable(true)]
		public short? IdKhoaThien 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoaThien); }
			set { SetColumnValue(Columns.IdKhoaThien, value); }
		}
		  
		[XmlAttribute("NhapTraTuTruc")]
		[Bindable(true)]
		public byte? NhapTraTuTruc 
		{
			get { return GetColumnValue<byte?>(Columns.NhapTraTuTruc); }
			set { SetColumnValue(Columns.NhapTraTuTruc, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("IdDonThuoc")]
		[Bindable(true)]
		public int? IdDonThuoc 
		{
			get { return GetColumnValue<int?>(Columns.IdDonThuoc); }
			set { SetColumnValue(Columns.IdDonThuoc, value); }
		}
		  
		[XmlAttribute("IdNhaCcap")]
		[Bindable(true)]
		public short? IdNhaCcap 
		{
			get { return GetColumnValue<short?>(Columns.IdNhaCcap); }
			set { SetColumnValue(Columns.IdNhaCcap, value); }
		}
		  
		[XmlAttribute("IdPhieuBn")]
		[Bindable(true)]
		public int? IdPhieuBn 
		{
			get { return GetColumnValue<int?>(Columns.IdPhieuBn); }
			set { SetColumnValue(Columns.IdPhieuBn, value); }
		}
		  
		[XmlAttribute("LoaiPhieu")]
		[Bindable(true)]
		public byte? LoaiPhieu 
		{
			get { return GetColumnValue<byte?>(Columns.LoaiPhieu); }
			set { SetColumnValue(Columns.LoaiPhieu, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public byte? TrangThai 
		{
			get { return GetColumnValue<byte?>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("IpMaySua")]
		[Bindable(true)]
		public string IpMaySua 
		{
			get { return GetColumnValue<string>(Columns.IpMaySua); }
			set { SetColumnValue(Columns.IpMaySua, value); }
		}
		  
		[XmlAttribute("IpMayTao")]
		[Bindable(true)]
		public string IpMayTao 
		{
			get { return GetColumnValue<string>(Columns.IpMayTao); }
			set { SetColumnValue(Columns.IpMayTao, value); }
		}
		  
		[XmlAttribute("MaLoaiPhieu")]
		[Bindable(true)]
		public string MaLoaiPhieu 
		{
			get { return GetColumnValue<string>(Columns.MaLoaiPhieu); }
			set { SetColumnValue(Columns.MaLoaiPhieu, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NgayXacNhan")]
		[Bindable(true)]
		public DateTime? NgayXacNhan 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayXacNhan); }
			set { SetColumnValue(Columns.NgayXacNhan, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NguoiXacNhan")]
		[Bindable(true)]
		public string NguoiXacNhan 
		{
			get { return GetColumnValue<string>(Columns.NguoiXacNhan); }
			set { SetColumnValue(Columns.NguoiXacNhan, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaPhieuNhapTra,DateTime? varNgayNhapTra,short? varIdNhanVien,short? varIdKhoTra,short? varIdKhoaTra,short? varIdKhoLinh,short? varIdKhoaThien,byte? varNhapTraTuTruc,string varNguoiTao,DateTime? varNgayTao,int? varIdDonThuoc,short? varIdNhaCcap,int? varIdPhieuBn,byte? varLoaiPhieu,byte? varTrangThai,string varIpMaySua,string varIpMayTao,string varMaLoaiPhieu,DateTime? varNgaySua,DateTime? varNgayXacNhan,string varNguoiSua,string varNguoiXacNhan)
		{
			DPhieuNhapTra item = new DPhieuNhapTra();
			
			item.MaPhieuNhapTra = varMaPhieuNhapTra;
			
			item.NgayNhapTra = varNgayNhapTra;
			
			item.IdNhanVien = varIdNhanVien;
			
			item.IdKhoTra = varIdKhoTra;
			
			item.IdKhoaTra = varIdKhoaTra;
			
			item.IdKhoLinh = varIdKhoLinh;
			
			item.IdKhoaThien = varIdKhoaThien;
			
			item.NhapTraTuTruc = varNhapTraTuTruc;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.IdDonThuoc = varIdDonThuoc;
			
			item.IdNhaCcap = varIdNhaCcap;
			
			item.IdPhieuBn = varIdPhieuBn;
			
			item.LoaiPhieu = varLoaiPhieu;
			
			item.TrangThai = varTrangThai;
			
			item.IpMaySua = varIpMaySua;
			
			item.IpMayTao = varIpMayTao;
			
			item.MaLoaiPhieu = varMaLoaiPhieu;
			
			item.NgaySua = varNgaySua;
			
			item.NgayXacNhan = varNgayXacNhan;
			
			item.NguoiSua = varNguoiSua;
			
			item.NguoiXacNhan = varNguoiXacNhan;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdPhieuNhapTra,string varMaPhieuNhapTra,DateTime? varNgayNhapTra,short? varIdNhanVien,short? varIdKhoTra,short? varIdKhoaTra,short? varIdKhoLinh,short? varIdKhoaThien,byte? varNhapTraTuTruc,string varNguoiTao,DateTime? varNgayTao,int? varIdDonThuoc,short? varIdNhaCcap,int? varIdPhieuBn,byte? varLoaiPhieu,byte? varTrangThai,string varIpMaySua,string varIpMayTao,string varMaLoaiPhieu,DateTime? varNgaySua,DateTime? varNgayXacNhan,string varNguoiSua,string varNguoiXacNhan)
		{
			DPhieuNhapTra item = new DPhieuNhapTra();
			
				item.IdPhieuNhapTra = varIdPhieuNhapTra;
			
				item.MaPhieuNhapTra = varMaPhieuNhapTra;
			
				item.NgayNhapTra = varNgayNhapTra;
			
				item.IdNhanVien = varIdNhanVien;
			
				item.IdKhoTra = varIdKhoTra;
			
				item.IdKhoaTra = varIdKhoaTra;
			
				item.IdKhoLinh = varIdKhoLinh;
			
				item.IdKhoaThien = varIdKhoaThien;
			
				item.NhapTraTuTruc = varNhapTraTuTruc;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.IdDonThuoc = varIdDonThuoc;
			
				item.IdNhaCcap = varIdNhaCcap;
			
				item.IdPhieuBn = varIdPhieuBn;
			
				item.LoaiPhieu = varLoaiPhieu;
			
				item.TrangThai = varTrangThai;
			
				item.IpMaySua = varIpMaySua;
			
				item.IpMayTao = varIpMayTao;
			
				item.MaLoaiPhieu = varMaLoaiPhieu;
			
				item.NgaySua = varNgaySua;
			
				item.NgayXacNhan = varNgayXacNhan;
			
				item.NguoiSua = varNguoiSua;
			
				item.NguoiXacNhan = varNguoiXacNhan;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdPhieuNhapTraColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaPhieuNhapTraColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayNhapTraColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhanVienColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoTraColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaTraColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoLinhColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaThienColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NhapTraTuTrucColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDonThuocColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhaCcapColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuBnColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiPhieuColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaySuaColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMayTaoColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLoaiPhieuColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayXacNhanColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiXacNhanColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdPhieuNhapTra = @"ID_PHIEU_NHAP_TRA";
			 public static string MaPhieuNhapTra = @"MA_PHIEU_NHAP_TRA";
			 public static string NgayNhapTra = @"NGAY_NHAP_TRA";
			 public static string IdNhanVien = @"ID_NHAN_VIEN";
			 public static string IdKhoTra = @"ID_KHO_TRA";
			 public static string IdKhoaTra = @"ID_KHOA_TRA";
			 public static string IdKhoLinh = @"ID_KHO_LINH";
			 public static string IdKhoaThien = @"ID_KHOA_THIEN";
			 public static string NhapTraTuTruc = @"NHAP_TRA_TU_TRUC";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string IdDonThuoc = @"ID_DON_THUOC";
			 public static string IdNhaCcap = @"ID_NHA_CCAP";
			 public static string IdPhieuBn = @"ID_PHIEU_BN";
			 public static string LoaiPhieu = @"LOAI_PHIEU";
			 public static string TrangThai = @"TRANG_THAI";
			 public static string IpMaySua = @"IP_MAY_SUA";
			 public static string IpMayTao = @"IP_MAY_TAO";
			 public static string MaLoaiPhieu = @"MA_LOAI_PHIEU";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string NgayXacNhan = @"NGAY_XAC_NHAN";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string NguoiXacNhan = @"NGUOI_XAC_NHAN";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
