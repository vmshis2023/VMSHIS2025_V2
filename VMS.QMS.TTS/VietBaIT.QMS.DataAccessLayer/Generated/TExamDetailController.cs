using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_Exam_Detail
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TExamDetailController
    {
        // Preload our schema..
        TExamDetail thisSchemaLoad = new TExamDetail();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TExamDetailCollection FetchAll()
        {
            TExamDetailCollection coll = new TExamDetailCollection();
            Query qry = new Query(TExamDetail.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TExamDetailCollection FetchByID(object ExamId)
        {
            TExamDetailCollection coll = new TExamDetailCollection().Where("Exam_ID", ExamId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TExamDetailCollection FetchByQuery(Query qry)
        {
            TExamDetailCollection coll = new TExamDetailCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object ExamId)
        {
            return (TExamDetail.Delete(ExamId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object ExamId)
        {
            return (TExamDetail.Destroy(ExamId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long ExamId,string Circulation,string Respiration,string Digestion,string KidneyInfo,string NerveInfo,string MuscleInfo,string DentalInfo,string EyeInfo,string Endocrine,string Nutrition,string CreatedBy,DateTime? CreateDate,string ModifiedBy,DateTime? ModifiedDate)
	    {
		    TExamDetail item = new TExamDetail();
		    
            item.ExamId = ExamId;
            
            item.Circulation = Circulation;
            
            item.Respiration = Respiration;
            
            item.Digestion = Digestion;
            
            item.KidneyInfo = KidneyInfo;
            
            item.NerveInfo = NerveInfo;
            
            item.MuscleInfo = MuscleInfo;
            
            item.DentalInfo = DentalInfo;
            
            item.EyeInfo = EyeInfo;
            
            item.Endocrine = Endocrine;
            
            item.Nutrition = Nutrition;
            
            item.CreatedBy = CreatedBy;
            
            item.CreateDate = CreateDate;
            
            item.ModifiedBy = ModifiedBy;
            
            item.ModifiedDate = ModifiedDate;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long ExamId,string Circulation,string Respiration,string Digestion,string KidneyInfo,string NerveInfo,string MuscleInfo,string DentalInfo,string EyeInfo,string Endocrine,string Nutrition,string CreatedBy,DateTime? CreateDate,string ModifiedBy,DateTime? ModifiedDate)
	    {
		    TExamDetail item = new TExamDetail();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.ExamId = ExamId;
				
			item.Circulation = Circulation;
				
			item.Respiration = Respiration;
				
			item.Digestion = Digestion;
				
			item.KidneyInfo = KidneyInfo;
				
			item.NerveInfo = NerveInfo;
				
			item.MuscleInfo = MuscleInfo;
				
			item.DentalInfo = DentalInfo;
				
			item.EyeInfo = EyeInfo;
				
			item.Endocrine = Endocrine;
				
			item.Nutrition = Nutrition;
				
			item.CreatedBy = CreatedBy;
				
			item.CreateDate = CreateDate;
				
			item.ModifiedBy = ModifiedBy;
				
			item.ModifiedDate = ModifiedDate;
				
	        item.Save(UserName);
	    }
    }
}
