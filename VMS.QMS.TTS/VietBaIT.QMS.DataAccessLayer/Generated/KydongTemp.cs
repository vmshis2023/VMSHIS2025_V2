using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the KydongTemp class.
	/// </summary>
    [Serializable]
	public partial class KydongTempCollection : ActiveList<KydongTemp, KydongTempCollection>
	{	   
		public KydongTempCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KydongTempCollection</returns>
		public KydongTempCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KydongTemp o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the KYDONG_Temp table.
	/// </summary>
	[Serializable]
	public partial class KydongTemp : ActiveRecord<KydongTemp>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KydongTemp()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KydongTemp(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KydongTemp(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KydongTemp(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("KYDONG_Temp", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "ID";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.AnsiString;
				colvarPatientCode.MaxLength = 50;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = true;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPatientName = new TableSchema.TableColumn(schema);
				colvarPatientName.ColumnName = "Patient_Name";
				colvarPatientName.DataType = DbType.String;
				colvarPatientName.MaxLength = 50;
				colvarPatientName.AutoIncrement = false;
				colvarPatientName.IsNullable = false;
				colvarPatientName.IsPrimaryKey = false;
				colvarPatientName.IsForeignKey = false;
				colvarPatientName.IsReadOnly = false;
				colvarPatientName.DefaultSetting = @"";
				colvarPatientName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientName);
				
				TableSchema.TableColumn colvarTuoi = new TableSchema.TableColumn(schema);
				colvarTuoi.ColumnName = "Tuoi";
				colvarTuoi.DataType = DbType.Int32;
				colvarTuoi.MaxLength = 0;
				colvarTuoi.AutoIncrement = false;
				colvarTuoi.IsNullable = true;
				colvarTuoi.IsPrimaryKey = false;
				colvarTuoi.IsForeignKey = false;
				colvarTuoi.IsReadOnly = false;
				colvarTuoi.DefaultSetting = @"";
				colvarTuoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuoi);
				
				TableSchema.TableColumn colvarNgayDangKy = new TableSchema.TableColumn(schema);
				colvarNgayDangKy.ColumnName = "Ngay_DangKy";
				colvarNgayDangKy.DataType = DbType.DateTime;
				colvarNgayDangKy.MaxLength = 0;
				colvarNgayDangKy.AutoIncrement = false;
				colvarNgayDangKy.IsNullable = true;
				colvarNgayDangKy.IsPrimaryKey = false;
				colvarNgayDangKy.IsForeignKey = false;
				colvarNgayDangKy.IsReadOnly = false;
				colvarNgayDangKy.DefaultSetting = @"";
				colvarNgayDangKy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayDangKy);
				
				TableSchema.TableColumn colvarKhamBenh = new TableSchema.TableColumn(schema);
				colvarKhamBenh.ColumnName = "Kham_Benh";
				colvarKhamBenh.DataType = DbType.Decimal;
				colvarKhamBenh.MaxLength = 0;
				colvarKhamBenh.AutoIncrement = false;
				colvarKhamBenh.IsNullable = true;
				colvarKhamBenh.IsPrimaryKey = false;
				colvarKhamBenh.IsForeignKey = false;
				colvarKhamBenh.IsReadOnly = false;
				colvarKhamBenh.DefaultSetting = @"";
				colvarKhamBenh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamBenh);
				
				TableSchema.TableColumn colvarXQuang = new TableSchema.TableColumn(schema);
				colvarXQuang.ColumnName = "XQuang";
				colvarXQuang.DataType = DbType.Decimal;
				colvarXQuang.MaxLength = 0;
				colvarXQuang.AutoIncrement = false;
				colvarXQuang.IsNullable = true;
				colvarXQuang.IsPrimaryKey = false;
				colvarXQuang.IsForeignKey = false;
				colvarXQuang.IsReadOnly = false;
				colvarXQuang.DefaultSetting = @"";
				colvarXQuang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXQuang);
				
				TableSchema.TableColumn colvarSieuAm = new TableSchema.TableColumn(schema);
				colvarSieuAm.ColumnName = "Sieu_Am";
				colvarSieuAm.DataType = DbType.Decimal;
				colvarSieuAm.MaxLength = 0;
				colvarSieuAm.AutoIncrement = false;
				colvarSieuAm.IsNullable = true;
				colvarSieuAm.IsPrimaryKey = false;
				colvarSieuAm.IsForeignKey = false;
				colvarSieuAm.IsReadOnly = false;
				colvarSieuAm.DefaultSetting = @"";
				colvarSieuAm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSieuAm);
				
				TableSchema.TableColumn colvarNoiSoi = new TableSchema.TableColumn(schema);
				colvarNoiSoi.ColumnName = "Noi_Soi";
				colvarNoiSoi.DataType = DbType.Decimal;
				colvarNoiSoi.MaxLength = 0;
				colvarNoiSoi.AutoIncrement = false;
				colvarNoiSoi.IsNullable = true;
				colvarNoiSoi.IsPrimaryKey = false;
				colvarNoiSoi.IsForeignKey = false;
				colvarNoiSoi.IsReadOnly = false;
				colvarNoiSoi.DefaultSetting = @"";
				colvarNoiSoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoiSoi);
				
				TableSchema.TableColumn colvarXetNghiem = new TableSchema.TableColumn(schema);
				colvarXetNghiem.ColumnName = "Xet_Nghiem";
				colvarXetNghiem.DataType = DbType.Decimal;
				colvarXetNghiem.MaxLength = 0;
				colvarXetNghiem.AutoIncrement = false;
				colvarXetNghiem.IsNullable = true;
				colvarXetNghiem.IsPrimaryKey = false;
				colvarXetNghiem.IsForeignKey = false;
				colvarXetNghiem.IsReadOnly = false;
				colvarXetNghiem.DefaultSetting = @"";
				colvarXetNghiem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXetNghiem);
				
				TableSchema.TableColumn colvarRang = new TableSchema.TableColumn(schema);
				colvarRang.ColumnName = "Rang";
				colvarRang.DataType = DbType.Decimal;
				colvarRang.MaxLength = 0;
				colvarRang.AutoIncrement = false;
				colvarRang.IsNullable = true;
				colvarRang.IsPrimaryKey = false;
				colvarRang.IsForeignKey = false;
				colvarRang.IsReadOnly = false;
				colvarRang.DefaultSetting = @"";
				colvarRang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRang);
				
				TableSchema.TableColumn colvarCt = new TableSchema.TableColumn(schema);
				colvarCt.ColumnName = "CT";
				colvarCt.DataType = DbType.Decimal;
				colvarCt.MaxLength = 0;
				colvarCt.AutoIncrement = false;
				colvarCt.IsNullable = true;
				colvarCt.IsPrimaryKey = false;
				colvarCt.IsForeignKey = false;
				colvarCt.IsReadOnly = false;
				colvarCt.DefaultSetting = @"";
				colvarCt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCt);
				
				TableSchema.TableColumn colvarThuThuat = new TableSchema.TableColumn(schema);
				colvarThuThuat.ColumnName = "Thu_Thuat";
				colvarThuThuat.DataType = DbType.Decimal;
				colvarThuThuat.MaxLength = 0;
				colvarThuThuat.AutoIncrement = false;
				colvarThuThuat.IsNullable = true;
				colvarThuThuat.IsPrimaryKey = false;
				colvarThuThuat.IsForeignKey = false;
				colvarThuThuat.IsReadOnly = false;
				colvarThuThuat.DefaultSetting = @"";
				colvarThuThuat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThuThuat);
				
				TableSchema.TableColumn colvarKhac = new TableSchema.TableColumn(schema);
				colvarKhac.ColumnName = "Khac";
				colvarKhac.DataType = DbType.Decimal;
				colvarKhac.MaxLength = 0;
				colvarKhac.AutoIncrement = false;
				colvarKhac.IsNullable = true;
				colvarKhac.IsPrimaryKey = false;
				colvarKhac.IsForeignKey = false;
				colvarKhac.IsReadOnly = false;
				colvarKhac.DefaultSetting = @"";
				colvarKhac.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhac);
				
				TableSchema.TableColumn colvarPhuThu = new TableSchema.TableColumn(schema);
				colvarPhuThu.ColumnName = "PhuThu";
				colvarPhuThu.DataType = DbType.Decimal;
				colvarPhuThu.MaxLength = 0;
				colvarPhuThu.AutoIncrement = false;
				colvarPhuThu.IsNullable = true;
				colvarPhuThu.IsPrimaryKey = false;
				colvarPhuThu.IsForeignKey = false;
				colvarPhuThu.IsReadOnly = false;
				colvarPhuThu.DefaultSetting = @"";
				colvarPhuThu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhuThu);
				
				TableSchema.TableColumn colvarTongTien = new TableSchema.TableColumn(schema);
				colvarTongTien.ColumnName = "Tong_Tien";
				colvarTongTien.DataType = DbType.Decimal;
				colvarTongTien.MaxLength = 0;
				colvarTongTien.AutoIncrement = false;
				colvarTongTien.IsNullable = true;
				colvarTongTien.IsPrimaryKey = false;
				colvarTongTien.IsForeignKey = false;
				colvarTongTien.IsReadOnly = false;
				colvarTongTien.DefaultSetting = @"";
				colvarTongTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongTien);
				
				TableSchema.TableColumn colvarCreatedDate = new TableSchema.TableColumn(schema);
				colvarCreatedDate.ColumnName = "Created_Date";
				colvarCreatedDate.DataType = DbType.DateTime;
				colvarCreatedDate.MaxLength = 0;
				colvarCreatedDate.AutoIncrement = false;
				colvarCreatedDate.IsNullable = true;
				colvarCreatedDate.IsPrimaryKey = false;
				colvarCreatedDate.IsForeignKey = false;
				colvarCreatedDate.IsReadOnly = false;
				
						colvarCreatedDate.DefaultSetting = @"(getdate())";
				colvarCreatedDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreatedDate);
				
				TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);
				colvarCreatedBy.ColumnName = "Created_By";
				colvarCreatedBy.DataType = DbType.String;
				colvarCreatedBy.MaxLength = 50;
				colvarCreatedBy.AutoIncrement = false;
				colvarCreatedBy.IsNullable = true;
				colvarCreatedBy.IsPrimaryKey = false;
				colvarCreatedBy.IsForeignKey = false;
				colvarCreatedBy.IsReadOnly = false;
				colvarCreatedBy.DefaultSetting = @"";
				colvarCreatedBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreatedBy);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("KYDONG_Temp",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PatientName")]
		[Bindable(true)]
		public string PatientName 
		{
			get { return GetColumnValue<string>(Columns.PatientName); }
			set { SetColumnValue(Columns.PatientName, value); }
		}
		  
		[XmlAttribute("Tuoi")]
		[Bindable(true)]
		public int? Tuoi 
		{
			get { return GetColumnValue<int?>(Columns.Tuoi); }
			set { SetColumnValue(Columns.Tuoi, value); }
		}
		  
		[XmlAttribute("NgayDangKy")]
		[Bindable(true)]
		public DateTime? NgayDangKy 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayDangKy); }
			set { SetColumnValue(Columns.NgayDangKy, value); }
		}
		  
		[XmlAttribute("KhamBenh")]
		[Bindable(true)]
		public decimal? KhamBenh 
		{
			get { return GetColumnValue<decimal?>(Columns.KhamBenh); }
			set { SetColumnValue(Columns.KhamBenh, value); }
		}
		  
		[XmlAttribute("XQuang")]
		[Bindable(true)]
		public decimal? XQuang 
		{
			get { return GetColumnValue<decimal?>(Columns.XQuang); }
			set { SetColumnValue(Columns.XQuang, value); }
		}
		  
		[XmlAttribute("SieuAm")]
		[Bindable(true)]
		public decimal? SieuAm 
		{
			get { return GetColumnValue<decimal?>(Columns.SieuAm); }
			set { SetColumnValue(Columns.SieuAm, value); }
		}
		  
		[XmlAttribute("NoiSoi")]
		[Bindable(true)]
		public decimal? NoiSoi 
		{
			get { return GetColumnValue<decimal?>(Columns.NoiSoi); }
			set { SetColumnValue(Columns.NoiSoi, value); }
		}
		  
		[XmlAttribute("XetNghiem")]
		[Bindable(true)]
		public decimal? XetNghiem 
		{
			get { return GetColumnValue<decimal?>(Columns.XetNghiem); }
			set { SetColumnValue(Columns.XetNghiem, value); }
		}
		  
		[XmlAttribute("Rang")]
		[Bindable(true)]
		public decimal? Rang 
		{
			get { return GetColumnValue<decimal?>(Columns.Rang); }
			set { SetColumnValue(Columns.Rang, value); }
		}
		  
		[XmlAttribute("Ct")]
		[Bindable(true)]
		public decimal? Ct 
		{
			get { return GetColumnValue<decimal?>(Columns.Ct); }
			set { SetColumnValue(Columns.Ct, value); }
		}
		  
		[XmlAttribute("ThuThuat")]
		[Bindable(true)]
		public decimal? ThuThuat 
		{
			get { return GetColumnValue<decimal?>(Columns.ThuThuat); }
			set { SetColumnValue(Columns.ThuThuat, value); }
		}
		  
		[XmlAttribute("Khac")]
		[Bindable(true)]
		public decimal? Khac 
		{
			get { return GetColumnValue<decimal?>(Columns.Khac); }
			set { SetColumnValue(Columns.Khac, value); }
		}
		  
		[XmlAttribute("PhuThu")]
		[Bindable(true)]
		public decimal? PhuThu 
		{
			get { return GetColumnValue<decimal?>(Columns.PhuThu); }
			set { SetColumnValue(Columns.PhuThu, value); }
		}
		  
		[XmlAttribute("TongTien")]
		[Bindable(true)]
		public decimal? TongTien 
		{
			get { return GetColumnValue<decimal?>(Columns.TongTien); }
			set { SetColumnValue(Columns.TongTien, value); }
		}
		  
		[XmlAttribute("CreatedDate")]
		[Bindable(true)]
		public DateTime? CreatedDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.CreatedDate); }
			set { SetColumnValue(Columns.CreatedDate, value); }
		}
		  
		[XmlAttribute("CreatedBy")]
		[Bindable(true)]
		public string CreatedBy 
		{
			get { return GetColumnValue<string>(Columns.CreatedBy); }
			set { SetColumnValue(Columns.CreatedBy, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varPatientCode,string varPatientName,int? varTuoi,DateTime? varNgayDangKy,decimal? varKhamBenh,decimal? varXQuang,decimal? varSieuAm,decimal? varNoiSoi,decimal? varXetNghiem,decimal? varRang,decimal? varCt,decimal? varThuThuat,decimal? varKhac,decimal? varPhuThu,decimal? varTongTien,DateTime? varCreatedDate,string varCreatedBy)
		{
			KydongTemp item = new KydongTemp();
			
			item.PatientCode = varPatientCode;
			
			item.PatientName = varPatientName;
			
			item.Tuoi = varTuoi;
			
			item.NgayDangKy = varNgayDangKy;
			
			item.KhamBenh = varKhamBenh;
			
			item.XQuang = varXQuang;
			
			item.SieuAm = varSieuAm;
			
			item.NoiSoi = varNoiSoi;
			
			item.XetNghiem = varXetNghiem;
			
			item.Rang = varRang;
			
			item.Ct = varCt;
			
			item.ThuThuat = varThuThuat;
			
			item.Khac = varKhac;
			
			item.PhuThu = varPhuThu;
			
			item.TongTien = varTongTien;
			
			item.CreatedDate = varCreatedDate;
			
			item.CreatedBy = varCreatedBy;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,string varPatientCode,string varPatientName,int? varTuoi,DateTime? varNgayDangKy,decimal? varKhamBenh,decimal? varXQuang,decimal? varSieuAm,decimal? varNoiSoi,decimal? varXetNghiem,decimal? varRang,decimal? varCt,decimal? varThuThuat,decimal? varKhac,decimal? varPhuThu,decimal? varTongTien,DateTime? varCreatedDate,string varCreatedBy)
		{
			KydongTemp item = new KydongTemp();
			
				item.Id = varId;
			
				item.PatientCode = varPatientCode;
			
				item.PatientName = varPatientName;
			
				item.Tuoi = varTuoi;
			
				item.NgayDangKy = varNgayDangKy;
			
				item.KhamBenh = varKhamBenh;
			
				item.XQuang = varXQuang;
			
				item.SieuAm = varSieuAm;
			
				item.NoiSoi = varNoiSoi;
			
				item.XetNghiem = varXetNghiem;
			
				item.Rang = varRang;
			
				item.Ct = varCt;
			
				item.ThuThuat = varThuThuat;
			
				item.Khac = varKhac;
			
				item.PhuThu = varPhuThu;
			
				item.TongTien = varTongTien;
			
				item.CreatedDate = varCreatedDate;
			
				item.CreatedBy = varCreatedBy;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientNameColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TuoiColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayDangKyColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamBenhColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn XQuangColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn SieuAmColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NoiSoiColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn XetNghiemColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn RangColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn CtColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn ThuThuatColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn KhacColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn PhuThuColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn TongTienColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedDateColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedByColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"ID";
			 public static string PatientCode = @"Patient_Code";
			 public static string PatientName = @"Patient_Name";
			 public static string Tuoi = @"Tuoi";
			 public static string NgayDangKy = @"Ngay_DangKy";
			 public static string KhamBenh = @"Kham_Benh";
			 public static string XQuang = @"XQuang";
			 public static string SieuAm = @"Sieu_Am";
			 public static string NoiSoi = @"Noi_Soi";
			 public static string XetNghiem = @"Xet_Nghiem";
			 public static string Rang = @"Rang";
			 public static string Ct = @"CT";
			 public static string ThuThuat = @"Thu_Thuat";
			 public static string Khac = @"Khac";
			 public static string PhuThu = @"PhuThu";
			 public static string TongTien = @"Tong_Tien";
			 public static string CreatedDate = @"Created_Date";
			 public static string CreatedBy = @"Created_By";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
