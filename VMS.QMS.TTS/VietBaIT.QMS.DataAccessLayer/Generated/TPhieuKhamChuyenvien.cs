using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TPhieuKhamChuyenvien class.
	/// </summary>
    [Serializable]
	public partial class TPhieuKhamChuyenvienCollection : ActiveList<TPhieuKhamChuyenvien, TPhieuKhamChuyenvienCollection>
	{	   
		public TPhieuKhamChuyenvienCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TPhieuKhamChuyenvienCollection</returns>
		public TPhieuKhamChuyenvienCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TPhieuKhamChuyenvien o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_PHIEU_KHAM_CHUYENVIEN table.
	/// </summary>
	[Serializable]
	public partial class TPhieuKhamChuyenvien : ActiveRecord<TPhieuKhamChuyenvien>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TPhieuKhamChuyenvien()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TPhieuKhamChuyenvien(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TPhieuKhamChuyenvien(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TPhieuKhamChuyenvien(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_PHIEU_KHAM_CHUYENVIEN", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdPhieuChuyenvien = new TableSchema.TableColumn(schema);
				colvarIdPhieuChuyenvien.ColumnName = "ID_PHIEU_CHUYENVIEN";
				colvarIdPhieuChuyenvien.DataType = DbType.Int32;
				colvarIdPhieuChuyenvien.MaxLength = 0;
				colvarIdPhieuChuyenvien.AutoIncrement = true;
				colvarIdPhieuChuyenvien.IsNullable = false;
				colvarIdPhieuChuyenvien.IsPrimaryKey = true;
				colvarIdPhieuChuyenvien.IsForeignKey = false;
				colvarIdPhieuChuyenvien.IsReadOnly = false;
				colvarIdPhieuChuyenvien.DefaultSetting = @"";
				colvarIdPhieuChuyenvien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuChuyenvien);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.String;
				colvarPatientCode.MaxLength = 50;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = false;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int32;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = false;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarNgayChuyenVien = new TableSchema.TableColumn(schema);
				colvarNgayChuyenVien.ColumnName = "Ngay_Chuyen_Vien";
				colvarNgayChuyenVien.DataType = DbType.DateTime;
				colvarNgayChuyenVien.MaxLength = 0;
				colvarNgayChuyenVien.AutoIncrement = false;
				colvarNgayChuyenVien.IsNullable = false;
				colvarNgayChuyenVien.IsPrimaryKey = false;
				colvarNgayChuyenVien.IsForeignKey = false;
				colvarNgayChuyenVien.IsReadOnly = false;
				
						colvarNgayChuyenVien.DefaultSetting = @"(getdate())";
				colvarNgayChuyenVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayChuyenVien);
				
				TableSchema.TableColumn colvarIdBenhVienCDen = new TableSchema.TableColumn(schema);
				colvarIdBenhVienCDen.ColumnName = "ID_BenhVien_CDen";
				colvarIdBenhVienCDen.DataType = DbType.Int16;
				colvarIdBenhVienCDen.MaxLength = 0;
				colvarIdBenhVienCDen.AutoIncrement = false;
				colvarIdBenhVienCDen.IsNullable = true;
				colvarIdBenhVienCDen.IsPrimaryKey = false;
				colvarIdBenhVienCDen.IsForeignKey = false;
				colvarIdBenhVienCDen.IsReadOnly = false;
				colvarIdBenhVienCDen.DefaultSetting = @"";
				colvarIdBenhVienCDen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhVienCDen);
				
				TableSchema.TableColumn colvarDauHieuCls = new TableSchema.TableColumn(schema);
				colvarDauHieuCls.ColumnName = "DAU_HIEU_CLS";
				colvarDauHieuCls.DataType = DbType.String;
				colvarDauHieuCls.MaxLength = 500;
				colvarDauHieuCls.AutoIncrement = false;
				colvarDauHieuCls.IsNullable = true;
				colvarDauHieuCls.IsPrimaryKey = false;
				colvarDauHieuCls.IsForeignKey = false;
				colvarDauHieuCls.IsReadOnly = false;
				colvarDauHieuCls.DefaultSetting = @"";
				colvarDauHieuCls.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDauHieuCls);
				
				TableSchema.TableColumn colvarCacXetNghiem = new TableSchema.TableColumn(schema);
				colvarCacXetNghiem.ColumnName = "CAC_XET_NGHIEM";
				colvarCacXetNghiem.DataType = DbType.String;
				colvarCacXetNghiem.MaxLength = 1000;
				colvarCacXetNghiem.AutoIncrement = false;
				colvarCacXetNghiem.IsNullable = true;
				colvarCacXetNghiem.IsPrimaryKey = false;
				colvarCacXetNghiem.IsForeignKey = false;
				colvarCacXetNghiem.IsReadOnly = false;
				colvarCacXetNghiem.DefaultSetting = @"";
				colvarCacXetNghiem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCacXetNghiem);
				
				TableSchema.TableColumn colvarChuanDoan = new TableSchema.TableColumn(schema);
				colvarChuanDoan.ColumnName = "CHUAN_DOAN";
				colvarChuanDoan.DataType = DbType.String;
				colvarChuanDoan.MaxLength = 500;
				colvarChuanDoan.AutoIncrement = false;
				colvarChuanDoan.IsNullable = true;
				colvarChuanDoan.IsPrimaryKey = false;
				colvarChuanDoan.IsForeignKey = false;
				colvarChuanDoan.IsReadOnly = false;
				colvarChuanDoan.DefaultSetting = @"";
				colvarChuanDoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChuanDoan);
				
				TableSchema.TableColumn colvarThuocDaDung = new TableSchema.TableColumn(schema);
				colvarThuocDaDung.ColumnName = "THUOC_DA_DUNG";
				colvarThuocDaDung.DataType = DbType.String;
				colvarThuocDaDung.MaxLength = 1000;
				colvarThuocDaDung.AutoIncrement = false;
				colvarThuocDaDung.IsNullable = true;
				colvarThuocDaDung.IsPrimaryKey = false;
				colvarThuocDaDung.IsForeignKey = false;
				colvarThuocDaDung.IsReadOnly = false;
				colvarThuocDaDung.DefaultSetting = @"";
				colvarThuocDaDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThuocDaDung);
				
				TableSchema.TableColumn colvarTtrangBnLucCvien = new TableSchema.TableColumn(schema);
				colvarTtrangBnLucCvien.ColumnName = "TTRANG_BN_LUC_CVIEN";
				colvarTtrangBnLucCvien.DataType = DbType.String;
				colvarTtrangBnLucCvien.MaxLength = 500;
				colvarTtrangBnLucCvien.AutoIncrement = false;
				colvarTtrangBnLucCvien.IsNullable = true;
				colvarTtrangBnLucCvien.IsPrimaryKey = false;
				colvarTtrangBnLucCvien.IsForeignKey = false;
				colvarTtrangBnLucCvien.IsReadOnly = false;
				colvarTtrangBnLucCvien.DefaultSetting = @"";
				colvarTtrangBnLucCvien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTtrangBnLucCvien);
				
				TableSchema.TableColumn colvarLyDoChuyen = new TableSchema.TableColumn(schema);
				colvarLyDoChuyen.ColumnName = "LY_DO_CHUYEN";
				colvarLyDoChuyen.DataType = DbType.String;
				colvarLyDoChuyen.MaxLength = 500;
				colvarLyDoChuyen.AutoIncrement = false;
				colvarLyDoChuyen.IsNullable = true;
				colvarLyDoChuyen.IsPrimaryKey = false;
				colvarLyDoChuyen.IsForeignKey = false;
				colvarLyDoChuyen.IsReadOnly = false;
				colvarLyDoChuyen.DefaultSetting = @"";
				colvarLyDoChuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLyDoChuyen);
				
				TableSchema.TableColumn colvarHuongDieuTri = new TableSchema.TableColumn(schema);
				colvarHuongDieuTri.ColumnName = "HUONG_DIEU_TRI";
				colvarHuongDieuTri.DataType = DbType.String;
				colvarHuongDieuTri.MaxLength = 1000;
				colvarHuongDieuTri.AutoIncrement = false;
				colvarHuongDieuTri.IsNullable = true;
				colvarHuongDieuTri.IsPrimaryKey = false;
				colvarHuongDieuTri.IsForeignKey = false;
				colvarHuongDieuTri.IsReadOnly = false;
				colvarHuongDieuTri.DefaultSetting = @"";
				colvarHuongDieuTri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHuongDieuTri);
				
				TableSchema.TableColumn colvarPhuongTienChuyen = new TableSchema.TableColumn(schema);
				colvarPhuongTienChuyen.ColumnName = "PHUONG_TIEN_CHUYEN";
				colvarPhuongTienChuyen.DataType = DbType.String;
				colvarPhuongTienChuyen.MaxLength = 50;
				colvarPhuongTienChuyen.AutoIncrement = false;
				colvarPhuongTienChuyen.IsNullable = true;
				colvarPhuongTienChuyen.IsPrimaryKey = false;
				colvarPhuongTienChuyen.IsForeignKey = false;
				colvarPhuongTienChuyen.IsReadOnly = false;
				colvarPhuongTienChuyen.DefaultSetting = @"";
				colvarPhuongTienChuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhuongTienChuyen);
				
				TableSchema.TableColumn colvarHotenChucdanhNgchuyen = new TableSchema.TableColumn(schema);
				colvarHotenChucdanhNgchuyen.ColumnName = "HOTEN_CHUCDANH_NGCHUYEN";
				colvarHotenChucdanhNgchuyen.DataType = DbType.String;
				colvarHotenChucdanhNgchuyen.MaxLength = 255;
				colvarHotenChucdanhNgchuyen.AutoIncrement = false;
				colvarHotenChucdanhNgchuyen.IsNullable = true;
				colvarHotenChucdanhNgchuyen.IsPrimaryKey = false;
				colvarHotenChucdanhNgchuyen.IsForeignKey = false;
				colvarHotenChucdanhNgchuyen.IsReadOnly = false;
				colvarHotenChucdanhNgchuyen.DefaultSetting = @"";
				colvarHotenChucdanhNgchuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHotenChucdanhNgchuyen);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_PHIEU_KHAM_CHUYENVIEN",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdPhieuChuyenvien")]
		[Bindable(true)]
		public int IdPhieuChuyenvien 
		{
			get { return GetColumnValue<int>(Columns.IdPhieuChuyenvien); }
			set { SetColumnValue(Columns.IdPhieuChuyenvien, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public int PatientId 
		{
			get { return GetColumnValue<int>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("NgayChuyenVien")]
		[Bindable(true)]
		public DateTime NgayChuyenVien 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayChuyenVien); }
			set { SetColumnValue(Columns.NgayChuyenVien, value); }
		}
		  
		[XmlAttribute("IdBenhVienCDen")]
		[Bindable(true)]
		public short? IdBenhVienCDen 
		{
			get { return GetColumnValue<short?>(Columns.IdBenhVienCDen); }
			set { SetColumnValue(Columns.IdBenhVienCDen, value); }
		}
		  
		[XmlAttribute("DauHieuCls")]
		[Bindable(true)]
		public string DauHieuCls 
		{
			get { return GetColumnValue<string>(Columns.DauHieuCls); }
			set { SetColumnValue(Columns.DauHieuCls, value); }
		}
		  
		[XmlAttribute("CacXetNghiem")]
		[Bindable(true)]
		public string CacXetNghiem 
		{
			get { return GetColumnValue<string>(Columns.CacXetNghiem); }
			set { SetColumnValue(Columns.CacXetNghiem, value); }
		}
		  
		[XmlAttribute("ChuanDoan")]
		[Bindable(true)]
		public string ChuanDoan 
		{
			get { return GetColumnValue<string>(Columns.ChuanDoan); }
			set { SetColumnValue(Columns.ChuanDoan, value); }
		}
		  
		[XmlAttribute("ThuocDaDung")]
		[Bindable(true)]
		public string ThuocDaDung 
		{
			get { return GetColumnValue<string>(Columns.ThuocDaDung); }
			set { SetColumnValue(Columns.ThuocDaDung, value); }
		}
		  
		[XmlAttribute("TtrangBnLucCvien")]
		[Bindable(true)]
		public string TtrangBnLucCvien 
		{
			get { return GetColumnValue<string>(Columns.TtrangBnLucCvien); }
			set { SetColumnValue(Columns.TtrangBnLucCvien, value); }
		}
		  
		[XmlAttribute("LyDoChuyen")]
		[Bindable(true)]
		public string LyDoChuyen 
		{
			get { return GetColumnValue<string>(Columns.LyDoChuyen); }
			set { SetColumnValue(Columns.LyDoChuyen, value); }
		}
		  
		[XmlAttribute("HuongDieuTri")]
		[Bindable(true)]
		public string HuongDieuTri 
		{
			get { return GetColumnValue<string>(Columns.HuongDieuTri); }
			set { SetColumnValue(Columns.HuongDieuTri, value); }
		}
		  
		[XmlAttribute("PhuongTienChuyen")]
		[Bindable(true)]
		public string PhuongTienChuyen 
		{
			get { return GetColumnValue<string>(Columns.PhuongTienChuyen); }
			set { SetColumnValue(Columns.PhuongTienChuyen, value); }
		}
		  
		[XmlAttribute("HotenChucdanhNgchuyen")]
		[Bindable(true)]
		public string HotenChucdanhNgchuyen 
		{
			get { return GetColumnValue<string>(Columns.HotenChucdanhNgchuyen); }
			set { SetColumnValue(Columns.HotenChucdanhNgchuyen, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varPatientCode,int varPatientId,DateTime varNgayChuyenVien,short? varIdBenhVienCDen,string varDauHieuCls,string varCacXetNghiem,string varChuanDoan,string varThuocDaDung,string varTtrangBnLucCvien,string varLyDoChuyen,string varHuongDieuTri,string varPhuongTienChuyen,string varHotenChucdanhNgchuyen,DateTime? varNgayTao,string varNguoiTao)
		{
			TPhieuKhamChuyenvien item = new TPhieuKhamChuyenvien();
			
			item.PatientCode = varPatientCode;
			
			item.PatientId = varPatientId;
			
			item.NgayChuyenVien = varNgayChuyenVien;
			
			item.IdBenhVienCDen = varIdBenhVienCDen;
			
			item.DauHieuCls = varDauHieuCls;
			
			item.CacXetNghiem = varCacXetNghiem;
			
			item.ChuanDoan = varChuanDoan;
			
			item.ThuocDaDung = varThuocDaDung;
			
			item.TtrangBnLucCvien = varTtrangBnLucCvien;
			
			item.LyDoChuyen = varLyDoChuyen;
			
			item.HuongDieuTri = varHuongDieuTri;
			
			item.PhuongTienChuyen = varPhuongTienChuyen;
			
			item.HotenChucdanhNgchuyen = varHotenChucdanhNgchuyen;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdPhieuChuyenvien,string varPatientCode,int varPatientId,DateTime varNgayChuyenVien,short? varIdBenhVienCDen,string varDauHieuCls,string varCacXetNghiem,string varChuanDoan,string varThuocDaDung,string varTtrangBnLucCvien,string varLyDoChuyen,string varHuongDieuTri,string varPhuongTienChuyen,string varHotenChucdanhNgchuyen,DateTime? varNgayTao,string varNguoiTao)
		{
			TPhieuKhamChuyenvien item = new TPhieuKhamChuyenvien();
			
				item.IdPhieuChuyenvien = varIdPhieuChuyenvien;
			
				item.PatientCode = varPatientCode;
			
				item.PatientId = varPatientId;
			
				item.NgayChuyenVien = varNgayChuyenVien;
			
				item.IdBenhVienCDen = varIdBenhVienCDen;
			
				item.DauHieuCls = varDauHieuCls;
			
				item.CacXetNghiem = varCacXetNghiem;
			
				item.ChuanDoan = varChuanDoan;
			
				item.ThuocDaDung = varThuocDaDung;
			
				item.TtrangBnLucCvien = varTtrangBnLucCvien;
			
				item.LyDoChuyen = varLyDoChuyen;
			
				item.HuongDieuTri = varHuongDieuTri;
			
				item.PhuongTienChuyen = varPhuongTienChuyen;
			
				item.HotenChucdanhNgchuyen = varHotenChucdanhNgchuyen;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdPhieuChuyenvienColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayChuyenVienColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhVienCDenColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn DauHieuClsColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn CacXetNghiemColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn ChuanDoanColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn ThuocDaDungColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn TtrangBnLucCvienColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn LyDoChuyenColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn HuongDieuTriColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn PhuongTienChuyenColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn HotenChucdanhNgchuyenColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdPhieuChuyenvien = @"ID_PHIEU_CHUYENVIEN";
			 public static string PatientCode = @"Patient_Code";
			 public static string PatientId = @"Patient_ID";
			 public static string NgayChuyenVien = @"Ngay_Chuyen_Vien";
			 public static string IdBenhVienCDen = @"ID_BenhVien_CDen";
			 public static string DauHieuCls = @"DAU_HIEU_CLS";
			 public static string CacXetNghiem = @"CAC_XET_NGHIEM";
			 public static string ChuanDoan = @"CHUAN_DOAN";
			 public static string ThuocDaDung = @"THUOC_DA_DUNG";
			 public static string TtrangBnLucCvien = @"TTRANG_BN_LUC_CVIEN";
			 public static string LyDoChuyen = @"LY_DO_CHUYEN";
			 public static string HuongDieuTri = @"HUONG_DIEU_TRI";
			 public static string PhuongTienChuyen = @"PHUONG_TIEN_CHUYEN";
			 public static string HotenChucdanhNgchuyen = @"HOTEN_CHUCDANH_NGCHUYEN";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiTao = @"NGUOI_TAO";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
