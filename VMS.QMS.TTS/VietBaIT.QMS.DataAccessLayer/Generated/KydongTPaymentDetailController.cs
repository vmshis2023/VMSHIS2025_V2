using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for KYDONG_T_Payment_Detail
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class KydongTPaymentDetailController
    {
        // Preload our schema..
        KydongTPaymentDetail thisSchemaLoad = new KydongTPaymentDetail();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public KydongTPaymentDetailCollection FetchAll()
        {
            KydongTPaymentDetailCollection coll = new KydongTPaymentDetailCollection();
            Query qry = new Query(KydongTPaymentDetail.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public KydongTPaymentDetailCollection FetchByID(object PaymentDetailId)
        {
            KydongTPaymentDetailCollection coll = new KydongTPaymentDetailCollection().Where("PaymentDetail_ID", PaymentDetailId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public KydongTPaymentDetailCollection FetchByQuery(Query qry)
        {
            KydongTPaymentDetailCollection coll = new KydongTPaymentDetailCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object PaymentDetailId)
        {
            return (KydongTPaymentDetail.Delete(PaymentDetailId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object PaymentDetailId)
        {
            return (KydongTPaymentDetail.Destroy(PaymentDetailId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int PaymentId,int? Quantity,decimal? OriginPrice,decimal? DiscountRate,decimal? DiscountPrice,decimal? TienBnTra,decimal? SurchargePrice,int? Id,int? IdDetail,int? ServiceId,int? ServiceDetailId,string ServiceDetailName,byte? PaymentTypeId,int? IsCancel,int? IsPayment,string CancelBy,DateTime? CancelDate,int? PaymentDetailType,string MaDv,string DonViTinh,decimal? PTramBh,string MaKieuTtoan,int? IdChiTietTToan,int? DepartmentId,int? DoctorAssignId,int? IdGoiDvu,int? ThuTuIn,int? TrongGoi,string TenHienThi,byte? NoiTru,byte? TtChuyen,byte? BhytStatus,short? IdNvienThien)
	    {
		    KydongTPaymentDetail item = new KydongTPaymentDetail();
		    
            item.PaymentId = PaymentId;
            
            item.Quantity = Quantity;
            
            item.OriginPrice = OriginPrice;
            
            item.DiscountRate = DiscountRate;
            
            item.DiscountPrice = DiscountPrice;
            
            item.TienBnTra = TienBnTra;
            
            item.SurchargePrice = SurchargePrice;
            
            item.Id = Id;
            
            item.IdDetail = IdDetail;
            
            item.ServiceId = ServiceId;
            
            item.ServiceDetailId = ServiceDetailId;
            
            item.ServiceDetailName = ServiceDetailName;
            
            item.PaymentTypeId = PaymentTypeId;
            
            item.IsCancel = IsCancel;
            
            item.IsPayment = IsPayment;
            
            item.CancelBy = CancelBy;
            
            item.CancelDate = CancelDate;
            
            item.PaymentDetailType = PaymentDetailType;
            
            item.MaDv = MaDv;
            
            item.DonViTinh = DonViTinh;
            
            item.PTramBh = PTramBh;
            
            item.MaKieuTtoan = MaKieuTtoan;
            
            item.IdChiTietTToan = IdChiTietTToan;
            
            item.DepartmentId = DepartmentId;
            
            item.DoctorAssignId = DoctorAssignId;
            
            item.IdGoiDvu = IdGoiDvu;
            
            item.ThuTuIn = ThuTuIn;
            
            item.TrongGoi = TrongGoi;
            
            item.TenHienThi = TenHienThi;
            
            item.NoiTru = NoiTru;
            
            item.TtChuyen = TtChuyen;
            
            item.BhytStatus = BhytStatus;
            
            item.IdNvienThien = IdNvienThien;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long PaymentDetailId,int PaymentId,int? Quantity,decimal? OriginPrice,decimal? DiscountRate,decimal? DiscountPrice,decimal? TienBnTra,decimal? SurchargePrice,int? Id,int? IdDetail,int? ServiceId,int? ServiceDetailId,string ServiceDetailName,byte? PaymentTypeId,int? IsCancel,int? IsPayment,string CancelBy,DateTime? CancelDate,int? PaymentDetailType,string MaDv,string DonViTinh,decimal? PTramBh,string MaKieuTtoan,int? IdChiTietTToan,int? DepartmentId,int? DoctorAssignId,int? IdGoiDvu,int? ThuTuIn,int? TrongGoi,string TenHienThi,byte? NoiTru,byte? TtChuyen,byte? BhytStatus,short? IdNvienThien)
	    {
		    KydongTPaymentDetail item = new KydongTPaymentDetail();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.PaymentDetailId = PaymentDetailId;
				
			item.PaymentId = PaymentId;
				
			item.Quantity = Quantity;
				
			item.OriginPrice = OriginPrice;
				
			item.DiscountRate = DiscountRate;
				
			item.DiscountPrice = DiscountPrice;
				
			item.TienBnTra = TienBnTra;
				
			item.SurchargePrice = SurchargePrice;
				
			item.Id = Id;
				
			item.IdDetail = IdDetail;
				
			item.ServiceId = ServiceId;
				
			item.ServiceDetailId = ServiceDetailId;
				
			item.ServiceDetailName = ServiceDetailName;
				
			item.PaymentTypeId = PaymentTypeId;
				
			item.IsCancel = IsCancel;
				
			item.IsPayment = IsPayment;
				
			item.CancelBy = CancelBy;
				
			item.CancelDate = CancelDate;
				
			item.PaymentDetailType = PaymentDetailType;
				
			item.MaDv = MaDv;
				
			item.DonViTinh = DonViTinh;
				
			item.PTramBh = PTramBh;
				
			item.MaKieuTtoan = MaKieuTtoan;
				
			item.IdChiTietTToan = IdChiTietTToan;
				
			item.DepartmentId = DepartmentId;
				
			item.DoctorAssignId = DoctorAssignId;
				
			item.IdGoiDvu = IdGoiDvu;
				
			item.ThuTuIn = ThuTuIn;
				
			item.TrongGoi = TrongGoi;
				
			item.TenHienThi = TenHienThi;
				
			item.NoiTru = NoiTru;
				
			item.TtChuyen = TtChuyen;
				
			item.BhytStatus = BhytStatus;
				
			item.IdNvienThien = IdNvienThien;
				
	        item.Save(UserName);
	    }
    }
}
