using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the LQheLoaibgBenhly class.
	/// </summary>
    [Serializable]
	public partial class LQheLoaibgBenhlyCollection : ActiveList<LQheLoaibgBenhly, LQheLoaibgBenhlyCollection>
	{	   
		public LQheLoaibgBenhlyCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>LQheLoaibgBenhlyCollection</returns>
		public LQheLoaibgBenhlyCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                LQheLoaibgBenhly o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the L_QHE_LOAIBG_BENHLY table.
	/// </summary>
	[Serializable]
	public partial class LQheLoaibgBenhly : ActiveRecord<LQheLoaibgBenhly>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public LQheLoaibgBenhly()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public LQheLoaibgBenhly(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public LQheLoaibgBenhly(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public LQheLoaibgBenhly(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("L_QHE_LOAIBG_BENHLY", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "ID";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarIdLoaiBg = new TableSchema.TableColumn(schema);
				colvarIdLoaiBg.ColumnName = "ID_LOAI_BG";
				colvarIdLoaiBg.DataType = DbType.Int32;
				colvarIdLoaiBg.MaxLength = 0;
				colvarIdLoaiBg.AutoIncrement = false;
				colvarIdLoaiBg.IsNullable = true;
				colvarIdLoaiBg.IsPrimaryKey = false;
				colvarIdLoaiBg.IsForeignKey = false;
				colvarIdLoaiBg.IsReadOnly = false;
				colvarIdLoaiBg.DefaultSetting = @"";
				colvarIdLoaiBg.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdLoaiBg);
				
				TableSchema.TableColumn colvarIdBenhLy = new TableSchema.TableColumn(schema);
				colvarIdBenhLy.ColumnName = "ID_BENH_LY";
				colvarIdBenhLy.DataType = DbType.Int32;
				colvarIdBenhLy.MaxLength = 0;
				colvarIdBenhLy.AutoIncrement = false;
				colvarIdBenhLy.IsNullable = true;
				colvarIdBenhLy.IsPrimaryKey = false;
				colvarIdBenhLy.IsForeignKey = false;
				colvarIdBenhLy.IsReadOnly = false;
				colvarIdBenhLy.DefaultSetting = @"";
				colvarIdBenhLy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhLy);
				
				TableSchema.TableColumn colvarIdGoiDvu = new TableSchema.TableColumn(schema);
				colvarIdGoiDvu.ColumnName = "ID_GOI_DVU";
				colvarIdGoiDvu.DataType = DbType.Int32;
				colvarIdGoiDvu.MaxLength = 0;
				colvarIdGoiDvu.AutoIncrement = false;
				colvarIdGoiDvu.IsNullable = true;
				colvarIdGoiDvu.IsPrimaryKey = false;
				colvarIdGoiDvu.IsForeignKey = false;
				colvarIdGoiDvu.IsReadOnly = false;
				colvarIdGoiDvu.DefaultSetting = @"";
				colvarIdGoiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGoiDvu);
				
				TableSchema.TableColumn colvarTenHienThi = new TableSchema.TableColumn(schema);
				colvarTenHienThi.ColumnName = "TEN_HIEN_THI";
				colvarTenHienThi.DataType = DbType.String;
				colvarTenHienThi.MaxLength = 50;
				colvarTenHienThi.AutoIncrement = false;
				colvarTenHienThi.IsNullable = true;
				colvarTenHienThi.IsPrimaryKey = false;
				colvarTenHienThi.IsForeignKey = false;
				colvarTenHienThi.IsReadOnly = false;
				colvarTenHienThi.DefaultSetting = @"";
				colvarTenHienThi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenHienThi);
				
				TableSchema.TableColumn colvarDonGiaGoc = new TableSchema.TableColumn(schema);
				colvarDonGiaGoc.ColumnName = "DON_GIA_GOC";
				colvarDonGiaGoc.DataType = DbType.Decimal;
				colvarDonGiaGoc.MaxLength = 0;
				colvarDonGiaGoc.AutoIncrement = false;
				colvarDonGiaGoc.IsNullable = true;
				colvarDonGiaGoc.IsPrimaryKey = false;
				colvarDonGiaGoc.IsForeignKey = false;
				colvarDonGiaGoc.IsReadOnly = false;
				colvarDonGiaGoc.DefaultSetting = @"";
				colvarDonGiaGoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGiaGoc);
				
				TableSchema.TableColumn colvarDonGia = new TableSchema.TableColumn(schema);
				colvarDonGia.ColumnName = "DON_GIA";
				colvarDonGia.DataType = DbType.Decimal;
				colvarDonGia.MaxLength = 0;
				colvarDonGia.AutoIncrement = false;
				colvarDonGia.IsNullable = true;
				colvarDonGia.IsPrimaryKey = false;
				colvarDonGia.IsForeignKey = false;
				colvarDonGia.IsReadOnly = false;
				colvarDonGia.DefaultSetting = @"";
				colvarDonGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGia);
				
				TableSchema.TableColumn colvarPthuTrongGoi = new TableSchema.TableColumn(schema);
				colvarPthuTrongGoi.ColumnName = "PTHU_TRONG_GOI";
				colvarPthuTrongGoi.DataType = DbType.Decimal;
				colvarPthuTrongGoi.MaxLength = 0;
				colvarPthuTrongGoi.AutoIncrement = false;
				colvarPthuTrongGoi.IsNullable = true;
				colvarPthuTrongGoi.IsPrimaryKey = false;
				colvarPthuTrongGoi.IsForeignKey = false;
				colvarPthuTrongGoi.IsReadOnly = false;
				colvarPthuTrongGoi.DefaultSetting = @"";
				colvarPthuTrongGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPthuTrongGoi);
				
				TableSchema.TableColumn colvarPthuNgoaiGoi = new TableSchema.TableColumn(schema);
				colvarPthuNgoaiGoi.ColumnName = "PTHU_NGOAI_GOI";
				colvarPthuNgoaiGoi.DataType = DbType.Decimal;
				colvarPthuNgoaiGoi.MaxLength = 0;
				colvarPthuNgoaiGoi.AutoIncrement = false;
				colvarPthuNgoaiGoi.IsNullable = true;
				colvarPthuNgoaiGoi.IsPrimaryKey = false;
				colvarPthuNgoaiGoi.IsForeignKey = false;
				colvarPthuNgoaiGoi.IsReadOnly = false;
				colvarPthuNgoaiGoi.DefaultSetting = @"";
				colvarPthuNgoaiGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPthuNgoaiGoi);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarMaDtuong = new TableSchema.TableColumn(schema);
				colvarMaDtuong.ColumnName = "MA_DTUONG";
				colvarMaDtuong.DataType = DbType.String;
				colvarMaDtuong.MaxLength = 50;
				colvarMaDtuong.AutoIncrement = false;
				colvarMaDtuong.IsNullable = true;
				colvarMaDtuong.IsPrimaryKey = false;
				colvarMaDtuong.IsForeignKey = false;
				colvarMaDtuong.IsReadOnly = false;
				colvarMaDtuong.DefaultSetting = @"";
				colvarMaDtuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDtuong);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("L_QHE_LOAIBG_BENHLY",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("IdLoaiBg")]
		[Bindable(true)]
		public int? IdLoaiBg 
		{
			get { return GetColumnValue<int?>(Columns.IdLoaiBg); }
			set { SetColumnValue(Columns.IdLoaiBg, value); }
		}
		  
		[XmlAttribute("IdBenhLy")]
		[Bindable(true)]
		public int? IdBenhLy 
		{
			get { return GetColumnValue<int?>(Columns.IdBenhLy); }
			set { SetColumnValue(Columns.IdBenhLy, value); }
		}
		  
		[XmlAttribute("IdGoiDvu")]
		[Bindable(true)]
		public int? IdGoiDvu 
		{
			get { return GetColumnValue<int?>(Columns.IdGoiDvu); }
			set { SetColumnValue(Columns.IdGoiDvu, value); }
		}
		  
		[XmlAttribute("TenHienThi")]
		[Bindable(true)]
		public string TenHienThi 
		{
			get { return GetColumnValue<string>(Columns.TenHienThi); }
			set { SetColumnValue(Columns.TenHienThi, value); }
		}
		  
		[XmlAttribute("DonGiaGoc")]
		[Bindable(true)]
		public decimal? DonGiaGoc 
		{
			get { return GetColumnValue<decimal?>(Columns.DonGiaGoc); }
			set { SetColumnValue(Columns.DonGiaGoc, value); }
		}
		  
		[XmlAttribute("DonGia")]
		[Bindable(true)]
		public decimal? DonGia 
		{
			get { return GetColumnValue<decimal?>(Columns.DonGia); }
			set { SetColumnValue(Columns.DonGia, value); }
		}
		  
		[XmlAttribute("PthuTrongGoi")]
		[Bindable(true)]
		public decimal? PthuTrongGoi 
		{
			get { return GetColumnValue<decimal?>(Columns.PthuTrongGoi); }
			set { SetColumnValue(Columns.PthuTrongGoi, value); }
		}
		  
		[XmlAttribute("PthuNgoaiGoi")]
		[Bindable(true)]
		public decimal? PthuNgoaiGoi 
		{
			get { return GetColumnValue<decimal?>(Columns.PthuNgoaiGoi); }
			set { SetColumnValue(Columns.PthuNgoaiGoi, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("MaDtuong")]
		[Bindable(true)]
		public string MaDtuong 
		{
			get { return GetColumnValue<string>(Columns.MaDtuong); }
			set { SetColumnValue(Columns.MaDtuong, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int? varIdLoaiBg,int? varIdBenhLy,int? varIdGoiDvu,string varTenHienThi,decimal? varDonGiaGoc,decimal? varDonGia,decimal? varPthuTrongGoi,decimal? varPthuNgoaiGoi,string varNguoiTao,DateTime? varNgayTao,string varMaDtuong)
		{
			LQheLoaibgBenhly item = new LQheLoaibgBenhly();
			
			item.IdLoaiBg = varIdLoaiBg;
			
			item.IdBenhLy = varIdBenhLy;
			
			item.IdGoiDvu = varIdGoiDvu;
			
			item.TenHienThi = varTenHienThi;
			
			item.DonGiaGoc = varDonGiaGoc;
			
			item.DonGia = varDonGia;
			
			item.PthuTrongGoi = varPthuTrongGoi;
			
			item.PthuNgoaiGoi = varPthuNgoaiGoi;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.MaDtuong = varMaDtuong;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,int? varIdLoaiBg,int? varIdBenhLy,int? varIdGoiDvu,string varTenHienThi,decimal? varDonGiaGoc,decimal? varDonGia,decimal? varPthuTrongGoi,decimal? varPthuNgoaiGoi,string varNguoiTao,DateTime? varNgayTao,string varMaDtuong)
		{
			LQheLoaibgBenhly item = new LQheLoaibgBenhly();
			
				item.Id = varId;
			
				item.IdLoaiBg = varIdLoaiBg;
			
				item.IdBenhLy = varIdBenhLy;
			
				item.IdGoiDvu = varIdGoiDvu;
			
				item.TenHienThi = varTenHienThi;
			
				item.DonGiaGoc = varDonGiaGoc;
			
				item.DonGia = varDonGia;
			
				item.PthuTrongGoi = varPthuTrongGoi;
			
				item.PthuNgoaiGoi = varPthuNgoaiGoi;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.MaDtuong = varMaDtuong;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdLoaiBgColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhLyColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGoiDvuColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn TenHienThiColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaGocColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn PthuTrongGoiColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn PthuNgoaiGoiColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDtuongColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"ID";
			 public static string IdLoaiBg = @"ID_LOAI_BG";
			 public static string IdBenhLy = @"ID_BENH_LY";
			 public static string IdGoiDvu = @"ID_GOI_DVU";
			 public static string TenHienThi = @"TEN_HIEN_THI";
			 public static string DonGiaGoc = @"DON_GIA_GOC";
			 public static string DonGia = @"DON_GIA";
			 public static string PthuTrongGoi = @"PTHU_TRONG_GOI";
			 public static string PthuNgoaiGoi = @"PTHU_NGOAI_GOI";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string MaDtuong = @"MA_DTUONG";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
