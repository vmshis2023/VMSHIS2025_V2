using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the LSotayThuoc class.
	/// </summary>
    [Serializable]
	public partial class LSotayThuocCollection : ActiveList<LSotayThuoc, LSotayThuocCollection>
	{	   
		public LSotayThuocCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>LSotayThuocCollection</returns>
		public LSotayThuocCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                LSotayThuoc o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the L_SOTAY_THUOC table.
	/// </summary>
	[Serializable]
	public partial class LSotayThuoc : ActiveRecord<LSotayThuoc>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public LSotayThuoc()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public LSotayThuoc(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public LSotayThuoc(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public LSotayThuoc(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("L_SOTAY_THUOC", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdSoTay = new TableSchema.TableColumn(schema);
				colvarIdSoTay.ColumnName = "ID_SO_TAY";
				colvarIdSoTay.DataType = DbType.Int32;
				colvarIdSoTay.MaxLength = 0;
				colvarIdSoTay.AutoIncrement = true;
				colvarIdSoTay.IsNullable = false;
				colvarIdSoTay.IsPrimaryKey = true;
				colvarIdSoTay.IsForeignKey = false;
				colvarIdSoTay.IsReadOnly = false;
				colvarIdSoTay.DefaultSetting = @"";
				colvarIdSoTay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdSoTay);
				
				TableSchema.TableColumn colvarIdThuoc = new TableSchema.TableColumn(schema);
				colvarIdThuoc.ColumnName = "ID_THUOC";
				colvarIdThuoc.DataType = DbType.Int32;
				colvarIdThuoc.MaxLength = 0;
				colvarIdThuoc.AutoIncrement = false;
				colvarIdThuoc.IsNullable = true;
				colvarIdThuoc.IsPrimaryKey = false;
				colvarIdThuoc.IsForeignKey = false;
				colvarIdThuoc.IsReadOnly = false;
				colvarIdThuoc.DefaultSetting = @"";
				colvarIdThuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdThuoc);
				
				TableSchema.TableColumn colvarSoLuong = new TableSchema.TableColumn(schema);
				colvarSoLuong.ColumnName = "SO_LUONG";
				colvarSoLuong.DataType = DbType.Int32;
				colvarSoLuong.MaxLength = 0;
				colvarSoLuong.AutoIncrement = false;
				colvarSoLuong.IsNullable = true;
				colvarSoLuong.IsPrimaryKey = false;
				colvarSoLuong.IsForeignKey = false;
				colvarSoLuong.IsReadOnly = false;
				colvarSoLuong.DefaultSetting = @"";
				colvarSoLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuong);
				
				TableSchema.TableColumn colvarCachDung = new TableSchema.TableColumn(schema);
				colvarCachDung.ColumnName = "CACH_DUNG";
				colvarCachDung.DataType = DbType.String;
				colvarCachDung.MaxLength = 50;
				colvarCachDung.AutoIncrement = false;
				colvarCachDung.IsNullable = true;
				colvarCachDung.IsPrimaryKey = false;
				colvarCachDung.IsForeignKey = false;
				colvarCachDung.IsReadOnly = false;
				colvarCachDung.DefaultSetting = @"";
				colvarCachDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCachDung);
				
				TableSchema.TableColumn colvarSlanNgay = new TableSchema.TableColumn(schema);
				colvarSlanNgay.ColumnName = "SLAN_NGAY";
				colvarSlanNgay.DataType = DbType.String;
				colvarSlanNgay.MaxLength = 10;
				colvarSlanNgay.AutoIncrement = false;
				colvarSlanNgay.IsNullable = true;
				colvarSlanNgay.IsPrimaryKey = false;
				colvarSlanNgay.IsForeignKey = false;
				colvarSlanNgay.IsReadOnly = false;
				colvarSlanNgay.DefaultSetting = @"";
				colvarSlanNgay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSlanNgay);
				
				TableSchema.TableColumn colvarLdungNgay = new TableSchema.TableColumn(schema);
				colvarLdungNgay.ColumnName = "LDUNG_NGAY";
				colvarLdungNgay.DataType = DbType.String;
				colvarLdungNgay.MaxLength = 10;
				colvarLdungNgay.AutoIncrement = false;
				colvarLdungNgay.IsNullable = true;
				colvarLdungNgay.IsPrimaryKey = false;
				colvarLdungNgay.IsForeignKey = false;
				colvarLdungNgay.IsReadOnly = false;
				colvarLdungNgay.DefaultSetting = @"";
				colvarLdungNgay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLdungNgay);
				
				TableSchema.TableColumn colvarDviDung = new TableSchema.TableColumn(schema);
				colvarDviDung.ColumnName = "DVI_DUNG";
				colvarDviDung.DataType = DbType.String;
				colvarDviDung.MaxLength = 20;
				colvarDviDung.AutoIncrement = false;
				colvarDviDung.IsNullable = true;
				colvarDviDung.IsPrimaryKey = false;
				colvarDviDung.IsForeignKey = false;
				colvarDviDung.IsReadOnly = false;
				colvarDviDung.DefaultSetting = @"";
				colvarDviDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDviDung);
				
				TableSchema.TableColumn colvarChiDanThem = new TableSchema.TableColumn(schema);
				colvarChiDanThem.ColumnName = "CHI_DAN_THEM";
				colvarChiDanThem.DataType = DbType.String;
				colvarChiDanThem.MaxLength = 250;
				colvarChiDanThem.AutoIncrement = false;
				colvarChiDanThem.IsNullable = true;
				colvarChiDanThem.IsPrimaryKey = false;
				colvarChiDanThem.IsForeignKey = false;
				colvarChiDanThem.IsReadOnly = false;
				colvarChiDanThem.DefaultSetting = @"";
				colvarChiDanThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChiDanThem);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("L_SOTAY_THUOC",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdSoTay")]
		[Bindable(true)]
		public int IdSoTay 
		{
			get { return GetColumnValue<int>(Columns.IdSoTay); }
			set { SetColumnValue(Columns.IdSoTay, value); }
		}
		  
		[XmlAttribute("IdThuoc")]
		[Bindable(true)]
		public int? IdThuoc 
		{
			get { return GetColumnValue<int?>(Columns.IdThuoc); }
			set { SetColumnValue(Columns.IdThuoc, value); }
		}
		  
		[XmlAttribute("SoLuong")]
		[Bindable(true)]
		public int? SoLuong 
		{
			get { return GetColumnValue<int?>(Columns.SoLuong); }
			set { SetColumnValue(Columns.SoLuong, value); }
		}
		  
		[XmlAttribute("CachDung")]
		[Bindable(true)]
		public string CachDung 
		{
			get { return GetColumnValue<string>(Columns.CachDung); }
			set { SetColumnValue(Columns.CachDung, value); }
		}
		  
		[XmlAttribute("SlanNgay")]
		[Bindable(true)]
		public string SlanNgay 
		{
			get { return GetColumnValue<string>(Columns.SlanNgay); }
			set { SetColumnValue(Columns.SlanNgay, value); }
		}
		  
		[XmlAttribute("LdungNgay")]
		[Bindable(true)]
		public string LdungNgay 
		{
			get { return GetColumnValue<string>(Columns.LdungNgay); }
			set { SetColumnValue(Columns.LdungNgay, value); }
		}
		  
		[XmlAttribute("DviDung")]
		[Bindable(true)]
		public string DviDung 
		{
			get { return GetColumnValue<string>(Columns.DviDung); }
			set { SetColumnValue(Columns.DviDung, value); }
		}
		  
		[XmlAttribute("ChiDanThem")]
		[Bindable(true)]
		public string ChiDanThem 
		{
			get { return GetColumnValue<string>(Columns.ChiDanThem); }
			set { SetColumnValue(Columns.ChiDanThem, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int? varIdThuoc,int? varSoLuong,string varCachDung,string varSlanNgay,string varLdungNgay,string varDviDung,string varChiDanThem,string varNguoiTao,DateTime? varNgayTao)
		{
			LSotayThuoc item = new LSotayThuoc();
			
			item.IdThuoc = varIdThuoc;
			
			item.SoLuong = varSoLuong;
			
			item.CachDung = varCachDung;
			
			item.SlanNgay = varSlanNgay;
			
			item.LdungNgay = varLdungNgay;
			
			item.DviDung = varDviDung;
			
			item.ChiDanThem = varChiDanThem;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdSoTay,int? varIdThuoc,int? varSoLuong,string varCachDung,string varSlanNgay,string varLdungNgay,string varDviDung,string varChiDanThem,string varNguoiTao,DateTime? varNgayTao)
		{
			LSotayThuoc item = new LSotayThuoc();
			
				item.IdSoTay = varIdSoTay;
			
				item.IdThuoc = varIdThuoc;
			
				item.SoLuong = varSoLuong;
			
				item.CachDung = varCachDung;
			
				item.SlanNgay = varSlanNgay;
			
				item.LdungNgay = varLdungNgay;
			
				item.DviDung = varDviDung;
			
				item.ChiDanThem = varChiDanThem;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdSoTayColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdThuocColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn CachDungColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn SlanNgayColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn LdungNgayColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn DviDungColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn ChiDanThemColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdSoTay = @"ID_SO_TAY";
			 public static string IdThuoc = @"ID_THUOC";
			 public static string SoLuong = @"SO_LUONG";
			 public static string CachDung = @"CACH_DUNG";
			 public static string SlanNgay = @"SLAN_NGAY";
			 public static string LdungNgay = @"LDUNG_NGAY";
			 public static string DviDung = @"DVI_DUNG";
			 public static string ChiDanThem = @"CHI_DAN_THEM";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgayTao = @"NGAY_TAO";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
