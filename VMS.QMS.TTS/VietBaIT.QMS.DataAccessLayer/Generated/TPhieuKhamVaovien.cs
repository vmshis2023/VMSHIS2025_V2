using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TPhieuKhamVaovien class.
	/// </summary>
    [Serializable]
	public partial class TPhieuKhamVaovienCollection : ActiveList<TPhieuKhamVaovien, TPhieuKhamVaovienCollection>
	{	   
		public TPhieuKhamVaovienCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TPhieuKhamVaovienCollection</returns>
		public TPhieuKhamVaovienCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TPhieuKhamVaovien o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_PHIEU_KHAM_VAOVIEN table.
	/// </summary>
	[Serializable]
	public partial class TPhieuKhamVaovien : ActiveRecord<TPhieuKhamVaovien>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TPhieuKhamVaovien()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TPhieuKhamVaovien(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TPhieuKhamVaovien(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TPhieuKhamVaovien(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_PHIEU_KHAM_VAOVIEN", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdPhieuVaovien = new TableSchema.TableColumn(schema);
				colvarIdPhieuVaovien.ColumnName = "ID_PHIEU_VAOVIEN";
				colvarIdPhieuVaovien.DataType = DbType.Int32;
				colvarIdPhieuVaovien.MaxLength = 0;
				colvarIdPhieuVaovien.AutoIncrement = true;
				colvarIdPhieuVaovien.IsNullable = false;
				colvarIdPhieuVaovien.IsPrimaryKey = true;
				colvarIdPhieuVaovien.IsForeignKey = false;
				colvarIdPhieuVaovien.IsReadOnly = false;
				colvarIdPhieuVaovien.DefaultSetting = @"";
				colvarIdPhieuVaovien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuVaovien);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.String;
				colvarPatientCode.MaxLength = 50;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = false;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int32;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = false;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarLyDoVaoVien = new TableSchema.TableColumn(schema);
				colvarLyDoVaoVien.ColumnName = "LY_DO_VAO_VIEN";
				colvarLyDoVaoVien.DataType = DbType.String;
				colvarLyDoVaoVien.MaxLength = 500;
				colvarLyDoVaoVien.AutoIncrement = false;
				colvarLyDoVaoVien.IsNullable = true;
				colvarLyDoVaoVien.IsPrimaryKey = false;
				colvarLyDoVaoVien.IsForeignKey = false;
				colvarLyDoVaoVien.IsReadOnly = false;
				colvarLyDoVaoVien.DefaultSetting = @"";
				colvarLyDoVaoVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLyDoVaoVien);
				
				TableSchema.TableColumn colvarChandoanTuyenDuoi = new TableSchema.TableColumn(schema);
				colvarChandoanTuyenDuoi.ColumnName = "CHANDOAN_TUYEN_DUOI";
				colvarChandoanTuyenDuoi.DataType = DbType.String;
				colvarChandoanTuyenDuoi.MaxLength = 500;
				colvarChandoanTuyenDuoi.AutoIncrement = false;
				colvarChandoanTuyenDuoi.IsNullable = true;
				colvarChandoanTuyenDuoi.IsPrimaryKey = false;
				colvarChandoanTuyenDuoi.IsForeignKey = false;
				colvarChandoanTuyenDuoi.IsReadOnly = false;
				colvarChandoanTuyenDuoi.DefaultSetting = @"";
				colvarChandoanTuyenDuoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChandoanTuyenDuoi);
				
				TableSchema.TableColumn colvarTsuBanThan = new TableSchema.TableColumn(schema);
				colvarTsuBanThan.ColumnName = "TSU_BAN_THAN";
				colvarTsuBanThan.DataType = DbType.String;
				colvarTsuBanThan.MaxLength = 1000;
				colvarTsuBanThan.AutoIncrement = false;
				colvarTsuBanThan.IsNullable = true;
				colvarTsuBanThan.IsPrimaryKey = false;
				colvarTsuBanThan.IsForeignKey = false;
				colvarTsuBanThan.IsReadOnly = false;
				colvarTsuBanThan.DefaultSetting = @"";
				colvarTsuBanThan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTsuBanThan);
				
				TableSchema.TableColumn colvarTsuGiaDinh = new TableSchema.TableColumn(schema);
				colvarTsuGiaDinh.ColumnName = "TSU_GIA_DINH";
				colvarTsuGiaDinh.DataType = DbType.String;
				colvarTsuGiaDinh.MaxLength = 1000;
				colvarTsuGiaDinh.AutoIncrement = false;
				colvarTsuGiaDinh.IsNullable = true;
				colvarTsuGiaDinh.IsPrimaryKey = false;
				colvarTsuGiaDinh.IsForeignKey = false;
				colvarTsuGiaDinh.IsReadOnly = false;
				colvarTsuGiaDinh.DefaultSetting = @"";
				colvarTsuGiaDinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTsuGiaDinh);
				
				TableSchema.TableColumn colvarBenhSu = new TableSchema.TableColumn(schema);
				colvarBenhSu.ColumnName = "BENH_SU";
				colvarBenhSu.DataType = DbType.String;
				colvarBenhSu.MaxLength = 1000;
				colvarBenhSu.AutoIncrement = false;
				colvarBenhSu.IsNullable = true;
				colvarBenhSu.IsPrimaryKey = false;
				colvarBenhSu.IsForeignKey = false;
				colvarBenhSu.IsReadOnly = false;
				colvarBenhSu.DefaultSetting = @"";
				colvarBenhSu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBenhSu);
				
				TableSchema.TableColumn colvarKhamToanThan = new TableSchema.TableColumn(schema);
				colvarKhamToanThan.ColumnName = "KHAM_TOAN_THAN";
				colvarKhamToanThan.DataType = DbType.String;
				colvarKhamToanThan.MaxLength = 1000;
				colvarKhamToanThan.AutoIncrement = false;
				colvarKhamToanThan.IsNullable = true;
				colvarKhamToanThan.IsPrimaryKey = false;
				colvarKhamToanThan.IsForeignKey = false;
				colvarKhamToanThan.IsReadOnly = false;
				colvarKhamToanThan.DefaultSetting = @"";
				colvarKhamToanThan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamToanThan);
				
				TableSchema.TableColumn colvarKhamPhuKhoa = new TableSchema.TableColumn(schema);
				colvarKhamPhuKhoa.ColumnName = "KHAM_PHU_KHOA";
				colvarKhamPhuKhoa.DataType = DbType.String;
				colvarKhamPhuKhoa.MaxLength = 1000;
				colvarKhamPhuKhoa.AutoIncrement = false;
				colvarKhamPhuKhoa.IsNullable = true;
				colvarKhamPhuKhoa.IsPrimaryKey = false;
				colvarKhamPhuKhoa.IsForeignKey = false;
				colvarKhamPhuKhoa.IsReadOnly = false;
				colvarKhamPhuKhoa.DefaultSetting = @"";
				colvarKhamPhuKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamPhuKhoa);
				
				TableSchema.TableColumn colvarKhamBphanKhac = new TableSchema.TableColumn(schema);
				colvarKhamBphanKhac.ColumnName = "KHAM_BPHAN_KHAC";
				colvarKhamBphanKhac.DataType = DbType.String;
				colvarKhamBphanKhac.MaxLength = 1000;
				colvarKhamBphanKhac.AutoIncrement = false;
				colvarKhamBphanKhac.IsNullable = true;
				colvarKhamBphanKhac.IsPrimaryKey = false;
				colvarKhamBphanKhac.IsForeignKey = false;
				colvarKhamBphanKhac.IsReadOnly = false;
				colvarKhamBphanKhac.DefaultSetting = @"";
				colvarKhamBphanKhac.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhamBphanKhac);
				
				TableSchema.TableColumn colvarChandoanKhiVaovien = new TableSchema.TableColumn(schema);
				colvarChandoanKhiVaovien.ColumnName = "CHANDOAN_KHI_VAOVIEN";
				colvarChandoanKhiVaovien.DataType = DbType.String;
				colvarChandoanKhiVaovien.MaxLength = 1000;
				colvarChandoanKhiVaovien.AutoIncrement = false;
				colvarChandoanKhiVaovien.IsNullable = true;
				colvarChandoanKhiVaovien.IsPrimaryKey = false;
				colvarChandoanKhiVaovien.IsForeignKey = false;
				colvarChandoanKhiVaovien.IsReadOnly = false;
				colvarChandoanKhiVaovien.DefaultSetting = @"";
				colvarChandoanKhiVaovien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChandoanKhiVaovien);
				
				TableSchema.TableColumn colvarXuTri = new TableSchema.TableColumn(schema);
				colvarXuTri.ColumnName = "XU_TRI";
				colvarXuTri.DataType = DbType.String;
				colvarXuTri.MaxLength = 1000;
				colvarXuTri.AutoIncrement = false;
				colvarXuTri.IsNullable = true;
				colvarXuTri.IsPrimaryKey = false;
				colvarXuTri.IsForeignKey = false;
				colvarXuTri.IsReadOnly = false;
				colvarXuTri.DefaultSetting = @"";
				colvarXuTri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXuTri);
				
				TableSchema.TableColumn colvarIdKhoaNtru = new TableSchema.TableColumn(schema);
				colvarIdKhoaNtru.ColumnName = "ID_KHOA_NTRU";
				colvarIdKhoaNtru.DataType = DbType.Int32;
				colvarIdKhoaNtru.MaxLength = 0;
				colvarIdKhoaNtru.AutoIncrement = false;
				colvarIdKhoaNtru.IsNullable = true;
				colvarIdKhoaNtru.IsPrimaryKey = false;
				colvarIdKhoaNtru.IsForeignKey = false;
				colvarIdKhoaNtru.IsReadOnly = false;
				colvarIdKhoaNtru.DefaultSetting = @"";
				colvarIdKhoaNtru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoaNtru);
				
				TableSchema.TableColumn colvarCheDoTdoi = new TableSchema.TableColumn(schema);
				colvarCheDoTdoi.ColumnName = "CHE_DO_TDOI";
				colvarCheDoTdoi.DataType = DbType.String;
				colvarCheDoTdoi.MaxLength = 1000;
				colvarCheDoTdoi.AutoIncrement = false;
				colvarCheDoTdoi.IsNullable = true;
				colvarCheDoTdoi.IsPrimaryKey = false;
				colvarCheDoTdoi.IsForeignKey = false;
				colvarCheDoTdoi.IsReadOnly = false;
				colvarCheDoTdoi.DefaultSetting = @"";
				colvarCheDoTdoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCheDoTdoi);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarChuY = new TableSchema.TableColumn(schema);
				colvarChuY.ColumnName = "CHU_Y";
				colvarChuY.DataType = DbType.String;
				colvarChuY.MaxLength = 500;
				colvarChuY.AutoIncrement = false;
				colvarChuY.IsNullable = true;
				colvarChuY.IsPrimaryKey = false;
				colvarChuY.IsForeignKey = false;
				colvarChuY.IsReadOnly = false;
				colvarChuY.DefaultSetting = @"";
				colvarChuY.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChuY);
				
				TableSchema.TableColumn colvarDauHieuLs = new TableSchema.TableColumn(schema);
				colvarDauHieuLs.ColumnName = "DAU_HIEU_LS";
				colvarDauHieuLs.DataType = DbType.String;
				colvarDauHieuLs.MaxLength = 500;
				colvarDauHieuLs.AutoIncrement = false;
				colvarDauHieuLs.IsNullable = true;
				colvarDauHieuLs.IsPrimaryKey = false;
				colvarDauHieuLs.IsForeignKey = false;
				colvarDauHieuLs.IsReadOnly = false;
				colvarDauHieuLs.DefaultSetting = @"";
				colvarDauHieuLs.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDauHieuLs);
				
				TableSchema.TableColumn colvarThuocDaDung = new TableSchema.TableColumn(schema);
				colvarThuocDaDung.ColumnName = "THUOC_DA_DUNG";
				colvarThuocDaDung.DataType = DbType.String;
				colvarThuocDaDung.MaxLength = 500;
				colvarThuocDaDung.AutoIncrement = false;
				colvarThuocDaDung.IsNullable = true;
				colvarThuocDaDung.IsPrimaryKey = false;
				colvarThuocDaDung.IsForeignKey = false;
				colvarThuocDaDung.IsReadOnly = false;
				colvarThuocDaDung.DefaultSetting = @"";
				colvarThuocDaDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThuocDaDung);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_PHIEU_KHAM_VAOVIEN",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdPhieuVaovien")]
		[Bindable(true)]
		public int IdPhieuVaovien 
		{
			get { return GetColumnValue<int>(Columns.IdPhieuVaovien); }
			set { SetColumnValue(Columns.IdPhieuVaovien, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public int PatientId 
		{
			get { return GetColumnValue<int>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("LyDoVaoVien")]
		[Bindable(true)]
		public string LyDoVaoVien 
		{
			get { return GetColumnValue<string>(Columns.LyDoVaoVien); }
			set { SetColumnValue(Columns.LyDoVaoVien, value); }
		}
		  
		[XmlAttribute("ChandoanTuyenDuoi")]
		[Bindable(true)]
		public string ChandoanTuyenDuoi 
		{
			get { return GetColumnValue<string>(Columns.ChandoanTuyenDuoi); }
			set { SetColumnValue(Columns.ChandoanTuyenDuoi, value); }
		}
		  
		[XmlAttribute("TsuBanThan")]
		[Bindable(true)]
		public string TsuBanThan 
		{
			get { return GetColumnValue<string>(Columns.TsuBanThan); }
			set { SetColumnValue(Columns.TsuBanThan, value); }
		}
		  
		[XmlAttribute("TsuGiaDinh")]
		[Bindable(true)]
		public string TsuGiaDinh 
		{
			get { return GetColumnValue<string>(Columns.TsuGiaDinh); }
			set { SetColumnValue(Columns.TsuGiaDinh, value); }
		}
		  
		[XmlAttribute("BenhSu")]
		[Bindable(true)]
		public string BenhSu 
		{
			get { return GetColumnValue<string>(Columns.BenhSu); }
			set { SetColumnValue(Columns.BenhSu, value); }
		}
		  
		[XmlAttribute("KhamToanThan")]
		[Bindable(true)]
		public string KhamToanThan 
		{
			get { return GetColumnValue<string>(Columns.KhamToanThan); }
			set { SetColumnValue(Columns.KhamToanThan, value); }
		}
		  
		[XmlAttribute("KhamPhuKhoa")]
		[Bindable(true)]
		public string KhamPhuKhoa 
		{
			get { return GetColumnValue<string>(Columns.KhamPhuKhoa); }
			set { SetColumnValue(Columns.KhamPhuKhoa, value); }
		}
		  
		[XmlAttribute("KhamBphanKhac")]
		[Bindable(true)]
		public string KhamBphanKhac 
		{
			get { return GetColumnValue<string>(Columns.KhamBphanKhac); }
			set { SetColumnValue(Columns.KhamBphanKhac, value); }
		}
		  
		[XmlAttribute("ChandoanKhiVaovien")]
		[Bindable(true)]
		public string ChandoanKhiVaovien 
		{
			get { return GetColumnValue<string>(Columns.ChandoanKhiVaovien); }
			set { SetColumnValue(Columns.ChandoanKhiVaovien, value); }
		}
		  
		[XmlAttribute("XuTri")]
		[Bindable(true)]
		public string XuTri 
		{
			get { return GetColumnValue<string>(Columns.XuTri); }
			set { SetColumnValue(Columns.XuTri, value); }
		}
		  
		[XmlAttribute("IdKhoaNtru")]
		[Bindable(true)]
		public int? IdKhoaNtru 
		{
			get { return GetColumnValue<int?>(Columns.IdKhoaNtru); }
			set { SetColumnValue(Columns.IdKhoaNtru, value); }
		}
		  
		[XmlAttribute("CheDoTdoi")]
		[Bindable(true)]
		public string CheDoTdoi 
		{
			get { return GetColumnValue<string>(Columns.CheDoTdoi); }
			set { SetColumnValue(Columns.CheDoTdoi, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("ChuY")]
		[Bindable(true)]
		public string ChuY 
		{
			get { return GetColumnValue<string>(Columns.ChuY); }
			set { SetColumnValue(Columns.ChuY, value); }
		}
		  
		[XmlAttribute("DauHieuLs")]
		[Bindable(true)]
		public string DauHieuLs 
		{
			get { return GetColumnValue<string>(Columns.DauHieuLs); }
			set { SetColumnValue(Columns.DauHieuLs, value); }
		}
		  
		[XmlAttribute("ThuocDaDung")]
		[Bindable(true)]
		public string ThuocDaDung 
		{
			get { return GetColumnValue<string>(Columns.ThuocDaDung); }
			set { SetColumnValue(Columns.ThuocDaDung, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varPatientCode,int varPatientId,string varLyDoVaoVien,string varChandoanTuyenDuoi,string varTsuBanThan,string varTsuGiaDinh,string varBenhSu,string varKhamToanThan,string varKhamPhuKhoa,string varKhamBphanKhac,string varChandoanKhiVaovien,string varXuTri,int? varIdKhoaNtru,string varCheDoTdoi,DateTime? varNgayTao,string varNguoiTao,string varChuY,string varDauHieuLs,string varThuocDaDung)
		{
			TPhieuKhamVaovien item = new TPhieuKhamVaovien();
			
			item.PatientCode = varPatientCode;
			
			item.PatientId = varPatientId;
			
			item.LyDoVaoVien = varLyDoVaoVien;
			
			item.ChandoanTuyenDuoi = varChandoanTuyenDuoi;
			
			item.TsuBanThan = varTsuBanThan;
			
			item.TsuGiaDinh = varTsuGiaDinh;
			
			item.BenhSu = varBenhSu;
			
			item.KhamToanThan = varKhamToanThan;
			
			item.KhamPhuKhoa = varKhamPhuKhoa;
			
			item.KhamBphanKhac = varKhamBphanKhac;
			
			item.ChandoanKhiVaovien = varChandoanKhiVaovien;
			
			item.XuTri = varXuTri;
			
			item.IdKhoaNtru = varIdKhoaNtru;
			
			item.CheDoTdoi = varCheDoTdoi;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.ChuY = varChuY;
			
			item.DauHieuLs = varDauHieuLs;
			
			item.ThuocDaDung = varThuocDaDung;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdPhieuVaovien,string varPatientCode,int varPatientId,string varLyDoVaoVien,string varChandoanTuyenDuoi,string varTsuBanThan,string varTsuGiaDinh,string varBenhSu,string varKhamToanThan,string varKhamPhuKhoa,string varKhamBphanKhac,string varChandoanKhiVaovien,string varXuTri,int? varIdKhoaNtru,string varCheDoTdoi,DateTime? varNgayTao,string varNguoiTao,string varChuY,string varDauHieuLs,string varThuocDaDung)
		{
			TPhieuKhamVaovien item = new TPhieuKhamVaovien();
			
				item.IdPhieuVaovien = varIdPhieuVaovien;
			
				item.PatientCode = varPatientCode;
			
				item.PatientId = varPatientId;
			
				item.LyDoVaoVien = varLyDoVaoVien;
			
				item.ChandoanTuyenDuoi = varChandoanTuyenDuoi;
			
				item.TsuBanThan = varTsuBanThan;
			
				item.TsuGiaDinh = varTsuGiaDinh;
			
				item.BenhSu = varBenhSu;
			
				item.KhamToanThan = varKhamToanThan;
			
				item.KhamPhuKhoa = varKhamPhuKhoa;
			
				item.KhamBphanKhac = varKhamBphanKhac;
			
				item.ChandoanKhiVaovien = varChandoanKhiVaovien;
			
				item.XuTri = varXuTri;
			
				item.IdKhoaNtru = varIdKhoaNtru;
			
				item.CheDoTdoi = varCheDoTdoi;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.ChuY = varChuY;
			
				item.DauHieuLs = varDauHieuLs;
			
				item.ThuocDaDung = varThuocDaDung;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdPhieuVaovienColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn LyDoVaoVienColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn ChandoanTuyenDuoiColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TsuBanThanColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn TsuGiaDinhColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn BenhSuColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamToanThanColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamPhuKhoaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn KhamBphanKhacColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn ChandoanKhiVaovienColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn XuTriColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaNtruColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn CheDoTdoiColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn ChuYColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn DauHieuLsColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn ThuocDaDungColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdPhieuVaovien = @"ID_PHIEU_VAOVIEN";
			 public static string PatientCode = @"Patient_Code";
			 public static string PatientId = @"Patient_ID";
			 public static string LyDoVaoVien = @"LY_DO_VAO_VIEN";
			 public static string ChandoanTuyenDuoi = @"CHANDOAN_TUYEN_DUOI";
			 public static string TsuBanThan = @"TSU_BAN_THAN";
			 public static string TsuGiaDinh = @"TSU_GIA_DINH";
			 public static string BenhSu = @"BENH_SU";
			 public static string KhamToanThan = @"KHAM_TOAN_THAN";
			 public static string KhamPhuKhoa = @"KHAM_PHU_KHOA";
			 public static string KhamBphanKhac = @"KHAM_BPHAN_KHAC";
			 public static string ChandoanKhiVaovien = @"CHANDOAN_KHI_VAOVIEN";
			 public static string XuTri = @"XU_TRI";
			 public static string IdKhoaNtru = @"ID_KHOA_NTRU";
			 public static string CheDoTdoi = @"CHE_DO_TDOI";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string ChuY = @"CHU_Y";
			 public static string DauHieuLs = @"DAU_HIEU_LS";
			 public static string ThuocDaDung = @"THUOC_DA_DUNG";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
