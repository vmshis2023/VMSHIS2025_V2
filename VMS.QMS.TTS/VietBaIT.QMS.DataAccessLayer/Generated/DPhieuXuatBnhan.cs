using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the DPhieuXuatBnhan class.
	/// </summary>
    [Serializable]
	public partial class DPhieuXuatBnhanCollection : ActiveList<DPhieuXuatBnhan, DPhieuXuatBnhanCollection>
	{	   
		public DPhieuXuatBnhanCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DPhieuXuatBnhanCollection</returns>
		public DPhieuXuatBnhanCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DPhieuXuatBnhan o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the D_PHIEU_XUAT_BNHAN table.
	/// </summary>
	[Serializable]
	public partial class DPhieuXuatBnhan : ActiveRecord<DPhieuXuatBnhan>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DPhieuXuatBnhan()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DPhieuXuatBnhan(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DPhieuXuatBnhan(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DPhieuXuatBnhan(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("D_PHIEU_XUAT_BNHAN", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdPhieuXuatBn = new TableSchema.TableColumn(schema);
				colvarIdPhieuXuatBn.ColumnName = "ID_PHIEU_XUAT_BN";
				colvarIdPhieuXuatBn.DataType = DbType.Int32;
				colvarIdPhieuXuatBn.MaxLength = 0;
				colvarIdPhieuXuatBn.AutoIncrement = true;
				colvarIdPhieuXuatBn.IsNullable = false;
				colvarIdPhieuXuatBn.IsPrimaryKey = true;
				colvarIdPhieuXuatBn.IsForeignKey = false;
				colvarIdPhieuXuatBn.IsReadOnly = false;
				colvarIdPhieuXuatBn.DefaultSetting = @"";
				colvarIdPhieuXuatBn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuXuatBn);
				
				TableSchema.TableColumn colvarMaPhieuXuatBn = new TableSchema.TableColumn(schema);
				colvarMaPhieuXuatBn.ColumnName = "MA_PHIEU_XUAT_BN";
				colvarMaPhieuXuatBn.DataType = DbType.String;
				colvarMaPhieuXuatBn.MaxLength = 20;
				colvarMaPhieuXuatBn.AutoIncrement = false;
				colvarMaPhieuXuatBn.IsNullable = true;
				colvarMaPhieuXuatBn.IsPrimaryKey = false;
				colvarMaPhieuXuatBn.IsForeignKey = false;
				colvarMaPhieuXuatBn.IsReadOnly = false;
				colvarMaPhieuXuatBn.DefaultSetting = @"";
				colvarMaPhieuXuatBn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaPhieuXuatBn);
				
				TableSchema.TableColumn colvarNgayXuatBn = new TableSchema.TableColumn(schema);
				colvarNgayXuatBn.ColumnName = "NGAY_XUAT_BN";
				colvarNgayXuatBn.DataType = DbType.DateTime;
				colvarNgayXuatBn.MaxLength = 0;
				colvarNgayXuatBn.AutoIncrement = false;
				colvarNgayXuatBn.IsNullable = true;
				colvarNgayXuatBn.IsPrimaryKey = false;
				colvarNgayXuatBn.IsForeignKey = false;
				colvarNgayXuatBn.IsReadOnly = false;
				colvarNgayXuatBn.DefaultSetting = @"";
				colvarNgayXuatBn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayXuatBn);
				
				TableSchema.TableColumn colvarNgayKeDon = new TableSchema.TableColumn(schema);
				colvarNgayKeDon.ColumnName = "NGAY_KE_DON";
				colvarNgayKeDon.DataType = DbType.DateTime;
				colvarNgayKeDon.MaxLength = 0;
				colvarNgayKeDon.AutoIncrement = false;
				colvarNgayKeDon.IsNullable = true;
				colvarNgayKeDon.IsPrimaryKey = false;
				colvarNgayKeDon.IsForeignKey = false;
				colvarNgayKeDon.IsReadOnly = false;
				colvarNgayKeDon.DefaultSetting = @"";
				colvarNgayKeDon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayKeDon);
				
				TableSchema.TableColumn colvarTenBnhan = new TableSchema.TableColumn(schema);
				colvarTenBnhan.ColumnName = "TEN_BNHAN";
				colvarTenBnhan.DataType = DbType.String;
				colvarTenBnhan.MaxLength = 100;
				colvarTenBnhan.AutoIncrement = false;
				colvarTenBnhan.IsNullable = true;
				colvarTenBnhan.IsPrimaryKey = false;
				colvarTenBnhan.IsForeignKey = false;
				colvarTenBnhan.IsReadOnly = false;
				colvarTenBnhan.DefaultSetting = @"";
				colvarTenBnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenBnhan);
				
				TableSchema.TableColumn colvarTenKhongDau = new TableSchema.TableColumn(schema);
				colvarTenKhongDau.ColumnName = "TEN_KHONG_DAU";
				colvarTenKhongDau.DataType = DbType.String;
				colvarTenKhongDau.MaxLength = 100;
				colvarTenKhongDau.AutoIncrement = false;
				colvarTenKhongDau.IsNullable = true;
				colvarTenKhongDau.IsPrimaryKey = false;
				colvarTenKhongDau.IsForeignKey = false;
				colvarTenKhongDau.IsReadOnly = false;
				colvarTenKhongDau.DefaultSetting = @"";
				colvarTenKhongDau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenKhongDau);
				
				TableSchema.TableColumn colvarGtinh = new TableSchema.TableColumn(schema);
				colvarGtinh.ColumnName = "GTINH";
				colvarGtinh.DataType = DbType.Byte;
				colvarGtinh.MaxLength = 0;
				colvarGtinh.AutoIncrement = false;
				colvarGtinh.IsNullable = true;
				colvarGtinh.IsPrimaryKey = false;
				colvarGtinh.IsForeignKey = false;
				colvarGtinh.IsReadOnly = false;
				colvarGtinh.DefaultSetting = @"";
				colvarGtinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGtinh);
				
				TableSchema.TableColumn colvarChanDoan = new TableSchema.TableColumn(schema);
				colvarChanDoan.ColumnName = "CHAN_DOAN";
				colvarChanDoan.DataType = DbType.String;
				colvarChanDoan.MaxLength = 200;
				colvarChanDoan.AutoIncrement = false;
				colvarChanDoan.IsNullable = true;
				colvarChanDoan.IsPrimaryKey = false;
				colvarChanDoan.IsForeignKey = false;
				colvarChanDoan.IsReadOnly = false;
				colvarChanDoan.DefaultSetting = @"";
				colvarChanDoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChanDoan);
				
				TableSchema.TableColumn colvarMaBenh = new TableSchema.TableColumn(schema);
				colvarMaBenh.ColumnName = "MA_BENH";
				colvarMaBenh.DataType = DbType.String;
				colvarMaBenh.MaxLength = 50;
				colvarMaBenh.AutoIncrement = false;
				colvarMaBenh.IsNullable = true;
				colvarMaBenh.IsPrimaryKey = false;
				colvarMaBenh.IsForeignKey = false;
				colvarMaBenh.IsReadOnly = false;
				colvarMaBenh.DefaultSetting = @"";
				colvarMaBenh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaBenh);
				
				TableSchema.TableColumn colvarDiaChi = new TableSchema.TableColumn(schema);
				colvarDiaChi.ColumnName = "DIA_CHI";
				colvarDiaChi.DataType = DbType.String;
				colvarDiaChi.MaxLength = 200;
				colvarDiaChi.AutoIncrement = false;
				colvarDiaChi.IsNullable = true;
				colvarDiaChi.IsPrimaryKey = false;
				colvarDiaChi.IsForeignKey = false;
				colvarDiaChi.IsReadOnly = false;
				colvarDiaChi.DefaultSetting = @"";
				colvarDiaChi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiaChi);
				
				TableSchema.TableColumn colvarNamSinh = new TableSchema.TableColumn(schema);
				colvarNamSinh.ColumnName = "NAM_SINH";
				colvarNamSinh.DataType = DbType.Int32;
				colvarNamSinh.MaxLength = 0;
				colvarNamSinh.AutoIncrement = false;
				colvarNamSinh.IsNullable = true;
				colvarNamSinh.IsPrimaryKey = false;
				colvarNamSinh.IsForeignKey = false;
				colvarNamSinh.IsReadOnly = false;
				colvarNamSinh.DefaultSetting = @"";
				colvarNamSinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNamSinh);
				
				TableSchema.TableColumn colvarSoThe = new TableSchema.TableColumn(schema);
				colvarSoThe.ColumnName = "SO_THE";
				colvarSoThe.DataType = DbType.String;
				colvarSoThe.MaxLength = 20;
				colvarSoThe.AutoIncrement = false;
				colvarSoThe.IsNullable = true;
				colvarSoThe.IsPrimaryKey = false;
				colvarSoThe.IsForeignKey = false;
				colvarSoThe.IsReadOnly = false;
				colvarSoThe.DefaultSetting = @"";
				colvarSoThe.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoThe);
				
				TableSchema.TableColumn colvarIdDoiTuong = new TableSchema.TableColumn(schema);
				colvarIdDoiTuong.ColumnName = "ID_DOI_TUONG";
				colvarIdDoiTuong.DataType = DbType.Int16;
				colvarIdDoiTuong.MaxLength = 0;
				colvarIdDoiTuong.AutoIncrement = false;
				colvarIdDoiTuong.IsNullable = true;
				colvarIdDoiTuong.IsPrimaryKey = false;
				colvarIdDoiTuong.IsForeignKey = false;
				colvarIdDoiTuong.IsReadOnly = false;
				colvarIdDoiTuong.DefaultSetting = @"";
				colvarIdDoiTuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDoiTuong);
				
				TableSchema.TableColumn colvarIdNhanVien = new TableSchema.TableColumn(schema);
				colvarIdNhanVien.ColumnName = "ID_NHAN_VIEN";
				colvarIdNhanVien.DataType = DbType.Int16;
				colvarIdNhanVien.MaxLength = 0;
				colvarIdNhanVien.AutoIncrement = false;
				colvarIdNhanVien.IsNullable = true;
				colvarIdNhanVien.IsPrimaryKey = false;
				colvarIdNhanVien.IsForeignKey = false;
				colvarIdNhanVien.IsReadOnly = false;
				colvarIdNhanVien.DefaultSetting = @"";
				colvarIdNhanVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhanVien);
				
				TableSchema.TableColumn colvarIdDonThuoc = new TableSchema.TableColumn(schema);
				colvarIdDonThuoc.ColumnName = "ID_DON_THUOC";
				colvarIdDonThuoc.DataType = DbType.Int32;
				colvarIdDonThuoc.MaxLength = 0;
				colvarIdDonThuoc.AutoIncrement = false;
				colvarIdDonThuoc.IsNullable = true;
				colvarIdDonThuoc.IsPrimaryKey = false;
				colvarIdDonThuoc.IsForeignKey = false;
				colvarIdDonThuoc.IsReadOnly = false;
				colvarIdDonThuoc.DefaultSetting = @"";
				colvarIdDonThuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDonThuoc);
				
				TableSchema.TableColumn colvarIdKhoaCd = new TableSchema.TableColumn(schema);
				colvarIdKhoaCd.ColumnName = "ID_KHOA_CD";
				colvarIdKhoaCd.DataType = DbType.Int16;
				colvarIdKhoaCd.MaxLength = 0;
				colvarIdKhoaCd.AutoIncrement = false;
				colvarIdKhoaCd.IsNullable = true;
				colvarIdKhoaCd.IsPrimaryKey = false;
				colvarIdKhoaCd.IsForeignKey = false;
				colvarIdKhoaCd.IsReadOnly = false;
				colvarIdKhoaCd.DefaultSetting = @"";
				colvarIdKhoaCd.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoaCd);
				
				TableSchema.TableColumn colvarIdBsyCd = new TableSchema.TableColumn(schema);
				colvarIdBsyCd.ColumnName = "ID_BSY_CD";
				colvarIdBsyCd.DataType = DbType.Int16;
				colvarIdBsyCd.MaxLength = 0;
				colvarIdBsyCd.AutoIncrement = false;
				colvarIdBsyCd.IsNullable = true;
				colvarIdBsyCd.IsPrimaryKey = false;
				colvarIdBsyCd.IsForeignKey = false;
				colvarIdBsyCd.IsReadOnly = false;
				colvarIdBsyCd.DefaultSetting = @"";
				colvarIdBsyCd.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBsyCd);
				
				TableSchema.TableColumn colvarIdKhoXuat = new TableSchema.TableColumn(schema);
				colvarIdKhoXuat.ColumnName = "ID_KHO_XUAT";
				colvarIdKhoXuat.DataType = DbType.Int16;
				colvarIdKhoXuat.MaxLength = 0;
				colvarIdKhoXuat.AutoIncrement = false;
				colvarIdKhoXuat.IsNullable = true;
				colvarIdKhoXuat.IsPrimaryKey = false;
				colvarIdKhoXuat.IsForeignKey = false;
				colvarIdKhoXuat.IsReadOnly = false;
				colvarIdKhoXuat.DefaultSetting = @"";
				colvarIdKhoXuat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoXuat);
				
				TableSchema.TableColumn colvarHienThi = new TableSchema.TableColumn(schema);
				colvarHienThi.ColumnName = "HIEN_THI";
				colvarHienThi.DataType = DbType.Byte;
				colvarHienThi.MaxLength = 0;
				colvarHienThi.AutoIncrement = false;
				colvarHienThi.IsNullable = true;
				colvarHienThi.IsPrimaryKey = false;
				colvarHienThi.IsForeignKey = false;
				colvarHienThi.IsReadOnly = false;
				
						colvarHienThi.DefaultSetting = @"((1))";
				colvarHienThi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHienThi);
				
				TableSchema.TableColumn colvarNoiTru = new TableSchema.TableColumn(schema);
				colvarNoiTru.ColumnName = "NOI_TRU";
				colvarNoiTru.DataType = DbType.Byte;
				colvarNoiTru.MaxLength = 0;
				colvarNoiTru.AutoIncrement = false;
				colvarNoiTru.IsNullable = true;
				colvarNoiTru.IsPrimaryKey = false;
				colvarNoiTru.IsForeignKey = false;
				colvarNoiTru.IsReadOnly = false;
				
						colvarNoiTru.DefaultSetting = @"((0))";
				colvarNoiTru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoiTru);
				
				TableSchema.TableColumn colvarLoaiDthuoc = new TableSchema.TableColumn(schema);
				colvarLoaiDthuoc.ColumnName = "LOAI_DTHUOC";
				colvarLoaiDthuoc.DataType = DbType.Byte;
				colvarLoaiDthuoc.MaxLength = 0;
				colvarLoaiDthuoc.AutoIncrement = false;
				colvarLoaiDthuoc.IsNullable = true;
				colvarLoaiDthuoc.IsPrimaryKey = false;
				colvarLoaiDthuoc.IsForeignKey = false;
				colvarLoaiDthuoc.IsReadOnly = false;
				
						colvarLoaiDthuoc.DefaultSetting = @"((0))";
				colvarLoaiDthuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiDthuoc);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "TRANG_THAI";
				colvarTrangThai.DataType = DbType.Byte;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = true;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				
						colvarTrangThai.DefaultSetting = @"((0))";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarLoaiPhieu = new TableSchema.TableColumn(schema);
				colvarLoaiPhieu.ColumnName = "LOAI_PHIEU";
				colvarLoaiPhieu.DataType = DbType.Byte;
				colvarLoaiPhieu.MaxLength = 0;
				colvarLoaiPhieu.AutoIncrement = false;
				colvarLoaiPhieu.IsNullable = true;
				colvarLoaiPhieu.IsPrimaryKey = false;
				colvarLoaiPhieu.IsForeignKey = false;
				colvarLoaiPhieu.IsReadOnly = false;
				colvarLoaiPhieu.DefaultSetting = @"";
				colvarLoaiPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiPhieu);
				
				TableSchema.TableColumn colvarIdChot = new TableSchema.TableColumn(schema);
				colvarIdChot.ColumnName = "ID_CHOT";
				colvarIdChot.DataType = DbType.Int32;
				colvarIdChot.MaxLength = 0;
				colvarIdChot.AutoIncrement = false;
				colvarIdChot.IsNullable = true;
				colvarIdChot.IsPrimaryKey = false;
				colvarIdChot.IsForeignKey = false;
				colvarIdChot.IsReadOnly = false;
				
						colvarIdChot.DefaultSetting = @"((0))";
				colvarIdChot.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdChot);
				
				TableSchema.TableColumn colvarNgayChot = new TableSchema.TableColumn(schema);
				colvarNgayChot.ColumnName = "NGAY_CHOT";
				colvarNgayChot.DataType = DbType.DateTime;
				colvarNgayChot.MaxLength = 0;
				colvarNgayChot.AutoIncrement = false;
				colvarNgayChot.IsNullable = true;
				colvarNgayChot.IsPrimaryKey = false;
				colvarNgayChot.IsForeignKey = false;
				colvarNgayChot.IsReadOnly = false;
				colvarNgayChot.DefaultSetting = @"";
				colvarNgayChot.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayChot);
				
				TableSchema.TableColumn colvarIdCapphat = new TableSchema.TableColumn(schema);
				colvarIdCapphat.ColumnName = "ID_CAPPHAT";
				colvarIdCapphat.DataType = DbType.Int32;
				colvarIdCapphat.MaxLength = 0;
				colvarIdCapphat.AutoIncrement = false;
				colvarIdCapphat.IsNullable = true;
				colvarIdCapphat.IsPrimaryKey = false;
				colvarIdCapphat.IsForeignKey = false;
				colvarIdCapphat.IsReadOnly = false;
				
						colvarIdCapphat.DefaultSetting = @"((-1))";
				colvarIdCapphat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdCapphat);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("D_PHIEU_XUAT_BNHAN",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdPhieuXuatBn")]
		[Bindable(true)]
		public int IdPhieuXuatBn 
		{
			get { return GetColumnValue<int>(Columns.IdPhieuXuatBn); }
			set { SetColumnValue(Columns.IdPhieuXuatBn, value); }
		}
		  
		[XmlAttribute("MaPhieuXuatBn")]
		[Bindable(true)]
		public string MaPhieuXuatBn 
		{
			get { return GetColumnValue<string>(Columns.MaPhieuXuatBn); }
			set { SetColumnValue(Columns.MaPhieuXuatBn, value); }
		}
		  
		[XmlAttribute("NgayXuatBn")]
		[Bindable(true)]
		public DateTime? NgayXuatBn 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayXuatBn); }
			set { SetColumnValue(Columns.NgayXuatBn, value); }
		}
		  
		[XmlAttribute("NgayKeDon")]
		[Bindable(true)]
		public DateTime? NgayKeDon 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayKeDon); }
			set { SetColumnValue(Columns.NgayKeDon, value); }
		}
		  
		[XmlAttribute("TenBnhan")]
		[Bindable(true)]
		public string TenBnhan 
		{
			get { return GetColumnValue<string>(Columns.TenBnhan); }
			set { SetColumnValue(Columns.TenBnhan, value); }
		}
		  
		[XmlAttribute("TenKhongDau")]
		[Bindable(true)]
		public string TenKhongDau 
		{
			get { return GetColumnValue<string>(Columns.TenKhongDau); }
			set { SetColumnValue(Columns.TenKhongDau, value); }
		}
		  
		[XmlAttribute("Gtinh")]
		[Bindable(true)]
		public byte? Gtinh 
		{
			get { return GetColumnValue<byte?>(Columns.Gtinh); }
			set { SetColumnValue(Columns.Gtinh, value); }
		}
		  
		[XmlAttribute("ChanDoan")]
		[Bindable(true)]
		public string ChanDoan 
		{
			get { return GetColumnValue<string>(Columns.ChanDoan); }
			set { SetColumnValue(Columns.ChanDoan, value); }
		}
		  
		[XmlAttribute("MaBenh")]
		[Bindable(true)]
		public string MaBenh 
		{
			get { return GetColumnValue<string>(Columns.MaBenh); }
			set { SetColumnValue(Columns.MaBenh, value); }
		}
		  
		[XmlAttribute("DiaChi")]
		[Bindable(true)]
		public string DiaChi 
		{
			get { return GetColumnValue<string>(Columns.DiaChi); }
			set { SetColumnValue(Columns.DiaChi, value); }
		}
		  
		[XmlAttribute("NamSinh")]
		[Bindable(true)]
		public int? NamSinh 
		{
			get { return GetColumnValue<int?>(Columns.NamSinh); }
			set { SetColumnValue(Columns.NamSinh, value); }
		}
		  
		[XmlAttribute("SoThe")]
		[Bindable(true)]
		public string SoThe 
		{
			get { return GetColumnValue<string>(Columns.SoThe); }
			set { SetColumnValue(Columns.SoThe, value); }
		}
		  
		[XmlAttribute("IdDoiTuong")]
		[Bindable(true)]
		public short? IdDoiTuong 
		{
			get { return GetColumnValue<short?>(Columns.IdDoiTuong); }
			set { SetColumnValue(Columns.IdDoiTuong, value); }
		}
		  
		[XmlAttribute("IdNhanVien")]
		[Bindable(true)]
		public short? IdNhanVien 
		{
			get { return GetColumnValue<short?>(Columns.IdNhanVien); }
			set { SetColumnValue(Columns.IdNhanVien, value); }
		}
		  
		[XmlAttribute("IdDonThuoc")]
		[Bindable(true)]
		public int? IdDonThuoc 
		{
			get { return GetColumnValue<int?>(Columns.IdDonThuoc); }
			set { SetColumnValue(Columns.IdDonThuoc, value); }
		}
		  
		[XmlAttribute("IdKhoaCd")]
		[Bindable(true)]
		public short? IdKhoaCd 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoaCd); }
			set { SetColumnValue(Columns.IdKhoaCd, value); }
		}
		  
		[XmlAttribute("IdBsyCd")]
		[Bindable(true)]
		public short? IdBsyCd 
		{
			get { return GetColumnValue<short?>(Columns.IdBsyCd); }
			set { SetColumnValue(Columns.IdBsyCd, value); }
		}
		  
		[XmlAttribute("IdKhoXuat")]
		[Bindable(true)]
		public short? IdKhoXuat 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoXuat); }
			set { SetColumnValue(Columns.IdKhoXuat, value); }
		}
		  
		[XmlAttribute("HienThi")]
		[Bindable(true)]
		public byte? HienThi 
		{
			get { return GetColumnValue<byte?>(Columns.HienThi); }
			set { SetColumnValue(Columns.HienThi, value); }
		}
		  
		[XmlAttribute("NoiTru")]
		[Bindable(true)]
		public byte? NoiTru 
		{
			get { return GetColumnValue<byte?>(Columns.NoiTru); }
			set { SetColumnValue(Columns.NoiTru, value); }
		}
		  
		[XmlAttribute("LoaiDthuoc")]
		[Bindable(true)]
		public byte? LoaiDthuoc 
		{
			get { return GetColumnValue<byte?>(Columns.LoaiDthuoc); }
			set { SetColumnValue(Columns.LoaiDthuoc, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public byte? TrangThai 
		{
			get { return GetColumnValue<byte?>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("LoaiPhieu")]
		[Bindable(true)]
		public byte? LoaiPhieu 
		{
			get { return GetColumnValue<byte?>(Columns.LoaiPhieu); }
			set { SetColumnValue(Columns.LoaiPhieu, value); }
		}
		  
		[XmlAttribute("IdChot")]
		[Bindable(true)]
		public int? IdChot 
		{
			get { return GetColumnValue<int?>(Columns.IdChot); }
			set { SetColumnValue(Columns.IdChot, value); }
		}
		  
		[XmlAttribute("NgayChot")]
		[Bindable(true)]
		public DateTime? NgayChot 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayChot); }
			set { SetColumnValue(Columns.NgayChot, value); }
		}
		  
		[XmlAttribute("IdCapphat")]
		[Bindable(true)]
		public int? IdCapphat 
		{
			get { return GetColumnValue<int?>(Columns.IdCapphat); }
			set { SetColumnValue(Columns.IdCapphat, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaPhieuXuatBn,DateTime? varNgayXuatBn,DateTime? varNgayKeDon,string varTenBnhan,string varTenKhongDau,byte? varGtinh,string varChanDoan,string varMaBenh,string varDiaChi,int? varNamSinh,string varSoThe,short? varIdDoiTuong,short? varIdNhanVien,int? varIdDonThuoc,short? varIdKhoaCd,short? varIdBsyCd,short? varIdKhoXuat,byte? varHienThi,byte? varNoiTru,byte? varLoaiDthuoc,byte? varTrangThai,DateTime? varNgayTao,string varNguoiTao,byte? varLoaiPhieu,int? varIdChot,DateTime? varNgayChot,int? varIdCapphat)
		{
			DPhieuXuatBnhan item = new DPhieuXuatBnhan();
			
			item.MaPhieuXuatBn = varMaPhieuXuatBn;
			
			item.NgayXuatBn = varNgayXuatBn;
			
			item.NgayKeDon = varNgayKeDon;
			
			item.TenBnhan = varTenBnhan;
			
			item.TenKhongDau = varTenKhongDau;
			
			item.Gtinh = varGtinh;
			
			item.ChanDoan = varChanDoan;
			
			item.MaBenh = varMaBenh;
			
			item.DiaChi = varDiaChi;
			
			item.NamSinh = varNamSinh;
			
			item.SoThe = varSoThe;
			
			item.IdDoiTuong = varIdDoiTuong;
			
			item.IdNhanVien = varIdNhanVien;
			
			item.IdDonThuoc = varIdDonThuoc;
			
			item.IdKhoaCd = varIdKhoaCd;
			
			item.IdBsyCd = varIdBsyCd;
			
			item.IdKhoXuat = varIdKhoXuat;
			
			item.HienThi = varHienThi;
			
			item.NoiTru = varNoiTru;
			
			item.LoaiDthuoc = varLoaiDthuoc;
			
			item.TrangThai = varTrangThai;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.LoaiPhieu = varLoaiPhieu;
			
			item.IdChot = varIdChot;
			
			item.NgayChot = varNgayChot;
			
			item.IdCapphat = varIdCapphat;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdPhieuXuatBn,string varMaPhieuXuatBn,DateTime? varNgayXuatBn,DateTime? varNgayKeDon,string varTenBnhan,string varTenKhongDau,byte? varGtinh,string varChanDoan,string varMaBenh,string varDiaChi,int? varNamSinh,string varSoThe,short? varIdDoiTuong,short? varIdNhanVien,int? varIdDonThuoc,short? varIdKhoaCd,short? varIdBsyCd,short? varIdKhoXuat,byte? varHienThi,byte? varNoiTru,byte? varLoaiDthuoc,byte? varTrangThai,DateTime? varNgayTao,string varNguoiTao,byte? varLoaiPhieu,int? varIdChot,DateTime? varNgayChot,int? varIdCapphat)
		{
			DPhieuXuatBnhan item = new DPhieuXuatBnhan();
			
				item.IdPhieuXuatBn = varIdPhieuXuatBn;
			
				item.MaPhieuXuatBn = varMaPhieuXuatBn;
			
				item.NgayXuatBn = varNgayXuatBn;
			
				item.NgayKeDon = varNgayKeDon;
			
				item.TenBnhan = varTenBnhan;
			
				item.TenKhongDau = varTenKhongDau;
			
				item.Gtinh = varGtinh;
			
				item.ChanDoan = varChanDoan;
			
				item.MaBenh = varMaBenh;
			
				item.DiaChi = varDiaChi;
			
				item.NamSinh = varNamSinh;
			
				item.SoThe = varSoThe;
			
				item.IdDoiTuong = varIdDoiTuong;
			
				item.IdNhanVien = varIdNhanVien;
			
				item.IdDonThuoc = varIdDonThuoc;
			
				item.IdKhoaCd = varIdKhoaCd;
			
				item.IdBsyCd = varIdBsyCd;
			
				item.IdKhoXuat = varIdKhoXuat;
			
				item.HienThi = varHienThi;
			
				item.NoiTru = varNoiTru;
			
				item.LoaiDthuoc = varLoaiDthuoc;
			
				item.TrangThai = varTrangThai;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.LoaiPhieu = varLoaiPhieu;
			
				item.IdChot = varIdChot;
			
				item.NgayChot = varNgayChot;
			
				item.IdCapphat = varIdCapphat;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdPhieuXuatBnColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaPhieuXuatBnColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayXuatBnColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayKeDonColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn TenBnhanColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TenKhongDauColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn GtinhColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn ChanDoanColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn MaBenhColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn DiaChiColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NamSinhColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn SoTheColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDoiTuongColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhanVienColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDonThuocColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaCdColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBsyCdColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoXuatColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn HienThiColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn NoiTruColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiDthuocColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiPhieuColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn IdChotColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayChotColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn IdCapphatColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdPhieuXuatBn = @"ID_PHIEU_XUAT_BN";
			 public static string MaPhieuXuatBn = @"MA_PHIEU_XUAT_BN";
			 public static string NgayXuatBn = @"NGAY_XUAT_BN";
			 public static string NgayKeDon = @"NGAY_KE_DON";
			 public static string TenBnhan = @"TEN_BNHAN";
			 public static string TenKhongDau = @"TEN_KHONG_DAU";
			 public static string Gtinh = @"GTINH";
			 public static string ChanDoan = @"CHAN_DOAN";
			 public static string MaBenh = @"MA_BENH";
			 public static string DiaChi = @"DIA_CHI";
			 public static string NamSinh = @"NAM_SINH";
			 public static string SoThe = @"SO_THE";
			 public static string IdDoiTuong = @"ID_DOI_TUONG";
			 public static string IdNhanVien = @"ID_NHAN_VIEN";
			 public static string IdDonThuoc = @"ID_DON_THUOC";
			 public static string IdKhoaCd = @"ID_KHOA_CD";
			 public static string IdBsyCd = @"ID_BSY_CD";
			 public static string IdKhoXuat = @"ID_KHO_XUAT";
			 public static string HienThi = @"HIEN_THI";
			 public static string NoiTru = @"NOI_TRU";
			 public static string LoaiDthuoc = @"LOAI_DTHUOC";
			 public static string TrangThai = @"TRANG_THAI";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string LoaiPhieu = @"LOAI_PHIEU";
			 public static string IdChot = @"ID_CHOT";
			 public static string NgayChot = @"NGAY_CHOT";
			 public static string IdCapphat = @"ID_CAPPHAT";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
