using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for L_Service_Detail
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class LServiceDetailController
    {
        // Preload our schema..
        LServiceDetail thisSchemaLoad = new LServiceDetail();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public LServiceDetailCollection FetchAll()
        {
            LServiceDetailCollection coll = new LServiceDetailCollection();
            Query qry = new Query(LServiceDetail.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public LServiceDetailCollection FetchByID(object ServiceDetailId)
        {
            LServiceDetailCollection coll = new LServiceDetailCollection().Where("ServiceDetail_ID", ServiceDetailId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public LServiceDetailCollection FetchByQuery(Query qry)
        {
            LServiceDetailCollection coll = new LServiceDetailCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object ServiceDetailId)
        {
            return (LServiceDetail.Delete(ServiceDetailId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object ServiceDetailId)
        {
            return (LServiceDetail.Destroy(ServiceDetailId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string ServiceDetailCode,string ServiceDetailName,string TestResult,short ServiceId,string MeasureUnit,byte? MeasureType,string NormalLevel0,string NormalLevel1,byte? Valid,decimal? Price,string SDesc,short? GroupDetailId,int? IntOrder,byte? SendAllId,int? UnitId,int? FormId,string MaChiTietKetNoi,DateTime? NgayTao,string NguoiTao,DateTime? NgaySua,string NguoiSua,int? ThuocGoi,string MaKhoaThien,short? DepartmentId,string TenBhyt,string MaBhyt,string NqTt)
	    {
		    LServiceDetail item = new LServiceDetail();
		    
            item.ServiceDetailCode = ServiceDetailCode;
            
            item.ServiceDetailName = ServiceDetailName;
            
            item.TestResult = TestResult;
            
            item.ServiceId = ServiceId;
            
            item.MeasureUnit = MeasureUnit;
            
            item.MeasureType = MeasureType;
            
            item.NormalLevel0 = NormalLevel0;
            
            item.NormalLevel1 = NormalLevel1;
            
            item.Valid = Valid;
            
            item.Price = Price;
            
            item.SDesc = SDesc;
            
            item.GroupDetailId = GroupDetailId;
            
            item.IntOrder = IntOrder;
            
            item.SendAllId = SendAllId;
            
            item.UnitId = UnitId;
            
            item.FormId = FormId;
            
            item.MaChiTietKetNoi = MaChiTietKetNoi;
            
            item.NgayTao = NgayTao;
            
            item.NguoiTao = NguoiTao;
            
            item.NgaySua = NgaySua;
            
            item.NguoiSua = NguoiSua;
            
            item.ThuocGoi = ThuocGoi;
            
            item.MaKhoaThien = MaKhoaThien;
            
            item.DepartmentId = DepartmentId;
            
            item.TenBhyt = TenBhyt;
            
            item.MaBhyt = MaBhyt;
            
            item.NqTt = NqTt;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int ServiceDetailId,string ServiceDetailCode,string ServiceDetailName,string TestResult,short ServiceId,string MeasureUnit,byte? MeasureType,string NormalLevel0,string NormalLevel1,byte? Valid,decimal? Price,string SDesc,short? GroupDetailId,int? IntOrder,byte? SendAllId,int? UnitId,int? FormId,string MaChiTietKetNoi,DateTime? NgayTao,string NguoiTao,DateTime? NgaySua,string NguoiSua,int? ThuocGoi,string MaKhoaThien,short? DepartmentId,string TenBhyt,string MaBhyt,string NqTt)
	    {
		    LServiceDetail item = new LServiceDetail();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.ServiceDetailId = ServiceDetailId;
				
			item.ServiceDetailCode = ServiceDetailCode;
				
			item.ServiceDetailName = ServiceDetailName;
				
			item.TestResult = TestResult;
				
			item.ServiceId = ServiceId;
				
			item.MeasureUnit = MeasureUnit;
				
			item.MeasureType = MeasureType;
				
			item.NormalLevel0 = NormalLevel0;
				
			item.NormalLevel1 = NormalLevel1;
				
			item.Valid = Valid;
				
			item.Price = Price;
				
			item.SDesc = SDesc;
				
			item.GroupDetailId = GroupDetailId;
				
			item.IntOrder = IntOrder;
				
			item.SendAllId = SendAllId;
				
			item.UnitId = UnitId;
				
			item.FormId = FormId;
				
			item.MaChiTietKetNoi = MaChiTietKetNoi;
				
			item.NgayTao = NgayTao;
				
			item.NguoiTao = NguoiTao;
				
			item.NgaySua = NgaySua;
				
			item.NguoiSua = NguoiSua;
				
			item.ThuocGoi = ThuocGoi;
				
			item.MaKhoaThien = MaKhoaThien;
				
			item.DepartmentId = DepartmentId;
				
			item.TenBhyt = TenBhyt;
				
			item.MaBhyt = MaBhyt;
				
			item.NqTt = NqTt;
				
	        item.Save(UserName);
	    }
    }
}
