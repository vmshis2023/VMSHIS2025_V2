using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TThongtinGoiDvuBnhan class.
	/// </summary>
    [Serializable]
	public partial class TThongtinGoiDvuBnhanCollection : ActiveList<TThongtinGoiDvuBnhan, TThongtinGoiDvuBnhanCollection>
	{	   
		public TThongtinGoiDvuBnhanCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TThongtinGoiDvuBnhanCollection</returns>
		public TThongtinGoiDvuBnhanCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TThongtinGoiDvuBnhan o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_THONGTIN_GOI_DVU_BNHAN table.
	/// </summary>
	[Serializable]
	public partial class TThongtinGoiDvuBnhan : ActiveRecord<TThongtinGoiDvuBnhan>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TThongtinGoiDvuBnhan()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TThongtinGoiDvuBnhan(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TThongtinGoiDvuBnhan(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TThongtinGoiDvuBnhan(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_THONGTIN_GOI_DVU_BNHAN", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdPhieu = new TableSchema.TableColumn(schema);
				colvarIdPhieu.ColumnName = "ID_PHIEU";
				colvarIdPhieu.DataType = DbType.Int32;
				colvarIdPhieu.MaxLength = 0;
				colvarIdPhieu.AutoIncrement = true;
				colvarIdPhieu.IsNullable = false;
				colvarIdPhieu.IsPrimaryKey = true;
				colvarIdPhieu.IsForeignKey = false;
				colvarIdPhieu.IsReadOnly = false;
				colvarIdPhieu.DefaultSetting = @"";
				colvarIdPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieu);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.String;
				colvarPatientCode.MaxLength = 50;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = false;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int32;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = false;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarMaDtuong = new TableSchema.TableColumn(schema);
				colvarMaDtuong.ColumnName = "MA_DTUONG";
				colvarMaDtuong.DataType = DbType.String;
				colvarMaDtuong.MaxLength = 50;
				colvarMaDtuong.AutoIncrement = false;
				colvarMaDtuong.IsNullable = false;
				colvarMaDtuong.IsPrimaryKey = false;
				colvarMaDtuong.IsForeignKey = false;
				colvarMaDtuong.IsReadOnly = false;
				colvarMaDtuong.DefaultSetting = @"";
				colvarMaDtuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDtuong);
				
				TableSchema.TableColumn colvarIdGoiDvu = new TableSchema.TableColumn(schema);
				colvarIdGoiDvu.ColumnName = "ID_GOI_DVU";
				colvarIdGoiDvu.DataType = DbType.Int32;
				colvarIdGoiDvu.MaxLength = 0;
				colvarIdGoiDvu.AutoIncrement = false;
				colvarIdGoiDvu.IsNullable = true;
				colvarIdGoiDvu.IsPrimaryKey = false;
				colvarIdGoiDvu.IsForeignKey = false;
				colvarIdGoiDvu.IsReadOnly = false;
				colvarIdGoiDvu.DefaultSetting = @"";
				colvarIdGoiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGoiDvu);
				
				TableSchema.TableColumn colvarSoNgay = new TableSchema.TableColumn(schema);
				colvarSoNgay.ColumnName = "SO_NGAY";
				colvarSoNgay.DataType = DbType.Int32;
				colvarSoNgay.MaxLength = 0;
				colvarSoNgay.AutoIncrement = false;
				colvarSoNgay.IsNullable = true;
				colvarSoNgay.IsPrimaryKey = false;
				colvarSoNgay.IsForeignKey = false;
				colvarSoNgay.IsReadOnly = false;
				colvarSoNgay.DefaultSetting = @"";
				colvarSoNgay.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoNgay);
				
				TableSchema.TableColumn colvarSoTien = new TableSchema.TableColumn(schema);
				colvarSoTien.ColumnName = "SO_TIEN";
				colvarSoTien.DataType = DbType.Decimal;
				colvarSoTien.MaxLength = 0;
				colvarSoTien.AutoIncrement = false;
				colvarSoTien.IsNullable = true;
				colvarSoTien.IsPrimaryKey = false;
				colvarSoTien.IsForeignKey = false;
				colvarSoTien.IsReadOnly = false;
				colvarSoTien.DefaultSetting = @"";
				colvarSoTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoTien);
				
				TableSchema.TableColumn colvarNgayHethan = new TableSchema.TableColumn(schema);
				colvarNgayHethan.ColumnName = "NGAY_HETHAN";
				colvarNgayHethan.DataType = DbType.DateTime;
				colvarNgayHethan.MaxLength = 0;
				colvarNgayHethan.AutoIncrement = false;
				colvarNgayHethan.IsNullable = true;
				colvarNgayHethan.IsPrimaryKey = false;
				colvarNgayHethan.IsForeignKey = false;
				colvarNgayHethan.IsReadOnly = false;
				colvarNgayHethan.DefaultSetting = @"";
				colvarNgayHethan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayHethan);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "TRANG_THAI";
				colvarTrangThai.DataType = DbType.Int32;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = true;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				colvarTrangThai.DefaultSetting = @"";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarDaXacNhan = new TableSchema.TableColumn(schema);
				colvarDaXacNhan.ColumnName = "DA_XAC_NHAN";
				colvarDaXacNhan.DataType = DbType.Byte;
				colvarDaXacNhan.MaxLength = 0;
				colvarDaXacNhan.AutoIncrement = false;
				colvarDaXacNhan.IsNullable = true;
				colvarDaXacNhan.IsPrimaryKey = false;
				colvarDaXacNhan.IsForeignKey = false;
				colvarDaXacNhan.IsReadOnly = false;
				
						colvarDaXacNhan.DefaultSetting = @"((0))";
				colvarDaXacNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaXacNhan);
				
				TableSchema.TableColumn colvarIdNhanVien = new TableSchema.TableColumn(schema);
				colvarIdNhanVien.ColumnName = "ID_NHAN_VIEN";
				colvarIdNhanVien.DataType = DbType.Int32;
				colvarIdNhanVien.MaxLength = 0;
				colvarIdNhanVien.AutoIncrement = false;
				colvarIdNhanVien.IsNullable = true;
				colvarIdNhanVien.IsPrimaryKey = false;
				colvarIdNhanVien.IsForeignKey = false;
				colvarIdNhanVien.IsReadOnly = false;
				colvarIdNhanVien.DefaultSetting = @"";
				colvarIdNhanVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhanVien);
				
				TableSchema.TableColumn colvarDaTtoan = new TableSchema.TableColumn(schema);
				colvarDaTtoan.ColumnName = "DA_TTOAN";
				colvarDaTtoan.DataType = DbType.Byte;
				colvarDaTtoan.MaxLength = 0;
				colvarDaTtoan.AutoIncrement = false;
				colvarDaTtoan.IsNullable = true;
				colvarDaTtoan.IsPrimaryKey = false;
				colvarDaTtoan.IsForeignKey = false;
				colvarDaTtoan.IsReadOnly = false;
				colvarDaTtoan.DefaultSetting = @"";
				colvarDaTtoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaTtoan);
				
				TableSchema.TableColumn colvarNgayKhoat = new TableSchema.TableColumn(schema);
				colvarNgayKhoat.ColumnName = "NGAY_KHOAT";
				colvarNgayKhoat.DataType = DbType.DateTime;
				colvarNgayKhoat.MaxLength = 0;
				colvarNgayKhoat.AutoIncrement = false;
				colvarNgayKhoat.IsNullable = true;
				colvarNgayKhoat.IsPrimaryKey = false;
				colvarNgayKhoat.IsForeignKey = false;
				colvarNgayKhoat.IsReadOnly = false;
				colvarNgayKhoat.DefaultSetting = @"";
				colvarNgayKhoat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayKhoat);
				
				TableSchema.TableColumn colvarNguoiKhoat = new TableSchema.TableColumn(schema);
				colvarNguoiKhoat.ColumnName = "NGUOI_KHOAT";
				colvarNguoiKhoat.DataType = DbType.String;
				colvarNguoiKhoat.MaxLength = 50;
				colvarNguoiKhoat.AutoIncrement = false;
				colvarNguoiKhoat.IsNullable = true;
				colvarNguoiKhoat.IsPrimaryKey = false;
				colvarNguoiKhoat.IsForeignKey = false;
				colvarNguoiKhoat.IsReadOnly = false;
				colvarNguoiKhoat.DefaultSetting = @"";
				colvarNguoiKhoat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiKhoat);
				
				TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
				colvarPaymentId.ColumnName = "Payment_ID";
				colvarPaymentId.DataType = DbType.Int32;
				colvarPaymentId.MaxLength = 0;
				colvarPaymentId.AutoIncrement = false;
				colvarPaymentId.IsNullable = true;
				colvarPaymentId.IsPrimaryKey = false;
				colvarPaymentId.IsForeignKey = false;
				colvarPaymentId.IsReadOnly = false;
				colvarPaymentId.DefaultSetting = @"";
				colvarPaymentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentId);
				
				TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
				colvarGhiChu.ColumnName = "GHI_CHU";
				colvarGhiChu.DataType = DbType.String;
				colvarGhiChu.MaxLength = 1000;
				colvarGhiChu.AutoIncrement = false;
				colvarGhiChu.IsNullable = true;
				colvarGhiChu.IsPrimaryKey = false;
				colvarGhiChu.IsForeignKey = false;
				colvarGhiChu.IsReadOnly = false;
				colvarGhiChu.DefaultSetting = @"";
				colvarGhiChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChu);
				
				TableSchema.TableColumn colvarNoiTru = new TableSchema.TableColumn(schema);
				colvarNoiTru.ColumnName = "NOI_TRU";
				colvarNoiTru.DataType = DbType.Int32;
				colvarNoiTru.MaxLength = 0;
				colvarNoiTru.AutoIncrement = false;
				colvarNoiTru.IsNullable = true;
				colvarNoiTru.IsPrimaryKey = false;
				colvarNoiTru.IsForeignKey = false;
				colvarNoiTru.IsReadOnly = false;
				colvarNoiTru.DefaultSetting = @"";
				colvarNoiTru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoiTru);
				
				TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
				colvarDepartmentId.ColumnName = "Department_ID";
				colvarDepartmentId.DataType = DbType.Int32;
				colvarDepartmentId.MaxLength = 0;
				colvarDepartmentId.AutoIncrement = false;
				colvarDepartmentId.IsNullable = true;
				colvarDepartmentId.IsPrimaryKey = false;
				colvarDepartmentId.IsForeignKey = false;
				colvarDepartmentId.IsReadOnly = false;
				colvarDepartmentId.DefaultSetting = @"";
				colvarDepartmentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDepartmentId);
				
				TableSchema.TableColumn colvarRegId = new TableSchema.TableColumn(schema);
				colvarRegId.ColumnName = "Reg_ID";
				colvarRegId.DataType = DbType.Int32;
				colvarRegId.MaxLength = 0;
				colvarRegId.AutoIncrement = false;
				colvarRegId.IsNullable = true;
				colvarRegId.IsPrimaryKey = false;
				colvarRegId.IsForeignKey = false;
				colvarRegId.IsReadOnly = false;
				colvarRegId.DefaultSetting = @"";
				colvarRegId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegId);
				
				TableSchema.TableColumn colvarFromIdGoiDvu = new TableSchema.TableColumn(schema);
				colvarFromIdGoiDvu.ColumnName = "FROM_ID_GOI_DVU";
				colvarFromIdGoiDvu.DataType = DbType.Int32;
				colvarFromIdGoiDvu.MaxLength = 0;
				colvarFromIdGoiDvu.AutoIncrement = false;
				colvarFromIdGoiDvu.IsNullable = true;
				colvarFromIdGoiDvu.IsPrimaryKey = false;
				colvarFromIdGoiDvu.IsForeignKey = false;
				colvarFromIdGoiDvu.IsReadOnly = false;
				colvarFromIdGoiDvu.DefaultSetting = @"";
				colvarFromIdGoiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFromIdGoiDvu);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarLyDoChuyen = new TableSchema.TableColumn(schema);
				colvarLyDoChuyen.ColumnName = "LY_DO_CHUYEN";
				colvarLyDoChuyen.DataType = DbType.String;
				colvarLyDoChuyen.MaxLength = 500;
				colvarLyDoChuyen.AutoIncrement = false;
				colvarLyDoChuyen.IsNullable = true;
				colvarLyDoChuyen.IsPrimaryKey = false;
				colvarLyDoChuyen.IsForeignKey = false;
				colvarLyDoChuyen.IsReadOnly = false;
				colvarLyDoChuyen.DefaultSetting = @"";
				colvarLyDoChuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLyDoChuyen);
				
				TableSchema.TableColumn colvarNgayKthuc = new TableSchema.TableColumn(schema);
				colvarNgayKthuc.ColumnName = "NGAY_KTHUC";
				colvarNgayKthuc.DataType = DbType.DateTime;
				colvarNgayKthuc.MaxLength = 0;
				colvarNgayKthuc.AutoIncrement = false;
				colvarNgayKthuc.IsNullable = true;
				colvarNgayKthuc.IsPrimaryKey = false;
				colvarNgayKthuc.IsForeignKey = false;
				colvarNgayKthuc.IsReadOnly = false;
				colvarNgayKthuc.DefaultSetting = @"";
				colvarNgayKthuc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayKthuc);
				
				TableSchema.TableColumn colvarNguoiKthuc = new TableSchema.TableColumn(schema);
				colvarNguoiKthuc.ColumnName = "NGUOI_KTHUC";
				colvarNguoiKthuc.DataType = DbType.String;
				colvarNguoiKthuc.MaxLength = 50;
				colvarNguoiKthuc.AutoIncrement = false;
				colvarNguoiKthuc.IsNullable = true;
				colvarNguoiKthuc.IsPrimaryKey = false;
				colvarNguoiKthuc.IsForeignKey = false;
				colvarNguoiKthuc.IsReadOnly = false;
				colvarNguoiKthuc.DefaultSetting = @"";
				colvarNguoiKthuc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiKthuc);
				
				TableSchema.TableColumn colvarDaHuy = new TableSchema.TableColumn(schema);
				colvarDaHuy.ColumnName = "DA_HUY";
				colvarDaHuy.DataType = DbType.Int32;
				colvarDaHuy.MaxLength = 0;
				colvarDaHuy.AutoIncrement = false;
				colvarDaHuy.IsNullable = true;
				colvarDaHuy.IsPrimaryKey = false;
				colvarDaHuy.IsForeignKey = false;
				colvarDaHuy.IsReadOnly = false;
				
						colvarDaHuy.DefaultSetting = @"((0))";
				colvarDaHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaHuy);
				
				TableSchema.TableColumn colvarSoTienTraLai = new TableSchema.TableColumn(schema);
				colvarSoTienTraLai.ColumnName = "SO_TIEN_TRA_LAI";
				colvarSoTienTraLai.DataType = DbType.Decimal;
				colvarSoTienTraLai.MaxLength = 0;
				colvarSoTienTraLai.AutoIncrement = false;
				colvarSoTienTraLai.IsNullable = true;
				colvarSoTienTraLai.IsPrimaryKey = false;
				colvarSoTienTraLai.IsForeignKey = false;
				colvarSoTienTraLai.IsReadOnly = false;
				
						colvarSoTienTraLai.DefaultSetting = @"((0))";
				colvarSoTienTraLai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoTienTraLai);
				
				TableSchema.TableColumn colvarDatTruoc = new TableSchema.TableColumn(schema);
				colvarDatTruoc.ColumnName = "DAT_TRUOC";
				colvarDatTruoc.DataType = DbType.Int32;
				colvarDatTruoc.MaxLength = 0;
				colvarDatTruoc.AutoIncrement = false;
				colvarDatTruoc.IsNullable = true;
				colvarDatTruoc.IsPrimaryKey = false;
				colvarDatTruoc.IsForeignKey = false;
				colvarDatTruoc.IsReadOnly = false;
				
						colvarDatTruoc.DefaultSetting = @"((0))";
				colvarDatTruoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDatTruoc);
				
				TableSchema.TableColumn colvarKetLuan = new TableSchema.TableColumn(schema);
				colvarKetLuan.ColumnName = "KET_LUAN";
				colvarKetLuan.DataType = DbType.String;
				colvarKetLuan.MaxLength = 500;
				colvarKetLuan.AutoIncrement = false;
				colvarKetLuan.IsNullable = true;
				colvarKetLuan.IsPrimaryKey = false;
				colvarKetLuan.IsForeignKey = false;
				colvarKetLuan.IsReadOnly = false;
				colvarKetLuan.DefaultSetting = @"";
				colvarKetLuan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKetLuan);
				
				TableSchema.TableColumn colvarExamId = new TableSchema.TableColumn(schema);
				colvarExamId.ColumnName = "Exam_ID";
				colvarExamId.DataType = DbType.Int32;
				colvarExamId.MaxLength = 0;
				colvarExamId.AutoIncrement = false;
				colvarExamId.IsNullable = true;
				colvarExamId.IsPrimaryKey = false;
				colvarExamId.IsForeignKey = false;
				colvarExamId.IsReadOnly = false;
				colvarExamId.DefaultSetting = @"";
				colvarExamId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarExamId);
				
				TableSchema.TableColumn colvarNgayThucHien = new TableSchema.TableColumn(schema);
				colvarNgayThucHien.ColumnName = "NGAY_THUC_HIEN";
				colvarNgayThucHien.DataType = DbType.DateTime;
				colvarNgayThucHien.MaxLength = 0;
				colvarNgayThucHien.AutoIncrement = false;
				colvarNgayThucHien.IsNullable = true;
				colvarNgayThucHien.IsPrimaryKey = false;
				colvarNgayThucHien.IsForeignKey = false;
				colvarNgayThucHien.IsReadOnly = false;
				colvarNgayThucHien.DefaultSetting = @"";
				colvarNgayThucHien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayThucHien);
				
				TableSchema.TableColumn colvarNguoiThucHien = new TableSchema.TableColumn(schema);
				colvarNguoiThucHien.ColumnName = "NGUOI_THUC_HIEN";
				colvarNguoiThucHien.DataType = DbType.String;
				colvarNguoiThucHien.MaxLength = 50;
				colvarNguoiThucHien.AutoIncrement = false;
				colvarNguoiThucHien.IsNullable = true;
				colvarNguoiThucHien.IsPrimaryKey = false;
				colvarNguoiThucHien.IsForeignKey = false;
				colvarNguoiThucHien.IsReadOnly = false;
				colvarNguoiThucHien.DefaultSetting = @"";
				colvarNguoiThucHien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiThucHien);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_THONGTIN_GOI_DVU_BNHAN",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdPhieu")]
		[Bindable(true)]
		public int IdPhieu 
		{
			get { return GetColumnValue<int>(Columns.IdPhieu); }
			set { SetColumnValue(Columns.IdPhieu, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public int PatientId 
		{
			get { return GetColumnValue<int>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("MaDtuong")]
		[Bindable(true)]
		public string MaDtuong 
		{
			get { return GetColumnValue<string>(Columns.MaDtuong); }
			set { SetColumnValue(Columns.MaDtuong, value); }
		}
		  
		[XmlAttribute("IdGoiDvu")]
		[Bindable(true)]
		public int? IdGoiDvu 
		{
			get { return GetColumnValue<int?>(Columns.IdGoiDvu); }
			set { SetColumnValue(Columns.IdGoiDvu, value); }
		}
		  
		[XmlAttribute("SoNgay")]
		[Bindable(true)]
		public int? SoNgay 
		{
			get { return GetColumnValue<int?>(Columns.SoNgay); }
			set { SetColumnValue(Columns.SoNgay, value); }
		}
		  
		[XmlAttribute("SoTien")]
		[Bindable(true)]
		public decimal? SoTien 
		{
			get { return GetColumnValue<decimal?>(Columns.SoTien); }
			set { SetColumnValue(Columns.SoTien, value); }
		}
		  
		[XmlAttribute("NgayHethan")]
		[Bindable(true)]
		public DateTime? NgayHethan 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayHethan); }
			set { SetColumnValue(Columns.NgayHethan, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public int? TrangThai 
		{
			get { return GetColumnValue<int?>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("DaXacNhan")]
		[Bindable(true)]
		public byte? DaXacNhan 
		{
			get { return GetColumnValue<byte?>(Columns.DaXacNhan); }
			set { SetColumnValue(Columns.DaXacNhan, value); }
		}
		  
		[XmlAttribute("IdNhanVien")]
		[Bindable(true)]
		public int? IdNhanVien 
		{
			get { return GetColumnValue<int?>(Columns.IdNhanVien); }
			set { SetColumnValue(Columns.IdNhanVien, value); }
		}
		  
		[XmlAttribute("DaTtoan")]
		[Bindable(true)]
		public byte? DaTtoan 
		{
			get { return GetColumnValue<byte?>(Columns.DaTtoan); }
			set { SetColumnValue(Columns.DaTtoan, value); }
		}
		  
		[XmlAttribute("NgayKhoat")]
		[Bindable(true)]
		public DateTime? NgayKhoat 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayKhoat); }
			set { SetColumnValue(Columns.NgayKhoat, value); }
		}
		  
		[XmlAttribute("NguoiKhoat")]
		[Bindable(true)]
		public string NguoiKhoat 
		{
			get { return GetColumnValue<string>(Columns.NguoiKhoat); }
			set { SetColumnValue(Columns.NguoiKhoat, value); }
		}
		  
		[XmlAttribute("PaymentId")]
		[Bindable(true)]
		public int? PaymentId 
		{
			get { return GetColumnValue<int?>(Columns.PaymentId); }
			set { SetColumnValue(Columns.PaymentId, value); }
		}
		  
		[XmlAttribute("GhiChu")]
		[Bindable(true)]
		public string GhiChu 
		{
			get { return GetColumnValue<string>(Columns.GhiChu); }
			set { SetColumnValue(Columns.GhiChu, value); }
		}
		  
		[XmlAttribute("NoiTru")]
		[Bindable(true)]
		public int? NoiTru 
		{
			get { return GetColumnValue<int?>(Columns.NoiTru); }
			set { SetColumnValue(Columns.NoiTru, value); }
		}
		  
		[XmlAttribute("DepartmentId")]
		[Bindable(true)]
		public int? DepartmentId 
		{
			get { return GetColumnValue<int?>(Columns.DepartmentId); }
			set { SetColumnValue(Columns.DepartmentId, value); }
		}
		  
		[XmlAttribute("RegId")]
		[Bindable(true)]
		public int? RegId 
		{
			get { return GetColumnValue<int?>(Columns.RegId); }
			set { SetColumnValue(Columns.RegId, value); }
		}
		  
		[XmlAttribute("FromIdGoiDvu")]
		[Bindable(true)]
		public int? FromIdGoiDvu 
		{
			get { return GetColumnValue<int?>(Columns.FromIdGoiDvu); }
			set { SetColumnValue(Columns.FromIdGoiDvu, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("LyDoChuyen")]
		[Bindable(true)]
		public string LyDoChuyen 
		{
			get { return GetColumnValue<string>(Columns.LyDoChuyen); }
			set { SetColumnValue(Columns.LyDoChuyen, value); }
		}
		  
		[XmlAttribute("NgayKthuc")]
		[Bindable(true)]
		public DateTime? NgayKthuc 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayKthuc); }
			set { SetColumnValue(Columns.NgayKthuc, value); }
		}
		  
		[XmlAttribute("NguoiKthuc")]
		[Bindable(true)]
		public string NguoiKthuc 
		{
			get { return GetColumnValue<string>(Columns.NguoiKthuc); }
			set { SetColumnValue(Columns.NguoiKthuc, value); }
		}
		  
		[XmlAttribute("DaHuy")]
		[Bindable(true)]
		public int? DaHuy 
		{
			get { return GetColumnValue<int?>(Columns.DaHuy); }
			set { SetColumnValue(Columns.DaHuy, value); }
		}
		  
		[XmlAttribute("SoTienTraLai")]
		[Bindable(true)]
		public decimal? SoTienTraLai 
		{
			get { return GetColumnValue<decimal?>(Columns.SoTienTraLai); }
			set { SetColumnValue(Columns.SoTienTraLai, value); }
		}
		  
		[XmlAttribute("DatTruoc")]
		[Bindable(true)]
		public int? DatTruoc 
		{
			get { return GetColumnValue<int?>(Columns.DatTruoc); }
			set { SetColumnValue(Columns.DatTruoc, value); }
		}
		  
		[XmlAttribute("KetLuan")]
		[Bindable(true)]
		public string KetLuan 
		{
			get { return GetColumnValue<string>(Columns.KetLuan); }
			set { SetColumnValue(Columns.KetLuan, value); }
		}
		  
		[XmlAttribute("ExamId")]
		[Bindable(true)]
		public int? ExamId 
		{
			get { return GetColumnValue<int?>(Columns.ExamId); }
			set { SetColumnValue(Columns.ExamId, value); }
		}
		  
		[XmlAttribute("NgayThucHien")]
		[Bindable(true)]
		public DateTime? NgayThucHien 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayThucHien); }
			set { SetColumnValue(Columns.NgayThucHien, value); }
		}
		  
		[XmlAttribute("NguoiThucHien")]
		[Bindable(true)]
		public string NguoiThucHien 
		{
			get { return GetColumnValue<string>(Columns.NguoiThucHien); }
			set { SetColumnValue(Columns.NguoiThucHien, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varPatientCode,int varPatientId,string varMaDtuong,int? varIdGoiDvu,int? varSoNgay,decimal? varSoTien,DateTime? varNgayHethan,DateTime? varNgayTao,string varNguoiTao,int? varTrangThai,byte? varDaXacNhan,int? varIdNhanVien,byte? varDaTtoan,DateTime? varNgayKhoat,string varNguoiKhoat,int? varPaymentId,string varGhiChu,int? varNoiTru,int? varDepartmentId,int? varRegId,int? varFromIdGoiDvu,DateTime? varNgaySua,string varNguoiSua,string varLyDoChuyen,DateTime? varNgayKthuc,string varNguoiKthuc,int? varDaHuy,decimal? varSoTienTraLai,int? varDatTruoc,string varKetLuan,int? varExamId,DateTime? varNgayThucHien,string varNguoiThucHien)
		{
			TThongtinGoiDvuBnhan item = new TThongtinGoiDvuBnhan();
			
			item.PatientCode = varPatientCode;
			
			item.PatientId = varPatientId;
			
			item.MaDtuong = varMaDtuong;
			
			item.IdGoiDvu = varIdGoiDvu;
			
			item.SoNgay = varSoNgay;
			
			item.SoTien = varSoTien;
			
			item.NgayHethan = varNgayHethan;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.TrangThai = varTrangThai;
			
			item.DaXacNhan = varDaXacNhan;
			
			item.IdNhanVien = varIdNhanVien;
			
			item.DaTtoan = varDaTtoan;
			
			item.NgayKhoat = varNgayKhoat;
			
			item.NguoiKhoat = varNguoiKhoat;
			
			item.PaymentId = varPaymentId;
			
			item.GhiChu = varGhiChu;
			
			item.NoiTru = varNoiTru;
			
			item.DepartmentId = varDepartmentId;
			
			item.RegId = varRegId;
			
			item.FromIdGoiDvu = varFromIdGoiDvu;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
			item.LyDoChuyen = varLyDoChuyen;
			
			item.NgayKthuc = varNgayKthuc;
			
			item.NguoiKthuc = varNguoiKthuc;
			
			item.DaHuy = varDaHuy;
			
			item.SoTienTraLai = varSoTienTraLai;
			
			item.DatTruoc = varDatTruoc;
			
			item.KetLuan = varKetLuan;
			
			item.ExamId = varExamId;
			
			item.NgayThucHien = varNgayThucHien;
			
			item.NguoiThucHien = varNguoiThucHien;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdPhieu,string varPatientCode,int varPatientId,string varMaDtuong,int? varIdGoiDvu,int? varSoNgay,decimal? varSoTien,DateTime? varNgayHethan,DateTime? varNgayTao,string varNguoiTao,int? varTrangThai,byte? varDaXacNhan,int? varIdNhanVien,byte? varDaTtoan,DateTime? varNgayKhoat,string varNguoiKhoat,int? varPaymentId,string varGhiChu,int? varNoiTru,int? varDepartmentId,int? varRegId,int? varFromIdGoiDvu,DateTime? varNgaySua,string varNguoiSua,string varLyDoChuyen,DateTime? varNgayKthuc,string varNguoiKthuc,int? varDaHuy,decimal? varSoTienTraLai,int? varDatTruoc,string varKetLuan,int? varExamId,DateTime? varNgayThucHien,string varNguoiThucHien)
		{
			TThongtinGoiDvuBnhan item = new TThongtinGoiDvuBnhan();
			
				item.IdPhieu = varIdPhieu;
			
				item.PatientCode = varPatientCode;
			
				item.PatientId = varPatientId;
			
				item.MaDtuong = varMaDtuong;
			
				item.IdGoiDvu = varIdGoiDvu;
			
				item.SoNgay = varSoNgay;
			
				item.SoTien = varSoTien;
			
				item.NgayHethan = varNgayHethan;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.TrangThai = varTrangThai;
			
				item.DaXacNhan = varDaXacNhan;
			
				item.IdNhanVien = varIdNhanVien;
			
				item.DaTtoan = varDaTtoan;
			
				item.NgayKhoat = varNgayKhoat;
			
				item.NguoiKhoat = varNguoiKhoat;
			
				item.PaymentId = varPaymentId;
			
				item.GhiChu = varGhiChu;
			
				item.NoiTru = varNoiTru;
			
				item.DepartmentId = varDepartmentId;
			
				item.RegId = varRegId;
			
				item.FromIdGoiDvu = varFromIdGoiDvu;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
				item.LyDoChuyen = varLyDoChuyen;
			
				item.NgayKthuc = varNgayKthuc;
			
				item.NguoiKthuc = varNguoiKthuc;
			
				item.DaHuy = varDaHuy;
			
				item.SoTienTraLai = varSoTienTraLai;
			
				item.DatTruoc = varDatTruoc;
			
				item.KetLuan = varKetLuan;
			
				item.ExamId = varExamId;
			
				item.NgayThucHien = varNgayThucHien;
			
				item.NguoiThucHien = varNguoiThucHien;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdPhieuColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDtuongColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGoiDvuColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn SoNgayColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn SoTienColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayHethanColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn DaXacNhanColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhanVienColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn DaTtoanColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayKhoatColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiKhoatColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentIdColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NoiTruColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn DepartmentIdColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn RegIdColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn FromIdGoiDvuColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn LyDoChuyenColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayKthucColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiKthucColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn DaHuyColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn SoTienTraLaiColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn DatTruocColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn KetLuanColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn ExamIdColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayThucHienColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiThucHienColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdPhieu = @"ID_PHIEU";
			 public static string PatientCode = @"Patient_Code";
			 public static string PatientId = @"Patient_ID";
			 public static string MaDtuong = @"MA_DTUONG";
			 public static string IdGoiDvu = @"ID_GOI_DVU";
			 public static string SoNgay = @"SO_NGAY";
			 public static string SoTien = @"SO_TIEN";
			 public static string NgayHethan = @"NGAY_HETHAN";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string TrangThai = @"TRANG_THAI";
			 public static string DaXacNhan = @"DA_XAC_NHAN";
			 public static string IdNhanVien = @"ID_NHAN_VIEN";
			 public static string DaTtoan = @"DA_TTOAN";
			 public static string NgayKhoat = @"NGAY_KHOAT";
			 public static string NguoiKhoat = @"NGUOI_KHOAT";
			 public static string PaymentId = @"Payment_ID";
			 public static string GhiChu = @"GHI_CHU";
			 public static string NoiTru = @"NOI_TRU";
			 public static string DepartmentId = @"Department_ID";
			 public static string RegId = @"Reg_ID";
			 public static string FromIdGoiDvu = @"FROM_ID_GOI_DVU";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string LyDoChuyen = @"LY_DO_CHUYEN";
			 public static string NgayKthuc = @"NGAY_KTHUC";
			 public static string NguoiKthuc = @"NGUOI_KTHUC";
			 public static string DaHuy = @"DA_HUY";
			 public static string SoTienTraLai = @"SO_TIEN_TRA_LAI";
			 public static string DatTruoc = @"DAT_TRUOC";
			 public static string KetLuan = @"KET_LUAN";
			 public static string ExamId = @"Exam_ID";
			 public static string NgayThucHien = @"NGAY_THUC_HIEN";
			 public static string NguoiThucHien = @"NGUOI_THUC_HIEN";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
