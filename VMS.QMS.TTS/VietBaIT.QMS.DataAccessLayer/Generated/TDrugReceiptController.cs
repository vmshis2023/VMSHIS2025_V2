using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_DRUG_RECEIPT
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TDrugReceiptController
    {
        // Preload our schema..
        TDrugReceipt thisSchemaLoad = new TDrugReceipt();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TDrugReceiptCollection FetchAll()
        {
            TDrugReceiptCollection coll = new TDrugReceiptCollection();
            Query qry = new Query(TDrugReceipt.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TDrugReceiptCollection FetchByID(object ReceiptId)
        {
            TDrugReceiptCollection coll = new TDrugReceiptCollection().Where("Receipt_ID", ReceiptId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TDrugReceiptCollection FetchByQuery(Query qry)
        {
            TDrugReceiptCollection coll = new TDrugReceiptCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object ReceiptId)
        {
            return (TDrugReceipt.Delete(ReceiptId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object ReceiptId)
        {
            return (TDrugReceipt.Destroy(ReceiptId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(short? FromStockId,short ToStockId,DateTime InputDate,short InputUser,byte Status,string CreatedBy,DateTime CreatedDate,string ModifiedBy,DateTime? ModifiedDate,string Lot,short? SupplyUnitId,short? HasUpdatedPrice,short? ReceiptType,DateTime? NgayChot,DateTime? NgayXacnhan)
	    {
		    TDrugReceipt item = new TDrugReceipt();
		    
            item.FromStockId = FromStockId;
            
            item.ToStockId = ToStockId;
            
            item.InputDate = InputDate;
            
            item.InputUser = InputUser;
            
            item.Status = Status;
            
            item.CreatedBy = CreatedBy;
            
            item.CreatedDate = CreatedDate;
            
            item.ModifiedBy = ModifiedBy;
            
            item.ModifiedDate = ModifiedDate;
            
            item.Lot = Lot;
            
            item.SupplyUnitId = SupplyUnitId;
            
            item.HasUpdatedPrice = HasUpdatedPrice;
            
            item.ReceiptType = ReceiptType;
            
            item.NgayChot = NgayChot;
            
            item.NgayXacnhan = NgayXacnhan;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int ReceiptId,short? FromStockId,short ToStockId,DateTime InputDate,short InputUser,byte Status,string CreatedBy,DateTime CreatedDate,string ModifiedBy,DateTime? ModifiedDate,string Lot,short? SupplyUnitId,short? HasUpdatedPrice,short? ReceiptType,DateTime? NgayChot,DateTime? NgayXacnhan)
	    {
		    TDrugReceipt item = new TDrugReceipt();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.ReceiptId = ReceiptId;
				
			item.FromStockId = FromStockId;
				
			item.ToStockId = ToStockId;
				
			item.InputDate = InputDate;
				
			item.InputUser = InputUser;
				
			item.Status = Status;
				
			item.CreatedBy = CreatedBy;
				
			item.CreatedDate = CreatedDate;
				
			item.ModifiedBy = ModifiedBy;
				
			item.ModifiedDate = ModifiedDate;
				
			item.Lot = Lot;
				
			item.SupplyUnitId = SupplyUnitId;
				
			item.HasUpdatedPrice = HasUpdatedPrice;
				
			item.ReceiptType = ReceiptType;
				
			item.NgayChot = NgayChot;
				
			item.NgayXacnhan = NgayXacnhan;
				
	        item.Save(UserName);
	    }
    }
}
