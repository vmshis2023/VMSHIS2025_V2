using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_Patient_Exam
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TPatientExamController
    {
        // Preload our schema..
        TPatientExam thisSchemaLoad = new TPatientExam();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TPatientExamCollection FetchAll()
        {
            TPatientExamCollection coll = new TPatientExamCollection();
            Query qry = new Query(TPatientExam.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TPatientExamCollection FetchByID(object PatientId)
        {
            TPatientExamCollection coll = new TPatientExamCollection().Where("Patient_ID", PatientId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TPatientExamCollection FetchByQuery(Query qry)
        {
            TPatientExamCollection coll = new TPatientExamCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object PatientId)
        {
            return (TPatientExam.Delete(PatientId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object PatientId)
        {
            return (TPatientExam.Destroy(PatientId) == 1);
        }
        
        
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(long PatientId,string PatientCode)
        {
            Query qry = new Query(TPatientExam.Schema);
            qry.QueryType = QueryType.Delete;
            qry.AddWhere("PatientId", PatientId).AND("PatientCode", PatientCode);
            qry.Execute();
            return (true);
        }        
       
    	
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long PatientId,string PatientCode,short ObjectTypeId,byte HosTrans,string RelativeName,string RelativePhone,string RelativeAddress,string InsuranceNum,DateTime? InsuranceFromDate,DateTime? InsuranceToDate,string InsuranceSupply,string InsClinicCode,string InsObjectCode,DateTime? PaymentDate,int? InsObjectCodeNumber,string InsObjectCodeTP,string InsLastObjectCode,DateTime InputDate,string UserId,byte HosStatus,decimal? DiscountRate,byte? DiscountType,decimal? OrgirinMoney,decimal? SurchargePrice,decimal? LastMoney,string Desc,byte? Locked,string DeleteBy,DateTime? DeleteDate,string ReasonBy,long? IndentityNo,DateTime? OutDateTime,int? DepartmentId,short? DisOfUser,decimal? SalaryBasic,string SCreateBy,DateTime? SCreateDate,decimal? SDiscountPrice,decimal? SDiscountRate,byte? SDiscountType,string SModifyBy,DateTime? SModifyDate,int? RankId,int? UnitId,int? EmergencyHos,int? ToHos,string PositionName,string Symptoms,byte? CorrectLine,decimal? ExtendInsurancePrice,int? FromClinicStatus,string ToClinicCode,byte? KetQuaDt,string ChanDoanGiaiPhauTuThi,byte? GiaiPhauBenh,byte? KhamTuThi,DateTime? NgayTuVong,string NguyenNhanTuVong,byte? TinhTrangTuVong,string MBenhChinh,string MBenhPhu,string MBenhSauPt,string MBenhTruocPt,string SDescBenhChinh,string SDescBenhPhu,string SDescSauPt,string SDescTruocPt,byte? TinhTrangRaVienStatus,string GhiChuCv,byte DisplayOnReport,string MedicalNumber,int? TaiBien,int? BienChung,int? ThuThuat,int? PhauThuat,int? TongSoNgayDtri,string MaDoiTuong,byte? THopStatus,byte? KieuBn,byte? DaKhoatGoi,int? IdKhoaTnhan,int? IdRavien,DateTime? NgayNhapVien,int? IdGoiDvu,int? DaSinh,int? IdBenhly,int? NgoaiThanh,decimal? SoTienGoi,int? SoNgay,DateTime? NgaySua,DateTime? NgayTao,string NguoiSua,string NguoiTao,string IpMacSua,string IpMacTao,string IpMaySua,string IpMayTao,string MaKhoaThien,string ChanDoanChinh,string ChanDoanPhu,string CachXly,DateTime? NgayRaVien,short? BedId,bool? BoVien,string CdoanNvien,string CdoanTtruoc,short? IdNoiGioiThieu,string MbenhNvien,string MbenhTtruoc,string NbaotinQhe,short? RoomId,string ThongBao,string SoKhaiSinh,short? IdDviCapTren,short? IdChucVu,bool? TuyenXa,DateTime? NgayKthuc,bool? GiayBhyt,short? PtramBhytDThe,string MaDTSSong,bool? KhoaTheBHYT)
	    {
		    TPatientExam item = new TPatientExam();
		    
            item.PatientId = PatientId;
            
            item.PatientCode = PatientCode;
            
            item.ObjectTypeId = ObjectTypeId;
            
            item.HosTrans = HosTrans;
            
            item.RelativeName = RelativeName;
            
            item.RelativePhone = RelativePhone;
            
            item.RelativeAddress = RelativeAddress;
            
            item.InsuranceNum = InsuranceNum;
            
            item.InsuranceFromDate = InsuranceFromDate;
            
            item.InsuranceToDate = InsuranceToDate;
            
            item.InsuranceSupply = InsuranceSupply;
            
            item.InsClinicCode = InsClinicCode;
            
            item.InsObjectCode = InsObjectCode;
            
            item.PaymentDate = PaymentDate;
            
            item.InsObjectCodeNumber = InsObjectCodeNumber;
            
            item.InsObjectCodeTP = InsObjectCodeTP;
            
            item.InsLastObjectCode = InsLastObjectCode;
            
            item.InputDate = InputDate;
            
            item.UserId = UserId;
            
            item.HosStatus = HosStatus;
            
            item.DiscountRate = DiscountRate;
            
            item.DiscountType = DiscountType;
            
            item.OrgirinMoney = OrgirinMoney;
            
            item.SurchargePrice = SurchargePrice;
            
            item.LastMoney = LastMoney;
            
            item.Desc = Desc;
            
            item.Locked = Locked;
            
            item.DeleteBy = DeleteBy;
            
            item.DeleteDate = DeleteDate;
            
            item.ReasonBy = ReasonBy;
            
            item.IndentityNo = IndentityNo;
            
            item.OutDateTime = OutDateTime;
            
            item.DepartmentId = DepartmentId;
            
            item.DisOfUser = DisOfUser;
            
            item.SalaryBasic = SalaryBasic;
            
            item.SCreateBy = SCreateBy;
            
            item.SCreateDate = SCreateDate;
            
            item.SDiscountPrice = SDiscountPrice;
            
            item.SDiscountRate = SDiscountRate;
            
            item.SDiscountType = SDiscountType;
            
            item.SModifyBy = SModifyBy;
            
            item.SModifyDate = SModifyDate;
            
            item.RankId = RankId;
            
            item.UnitId = UnitId;
            
            item.EmergencyHos = EmergencyHos;
            
            item.ToHos = ToHos;
            
            item.PositionName = PositionName;
            
            item.Symptoms = Symptoms;
            
            item.CorrectLine = CorrectLine;
            
            item.ExtendInsurancePrice = ExtendInsurancePrice;
            
            item.FromClinicStatus = FromClinicStatus;
            
            item.ToClinicCode = ToClinicCode;
            
            item.KetQuaDt = KetQuaDt;
            
            item.ChanDoanGiaiPhauTuThi = ChanDoanGiaiPhauTuThi;
            
            item.GiaiPhauBenh = GiaiPhauBenh;
            
            item.KhamTuThi = KhamTuThi;
            
            item.NgayTuVong = NgayTuVong;
            
            item.NguyenNhanTuVong = NguyenNhanTuVong;
            
            item.TinhTrangTuVong = TinhTrangTuVong;
            
            item.MBenhChinh = MBenhChinh;
            
            item.MBenhPhu = MBenhPhu;
            
            item.MBenhSauPt = MBenhSauPt;
            
            item.MBenhTruocPt = MBenhTruocPt;
            
            item.SDescBenhChinh = SDescBenhChinh;
            
            item.SDescBenhPhu = SDescBenhPhu;
            
            item.SDescSauPt = SDescSauPt;
            
            item.SDescTruocPt = SDescTruocPt;
            
            item.TinhTrangRaVienStatus = TinhTrangRaVienStatus;
            
            item.GhiChuCv = GhiChuCv;
            
            item.DisplayOnReport = DisplayOnReport;
            
            item.MedicalNumber = MedicalNumber;
            
            item.TaiBien = TaiBien;
            
            item.BienChung = BienChung;
            
            item.ThuThuat = ThuThuat;
            
            item.PhauThuat = PhauThuat;
            
            item.TongSoNgayDtri = TongSoNgayDtri;
            
            item.MaDoiTuong = MaDoiTuong;
            
            item.THopStatus = THopStatus;
            
            item.KieuBn = KieuBn;
            
            item.DaKhoatGoi = DaKhoatGoi;
            
            item.IdKhoaTnhan = IdKhoaTnhan;
            
            item.IdRavien = IdRavien;
            
            item.NgayNhapVien = NgayNhapVien;
            
            item.IdGoiDvu = IdGoiDvu;
            
            item.DaSinh = DaSinh;
            
            item.IdBenhly = IdBenhly;
            
            item.NgoaiThanh = NgoaiThanh;
            
            item.SoTienGoi = SoTienGoi;
            
            item.SoNgay = SoNgay;
            
            item.NgaySua = NgaySua;
            
            item.NgayTao = NgayTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NguoiTao = NguoiTao;
            
            item.IpMacSua = IpMacSua;
            
            item.IpMacTao = IpMacTao;
            
            item.IpMaySua = IpMaySua;
            
            item.IpMayTao = IpMayTao;
            
            item.MaKhoaThien = MaKhoaThien;
            
            item.ChanDoanChinh = ChanDoanChinh;
            
            item.ChanDoanPhu = ChanDoanPhu;
            
            item.CachXly = CachXly;
            
            item.NgayRaVien = NgayRaVien;
            
            item.BedId = BedId;
            
            item.BoVien = BoVien;
            
            item.CdoanNvien = CdoanNvien;
            
            item.CdoanTtruoc = CdoanTtruoc;
            
            item.IdNoiGioiThieu = IdNoiGioiThieu;
            
            item.MbenhNvien = MbenhNvien;
            
            item.MbenhTtruoc = MbenhTtruoc;
            
            item.NbaotinQhe = NbaotinQhe;
            
            item.RoomId = RoomId;
            
            item.ThongBao = ThongBao;
            
            item.SoKhaiSinh = SoKhaiSinh;
            
            item.IdDviCapTren = IdDviCapTren;
            
            item.IdChucVu = IdChucVu;
            
            item.TuyenXa = TuyenXa;
            
            item.NgayKthuc = NgayKthuc;
            
            item.GiayBhyt = GiayBhyt;
            
            item.PtramBhytDThe = PtramBhytDThe;
            
            item.MaDTSSong = MaDTSSong;
            
            item.KhoaTheBHYT = KhoaTheBHYT;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long PatientId,string PatientCode,short ObjectTypeId,byte HosTrans,string RelativeName,string RelativePhone,string RelativeAddress,string InsuranceNum,DateTime? InsuranceFromDate,DateTime? InsuranceToDate,string InsuranceSupply,string InsClinicCode,string InsObjectCode,DateTime? PaymentDate,int? InsObjectCodeNumber,string InsObjectCodeTP,string InsLastObjectCode,DateTime InputDate,string UserId,byte HosStatus,decimal? DiscountRate,byte? DiscountType,decimal? OrgirinMoney,decimal? SurchargePrice,decimal? LastMoney,string Desc,byte? Locked,string DeleteBy,DateTime? DeleteDate,string ReasonBy,long? IndentityNo,DateTime? OutDateTime,int? DepartmentId,short? DisOfUser,decimal? SalaryBasic,string SCreateBy,DateTime? SCreateDate,decimal? SDiscountPrice,decimal? SDiscountRate,byte? SDiscountType,string SModifyBy,DateTime? SModifyDate,int? RankId,int? UnitId,int? EmergencyHos,int? ToHos,string PositionName,string Symptoms,byte? CorrectLine,decimal? ExtendInsurancePrice,int? FromClinicStatus,string ToClinicCode,byte? KetQuaDt,string ChanDoanGiaiPhauTuThi,byte? GiaiPhauBenh,byte? KhamTuThi,DateTime? NgayTuVong,string NguyenNhanTuVong,byte? TinhTrangTuVong,string MBenhChinh,string MBenhPhu,string MBenhSauPt,string MBenhTruocPt,string SDescBenhChinh,string SDescBenhPhu,string SDescSauPt,string SDescTruocPt,byte? TinhTrangRaVienStatus,string GhiChuCv,byte DisplayOnReport,string MedicalNumber,int? TaiBien,int? BienChung,int? ThuThuat,int? PhauThuat,int? TongSoNgayDtri,string MaDoiTuong,byte? THopStatus,byte? KieuBn,byte? DaKhoatGoi,int? IdKhoaTnhan,int? IdRavien,DateTime? NgayNhapVien,int? IdGoiDvu,int? DaSinh,int? IdBenhly,int? NgoaiThanh,decimal? SoTienGoi,int? SoNgay,DateTime? NgaySua,DateTime? NgayTao,string NguoiSua,string NguoiTao,string IpMacSua,string IpMacTao,string IpMaySua,string IpMayTao,string MaKhoaThien,string ChanDoanChinh,string ChanDoanPhu,string CachXly,DateTime? NgayRaVien,short? BedId,bool? BoVien,string CdoanNvien,string CdoanTtruoc,short? IdNoiGioiThieu,string MbenhNvien,string MbenhTtruoc,string NbaotinQhe,short? RoomId,string ThongBao,string SoKhaiSinh,short? IdDviCapTren,short? IdChucVu,bool? TuyenXa,DateTime? NgayKthuc,bool? GiayBhyt,short? PtramBhytDThe,string MaDTSSong,bool? KhoaTheBHYT)
	    {
		    TPatientExam item = new TPatientExam();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.PatientId = PatientId;
				
			item.PatientCode = PatientCode;
				
			item.ObjectTypeId = ObjectTypeId;
				
			item.HosTrans = HosTrans;
				
			item.RelativeName = RelativeName;
				
			item.RelativePhone = RelativePhone;
				
			item.RelativeAddress = RelativeAddress;
				
			item.InsuranceNum = InsuranceNum;
				
			item.InsuranceFromDate = InsuranceFromDate;
				
			item.InsuranceToDate = InsuranceToDate;
				
			item.InsuranceSupply = InsuranceSupply;
				
			item.InsClinicCode = InsClinicCode;
				
			item.InsObjectCode = InsObjectCode;
				
			item.PaymentDate = PaymentDate;
				
			item.InsObjectCodeNumber = InsObjectCodeNumber;
				
			item.InsObjectCodeTP = InsObjectCodeTP;
				
			item.InsLastObjectCode = InsLastObjectCode;
				
			item.InputDate = InputDate;
				
			item.UserId = UserId;
				
			item.HosStatus = HosStatus;
				
			item.DiscountRate = DiscountRate;
				
			item.DiscountType = DiscountType;
				
			item.OrgirinMoney = OrgirinMoney;
				
			item.SurchargePrice = SurchargePrice;
				
			item.LastMoney = LastMoney;
				
			item.Desc = Desc;
				
			item.Locked = Locked;
				
			item.DeleteBy = DeleteBy;
				
			item.DeleteDate = DeleteDate;
				
			item.ReasonBy = ReasonBy;
				
			item.IndentityNo = IndentityNo;
				
			item.OutDateTime = OutDateTime;
				
			item.DepartmentId = DepartmentId;
				
			item.DisOfUser = DisOfUser;
				
			item.SalaryBasic = SalaryBasic;
				
			item.SCreateBy = SCreateBy;
				
			item.SCreateDate = SCreateDate;
				
			item.SDiscountPrice = SDiscountPrice;
				
			item.SDiscountRate = SDiscountRate;
				
			item.SDiscountType = SDiscountType;
				
			item.SModifyBy = SModifyBy;
				
			item.SModifyDate = SModifyDate;
				
			item.RankId = RankId;
				
			item.UnitId = UnitId;
				
			item.EmergencyHos = EmergencyHos;
				
			item.ToHos = ToHos;
				
			item.PositionName = PositionName;
				
			item.Symptoms = Symptoms;
				
			item.CorrectLine = CorrectLine;
				
			item.ExtendInsurancePrice = ExtendInsurancePrice;
				
			item.FromClinicStatus = FromClinicStatus;
				
			item.ToClinicCode = ToClinicCode;
				
			item.KetQuaDt = KetQuaDt;
				
			item.ChanDoanGiaiPhauTuThi = ChanDoanGiaiPhauTuThi;
				
			item.GiaiPhauBenh = GiaiPhauBenh;
				
			item.KhamTuThi = KhamTuThi;
				
			item.NgayTuVong = NgayTuVong;
				
			item.NguyenNhanTuVong = NguyenNhanTuVong;
				
			item.TinhTrangTuVong = TinhTrangTuVong;
				
			item.MBenhChinh = MBenhChinh;
				
			item.MBenhPhu = MBenhPhu;
				
			item.MBenhSauPt = MBenhSauPt;
				
			item.MBenhTruocPt = MBenhTruocPt;
				
			item.SDescBenhChinh = SDescBenhChinh;
				
			item.SDescBenhPhu = SDescBenhPhu;
				
			item.SDescSauPt = SDescSauPt;
				
			item.SDescTruocPt = SDescTruocPt;
				
			item.TinhTrangRaVienStatus = TinhTrangRaVienStatus;
				
			item.GhiChuCv = GhiChuCv;
				
			item.DisplayOnReport = DisplayOnReport;
				
			item.MedicalNumber = MedicalNumber;
				
			item.TaiBien = TaiBien;
				
			item.BienChung = BienChung;
				
			item.ThuThuat = ThuThuat;
				
			item.PhauThuat = PhauThuat;
				
			item.TongSoNgayDtri = TongSoNgayDtri;
				
			item.MaDoiTuong = MaDoiTuong;
				
			item.THopStatus = THopStatus;
				
			item.KieuBn = KieuBn;
				
			item.DaKhoatGoi = DaKhoatGoi;
				
			item.IdKhoaTnhan = IdKhoaTnhan;
				
			item.IdRavien = IdRavien;
				
			item.NgayNhapVien = NgayNhapVien;
				
			item.IdGoiDvu = IdGoiDvu;
				
			item.DaSinh = DaSinh;
				
			item.IdBenhly = IdBenhly;
				
			item.NgoaiThanh = NgoaiThanh;
				
			item.SoTienGoi = SoTienGoi;
				
			item.SoNgay = SoNgay;
				
			item.NgaySua = NgaySua;
				
			item.NgayTao = NgayTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NguoiTao = NguoiTao;
				
			item.IpMacSua = IpMacSua;
				
			item.IpMacTao = IpMacTao;
				
			item.IpMaySua = IpMaySua;
				
			item.IpMayTao = IpMayTao;
				
			item.MaKhoaThien = MaKhoaThien;
				
			item.ChanDoanChinh = ChanDoanChinh;
				
			item.ChanDoanPhu = ChanDoanPhu;
				
			item.CachXly = CachXly;
				
			item.NgayRaVien = NgayRaVien;
				
			item.BedId = BedId;
				
			item.BoVien = BoVien;
				
			item.CdoanNvien = CdoanNvien;
				
			item.CdoanTtruoc = CdoanTtruoc;
				
			item.IdNoiGioiThieu = IdNoiGioiThieu;
				
			item.MbenhNvien = MbenhNvien;
				
			item.MbenhTtruoc = MbenhTtruoc;
				
			item.NbaotinQhe = NbaotinQhe;
				
			item.RoomId = RoomId;
				
			item.ThongBao = ThongBao;
				
			item.SoKhaiSinh = SoKhaiSinh;
				
			item.IdDviCapTren = IdDviCapTren;
				
			item.IdChucVu = IdChucVu;
				
			item.TuyenXa = TuyenXa;
				
			item.NgayKthuc = NgayKthuc;
				
			item.GiayBhyt = GiayBhyt;
				
			item.PtramBhytDThe = PtramBhytDThe;
				
			item.MaDTSSong = MaDTSSong;
				
			item.KhoaTheBHYT = KhoaTheBHYT;
				
	        item.Save(UserName);
	    }
    }
}
