using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for L_ThuVien_ChanDoan
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class LThuVienChanDoanController
    {
        // Preload our schema..
        LThuVienChanDoan thisSchemaLoad = new LThuVienChanDoan();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public LThuVienChanDoanCollection FetchAll()
        {
            LThuVienChanDoanCollection coll = new LThuVienChanDoanCollection();
            Query qry = new Query(LThuVienChanDoan.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public LThuVienChanDoanCollection FetchByID(object Id)
        {
            LThuVienChanDoanCollection coll = new LThuVienChanDoanCollection().Where("ID", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public LThuVienChanDoanCollection FetchByQuery(Query qry)
        {
            LThuVienChanDoanCollection coll = new LThuVienChanDoanCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (LThuVienChanDoan.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (LThuVienChanDoan.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string BenhChinh,string BenhPhu,string ChanDoan,int? ParentId,string ObjectTypeCode,int? ServiceId,int? ServiceDetailId,int? StaffId,int? DepartmentId,string NguoiTao,DateTime? NgayTao,string KetLuan,string KieuCode,int? Quantity)
	    {
		    LThuVienChanDoan item = new LThuVienChanDoan();
		    
            item.BenhChinh = BenhChinh;
            
            item.BenhPhu = BenhPhu;
            
            item.ChanDoan = ChanDoan;
            
            item.ParentId = ParentId;
            
            item.ObjectTypeCode = ObjectTypeCode;
            
            item.ServiceId = ServiceId;
            
            item.ServiceDetailId = ServiceDetailId;
            
            item.StaffId = StaffId;
            
            item.DepartmentId = DepartmentId;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.KetLuan = KetLuan;
            
            item.KieuCode = KieuCode;
            
            item.Quantity = Quantity;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Id,string BenhChinh,string BenhPhu,string ChanDoan,int? ParentId,string ObjectTypeCode,int? ServiceId,int? ServiceDetailId,int? StaffId,int? DepartmentId,string NguoiTao,DateTime? NgayTao,string KetLuan,string KieuCode,int? Quantity)
	    {
		    LThuVienChanDoan item = new LThuVienChanDoan();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.BenhChinh = BenhChinh;
				
			item.BenhPhu = BenhPhu;
				
			item.ChanDoan = ChanDoan;
				
			item.ParentId = ParentId;
				
			item.ObjectTypeCode = ObjectTypeCode;
				
			item.ServiceId = ServiceId;
				
			item.ServiceDetailId = ServiceDetailId;
				
			item.StaffId = StaffId;
				
			item.DepartmentId = DepartmentId;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.KetLuan = KetLuan;
				
			item.KieuCode = KieuCode;
				
			item.Quantity = Quantity;
				
	        item.Save(UserName);
	    }
    }
}
