using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_PHIEUTHU
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TPhieuthuController
    {
        // Preload our schema..
        TPhieuthu thisSchemaLoad = new TPhieuthu();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TPhieuthuCollection FetchAll()
        {
            TPhieuthuCollection coll = new TPhieuthuCollection();
            Query qry = new Query(TPhieuthu.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TPhieuthuCollection FetchByID(object MaPthu)
        {
            TPhieuthuCollection coll = new TPhieuthuCollection().Where("MA_PTHU", MaPthu).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TPhieuthuCollection FetchByQuery(Query qry)
        {
            TPhieuthuCollection coll = new TPhieuthuCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object MaPthu)
        {
            return (TPhieuthu.Delete(MaPthu) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object MaPthu)
        {
            return (TPhieuthu.Destroy(MaPthu) == 1);
        }
        
        
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(string MaPthu,long PaymentId)
        {
            Query qry = new Query(TPhieuthu.Schema);
            qry.QueryType = QueryType.Delete;
            qry.AddWhere("MaPthu", MaPthu).AND("PaymentId", PaymentId);
            qry.Execute();
            return (true);
        }        
       
    	
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string MaPthu,long PaymentId,DateTime NgayThien,string NguoiNop,string LdoNop,decimal SoTien,short? SluongCtuGoc,string TkhoanNo,string TkhoanCo,byte? LoaiPhieu,string IpMaySua,string IpMayTao,short? IdKhoa,short? IdNhanVien,DateTime? NgaySua,DateTime? NgayTao,string NguoiSua,string NguoiTao)
	    {
		    TPhieuthu item = new TPhieuthu();
		    
            item.MaPthu = MaPthu;
            
            item.PaymentId = PaymentId;
            
            item.NgayThien = NgayThien;
            
            item.NguoiNop = NguoiNop;
            
            item.LdoNop = LdoNop;
            
            item.SoTien = SoTien;
            
            item.SluongCtuGoc = SluongCtuGoc;
            
            item.TkhoanNo = TkhoanNo;
            
            item.TkhoanCo = TkhoanCo;
            
            item.LoaiPhieu = LoaiPhieu;
            
            item.IpMaySua = IpMaySua;
            
            item.IpMayTao = IpMayTao;
            
            item.IdKhoa = IdKhoa;
            
            item.IdNhanVien = IdNhanVien;
            
            item.NgaySua = NgaySua;
            
            item.NgayTao = NgayTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NguoiTao = NguoiTao;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(string MaPthu,long PaymentId,DateTime NgayThien,string NguoiNop,string LdoNop,decimal SoTien,short? SluongCtuGoc,string TkhoanNo,string TkhoanCo,byte? LoaiPhieu,string IpMaySua,string IpMayTao,short? IdKhoa,short? IdNhanVien,DateTime? NgaySua,DateTime? NgayTao,string NguoiSua,string NguoiTao)
	    {
		    TPhieuthu item = new TPhieuthu();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.MaPthu = MaPthu;
				
			item.PaymentId = PaymentId;
				
			item.NgayThien = NgayThien;
				
			item.NguoiNop = NguoiNop;
				
			item.LdoNop = LdoNop;
				
			item.SoTien = SoTien;
				
			item.SluongCtuGoc = SluongCtuGoc;
				
			item.TkhoanNo = TkhoanNo;
				
			item.TkhoanCo = TkhoanCo;
				
			item.LoaiPhieu = LoaiPhieu;
				
			item.IpMaySua = IpMaySua;
				
			item.IpMayTao = IpMayTao;
				
			item.IdKhoa = IdKhoa;
				
			item.IdNhanVien = IdNhanVien;
				
			item.NgaySua = NgaySua;
				
			item.NgayTao = NgayTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NguoiTao = NguoiTao;
				
	        item.Save(UserName);
	    }
    }
}
