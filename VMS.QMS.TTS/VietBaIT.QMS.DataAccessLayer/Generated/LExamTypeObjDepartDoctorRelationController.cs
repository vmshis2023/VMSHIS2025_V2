using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for L_ExamType_Obj_Depart_Doctor_Relation
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class LExamTypeObjDepartDoctorRelationController
    {
        // Preload our schema..
        LExamTypeObjDepartDoctorRelation thisSchemaLoad = new LExamTypeObjDepartDoctorRelation();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public LExamTypeObjDepartDoctorRelationCollection FetchAll()
        {
            LExamTypeObjDepartDoctorRelationCollection coll = new LExamTypeObjDepartDoctorRelationCollection();
            Query qry = new Query(LExamTypeObjDepartDoctorRelation.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public LExamTypeObjDepartDoctorRelationCollection FetchByID(object Id)
        {
            LExamTypeObjDepartDoctorRelationCollection coll = new LExamTypeObjDepartDoctorRelationCollection().Where("ID", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public LExamTypeObjDepartDoctorRelationCollection FetchByQuery(Query qry)
        {
            LExamTypeObjDepartDoctorRelationCollection coll = new LExamTypeObjDepartDoctorRelationCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (LExamTypeObjDepartDoctorRelation.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (LExamTypeObjDepartDoctorRelation.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string Code,string Name,short ExamTypeId,short DepartmentId,short DoctorId,short ObjectTypeId,short RoomDept,decimal Price,decimal? Surcharge,string MaDtuong,int? ThuTu,byte? IsPayment,int? IdPhiKtheo,int? IdPhiKtheoNgio,string GhiChu,decimal? DonGiaNGio,decimal? PhuThuNGio)
	    {
		    LExamTypeObjDepartDoctorRelation item = new LExamTypeObjDepartDoctorRelation();
		    
            item.Code = Code;
            
            item.Name = Name;
            
            item.ExamTypeId = ExamTypeId;
            
            item.DepartmentId = DepartmentId;
            
            item.DoctorId = DoctorId;
            
            item.ObjectTypeId = ObjectTypeId;
            
            item.RoomDept = RoomDept;
            
            item.Price = Price;
            
            item.Surcharge = Surcharge;
            
            item.MaDtuong = MaDtuong;
            
            item.ThuTu = ThuTu;
            
            item.IsPayment = IsPayment;
            
            item.IdPhiKtheo = IdPhiKtheo;
            
            item.IdPhiKtheoNgio = IdPhiKtheoNgio;
            
            item.GhiChu = GhiChu;
            
            item.DonGiaNGio = DonGiaNGio;
            
            item.PhuThuNGio = PhuThuNGio;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Id,string Code,string Name,short ExamTypeId,short DepartmentId,short DoctorId,short ObjectTypeId,short RoomDept,decimal Price,decimal? Surcharge,string MaDtuong,int? ThuTu,byte? IsPayment,int? IdPhiKtheo,int? IdPhiKtheoNgio,string GhiChu,decimal? DonGiaNGio,decimal? PhuThuNGio)
	    {
		    LExamTypeObjDepartDoctorRelation item = new LExamTypeObjDepartDoctorRelation();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.Code = Code;
				
			item.Name = Name;
				
			item.ExamTypeId = ExamTypeId;
				
			item.DepartmentId = DepartmentId;
				
			item.DoctorId = DoctorId;
				
			item.ObjectTypeId = ObjectTypeId;
				
			item.RoomDept = RoomDept;
				
			item.Price = Price;
				
			item.Surcharge = Surcharge;
				
			item.MaDtuong = MaDtuong;
				
			item.ThuTu = ThuTu;
				
			item.IsPayment = IsPayment;
				
			item.IdPhiKtheo = IdPhiKtheo;
				
			item.IdPhiKtheoNgio = IdPhiKtheoNgio;
				
			item.GhiChu = GhiChu;
				
			item.DonGiaNGio = DonGiaNGio;
				
			item.PhuThuNGio = PhuThuNGio;
				
	        item.Save(UserName);
	    }
    }
}
