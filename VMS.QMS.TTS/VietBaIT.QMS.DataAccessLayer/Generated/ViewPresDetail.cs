using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewPresDetail class.
    /// </summary>
    [Serializable]
    public partial class ViewPresDetailCollection : ReadOnlyList<ViewPresDetail, ViewPresDetailCollection>
    {        
        public ViewPresDetailCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_PresDetail view.
    /// </summary>
    [Serializable]
    public partial class ViewPresDetail : ReadOnlyRecord<ViewPresDetail>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_PresDetail", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarPresDetailId = new TableSchema.TableColumn(schema);
                colvarPresDetailId.ColumnName = "PresDetail_ID";
                colvarPresDetailId.DataType = DbType.Int32;
                colvarPresDetailId.MaxLength = 0;
                colvarPresDetailId.AutoIncrement = false;
                colvarPresDetailId.IsNullable = false;
                colvarPresDetailId.IsPrimaryKey = false;
                colvarPresDetailId.IsForeignKey = false;
                colvarPresDetailId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPresDetailId);
                
                TableSchema.TableColumn colvarPresId = new TableSchema.TableColumn(schema);
                colvarPresId.ColumnName = "Pres_ID";
                colvarPresId.DataType = DbType.Int32;
                colvarPresId.MaxLength = 0;
                colvarPresId.AutoIncrement = false;
                colvarPresId.IsNullable = false;
                colvarPresId.IsPrimaryKey = false;
                colvarPresId.IsForeignKey = false;
                colvarPresId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPresId);
                
                TableSchema.TableColumn colvarDrugId = new TableSchema.TableColumn(schema);
                colvarDrugId.ColumnName = "Drug_ID";
                colvarDrugId.DataType = DbType.Int32;
                colvarDrugId.MaxLength = 0;
                colvarDrugId.AutoIncrement = false;
                colvarDrugId.IsNullable = false;
                colvarDrugId.IsPrimaryKey = false;
                colvarDrugId.IsForeignKey = false;
                colvarDrugId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugId);
                
                TableSchema.TableColumn colvarExpireDate = new TableSchema.TableColumn(schema);
                colvarExpireDate.ColumnName = "Expire_Date";
                colvarExpireDate.DataType = DbType.DateTime;
                colvarExpireDate.MaxLength = 0;
                colvarExpireDate.AutoIncrement = false;
                colvarExpireDate.IsNullable = false;
                colvarExpireDate.IsPrimaryKey = false;
                colvarExpireDate.IsForeignKey = false;
                colvarExpireDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarExpireDate);
                
                TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
                colvarQuantity.ColumnName = "Quantity";
                colvarQuantity.DataType = DbType.Int32;
                colvarQuantity.MaxLength = 0;
                colvarQuantity.AutoIncrement = false;
                colvarQuantity.IsNullable = false;
                colvarQuantity.IsPrimaryKey = false;
                colvarQuantity.IsForeignKey = false;
                colvarQuantity.IsReadOnly = false;
                
                schema.Columns.Add(colvarQuantity);
                
                TableSchema.TableColumn colvarPrice = new TableSchema.TableColumn(schema);
                colvarPrice.ColumnName = "Price";
                colvarPrice.DataType = DbType.Decimal;
                colvarPrice.MaxLength = 0;
                colvarPrice.AutoIncrement = false;
                colvarPrice.IsNullable = false;
                colvarPrice.IsPrimaryKey = false;
                colvarPrice.IsForeignKey = false;
                colvarPrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrice);
                
                TableSchema.TableColumn colvarSurchargePrice = new TableSchema.TableColumn(schema);
                colvarSurchargePrice.ColumnName = "Surcharge_Price";
                colvarSurchargePrice.DataType = DbType.Decimal;
                colvarSurchargePrice.MaxLength = 0;
                colvarSurchargePrice.AutoIncrement = false;
                colvarSurchargePrice.IsNullable = true;
                colvarSurchargePrice.IsPrimaryKey = false;
                colvarSurchargePrice.IsForeignKey = false;
                colvarSurchargePrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarSurchargePrice);
                
                TableSchema.TableColumn colvarSDesc = new TableSchema.TableColumn(schema);
                colvarSDesc.ColumnName = "sDesc";
                colvarSDesc.DataType = DbType.String;
                colvarSDesc.MaxLength = 500;
                colvarSDesc.AutoIncrement = false;
                colvarSDesc.IsNullable = true;
                colvarSDesc.IsPrimaryKey = false;
                colvarSDesc.IsForeignKey = false;
                colvarSDesc.IsReadOnly = false;
                
                schema.Columns.Add(colvarSDesc);
                
                TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
                colvarPaymentStatus.ColumnName = "Payment_Status";
                colvarPaymentStatus.DataType = DbType.Int32;
                colvarPaymentStatus.MaxLength = 0;
                colvarPaymentStatus.AutoIncrement = false;
                colvarPaymentStatus.IsNullable = true;
                colvarPaymentStatus.IsPrimaryKey = false;
                colvarPaymentStatus.IsForeignKey = false;
                colvarPaymentStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentStatus);
                
                TableSchema.TableColumn colvarQuantityCancel = new TableSchema.TableColumn(schema);
                colvarQuantityCancel.ColumnName = "Quantity_Cancel";
                colvarQuantityCancel.DataType = DbType.Int32;
                colvarQuantityCancel.MaxLength = 0;
                colvarQuantityCancel.AutoIncrement = false;
                colvarQuantityCancel.IsNullable = true;
                colvarQuantityCancel.IsPrimaryKey = false;
                colvarQuantityCancel.IsForeignKey = false;
                colvarQuantityCancel.IsReadOnly = false;
                
                schema.Columns.Add(colvarQuantityCancel);
                
                TableSchema.TableColumn colvarIsCancel = new TableSchema.TableColumn(schema);
                colvarIsCancel.ColumnName = "IsCancel";
                colvarIsCancel.DataType = DbType.Int32;
                colvarIsCancel.MaxLength = 0;
                colvarIsCancel.AutoIncrement = false;
                colvarIsCancel.IsNullable = true;
                colvarIsCancel.IsPrimaryKey = false;
                colvarIsCancel.IsForeignKey = false;
                colvarIsCancel.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsCancel);
                
                TableSchema.TableColumn colvarCancelBy = new TableSchema.TableColumn(schema);
                colvarCancelBy.ColumnName = "Cancel_By";
                colvarCancelBy.DataType = DbType.String;
                colvarCancelBy.MaxLength = 20;
                colvarCancelBy.AutoIncrement = false;
                colvarCancelBy.IsNullable = true;
                colvarCancelBy.IsPrimaryKey = false;
                colvarCancelBy.IsForeignKey = false;
                colvarCancelBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarCancelBy);
                
                TableSchema.TableColumn colvarCancelDate = new TableSchema.TableColumn(schema);
                colvarCancelDate.ColumnName = "Cancel_Date";
                colvarCancelDate.DataType = DbType.DateTime;
                colvarCancelDate.MaxLength = 0;
                colvarCancelDate.AutoIncrement = false;
                colvarCancelDate.IsNullable = true;
                colvarCancelDate.IsPrimaryKey = false;
                colvarCancelDate.IsForeignKey = false;
                colvarCancelDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCancelDate);
                
                TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
                colvarPaymentDate.ColumnName = "Payment_Date";
                colvarPaymentDate.DataType = DbType.DateTime;
                colvarPaymentDate.MaxLength = 0;
                colvarPaymentDate.AutoIncrement = false;
                colvarPaymentDate.IsNullable = true;
                colvarPaymentDate.IsPrimaryKey = false;
                colvarPaymentDate.IsForeignKey = false;
                colvarPaymentDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentDate);
                
                TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
                colvarIsPayment.ColumnName = "IsPayment";
                colvarIsPayment.DataType = DbType.Byte;
                colvarIsPayment.MaxLength = 0;
                colvarIsPayment.AutoIncrement = false;
                colvarIsPayment.IsNullable = true;
                colvarIsPayment.IsPrimaryKey = false;
                colvarIsPayment.IsForeignKey = false;
                colvarIsPayment.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsPayment);
                
                TableSchema.TableColumn colvarStockId = new TableSchema.TableColumn(schema);
                colvarStockId.ColumnName = "Stock_ID";
                colvarStockId.DataType = DbType.Int32;
                colvarStockId.MaxLength = 0;
                colvarStockId.AutoIncrement = false;
                colvarStockId.IsNullable = true;
                colvarStockId.IsPrimaryKey = false;
                colvarStockId.IsForeignKey = false;
                colvarStockId.IsReadOnly = false;
                
                schema.Columns.Add(colvarStockId);
                
                TableSchema.TableColumn colvarHasComfirm = new TableSchema.TableColumn(schema);
                colvarHasComfirm.ColumnName = "HasComfirm";
                colvarHasComfirm.DataType = DbType.Byte;
                colvarHasComfirm.MaxLength = 0;
                colvarHasComfirm.AutoIncrement = false;
                colvarHasComfirm.IsNullable = true;
                colvarHasComfirm.IsPrimaryKey = false;
                colvarHasComfirm.IsForeignKey = false;
                colvarHasComfirm.IsReadOnly = false;
                
                schema.Columns.Add(colvarHasComfirm);
                
                TableSchema.TableColumn colvarBhytStatus = new TableSchema.TableColumn(schema);
                colvarBhytStatus.ColumnName = "BHYT_Status";
                colvarBhytStatus.DataType = DbType.Byte;
                colvarBhytStatus.MaxLength = 0;
                colvarBhytStatus.AutoIncrement = false;
                colvarBhytStatus.IsNullable = true;
                colvarBhytStatus.IsPrimaryKey = false;
                colvarBhytStatus.IsForeignKey = false;
                colvarBhytStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarBhytStatus);
                
                TableSchema.TableColumn colvarThuTuIn = new TableSchema.TableColumn(schema);
                colvarThuTuIn.ColumnName = "Thu_Tu_In";
                colvarThuTuIn.DataType = DbType.Int16;
                colvarThuTuIn.MaxLength = 0;
                colvarThuTuIn.AutoIncrement = false;
                colvarThuTuIn.IsNullable = true;
                colvarThuTuIn.IsPrimaryKey = false;
                colvarThuTuIn.IsForeignKey = false;
                colvarThuTuIn.IsReadOnly = false;
                
                schema.Columns.Add(colvarThuTuIn);
                
                TableSchema.TableColumn colvarGiaBhytCt = new TableSchema.TableColumn(schema);
                colvarGiaBhytCt.ColumnName = "Gia_BHYT_CT";
                colvarGiaBhytCt.DataType = DbType.Decimal;
                colvarGiaBhytCt.MaxLength = 0;
                colvarGiaBhytCt.AutoIncrement = false;
                colvarGiaBhytCt.IsNullable = true;
                colvarGiaBhytCt.IsPrimaryKey = false;
                colvarGiaBhytCt.IsForeignKey = false;
                colvarGiaBhytCt.IsReadOnly = false;
                
                schema.Columns.Add(colvarGiaBhytCt);
                
                TableSchema.TableColumn colvarGiaBnct = new TableSchema.TableColumn(schema);
                colvarGiaBnct.ColumnName = "Gia_BNCT";
                colvarGiaBnct.DataType = DbType.Decimal;
                colvarGiaBnct.MaxLength = 0;
                colvarGiaBnct.AutoIncrement = false;
                colvarGiaBnct.IsNullable = true;
                colvarGiaBnct.IsPrimaryKey = false;
                colvarGiaBnct.IsForeignKey = false;
                colvarGiaBnct.IsReadOnly = false;
                
                schema.Columns.Add(colvarGiaBnct);
                
                TableSchema.TableColumn colvarMaDTuong = new TableSchema.TableColumn(schema);
                colvarMaDTuong.ColumnName = "Ma_DTuong";
                colvarMaDTuong.DataType = DbType.AnsiString;
                colvarMaDTuong.MaxLength = 50;
                colvarMaDTuong.AutoIncrement = false;
                colvarMaDTuong.IsNullable = true;
                colvarMaDTuong.IsPrimaryKey = false;
                colvarMaDTuong.IsForeignKey = false;
                colvarMaDTuong.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaDTuong);
                
                TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
                colvarPaymentId.ColumnName = "Payment_ID";
                colvarPaymentId.DataType = DbType.Int32;
                colvarPaymentId.MaxLength = 0;
                colvarPaymentId.AutoIncrement = false;
                colvarPaymentId.IsNullable = true;
                colvarPaymentId.IsPrimaryKey = false;
                colvarPaymentId.IsForeignKey = false;
                colvarPaymentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentId);
                
                TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
                colvarTrongGoi.ColumnName = "TRONG_GOI";
                colvarTrongGoi.DataType = DbType.Byte;
                colvarTrongGoi.MaxLength = 0;
                colvarTrongGoi.AutoIncrement = false;
                colvarTrongGoi.IsNullable = true;
                colvarTrongGoi.IsPrimaryKey = false;
                colvarTrongGoi.IsForeignKey = false;
                colvarTrongGoi.IsReadOnly = false;
                
                schema.Columns.Add(colvarTrongGoi);
                
                TableSchema.TableColumn colvarCachDung = new TableSchema.TableColumn(schema);
                colvarCachDung.ColumnName = "CACH_DUNG";
                colvarCachDung.DataType = DbType.String;
                colvarCachDung.MaxLength = 20;
                colvarCachDung.AutoIncrement = false;
                colvarCachDung.IsNullable = true;
                colvarCachDung.IsPrimaryKey = false;
                colvarCachDung.IsForeignKey = false;
                colvarCachDung.IsReadOnly = false;
                
                schema.Columns.Add(colvarCachDung);
                
                TableSchema.TableColumn colvarXacNhan = new TableSchema.TableColumn(schema);
                colvarXacNhan.ColumnName = "XAC_NHAN";
                colvarXacNhan.DataType = DbType.Byte;
                colvarXacNhan.MaxLength = 0;
                colvarXacNhan.AutoIncrement = false;
                colvarXacNhan.IsNullable = true;
                colvarXacNhan.IsPrimaryKey = false;
                colvarXacNhan.IsForeignKey = false;
                colvarXacNhan.IsReadOnly = false;
                
                schema.Columns.Add(colvarXacNhan);
                
                TableSchema.TableColumn colvarChiDanThem = new TableSchema.TableColumn(schema);
                colvarChiDanThem.ColumnName = "CHI_DAN_THEM";
                colvarChiDanThem.DataType = DbType.String;
                colvarChiDanThem.MaxLength = 255;
                colvarChiDanThem.AutoIncrement = false;
                colvarChiDanThem.IsNullable = true;
                colvarChiDanThem.IsPrimaryKey = false;
                colvarChiDanThem.IsForeignKey = false;
                colvarChiDanThem.IsReadOnly = false;
                
                schema.Columns.Add(colvarChiDanThem);
                
                TableSchema.TableColumn colvarDviDung = new TableSchema.TableColumn(schema);
                colvarDviDung.ColumnName = "DVI_DUNG";
                colvarDviDung.DataType = DbType.String;
                colvarDviDung.MaxLength = 20;
                colvarDviDung.AutoIncrement = false;
                colvarDviDung.IsNullable = true;
                colvarDviDung.IsPrimaryKey = false;
                colvarDviDung.IsForeignKey = false;
                colvarDviDung.IsReadOnly = false;
                
                schema.Columns.Add(colvarDviDung);
                
                TableSchema.TableColumn colvarSoLanDung = new TableSchema.TableColumn(schema);
                colvarSoLanDung.ColumnName = "SO_LAN_DUNG";
                colvarSoLanDung.DataType = DbType.String;
                colvarSoLanDung.MaxLength = 10;
                colvarSoLanDung.AutoIncrement = false;
                colvarSoLanDung.IsNullable = true;
                colvarSoLanDung.IsPrimaryKey = false;
                colvarSoLanDung.IsForeignKey = false;
                colvarSoLanDung.IsReadOnly = false;
                
                schema.Columns.Add(colvarSoLanDung);
                
                TableSchema.TableColumn colvarSoLuongDung = new TableSchema.TableColumn(schema);
                colvarSoLuongDung.ColumnName = "SO_LUONG_DUNG";
                colvarSoLuongDung.DataType = DbType.String;
                colvarSoLuongDung.MaxLength = 10;
                colvarSoLuongDung.AutoIncrement = false;
                colvarSoLuongDung.IsNullable = true;
                colvarSoLuongDung.IsPrimaryKey = false;
                colvarSoLuongDung.IsForeignKey = false;
                colvarSoLuongDung.IsReadOnly = false;
                
                schema.Columns.Add(colvarSoLuongDung);
                
                TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
                colvarNgayTao.ColumnName = "NGAY_TAO";
                colvarNgayTao.DataType = DbType.DateTime;
                colvarNgayTao.MaxLength = 0;
                colvarNgayTao.AutoIncrement = false;
                colvarNgayTao.IsNullable = true;
                colvarNgayTao.IsPrimaryKey = false;
                colvarNgayTao.IsForeignKey = false;
                colvarNgayTao.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgayTao);
                
                TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
                colvarNguoiTao.ColumnName = "NGUOI_TAO";
                colvarNguoiTao.DataType = DbType.String;
                colvarNguoiTao.MaxLength = 20;
                colvarNguoiTao.AutoIncrement = false;
                colvarNguoiTao.IsNullable = true;
                colvarNguoiTao.IsPrimaryKey = false;
                colvarNguoiTao.IsForeignKey = false;
                colvarNguoiTao.IsReadOnly = false;
                
                schema.Columns.Add(colvarNguoiTao);
                
                TableSchema.TableColumn colvarTtChuyen = new TableSchema.TableColumn(schema);
                colvarTtChuyen.ColumnName = "TT_CHUYEN";
                colvarTtChuyen.DataType = DbType.Byte;
                colvarTtChuyen.MaxLength = 0;
                colvarTtChuyen.AutoIncrement = false;
                colvarTtChuyen.IsNullable = true;
                colvarTtChuyen.IsPrimaryKey = false;
                colvarTtChuyen.IsForeignKey = false;
                colvarTtChuyen.IsReadOnly = false;
                
                schema.Columns.Add(colvarTtChuyen);
                
                TableSchema.TableColumn colvarPtramBhyt = new TableSchema.TableColumn(schema);
                colvarPtramBhyt.ColumnName = "PTRAM_BHYT";
                colvarPtramBhyt.DataType = DbType.Decimal;
                colvarPtramBhyt.MaxLength = 0;
                colvarPtramBhyt.AutoIncrement = false;
                colvarPtramBhyt.IsNullable = true;
                colvarPtramBhyt.IsPrimaryKey = false;
                colvarPtramBhyt.IsForeignKey = false;
                colvarPtramBhyt.IsReadOnly = false;
                
                schema.Columns.Add(colvarPtramBhyt);
                
                TableSchema.TableColumn colvarSluongLinh = new TableSchema.TableColumn(schema);
                colvarSluongLinh.ColumnName = "SLUONG_LINH";
                colvarSluongLinh.DataType = DbType.Int32;
                colvarSluongLinh.MaxLength = 0;
                colvarSluongLinh.AutoIncrement = false;
                colvarSluongLinh.IsNullable = true;
                colvarSluongLinh.IsPrimaryKey = false;
                colvarSluongLinh.IsForeignKey = false;
                colvarSluongLinh.IsReadOnly = false;
                
                schema.Columns.Add(colvarSluongLinh);
                
                TableSchema.TableColumn colvarSluongSua = new TableSchema.TableColumn(schema);
                colvarSluongSua.ColumnName = "SLUONG_SUA";
                colvarSluongSua.DataType = DbType.Int32;
                colvarSluongSua.MaxLength = 0;
                colvarSluongSua.AutoIncrement = false;
                colvarSluongSua.IsNullable = true;
                colvarSluongSua.IsPrimaryKey = false;
                colvarSluongSua.IsForeignKey = false;
                colvarSluongSua.IsReadOnly = false;
                
                schema.Columns.Add(colvarSluongSua);
                
                TableSchema.TableColumn colvarIdGoiDvu = new TableSchema.TableColumn(schema);
                colvarIdGoiDvu.ColumnName = "ID_GOI_DVU";
                colvarIdGoiDvu.DataType = DbType.Int32;
                colvarIdGoiDvu.MaxLength = 0;
                colvarIdGoiDvu.AutoIncrement = false;
                colvarIdGoiDvu.IsNullable = true;
                colvarIdGoiDvu.IsPrimaryKey = false;
                colvarIdGoiDvu.IsForeignKey = false;
                colvarIdGoiDvu.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdGoiDvu);
                
                TableSchema.TableColumn colvarSoLuongThuc = new TableSchema.TableColumn(schema);
                colvarSoLuongThuc.ColumnName = "So_Luong_Thuc";
                colvarSoLuongThuc.DataType = DbType.Int32;
                colvarSoLuongThuc.MaxLength = 0;
                colvarSoLuongThuc.AutoIncrement = false;
                colvarSoLuongThuc.IsNullable = true;
                colvarSoLuongThuc.IsPrimaryKey = false;
                colvarSoLuongThuc.IsForeignKey = false;
                colvarSoLuongThuc.IsReadOnly = false;
                
                schema.Columns.Add(colvarSoLuongThuc);
                
                TableSchema.TableColumn colvarStockName = new TableSchema.TableColumn(schema);
                colvarStockName.ColumnName = "stock_name";
                colvarStockName.DataType = DbType.String;
                colvarStockName.MaxLength = 50;
                colvarStockName.AutoIncrement = false;
                colvarStockName.IsNullable = true;
                colvarStockName.IsPrimaryKey = false;
                colvarStockName.IsForeignKey = false;
                colvarStockName.IsReadOnly = false;
                
                schema.Columns.Add(colvarStockName);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("view_PresDetail",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewPresDetail()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewPresDetail(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewPresDetail(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewPresDetail(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("PresDetailId")]
        [Bindable(true)]
        public int PresDetailId 
	    {
		    get
		    {
			    return GetColumnValue<int>("PresDetail_ID");
		    }
            set 
		    {
			    SetColumnValue("PresDetail_ID", value);
            }
        }
	      
        [XmlAttribute("PresId")]
        [Bindable(true)]
        public int PresId 
	    {
		    get
		    {
			    return GetColumnValue<int>("Pres_ID");
		    }
            set 
		    {
			    SetColumnValue("Pres_ID", value);
            }
        }
	      
        [XmlAttribute("DrugId")]
        [Bindable(true)]
        public int DrugId 
	    {
		    get
		    {
			    return GetColumnValue<int>("Drug_ID");
		    }
            set 
		    {
			    SetColumnValue("Drug_ID", value);
            }
        }
	      
        [XmlAttribute("ExpireDate")]
        [Bindable(true)]
        public DateTime ExpireDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("Expire_Date");
		    }
            set 
		    {
			    SetColumnValue("Expire_Date", value);
            }
        }
	      
        [XmlAttribute("Quantity")]
        [Bindable(true)]
        public int Quantity 
	    {
		    get
		    {
			    return GetColumnValue<int>("Quantity");
		    }
            set 
		    {
			    SetColumnValue("Quantity", value);
            }
        }
	      
        [XmlAttribute("Price")]
        [Bindable(true)]
        public decimal Price 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("Price");
		    }
            set 
		    {
			    SetColumnValue("Price", value);
            }
        }
	      
        [XmlAttribute("SurchargePrice")]
        [Bindable(true)]
        public decimal? SurchargePrice 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Surcharge_Price");
		    }
            set 
		    {
			    SetColumnValue("Surcharge_Price", value);
            }
        }
	      
        [XmlAttribute("SDesc")]
        [Bindable(true)]
        public string SDesc 
	    {
		    get
		    {
			    return GetColumnValue<string>("sDesc");
		    }
            set 
		    {
			    SetColumnValue("sDesc", value);
            }
        }
	      
        [XmlAttribute("PaymentStatus")]
        [Bindable(true)]
        public int? PaymentStatus 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Payment_Status");
		    }
            set 
		    {
			    SetColumnValue("Payment_Status", value);
            }
        }
	      
        [XmlAttribute("QuantityCancel")]
        [Bindable(true)]
        public int? QuantityCancel 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Quantity_Cancel");
		    }
            set 
		    {
			    SetColumnValue("Quantity_Cancel", value);
            }
        }
	      
        [XmlAttribute("IsCancel")]
        [Bindable(true)]
        public int? IsCancel 
	    {
		    get
		    {
			    return GetColumnValue<int?>("IsCancel");
		    }
            set 
		    {
			    SetColumnValue("IsCancel", value);
            }
        }
	      
        [XmlAttribute("CancelBy")]
        [Bindable(true)]
        public string CancelBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("Cancel_By");
		    }
            set 
		    {
			    SetColumnValue("Cancel_By", value);
            }
        }
	      
        [XmlAttribute("CancelDate")]
        [Bindable(true)]
        public DateTime? CancelDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Cancel_Date");
		    }
            set 
		    {
			    SetColumnValue("Cancel_Date", value);
            }
        }
	      
        [XmlAttribute("PaymentDate")]
        [Bindable(true)]
        public DateTime? PaymentDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Payment_Date");
		    }
            set 
		    {
			    SetColumnValue("Payment_Date", value);
            }
        }
	      
        [XmlAttribute("IsPayment")]
        [Bindable(true)]
        public byte? IsPayment 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("IsPayment");
		    }
            set 
		    {
			    SetColumnValue("IsPayment", value);
            }
        }
	      
        [XmlAttribute("StockId")]
        [Bindable(true)]
        public int? StockId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Stock_ID");
		    }
            set 
		    {
			    SetColumnValue("Stock_ID", value);
            }
        }
	      
        [XmlAttribute("HasComfirm")]
        [Bindable(true)]
        public byte? HasComfirm 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("HasComfirm");
		    }
            set 
		    {
			    SetColumnValue("HasComfirm", value);
            }
        }
	      
        [XmlAttribute("BhytStatus")]
        [Bindable(true)]
        public byte? BhytStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("BHYT_Status");
		    }
            set 
		    {
			    SetColumnValue("BHYT_Status", value);
            }
        }
	      
        [XmlAttribute("ThuTuIn")]
        [Bindable(true)]
        public short? ThuTuIn 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Thu_Tu_In");
		    }
            set 
		    {
			    SetColumnValue("Thu_Tu_In", value);
            }
        }
	      
        [XmlAttribute("GiaBhytCt")]
        [Bindable(true)]
        public decimal? GiaBhytCt 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Gia_BHYT_CT");
		    }
            set 
		    {
			    SetColumnValue("Gia_BHYT_CT", value);
            }
        }
	      
        [XmlAttribute("GiaBnct")]
        [Bindable(true)]
        public decimal? GiaBnct 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Gia_BNCT");
		    }
            set 
		    {
			    SetColumnValue("Gia_BNCT", value);
            }
        }
	      
        [XmlAttribute("MaDTuong")]
        [Bindable(true)]
        public string MaDTuong 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ma_DTuong");
		    }
            set 
		    {
			    SetColumnValue("Ma_DTuong", value);
            }
        }
	      
        [XmlAttribute("PaymentId")]
        [Bindable(true)]
        public int? PaymentId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Payment_ID");
		    }
            set 
		    {
			    SetColumnValue("Payment_ID", value);
            }
        }
	      
        [XmlAttribute("TrongGoi")]
        [Bindable(true)]
        public byte? TrongGoi 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("TRONG_GOI");
		    }
            set 
		    {
			    SetColumnValue("TRONG_GOI", value);
            }
        }
	      
        [XmlAttribute("CachDung")]
        [Bindable(true)]
        public string CachDung 
	    {
		    get
		    {
			    return GetColumnValue<string>("CACH_DUNG");
		    }
            set 
		    {
			    SetColumnValue("CACH_DUNG", value);
            }
        }
	      
        [XmlAttribute("XacNhan")]
        [Bindable(true)]
        public byte? XacNhan 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("XAC_NHAN");
		    }
            set 
		    {
			    SetColumnValue("XAC_NHAN", value);
            }
        }
	      
        [XmlAttribute("ChiDanThem")]
        [Bindable(true)]
        public string ChiDanThem 
	    {
		    get
		    {
			    return GetColumnValue<string>("CHI_DAN_THEM");
		    }
            set 
		    {
			    SetColumnValue("CHI_DAN_THEM", value);
            }
        }
	      
        [XmlAttribute("DviDung")]
        [Bindable(true)]
        public string DviDung 
	    {
		    get
		    {
			    return GetColumnValue<string>("DVI_DUNG");
		    }
            set 
		    {
			    SetColumnValue("DVI_DUNG", value);
            }
        }
	      
        [XmlAttribute("SoLanDung")]
        [Bindable(true)]
        public string SoLanDung 
	    {
		    get
		    {
			    return GetColumnValue<string>("SO_LAN_DUNG");
		    }
            set 
		    {
			    SetColumnValue("SO_LAN_DUNG", value);
            }
        }
	      
        [XmlAttribute("SoLuongDung")]
        [Bindable(true)]
        public string SoLuongDung 
	    {
		    get
		    {
			    return GetColumnValue<string>("SO_LUONG_DUNG");
		    }
            set 
		    {
			    SetColumnValue("SO_LUONG_DUNG", value);
            }
        }
	      
        [XmlAttribute("NgayTao")]
        [Bindable(true)]
        public DateTime? NgayTao 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("NGAY_TAO");
		    }
            set 
		    {
			    SetColumnValue("NGAY_TAO", value);
            }
        }
	      
        [XmlAttribute("NguoiTao")]
        [Bindable(true)]
        public string NguoiTao 
	    {
		    get
		    {
			    return GetColumnValue<string>("NGUOI_TAO");
		    }
            set 
		    {
			    SetColumnValue("NGUOI_TAO", value);
            }
        }
	      
        [XmlAttribute("TtChuyen")]
        [Bindable(true)]
        public byte? TtChuyen 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("TT_CHUYEN");
		    }
            set 
		    {
			    SetColumnValue("TT_CHUYEN", value);
            }
        }
	      
        [XmlAttribute("PtramBhyt")]
        [Bindable(true)]
        public decimal? PtramBhyt 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("PTRAM_BHYT");
		    }
            set 
		    {
			    SetColumnValue("PTRAM_BHYT", value);
            }
        }
	      
        [XmlAttribute("SluongLinh")]
        [Bindable(true)]
        public int? SluongLinh 
	    {
		    get
		    {
			    return GetColumnValue<int?>("SLUONG_LINH");
		    }
            set 
		    {
			    SetColumnValue("SLUONG_LINH", value);
            }
        }
	      
        [XmlAttribute("SluongSua")]
        [Bindable(true)]
        public int? SluongSua 
	    {
		    get
		    {
			    return GetColumnValue<int?>("SLUONG_SUA");
		    }
            set 
		    {
			    SetColumnValue("SLUONG_SUA", value);
            }
        }
	      
        [XmlAttribute("IdGoiDvu")]
        [Bindable(true)]
        public int? IdGoiDvu 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ID_GOI_DVU");
		    }
            set 
		    {
			    SetColumnValue("ID_GOI_DVU", value);
            }
        }
	      
        [XmlAttribute("SoLuongThuc")]
        [Bindable(true)]
        public int? SoLuongThuc 
	    {
		    get
		    {
			    return GetColumnValue<int?>("So_Luong_Thuc");
		    }
            set 
		    {
			    SetColumnValue("So_Luong_Thuc", value);
            }
        }
	      
        [XmlAttribute("StockName")]
        [Bindable(true)]
        public string StockName 
	    {
		    get
		    {
			    return GetColumnValue<string>("stock_name");
		    }
            set 
		    {
			    SetColumnValue("stock_name", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string PresDetailId = @"PresDetail_ID";
            
            public static string PresId = @"Pres_ID";
            
            public static string DrugId = @"Drug_ID";
            
            public static string ExpireDate = @"Expire_Date";
            
            public static string Quantity = @"Quantity";
            
            public static string Price = @"Price";
            
            public static string SurchargePrice = @"Surcharge_Price";
            
            public static string SDesc = @"sDesc";
            
            public static string PaymentStatus = @"Payment_Status";
            
            public static string QuantityCancel = @"Quantity_Cancel";
            
            public static string IsCancel = @"IsCancel";
            
            public static string CancelBy = @"Cancel_By";
            
            public static string CancelDate = @"Cancel_Date";
            
            public static string PaymentDate = @"Payment_Date";
            
            public static string IsPayment = @"IsPayment";
            
            public static string StockId = @"Stock_ID";
            
            public static string HasComfirm = @"HasComfirm";
            
            public static string BhytStatus = @"BHYT_Status";
            
            public static string ThuTuIn = @"Thu_Tu_In";
            
            public static string GiaBhytCt = @"Gia_BHYT_CT";
            
            public static string GiaBnct = @"Gia_BNCT";
            
            public static string MaDTuong = @"Ma_DTuong";
            
            public static string PaymentId = @"Payment_ID";
            
            public static string TrongGoi = @"TRONG_GOI";
            
            public static string CachDung = @"CACH_DUNG";
            
            public static string XacNhan = @"XAC_NHAN";
            
            public static string ChiDanThem = @"CHI_DAN_THEM";
            
            public static string DviDung = @"DVI_DUNG";
            
            public static string SoLanDung = @"SO_LAN_DUNG";
            
            public static string SoLuongDung = @"SO_LUONG_DUNG";
            
            public static string NgayTao = @"NGAY_TAO";
            
            public static string NguoiTao = @"NGUOI_TAO";
            
            public static string TtChuyen = @"TT_CHUYEN";
            
            public static string PtramBhyt = @"PTRAM_BHYT";
            
            public static string SluongLinh = @"SLUONG_LINH";
            
            public static string SluongSua = @"SLUONG_SUA";
            
            public static string IdGoiDvu = @"ID_GOI_DVU";
            
            public static string SoLuongThuc = @"So_Luong_Thuc";
            
            public static string StockName = @"stock_name";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
