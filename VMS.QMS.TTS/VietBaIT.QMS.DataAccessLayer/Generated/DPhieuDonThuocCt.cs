using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the DPhieuDonThuocCt class.
	/// </summary>
    [Serializable]
	public partial class DPhieuDonThuocCtCollection : ActiveList<DPhieuDonThuocCt, DPhieuDonThuocCtCollection>
	{	   
		public DPhieuDonThuocCtCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DPhieuDonThuocCtCollection</returns>
		public DPhieuDonThuocCtCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DPhieuDonThuocCt o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the D_PHIEU_DON_THUOC_CT table.
	/// </summary>
	[Serializable]
	public partial class DPhieuDonThuocCt : ActiveRecord<DPhieuDonThuocCt>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DPhieuDonThuocCt()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DPhieuDonThuocCt(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DPhieuDonThuocCt(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DPhieuDonThuocCt(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("D_PHIEU_DON_THUOC_CT", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdPhieuDonThuocCt = new TableSchema.TableColumn(schema);
				colvarIdPhieuDonThuocCt.ColumnName = "ID_PHIEU_DON_THUOC_CT";
				colvarIdPhieuDonThuocCt.DataType = DbType.Int32;
				colvarIdPhieuDonThuocCt.MaxLength = 0;
				colvarIdPhieuDonThuocCt.AutoIncrement = true;
				colvarIdPhieuDonThuocCt.IsNullable = false;
				colvarIdPhieuDonThuocCt.IsPrimaryKey = true;
				colvarIdPhieuDonThuocCt.IsForeignKey = false;
				colvarIdPhieuDonThuocCt.IsReadOnly = false;
				colvarIdPhieuDonThuocCt.DefaultSetting = @"";
				colvarIdPhieuDonThuocCt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuDonThuocCt);
				
				TableSchema.TableColumn colvarIdPhieuXuatBn = new TableSchema.TableColumn(schema);
				colvarIdPhieuXuatBn.ColumnName = "ID_PHIEU_XUAT_BN";
				colvarIdPhieuXuatBn.DataType = DbType.Int32;
				colvarIdPhieuXuatBn.MaxLength = 0;
				colvarIdPhieuXuatBn.AutoIncrement = false;
				colvarIdPhieuXuatBn.IsNullable = false;
				colvarIdPhieuXuatBn.IsPrimaryKey = false;
				colvarIdPhieuXuatBn.IsForeignKey = false;
				colvarIdPhieuXuatBn.IsReadOnly = false;
				colvarIdPhieuXuatBn.DefaultSetting = @"";
				colvarIdPhieuXuatBn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuXuatBn);
				
				TableSchema.TableColumn colvarIdThuoc = new TableSchema.TableColumn(schema);
				colvarIdThuoc.ColumnName = "ID_THUOC";
				colvarIdThuoc.DataType = DbType.Int32;
				colvarIdThuoc.MaxLength = 0;
				colvarIdThuoc.AutoIncrement = false;
				colvarIdThuoc.IsNullable = false;
				colvarIdThuoc.IsPrimaryKey = false;
				colvarIdThuoc.IsForeignKey = false;
				colvarIdThuoc.IsReadOnly = false;
				colvarIdThuoc.DefaultSetting = @"";
				colvarIdThuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdThuoc);
				
				TableSchema.TableColumn colvarSoLuong = new TableSchema.TableColumn(schema);
				colvarSoLuong.ColumnName = "SO_LUONG";
				colvarSoLuong.DataType = DbType.Int32;
				colvarSoLuong.MaxLength = 0;
				colvarSoLuong.AutoIncrement = false;
				colvarSoLuong.IsNullable = false;
				colvarSoLuong.IsPrimaryKey = false;
				colvarSoLuong.IsForeignKey = false;
				colvarSoLuong.IsReadOnly = false;
				colvarSoLuong.DefaultSetting = @"";
				colvarSoLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuong);
				
				TableSchema.TableColumn colvarDonGia = new TableSchema.TableColumn(schema);
				colvarDonGia.ColumnName = "DON_GIA";
				colvarDonGia.DataType = DbType.Decimal;
				colvarDonGia.MaxLength = 0;
				colvarDonGia.AutoIncrement = false;
				colvarDonGia.IsNullable = false;
				colvarDonGia.IsPrimaryKey = false;
				colvarDonGia.IsForeignKey = false;
				colvarDonGia.IsReadOnly = false;
				colvarDonGia.DefaultSetting = @"";
				colvarDonGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGia);
				
				TableSchema.TableColumn colvarPhuThu = new TableSchema.TableColumn(schema);
				colvarPhuThu.ColumnName = "PHU_THU";
				colvarPhuThu.DataType = DbType.Decimal;
				colvarPhuThu.MaxLength = 0;
				colvarPhuThu.AutoIncrement = false;
				colvarPhuThu.IsNullable = false;
				colvarPhuThu.IsPrimaryKey = false;
				colvarPhuThu.IsForeignKey = false;
				colvarPhuThu.IsReadOnly = false;
				colvarPhuThu.DefaultSetting = @"";
				colvarPhuThu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhuThu);
				
				TableSchema.TableColumn colvarBnct = new TableSchema.TableColumn(schema);
				colvarBnct.ColumnName = "BNCT";
				colvarBnct.DataType = DbType.Decimal;
				colvarBnct.MaxLength = 0;
				colvarBnct.AutoIncrement = false;
				colvarBnct.IsNullable = false;
				colvarBnct.IsPrimaryKey = false;
				colvarBnct.IsForeignKey = false;
				colvarBnct.IsReadOnly = false;
				colvarBnct.DefaultSetting = @"";
				colvarBnct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBnct);
				
				TableSchema.TableColumn colvarBhct = new TableSchema.TableColumn(schema);
				colvarBhct.ColumnName = "BHCT";
				colvarBhct.DataType = DbType.Decimal;
				colvarBhct.MaxLength = 0;
				colvarBhct.AutoIncrement = false;
				colvarBhct.IsNullable = false;
				colvarBhct.IsPrimaryKey = false;
				colvarBhct.IsForeignKey = false;
				colvarBhct.IsReadOnly = false;
				colvarBhct.DefaultSetting = @"";
				colvarBhct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBhct);
				
				TableSchema.TableColumn colvarPtramBhyt = new TableSchema.TableColumn(schema);
				colvarPtramBhyt.ColumnName = "PTRAM_BHYT";
				colvarPtramBhyt.DataType = DbType.Int32;
				colvarPtramBhyt.MaxLength = 0;
				colvarPtramBhyt.AutoIncrement = false;
				colvarPtramBhyt.IsNullable = true;
				colvarPtramBhyt.IsPrimaryKey = false;
				colvarPtramBhyt.IsForeignKey = false;
				colvarPtramBhyt.IsReadOnly = false;
				colvarPtramBhyt.DefaultSetting = @"";
				colvarPtramBhyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPtramBhyt);
				
				TableSchema.TableColumn colvarChiDan = new TableSchema.TableColumn(schema);
				colvarChiDan.ColumnName = "CHI_DAN";
				colvarChiDan.DataType = DbType.String;
				colvarChiDan.MaxLength = 500;
				colvarChiDan.AutoIncrement = false;
				colvarChiDan.IsNullable = true;
				colvarChiDan.IsPrimaryKey = false;
				colvarChiDan.IsForeignKey = false;
				colvarChiDan.IsReadOnly = false;
				colvarChiDan.DefaultSetting = @"";
				colvarChiDan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChiDan);
				
				TableSchema.TableColumn colvarCachDung = new TableSchema.TableColumn(schema);
				colvarCachDung.ColumnName = "CACH_DUNG";
				colvarCachDung.DataType = DbType.String;
				colvarCachDung.MaxLength = 50;
				colvarCachDung.AutoIncrement = false;
				colvarCachDung.IsNullable = true;
				colvarCachDung.IsPrimaryKey = false;
				colvarCachDung.IsForeignKey = false;
				colvarCachDung.IsReadOnly = false;
				colvarCachDung.DefaultSetting = @"";
				colvarCachDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCachDung);
				
				TableSchema.TableColumn colvarChiDanThem = new TableSchema.TableColumn(schema);
				colvarChiDanThem.ColumnName = "CHI_DAN_THEM";
				colvarChiDanThem.DataType = DbType.String;
				colvarChiDanThem.MaxLength = 500;
				colvarChiDanThem.AutoIncrement = false;
				colvarChiDanThem.IsNullable = true;
				colvarChiDanThem.IsPrimaryKey = false;
				colvarChiDanThem.IsForeignKey = false;
				colvarChiDanThem.IsReadOnly = false;
				colvarChiDanThem.DefaultSetting = @"";
				colvarChiDanThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChiDanThem);
				
				TableSchema.TableColumn colvarSoLanDung = new TableSchema.TableColumn(schema);
				colvarSoLanDung.ColumnName = "SO_LAN_DUNG";
				colvarSoLanDung.DataType = DbType.String;
				colvarSoLanDung.MaxLength = 10;
				colvarSoLanDung.AutoIncrement = false;
				colvarSoLanDung.IsNullable = true;
				colvarSoLanDung.IsPrimaryKey = false;
				colvarSoLanDung.IsForeignKey = false;
				colvarSoLanDung.IsReadOnly = false;
				colvarSoLanDung.DefaultSetting = @"";
				colvarSoLanDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLanDung);
				
				TableSchema.TableColumn colvarSoLuongDung = new TableSchema.TableColumn(schema);
				colvarSoLuongDung.ColumnName = "SO_LUONG_DUNG";
				colvarSoLuongDung.DataType = DbType.String;
				colvarSoLuongDung.MaxLength = 10;
				colvarSoLuongDung.AutoIncrement = false;
				colvarSoLuongDung.IsNullable = true;
				colvarSoLuongDung.IsPrimaryKey = false;
				colvarSoLuongDung.IsForeignKey = false;
				colvarSoLuongDung.IsReadOnly = false;
				colvarSoLuongDung.DefaultSetting = @"";
				colvarSoLuongDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuongDung);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				
						colvarNgayTao.DefaultSetting = @"(getdate())";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarPresDetailId = new TableSchema.TableColumn(schema);
				colvarPresDetailId.ColumnName = "PresDetail_ID";
				colvarPresDetailId.DataType = DbType.Int32;
				colvarPresDetailId.MaxLength = 0;
				colvarPresDetailId.AutoIncrement = false;
				colvarPresDetailId.IsNullable = true;
				colvarPresDetailId.IsPrimaryKey = false;
				colvarPresDetailId.IsForeignKey = false;
				colvarPresDetailId.IsReadOnly = false;
				colvarPresDetailId.DefaultSetting = @"";
				colvarPresDetailId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPresDetailId);
				
				TableSchema.TableColumn colvarPresId = new TableSchema.TableColumn(schema);
				colvarPresId.ColumnName = "Pres_ID";
				colvarPresId.DataType = DbType.Int32;
				colvarPresId.MaxLength = 0;
				colvarPresId.AutoIncrement = false;
				colvarPresId.IsNullable = true;
				colvarPresId.IsPrimaryKey = false;
				colvarPresId.IsForeignKey = false;
				colvarPresId.IsReadOnly = false;
				colvarPresId.DefaultSetting = @"";
				colvarPresId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPresId);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("D_PHIEU_DON_THUOC_CT",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdPhieuDonThuocCt")]
		[Bindable(true)]
		public int IdPhieuDonThuocCt 
		{
			get { return GetColumnValue<int>(Columns.IdPhieuDonThuocCt); }
			set { SetColumnValue(Columns.IdPhieuDonThuocCt, value); }
		}
		  
		[XmlAttribute("IdPhieuXuatBn")]
		[Bindable(true)]
		public int IdPhieuXuatBn 
		{
			get { return GetColumnValue<int>(Columns.IdPhieuXuatBn); }
			set { SetColumnValue(Columns.IdPhieuXuatBn, value); }
		}
		  
		[XmlAttribute("IdThuoc")]
		[Bindable(true)]
		public int IdThuoc 
		{
			get { return GetColumnValue<int>(Columns.IdThuoc); }
			set { SetColumnValue(Columns.IdThuoc, value); }
		}
		  
		[XmlAttribute("SoLuong")]
		[Bindable(true)]
		public int SoLuong 
		{
			get { return GetColumnValue<int>(Columns.SoLuong); }
			set { SetColumnValue(Columns.SoLuong, value); }
		}
		  
		[XmlAttribute("DonGia")]
		[Bindable(true)]
		public decimal DonGia 
		{
			get { return GetColumnValue<decimal>(Columns.DonGia); }
			set { SetColumnValue(Columns.DonGia, value); }
		}
		  
		[XmlAttribute("PhuThu")]
		[Bindable(true)]
		public decimal PhuThu 
		{
			get { return GetColumnValue<decimal>(Columns.PhuThu); }
			set { SetColumnValue(Columns.PhuThu, value); }
		}
		  
		[XmlAttribute("Bnct")]
		[Bindable(true)]
		public decimal Bnct 
		{
			get { return GetColumnValue<decimal>(Columns.Bnct); }
			set { SetColumnValue(Columns.Bnct, value); }
		}
		  
		[XmlAttribute("Bhct")]
		[Bindable(true)]
		public decimal Bhct 
		{
			get { return GetColumnValue<decimal>(Columns.Bhct); }
			set { SetColumnValue(Columns.Bhct, value); }
		}
		  
		[XmlAttribute("PtramBhyt")]
		[Bindable(true)]
		public int? PtramBhyt 
		{
			get { return GetColumnValue<int?>(Columns.PtramBhyt); }
			set { SetColumnValue(Columns.PtramBhyt, value); }
		}
		  
		[XmlAttribute("ChiDan")]
		[Bindable(true)]
		public string ChiDan 
		{
			get { return GetColumnValue<string>(Columns.ChiDan); }
			set { SetColumnValue(Columns.ChiDan, value); }
		}
		  
		[XmlAttribute("CachDung")]
		[Bindable(true)]
		public string CachDung 
		{
			get { return GetColumnValue<string>(Columns.CachDung); }
			set { SetColumnValue(Columns.CachDung, value); }
		}
		  
		[XmlAttribute("ChiDanThem")]
		[Bindable(true)]
		public string ChiDanThem 
		{
			get { return GetColumnValue<string>(Columns.ChiDanThem); }
			set { SetColumnValue(Columns.ChiDanThem, value); }
		}
		  
		[XmlAttribute("SoLanDung")]
		[Bindable(true)]
		public string SoLanDung 
		{
			get { return GetColumnValue<string>(Columns.SoLanDung); }
			set { SetColumnValue(Columns.SoLanDung, value); }
		}
		  
		[XmlAttribute("SoLuongDung")]
		[Bindable(true)]
		public string SoLuongDung 
		{
			get { return GetColumnValue<string>(Columns.SoLuongDung); }
			set { SetColumnValue(Columns.SoLuongDung, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("PresDetailId")]
		[Bindable(true)]
		public int? PresDetailId 
		{
			get { return GetColumnValue<int?>(Columns.PresDetailId); }
			set { SetColumnValue(Columns.PresDetailId, value); }
		}
		  
		[XmlAttribute("PresId")]
		[Bindable(true)]
		public int? PresId 
		{
			get { return GetColumnValue<int?>(Columns.PresId); }
			set { SetColumnValue(Columns.PresId, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varIdPhieuXuatBn,int varIdThuoc,int varSoLuong,decimal varDonGia,decimal varPhuThu,decimal varBnct,decimal varBhct,int? varPtramBhyt,string varChiDan,string varCachDung,string varChiDanThem,string varSoLanDung,string varSoLuongDung,DateTime? varNgayTao,string varNguoiTao,int? varPresDetailId,int? varPresId)
		{
			DPhieuDonThuocCt item = new DPhieuDonThuocCt();
			
			item.IdPhieuXuatBn = varIdPhieuXuatBn;
			
			item.IdThuoc = varIdThuoc;
			
			item.SoLuong = varSoLuong;
			
			item.DonGia = varDonGia;
			
			item.PhuThu = varPhuThu;
			
			item.Bnct = varBnct;
			
			item.Bhct = varBhct;
			
			item.PtramBhyt = varPtramBhyt;
			
			item.ChiDan = varChiDan;
			
			item.CachDung = varCachDung;
			
			item.ChiDanThem = varChiDanThem;
			
			item.SoLanDung = varSoLanDung;
			
			item.SoLuongDung = varSoLuongDung;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.PresDetailId = varPresDetailId;
			
			item.PresId = varPresId;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdPhieuDonThuocCt,int varIdPhieuXuatBn,int varIdThuoc,int varSoLuong,decimal varDonGia,decimal varPhuThu,decimal varBnct,decimal varBhct,int? varPtramBhyt,string varChiDan,string varCachDung,string varChiDanThem,string varSoLanDung,string varSoLuongDung,DateTime? varNgayTao,string varNguoiTao,int? varPresDetailId,int? varPresId)
		{
			DPhieuDonThuocCt item = new DPhieuDonThuocCt();
			
				item.IdPhieuDonThuocCt = varIdPhieuDonThuocCt;
			
				item.IdPhieuXuatBn = varIdPhieuXuatBn;
			
				item.IdThuoc = varIdThuoc;
			
				item.SoLuong = varSoLuong;
			
				item.DonGia = varDonGia;
			
				item.PhuThu = varPhuThu;
			
				item.Bnct = varBnct;
			
				item.Bhct = varBhct;
			
				item.PtramBhyt = varPtramBhyt;
			
				item.ChiDan = varChiDan;
			
				item.CachDung = varCachDung;
			
				item.ChiDanThem = varChiDanThem;
			
				item.SoLanDung = varSoLanDung;
			
				item.SoLuongDung = varSoLuongDung;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.PresDetailId = varPresDetailId;
			
				item.PresId = varPresId;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdPhieuDonThuocCtColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuXuatBnColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdThuocColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn PhuThuColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn BnctColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn BhctColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn PtramBhytColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn ChiDanColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn CachDungColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn ChiDanThemColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLanDungColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongDungColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn PresDetailIdColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn PresIdColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdPhieuDonThuocCt = @"ID_PHIEU_DON_THUOC_CT";
			 public static string IdPhieuXuatBn = @"ID_PHIEU_XUAT_BN";
			 public static string IdThuoc = @"ID_THUOC";
			 public static string SoLuong = @"SO_LUONG";
			 public static string DonGia = @"DON_GIA";
			 public static string PhuThu = @"PHU_THU";
			 public static string Bnct = @"BNCT";
			 public static string Bhct = @"BHCT";
			 public static string PtramBhyt = @"PTRAM_BHYT";
			 public static string ChiDan = @"CHI_DAN";
			 public static string CachDung = @"CACH_DUNG";
			 public static string ChiDanThem = @"CHI_DAN_THEM";
			 public static string SoLanDung = @"SO_LAN_DUNG";
			 public static string SoLuongDung = @"SO_LUONG_DUNG";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string PresDetailId = @"PresDetail_ID";
			 public static string PresId = @"Pres_ID";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
