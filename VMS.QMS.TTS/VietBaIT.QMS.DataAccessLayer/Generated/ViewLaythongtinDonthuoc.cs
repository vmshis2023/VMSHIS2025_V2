using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewLaythongtinDonthuoc class.
    /// </summary>
    [Serializable]
    public partial class ViewLaythongtinDonthuocCollection : ReadOnlyList<ViewLaythongtinDonthuoc, ViewLaythongtinDonthuocCollection>
    {        
        public ViewLaythongtinDonthuocCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VIEW_LAYTHONGTIN_DONTHUOC view.
    /// </summary>
    [Serializable]
    public partial class ViewLaythongtinDonthuoc : ReadOnlyRecord<ViewLaythongtinDonthuoc>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VIEW_LAYTHONGTIN_DONTHUOC", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarTreatId = new TableSchema.TableColumn(schema);
                colvarTreatId.ColumnName = "Treat_ID";
                colvarTreatId.DataType = DbType.Int32;
                colvarTreatId.MaxLength = 0;
                colvarTreatId.AutoIncrement = false;
                colvarTreatId.IsNullable = true;
                colvarTreatId.IsPrimaryKey = false;
                colvarTreatId.IsForeignKey = false;
                colvarTreatId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTreatId);
                
                TableSchema.TableColumn colvarPatientDeptId = new TableSchema.TableColumn(schema);
                colvarPatientDeptId.ColumnName = "PatientDept_ID";
                colvarPatientDeptId.DataType = DbType.Int32;
                colvarPatientDeptId.MaxLength = 0;
                colvarPatientDeptId.AutoIncrement = false;
                colvarPatientDeptId.IsNullable = true;
                colvarPatientDeptId.IsPrimaryKey = false;
                colvarPatientDeptId.IsForeignKey = false;
                colvarPatientDeptId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientDeptId);
                
                TableSchema.TableColumn colvarReplacePresId = new TableSchema.TableColumn(schema);
                colvarReplacePresId.ColumnName = "ReplacePres_ID";
                colvarReplacePresId.DataType = DbType.Int32;
                colvarReplacePresId.MaxLength = 0;
                colvarReplacePresId.AutoIncrement = false;
                colvarReplacePresId.IsNullable = true;
                colvarReplacePresId.IsPrimaryKey = false;
                colvarReplacePresId.IsForeignKey = false;
                colvarReplacePresId.IsReadOnly = false;
                
                schema.Columns.Add(colvarReplacePresId);
                
                TableSchema.TableColumn colvarExamId = new TableSchema.TableColumn(schema);
                colvarExamId.ColumnName = "Exam_ID";
                colvarExamId.DataType = DbType.Int64;
                colvarExamId.MaxLength = 0;
                colvarExamId.AutoIncrement = false;
                colvarExamId.IsNullable = true;
                colvarExamId.IsPrimaryKey = false;
                colvarExamId.IsForeignKey = false;
                colvarExamId.IsReadOnly = false;
                
                schema.Columns.Add(colvarExamId);
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Int64;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = true;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_Code";
                colvarPatientCode.DataType = DbType.AnsiString;
                colvarPatientCode.MaxLength = 20;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = true;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarPresDate = new TableSchema.TableColumn(schema);
                colvarPresDate.ColumnName = "Pres_Date";
                colvarPresDate.DataType = DbType.DateTime;
                colvarPresDate.MaxLength = 0;
                colvarPresDate.AutoIncrement = false;
                colvarPresDate.IsNullable = false;
                colvarPresDate.IsPrimaryKey = false;
                colvarPresDate.IsForeignKey = false;
                colvarPresDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarPresDate);
                
                TableSchema.TableColumn colvarIsLocked = new TableSchema.TableColumn(schema);
                colvarIsLocked.ColumnName = "IsLocked";
                colvarIsLocked.DataType = DbType.Int32;
                colvarIsLocked.MaxLength = 0;
                colvarIsLocked.AutoIncrement = false;
                colvarIsLocked.IsNullable = false;
                colvarIsLocked.IsPrimaryKey = false;
                colvarIsLocked.IsForeignKey = false;
                colvarIsLocked.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsLocked);
                
                TableSchema.TableColumn colvarAssignId = new TableSchema.TableColumn(schema);
                colvarAssignId.ColumnName = "Assign_ID";
                colvarAssignId.DataType = DbType.Int16;
                colvarAssignId.MaxLength = 0;
                colvarAssignId.AutoIncrement = false;
                colvarAssignId.IsNullable = true;
                colvarAssignId.IsPrimaryKey = false;
                colvarAssignId.IsForeignKey = false;
                colvarAssignId.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignId);
                
                TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
                colvarStatus.ColumnName = "Status";
                colvarStatus.DataType = DbType.Byte;
                colvarStatus.MaxLength = 0;
                colvarStatus.AutoIncrement = false;
                colvarStatus.IsNullable = false;
                colvarStatus.IsPrimaryKey = false;
                colvarStatus.IsForeignKey = false;
                colvarStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarStatus);
                
                TableSchema.TableColumn colvarSExpireDate = new TableSchema.TableColumn(schema);
                colvarSExpireDate.ColumnName = "sExpire_Date";
                colvarSExpireDate.DataType = DbType.AnsiString;
                colvarSExpireDate.MaxLength = 10;
                colvarSExpireDate.AutoIncrement = false;
                colvarSExpireDate.IsNullable = true;
                colvarSExpireDate.IsPrimaryKey = false;
                colvarSExpireDate.IsForeignKey = false;
                colvarSExpireDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarSExpireDate);
                
                TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);
                colvarCreatedBy.ColumnName = "Created_by";
                colvarCreatedBy.DataType = DbType.String;
                colvarCreatedBy.MaxLength = 20;
                colvarCreatedBy.AutoIncrement = false;
                colvarCreatedBy.IsNullable = false;
                colvarCreatedBy.IsPrimaryKey = false;
                colvarCreatedBy.IsForeignKey = false;
                colvarCreatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreatedBy);
                
                TableSchema.TableColumn colvarCreatedDate = new TableSchema.TableColumn(schema);
                colvarCreatedDate.ColumnName = "CreatedDate";
                colvarCreatedDate.DataType = DbType.DateTime;
                colvarCreatedDate.MaxLength = 0;
                colvarCreatedDate.AutoIncrement = false;
                colvarCreatedDate.IsNullable = false;
                colvarCreatedDate.IsPrimaryKey = false;
                colvarCreatedDate.IsForeignKey = false;
                colvarCreatedDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreatedDate);
                
                TableSchema.TableColumn colvarModifiedby = new TableSchema.TableColumn(schema);
                colvarModifiedby.ColumnName = "Modifiedby";
                colvarModifiedby.DataType = DbType.String;
                colvarModifiedby.MaxLength = 20;
                colvarModifiedby.AutoIncrement = false;
                colvarModifiedby.IsNullable = true;
                colvarModifiedby.IsPrimaryKey = false;
                colvarModifiedby.IsForeignKey = false;
                colvarModifiedby.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifiedby);
                
                TableSchema.TableColumn colvarModifiedDate = new TableSchema.TableColumn(schema);
                colvarModifiedDate.ColumnName = "ModifiedDate";
                colvarModifiedDate.DataType = DbType.DateTime;
                colvarModifiedDate.MaxLength = 0;
                colvarModifiedDate.AutoIncrement = false;
                colvarModifiedDate.IsNullable = true;
                colvarModifiedDate.IsPrimaryKey = false;
                colvarModifiedDate.IsForeignKey = false;
                colvarModifiedDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifiedDate);
                
                TableSchema.TableColumn colvarPresName = new TableSchema.TableColumn(schema);
                colvarPresName.ColumnName = "Pres_Name";
                colvarPresName.DataType = DbType.String;
                colvarPresName.MaxLength = 255;
                colvarPresName.AutoIncrement = false;
                colvarPresName.IsNullable = true;
                colvarPresName.IsPrimaryKey = false;
                colvarPresName.IsForeignKey = false;
                colvarPresName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPresName);
                
                TableSchema.TableColumn colvarPresCode = new TableSchema.TableColumn(schema);
                colvarPresCode.ColumnName = "Pres_Code";
                colvarPresCode.DataType = DbType.String;
                colvarPresCode.MaxLength = 50;
                colvarPresCode.AutoIncrement = false;
                colvarPresCode.IsNullable = true;
                colvarPresCode.IsPrimaryKey = false;
                colvarPresCode.IsForeignKey = false;
                colvarPresCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPresCode);
                
                TableSchema.TableColumn colvarSigner = new TableSchema.TableColumn(schema);
                colvarSigner.ColumnName = "Signer";
                colvarSigner.DataType = DbType.Int16;
                colvarSigner.MaxLength = 0;
                colvarSigner.AutoIncrement = false;
                colvarSigner.IsNullable = true;
                colvarSigner.IsPrimaryKey = false;
                colvarSigner.IsForeignKey = false;
                colvarSigner.IsReadOnly = false;
                
                schema.Columns.Add(colvarSigner);
                
                TableSchema.TableColumn colvarSignedDate = new TableSchema.TableColumn(schema);
                colvarSignedDate.ColumnName = "Signed_Date";
                colvarSignedDate.DataType = DbType.DateTime;
                colvarSignedDate.MaxLength = 0;
                colvarSignedDate.AutoIncrement = false;
                colvarSignedDate.IsNullable = true;
                colvarSignedDate.IsPrimaryKey = false;
                colvarSignedDate.IsForeignKey = false;
                colvarSignedDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarSignedDate);
                
                TableSchema.TableColumn colvarPreHos = new TableSchema.TableColumn(schema);
                colvarPreHos.ColumnName = "Pre_Hos";
                colvarPreHos.DataType = DbType.Byte;
                colvarPreHos.MaxLength = 0;
                colvarPreHos.AutoIncrement = false;
                colvarPreHos.IsNullable = true;
                colvarPreHos.IsPrimaryKey = false;
                colvarPreHos.IsForeignKey = false;
                colvarPreHos.IsReadOnly = false;
                
                schema.Columns.Add(colvarPreHos);
                
                TableSchema.TableColumn colvarPresType = new TableSchema.TableColumn(schema);
                colvarPresType.ColumnName = "Pres_Type";
                colvarPresType.DataType = DbType.Byte;
                colvarPresType.MaxLength = 0;
                colvarPresType.AutoIncrement = false;
                colvarPresType.IsNullable = true;
                colvarPresType.IsPrimaryKey = false;
                colvarPresType.IsForeignKey = false;
                colvarPresType.IsReadOnly = false;
                
                schema.Columns.Add(colvarPresType);
                
                TableSchema.TableColumn colvarThanhtien = new TableSchema.TableColumn(schema);
                colvarThanhtien.ColumnName = "THANHTIEN";
                colvarThanhtien.DataType = DbType.Decimal;
                colvarThanhtien.MaxLength = 0;
                colvarThanhtien.AutoIncrement = false;
                colvarThanhtien.IsNullable = true;
                colvarThanhtien.IsPrimaryKey = false;
                colvarThanhtien.IsForeignKey = false;
                colvarThanhtien.IsReadOnly = false;
                
                schema.Columns.Add(colvarThanhtien);
                
                TableSchema.TableColumn colvarTt = new TableSchema.TableColumn(schema);
                colvarTt.ColumnName = "TT";
                colvarTt.DataType = DbType.Decimal;
                colvarTt.MaxLength = 0;
                colvarTt.AutoIncrement = false;
                colvarTt.IsNullable = true;
                colvarTt.IsPrimaryKey = false;
                colvarTt.IsForeignKey = false;
                colvarTt.IsReadOnly = false;
                
                schema.Columns.Add(colvarTt);
                
                TableSchema.TableColumn colvarInsuranceNum = new TableSchema.TableColumn(schema);
                colvarInsuranceNum.ColumnName = "Insurance_Num";
                colvarInsuranceNum.DataType = DbType.AnsiString;
                colvarInsuranceNum.MaxLength = 30;
                colvarInsuranceNum.AutoIncrement = false;
                colvarInsuranceNum.IsNullable = true;
                colvarInsuranceNum.IsPrimaryKey = false;
                colvarInsuranceNum.IsForeignKey = false;
                colvarInsuranceNum.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsuranceNum);
                
                TableSchema.TableColumn colvarPresDetailId = new TableSchema.TableColumn(schema);
                colvarPresDetailId.ColumnName = "PresDetail_ID";
                colvarPresDetailId.DataType = DbType.Int32;
                colvarPresDetailId.MaxLength = 0;
                colvarPresDetailId.AutoIncrement = false;
                colvarPresDetailId.IsNullable = false;
                colvarPresDetailId.IsPrimaryKey = false;
                colvarPresDetailId.IsForeignKey = false;
                colvarPresDetailId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPresDetailId);
                
                TableSchema.TableColumn colvarPresId = new TableSchema.TableColumn(schema);
                colvarPresId.ColumnName = "Pres_ID";
                colvarPresId.DataType = DbType.Int32;
                colvarPresId.MaxLength = 0;
                colvarPresId.AutoIncrement = false;
                colvarPresId.IsNullable = false;
                colvarPresId.IsPrimaryKey = false;
                colvarPresId.IsForeignKey = false;
                colvarPresId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPresId);
                
                TableSchema.TableColumn colvarDrugId = new TableSchema.TableColumn(schema);
                colvarDrugId.ColumnName = "Drug_ID";
                colvarDrugId.DataType = DbType.Int32;
                colvarDrugId.MaxLength = 0;
                colvarDrugId.AutoIncrement = false;
                colvarDrugId.IsNullable = false;
                colvarDrugId.IsPrimaryKey = false;
                colvarDrugId.IsForeignKey = false;
                colvarDrugId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugId);
                
                TableSchema.TableColumn colvarExpireDate = new TableSchema.TableColumn(schema);
                colvarExpireDate.ColumnName = "Expire_Date";
                colvarExpireDate.DataType = DbType.DateTime;
                colvarExpireDate.MaxLength = 0;
                colvarExpireDate.AutoIncrement = false;
                colvarExpireDate.IsNullable = false;
                colvarExpireDate.IsPrimaryKey = false;
                colvarExpireDate.IsForeignKey = false;
                colvarExpireDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarExpireDate);
                
                TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
                colvarQuantity.ColumnName = "Quantity";
                colvarQuantity.DataType = DbType.Int32;
                colvarQuantity.MaxLength = 0;
                colvarQuantity.AutoIncrement = false;
                colvarQuantity.IsNullable = false;
                colvarQuantity.IsPrimaryKey = false;
                colvarQuantity.IsForeignKey = false;
                colvarQuantity.IsReadOnly = false;
                
                schema.Columns.Add(colvarQuantity);
                
                TableSchema.TableColumn colvarPrice = new TableSchema.TableColumn(schema);
                colvarPrice.ColumnName = "Price";
                colvarPrice.DataType = DbType.Decimal;
                colvarPrice.MaxLength = 0;
                colvarPrice.AutoIncrement = false;
                colvarPrice.IsNullable = false;
                colvarPrice.IsPrimaryKey = false;
                colvarPrice.IsForeignKey = false;
                colvarPrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrice);
                
                TableSchema.TableColumn colvarSurchargePrice = new TableSchema.TableColumn(schema);
                colvarSurchargePrice.ColumnName = "Surcharge_Price";
                colvarSurchargePrice.DataType = DbType.Decimal;
                colvarSurchargePrice.MaxLength = 0;
                colvarSurchargePrice.AutoIncrement = false;
                colvarSurchargePrice.IsNullable = true;
                colvarSurchargePrice.IsPrimaryKey = false;
                colvarSurchargePrice.IsForeignKey = false;
                colvarSurchargePrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarSurchargePrice);
                
                TableSchema.TableColumn colvarSDesc = new TableSchema.TableColumn(schema);
                colvarSDesc.ColumnName = "sDesc";
                colvarSDesc.DataType = DbType.String;
                colvarSDesc.MaxLength = 500;
                colvarSDesc.AutoIncrement = false;
                colvarSDesc.IsNullable = true;
                colvarSDesc.IsPrimaryKey = false;
                colvarSDesc.IsForeignKey = false;
                colvarSDesc.IsReadOnly = false;
                
                schema.Columns.Add(colvarSDesc);
                
                TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
                colvarPaymentStatus.ColumnName = "Payment_Status";
                colvarPaymentStatus.DataType = DbType.Int32;
                colvarPaymentStatus.MaxLength = 0;
                colvarPaymentStatus.AutoIncrement = false;
                colvarPaymentStatus.IsNullable = true;
                colvarPaymentStatus.IsPrimaryKey = false;
                colvarPaymentStatus.IsForeignKey = false;
                colvarPaymentStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentStatus);
                
                TableSchema.TableColumn colvarQuantityCancel = new TableSchema.TableColumn(schema);
                colvarQuantityCancel.ColumnName = "Quantity_Cancel";
                colvarQuantityCancel.DataType = DbType.Int32;
                colvarQuantityCancel.MaxLength = 0;
                colvarQuantityCancel.AutoIncrement = false;
                colvarQuantityCancel.IsNullable = true;
                colvarQuantityCancel.IsPrimaryKey = false;
                colvarQuantityCancel.IsForeignKey = false;
                colvarQuantityCancel.IsReadOnly = false;
                
                schema.Columns.Add(colvarQuantityCancel);
                
                TableSchema.TableColumn colvarIsCancel = new TableSchema.TableColumn(schema);
                colvarIsCancel.ColumnName = "IsCancel";
                colvarIsCancel.DataType = DbType.Int32;
                colvarIsCancel.MaxLength = 0;
                colvarIsCancel.AutoIncrement = false;
                colvarIsCancel.IsNullable = true;
                colvarIsCancel.IsPrimaryKey = false;
                colvarIsCancel.IsForeignKey = false;
                colvarIsCancel.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsCancel);
                
                TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
                colvarPaymentDate.ColumnName = "Payment_Date";
                colvarPaymentDate.DataType = DbType.DateTime;
                colvarPaymentDate.MaxLength = 0;
                colvarPaymentDate.AutoIncrement = false;
                colvarPaymentDate.IsNullable = true;
                colvarPaymentDate.IsPrimaryKey = false;
                colvarPaymentDate.IsForeignKey = false;
                colvarPaymentDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentDate);
                
                TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
                colvarIsPayment.ColumnName = "IsPayment";
                colvarIsPayment.DataType = DbType.Byte;
                colvarIsPayment.MaxLength = 0;
                colvarIsPayment.AutoIncrement = false;
                colvarIsPayment.IsNullable = true;
                colvarIsPayment.IsPrimaryKey = false;
                colvarIsPayment.IsForeignKey = false;
                colvarIsPayment.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsPayment);
                
                TableSchema.TableColumn colvarStockId = new TableSchema.TableColumn(schema);
                colvarStockId.ColumnName = "Stock_ID";
                colvarStockId.DataType = DbType.Int32;
                colvarStockId.MaxLength = 0;
                colvarStockId.AutoIncrement = false;
                colvarStockId.IsNullable = true;
                colvarStockId.IsPrimaryKey = false;
                colvarStockId.IsForeignKey = false;
                colvarStockId.IsReadOnly = false;
                
                schema.Columns.Add(colvarStockId);
                
                TableSchema.TableColumn colvarHasComfirm = new TableSchema.TableColumn(schema);
                colvarHasComfirm.ColumnName = "HasComfirm";
                colvarHasComfirm.DataType = DbType.Byte;
                colvarHasComfirm.MaxLength = 0;
                colvarHasComfirm.AutoIncrement = false;
                colvarHasComfirm.IsNullable = true;
                colvarHasComfirm.IsPrimaryKey = false;
                colvarHasComfirm.IsForeignKey = false;
                colvarHasComfirm.IsReadOnly = false;
                
                schema.Columns.Add(colvarHasComfirm);
                
                TableSchema.TableColumn colvarBhytStatus = new TableSchema.TableColumn(schema);
                colvarBhytStatus.ColumnName = "BHYT_Status";
                colvarBhytStatus.DataType = DbType.Byte;
                colvarBhytStatus.MaxLength = 0;
                colvarBhytStatus.AutoIncrement = false;
                colvarBhytStatus.IsNullable = true;
                colvarBhytStatus.IsPrimaryKey = false;
                colvarBhytStatus.IsForeignKey = false;
                colvarBhytStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarBhytStatus);
                
                TableSchema.TableColumn colvarThuTuIn = new TableSchema.TableColumn(schema);
                colvarThuTuIn.ColumnName = "Thu_Tu_In";
                colvarThuTuIn.DataType = DbType.Int16;
                colvarThuTuIn.MaxLength = 0;
                colvarThuTuIn.AutoIncrement = false;
                colvarThuTuIn.IsNullable = true;
                colvarThuTuIn.IsPrimaryKey = false;
                colvarThuTuIn.IsForeignKey = false;
                colvarThuTuIn.IsReadOnly = false;
                
                schema.Columns.Add(colvarThuTuIn);
                
                TableSchema.TableColumn colvarGiaBhytCt = new TableSchema.TableColumn(schema);
                colvarGiaBhytCt.ColumnName = "Gia_BHYT_CT";
                colvarGiaBhytCt.DataType = DbType.Decimal;
                colvarGiaBhytCt.MaxLength = 0;
                colvarGiaBhytCt.AutoIncrement = false;
                colvarGiaBhytCt.IsNullable = true;
                colvarGiaBhytCt.IsPrimaryKey = false;
                colvarGiaBhytCt.IsForeignKey = false;
                colvarGiaBhytCt.IsReadOnly = false;
                
                schema.Columns.Add(colvarGiaBhytCt);
                
                TableSchema.TableColumn colvarGiaBnct = new TableSchema.TableColumn(schema);
                colvarGiaBnct.ColumnName = "Gia_BNCT";
                colvarGiaBnct.DataType = DbType.Decimal;
                colvarGiaBnct.MaxLength = 0;
                colvarGiaBnct.AutoIncrement = false;
                colvarGiaBnct.IsNullable = true;
                colvarGiaBnct.IsPrimaryKey = false;
                colvarGiaBnct.IsForeignKey = false;
                colvarGiaBnct.IsReadOnly = false;
                
                schema.Columns.Add(colvarGiaBnct);
                
                TableSchema.TableColumn colvarMaDTuong = new TableSchema.TableColumn(schema);
                colvarMaDTuong.ColumnName = "Ma_DTuong";
                colvarMaDTuong.DataType = DbType.AnsiString;
                colvarMaDTuong.MaxLength = 50;
                colvarMaDTuong.AutoIncrement = false;
                colvarMaDTuong.IsNullable = true;
                colvarMaDTuong.IsPrimaryKey = false;
                colvarMaDTuong.IsForeignKey = false;
                colvarMaDTuong.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaDTuong);
                
                TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
                colvarPaymentId.ColumnName = "Payment_ID";
                colvarPaymentId.DataType = DbType.Int32;
                colvarPaymentId.MaxLength = 0;
                colvarPaymentId.AutoIncrement = false;
                colvarPaymentId.IsNullable = true;
                colvarPaymentId.IsPrimaryKey = false;
                colvarPaymentId.IsForeignKey = false;
                colvarPaymentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentId);
                
                TableSchema.TableColumn colvarXacNhan = new TableSchema.TableColumn(schema);
                colvarXacNhan.ColumnName = "XAC_NHAN";
                colvarXacNhan.DataType = DbType.Byte;
                colvarXacNhan.MaxLength = 0;
                colvarXacNhan.AutoIncrement = false;
                colvarXacNhan.IsNullable = true;
                colvarXacNhan.IsPrimaryKey = false;
                colvarXacNhan.IsForeignKey = false;
                colvarXacNhan.IsReadOnly = false;
                
                schema.Columns.Add(colvarXacNhan);
                
                TableSchema.TableColumn colvarComfirmDeposit = new TableSchema.TableColumn(schema);
                colvarComfirmDeposit.ColumnName = "ComfirmDeposit";
                colvarComfirmDeposit.DataType = DbType.Int32;
                colvarComfirmDeposit.MaxLength = 0;
                colvarComfirmDeposit.AutoIncrement = false;
                colvarComfirmDeposit.IsNullable = true;
                colvarComfirmDeposit.IsPrimaryKey = false;
                colvarComfirmDeposit.IsForeignKey = false;
                colvarComfirmDeposit.IsReadOnly = false;
                
                schema.Columns.Add(colvarComfirmDeposit);
                
                TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
                colvarTrongGoi.ColumnName = "TRONG_GOI";
                colvarTrongGoi.DataType = DbType.Byte;
                colvarTrongGoi.MaxLength = 0;
                colvarTrongGoi.AutoIncrement = false;
                colvarTrongGoi.IsNullable = true;
                colvarTrongGoi.IsPrimaryKey = false;
                colvarTrongGoi.IsForeignKey = false;
                colvarTrongGoi.IsReadOnly = false;
                
                schema.Columns.Add(colvarTrongGoi);
                
                TableSchema.TableColumn colvarCachDung = new TableSchema.TableColumn(schema);
                colvarCachDung.ColumnName = "CACH_DUNG";
                colvarCachDung.DataType = DbType.String;
                colvarCachDung.MaxLength = 20;
                colvarCachDung.AutoIncrement = false;
                colvarCachDung.IsNullable = true;
                colvarCachDung.IsPrimaryKey = false;
                colvarCachDung.IsForeignKey = false;
                colvarCachDung.IsReadOnly = false;
                
                schema.Columns.Add(colvarCachDung);
                
                TableSchema.TableColumn colvarChiDanThem = new TableSchema.TableColumn(schema);
                colvarChiDanThem.ColumnName = "CHI_DAN_THEM";
                colvarChiDanThem.DataType = DbType.String;
                colvarChiDanThem.MaxLength = 255;
                colvarChiDanThem.AutoIncrement = false;
                colvarChiDanThem.IsNullable = true;
                colvarChiDanThem.IsPrimaryKey = false;
                colvarChiDanThem.IsForeignKey = false;
                colvarChiDanThem.IsReadOnly = false;
                
                schema.Columns.Add(colvarChiDanThem);
                
                TableSchema.TableColumn colvarDviDung = new TableSchema.TableColumn(schema);
                colvarDviDung.ColumnName = "DVI_DUNG";
                colvarDviDung.DataType = DbType.String;
                colvarDviDung.MaxLength = 20;
                colvarDviDung.AutoIncrement = false;
                colvarDviDung.IsNullable = true;
                colvarDviDung.IsPrimaryKey = false;
                colvarDviDung.IsForeignKey = false;
                colvarDviDung.IsReadOnly = false;
                
                schema.Columns.Add(colvarDviDung);
                
                TableSchema.TableColumn colvarSoLanDung = new TableSchema.TableColumn(schema);
                colvarSoLanDung.ColumnName = "SO_LAN_DUNG";
                colvarSoLanDung.DataType = DbType.String;
                colvarSoLanDung.MaxLength = 10;
                colvarSoLanDung.AutoIncrement = false;
                colvarSoLanDung.IsNullable = true;
                colvarSoLanDung.IsPrimaryKey = false;
                colvarSoLanDung.IsForeignKey = false;
                colvarSoLanDung.IsReadOnly = false;
                
                schema.Columns.Add(colvarSoLanDung);
                
                TableSchema.TableColumn colvarSluongSua = new TableSchema.TableColumn(schema);
                colvarSluongSua.ColumnName = "SLUONG_SUA";
                colvarSluongSua.DataType = DbType.Int32;
                colvarSluongSua.MaxLength = 0;
                colvarSluongSua.AutoIncrement = false;
                colvarSluongSua.IsNullable = true;
                colvarSluongSua.IsPrimaryKey = false;
                colvarSluongSua.IsForeignKey = false;
                colvarSluongSua.IsReadOnly = false;
                
                schema.Columns.Add(colvarSluongSua);
                
                TableSchema.TableColumn colvarSluongLinh = new TableSchema.TableColumn(schema);
                colvarSluongLinh.ColumnName = "SLUONG_LINH";
                colvarSluongLinh.DataType = DbType.Int32;
                colvarSluongLinh.MaxLength = 0;
                colvarSluongLinh.AutoIncrement = false;
                colvarSluongLinh.IsNullable = true;
                colvarSluongLinh.IsPrimaryKey = false;
                colvarSluongLinh.IsForeignKey = false;
                colvarSluongLinh.IsReadOnly = false;
                
                schema.Columns.Add(colvarSluongLinh);
                
                TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
                colvarNgayTao.ColumnName = "NGAY_TAO";
                colvarNgayTao.DataType = DbType.DateTime;
                colvarNgayTao.MaxLength = 0;
                colvarNgayTao.AutoIncrement = false;
                colvarNgayTao.IsNullable = true;
                colvarNgayTao.IsPrimaryKey = false;
                colvarNgayTao.IsForeignKey = false;
                colvarNgayTao.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgayTao);
                
                TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
                colvarNguoiTao.ColumnName = "NGUOI_TAO";
                colvarNguoiTao.DataType = DbType.String;
                colvarNguoiTao.MaxLength = 20;
                colvarNguoiTao.AutoIncrement = false;
                colvarNguoiTao.IsNullable = true;
                colvarNguoiTao.IsPrimaryKey = false;
                colvarNguoiTao.IsForeignKey = false;
                colvarNguoiTao.IsReadOnly = false;
                
                schema.Columns.Add(colvarNguoiTao);
                
                TableSchema.TableColumn colvarSoLuongDung = new TableSchema.TableColumn(schema);
                colvarSoLuongDung.ColumnName = "SO_LUONG_DUNG";
                colvarSoLuongDung.DataType = DbType.String;
                colvarSoLuongDung.MaxLength = 10;
                colvarSoLuongDung.AutoIncrement = false;
                colvarSoLuongDung.IsNullable = true;
                colvarSoLuongDung.IsPrimaryKey = false;
                colvarSoLuongDung.IsForeignKey = false;
                colvarSoLuongDung.IsReadOnly = false;
                
                schema.Columns.Add(colvarSoLuongDung);
                
                TableSchema.TableColumn colvarDrugCode = new TableSchema.TableColumn(schema);
                colvarDrugCode.ColumnName = "Drug_Code";
                colvarDrugCode.DataType = DbType.AnsiString;
                colvarDrugCode.MaxLength = 20;
                colvarDrugCode.AutoIncrement = false;
                colvarDrugCode.IsNullable = true;
                colvarDrugCode.IsPrimaryKey = false;
                colvarDrugCode.IsForeignKey = false;
                colvarDrugCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugCode);
                
                TableSchema.TableColumn colvarActive = new TableSchema.TableColumn(schema);
                colvarActive.ColumnName = "ACTIVE";
                colvarActive.DataType = DbType.String;
                colvarActive.MaxLength = 255;
                colvarActive.AutoIncrement = false;
                colvarActive.IsNullable = true;
                colvarActive.IsPrimaryKey = false;
                colvarActive.IsForeignKey = false;
                colvarActive.IsReadOnly = false;
                
                schema.Columns.Add(colvarActive);
                
                TableSchema.TableColumn colvarDrugName = new TableSchema.TableColumn(schema);
                colvarDrugName.ColumnName = "Drug_Name";
                colvarDrugName.DataType = DbType.String;
                colvarDrugName.MaxLength = 200;
                colvarDrugName.AutoIncrement = false;
                colvarDrugName.IsNullable = true;
                colvarDrugName.IsPrimaryKey = false;
                colvarDrugName.IsForeignKey = false;
                colvarDrugName.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugName);
                
                TableSchema.TableColumn colvarHamLuong = new TableSchema.TableColumn(schema);
                colvarHamLuong.ColumnName = "HamLuong";
                colvarHamLuong.DataType = DbType.String;
                colvarHamLuong.MaxLength = 255;
                colvarHamLuong.AutoIncrement = false;
                colvarHamLuong.IsNullable = true;
                colvarHamLuong.IsPrimaryKey = false;
                colvarHamLuong.IsForeignKey = false;
                colvarHamLuong.IsReadOnly = false;
                
                schema.Columns.Add(colvarHamLuong);
                
                TableSchema.TableColumn colvarDrugTypeId = new TableSchema.TableColumn(schema);
                colvarDrugTypeId.ColumnName = "DrugType_ID";
                colvarDrugTypeId.DataType = DbType.Int16;
                colvarDrugTypeId.MaxLength = 0;
                colvarDrugTypeId.AutoIncrement = false;
                colvarDrugTypeId.IsNullable = true;
                colvarDrugTypeId.IsPrimaryKey = false;
                colvarDrugTypeId.IsForeignKey = false;
                colvarDrugTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugTypeId);
                
                TableSchema.TableColumn colvarDrugTypeName = new TableSchema.TableColumn(schema);
                colvarDrugTypeName.ColumnName = "DrugType_Name";
                colvarDrugTypeName.DataType = DbType.String;
                colvarDrugTypeName.MaxLength = 200;
                colvarDrugTypeName.AutoIncrement = false;
                colvarDrugTypeName.IsNullable = true;
                colvarDrugTypeName.IsPrimaryKey = false;
                colvarDrugTypeName.IsForeignKey = false;
                colvarDrugTypeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugTypeName);
                
                TableSchema.TableColumn colvarUnitId = new TableSchema.TableColumn(schema);
                colvarUnitId.ColumnName = "UNIT_ID";
                colvarUnitId.DataType = DbType.Int16;
                colvarUnitId.MaxLength = 0;
                colvarUnitId.AutoIncrement = false;
                colvarUnitId.IsNullable = true;
                colvarUnitId.IsPrimaryKey = false;
                colvarUnitId.IsForeignKey = false;
                colvarUnitId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitId);
                
                TableSchema.TableColumn colvarUnitName = new TableSchema.TableColumn(schema);
                colvarUnitName.ColumnName = "UNIT_Name";
                colvarUnitName.DataType = DbType.String;
                colvarUnitName.MaxLength = 100;
                colvarUnitName.AutoIncrement = false;
                colvarUnitName.IsNullable = true;
                colvarUnitName.IsPrimaryKey = false;
                colvarUnitName.IsForeignKey = false;
                colvarUnitName.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitName);
                
                TableSchema.TableColumn colvarObjectTypeId = new TableSchema.TableColumn(schema);
                colvarObjectTypeId.ColumnName = "ObjectType_ID";
                colvarObjectTypeId.DataType = DbType.Int16;
                colvarObjectTypeId.MaxLength = 0;
                colvarObjectTypeId.AutoIncrement = false;
                colvarObjectTypeId.IsNullable = true;
                colvarObjectTypeId.IsPrimaryKey = false;
                colvarObjectTypeId.IsForeignKey = false;
                colvarObjectTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarObjectTypeId);
                
                TableSchema.TableColumn colvarDoctorName = new TableSchema.TableColumn(schema);
                colvarDoctorName.ColumnName = "Doctor_Name";
                colvarDoctorName.DataType = DbType.String;
                colvarDoctorName.MaxLength = 100;
                colvarDoctorName.AutoIncrement = false;
                colvarDoctorName.IsNullable = true;
                colvarDoctorName.IsPrimaryKey = false;
                colvarDoctorName.IsForeignKey = false;
                colvarDoctorName.IsReadOnly = false;
                
                schema.Columns.Add(colvarDoctorName);
                
                TableSchema.TableColumn colvarInputUserName = new TableSchema.TableColumn(schema);
                colvarInputUserName.ColumnName = "Input_UserName";
                colvarInputUserName.DataType = DbType.String;
                colvarInputUserName.MaxLength = 20;
                colvarInputUserName.AutoIncrement = false;
                colvarInputUserName.IsNullable = false;
                colvarInputUserName.IsPrimaryKey = false;
                colvarInputUserName.IsForeignKey = false;
                colvarInputUserName.IsReadOnly = false;
                
                schema.Columns.Add(colvarInputUserName);
                
                TableSchema.TableColumn colvarSPresDate = new TableSchema.TableColumn(schema);
                colvarSPresDate.ColumnName = "sPres_Date";
                colvarSPresDate.DataType = DbType.String;
                colvarSPresDate.MaxLength = 10;
                colvarSPresDate.AutoIncrement = false;
                colvarSPresDate.IsNullable = true;
                colvarSPresDate.IsPrimaryKey = false;
                colvarSPresDate.IsForeignKey = false;
                colvarSPresDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarSPresDate);
                
                TableSchema.TableColumn colvarSSex = new TableSchema.TableColumn(schema);
                colvarSSex.ColumnName = "sSex";
                colvarSSex.DataType = DbType.String;
                colvarSSex.MaxLength = 10;
                colvarSSex.AutoIncrement = false;
                colvarSSex.IsNullable = true;
                colvarSSex.IsPrimaryKey = false;
                colvarSSex.IsForeignKey = false;
                colvarSSex.IsReadOnly = false;
                
                schema.Columns.Add(colvarSSex);
                
                TableSchema.TableColumn colvarDrugTypeCode = new TableSchema.TableColumn(schema);
                colvarDrugTypeCode.ColumnName = "DrugType_Code";
                colvarDrugTypeCode.DataType = DbType.String;
                colvarDrugTypeCode.MaxLength = 50;
                colvarDrugTypeCode.AutoIncrement = false;
                colvarDrugTypeCode.IsNullable = true;
                colvarDrugTypeCode.IsPrimaryKey = false;
                colvarDrugTypeCode.IsForeignKey = false;
                colvarDrugTypeCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarDrugTypeCode);
                
                TableSchema.TableColumn colvarDepartmentName = new TableSchema.TableColumn(schema);
                colvarDepartmentName.ColumnName = "Department_Name";
                colvarDepartmentName.DataType = DbType.String;
                colvarDepartmentName.MaxLength = 100;
                colvarDepartmentName.AutoIncrement = false;
                colvarDepartmentName.IsNullable = true;
                colvarDepartmentName.IsPrimaryKey = false;
                colvarDepartmentName.IsForeignKey = false;
                colvarDepartmentName.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepartmentName);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("VIEW_LAYTHONGTIN_DONTHUOC",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewLaythongtinDonthuoc()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewLaythongtinDonthuoc(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewLaythongtinDonthuoc(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewLaythongtinDonthuoc(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("TreatId")]
        [Bindable(true)]
        public int? TreatId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Treat_ID");
		    }
            set 
		    {
			    SetColumnValue("Treat_ID", value);
            }
        }
	      
        [XmlAttribute("PatientDeptId")]
        [Bindable(true)]
        public int? PatientDeptId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PatientDept_ID");
		    }
            set 
		    {
			    SetColumnValue("PatientDept_ID", value);
            }
        }
	      
        [XmlAttribute("ReplacePresId")]
        [Bindable(true)]
        public int? ReplacePresId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ReplacePres_ID");
		    }
            set 
		    {
			    SetColumnValue("ReplacePres_ID", value);
            }
        }
	      
        [XmlAttribute("ExamId")]
        [Bindable(true)]
        public long? ExamId 
	    {
		    get
		    {
			    return GetColumnValue<long?>("Exam_ID");
		    }
            set 
		    {
			    SetColumnValue("Exam_ID", value);
            }
        }
	      
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public long? PatientId 
	    {
		    get
		    {
			    return GetColumnValue<long?>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Code");
		    }
            set 
		    {
			    SetColumnValue("Patient_Code", value);
            }
        }
	      
        [XmlAttribute("PresDate")]
        [Bindable(true)]
        public DateTime PresDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("Pres_Date");
		    }
            set 
		    {
			    SetColumnValue("Pres_Date", value);
            }
        }
	      
        [XmlAttribute("IsLocked")]
        [Bindable(true)]
        public int IsLocked 
	    {
		    get
		    {
			    return GetColumnValue<int>("IsLocked");
		    }
            set 
		    {
			    SetColumnValue("IsLocked", value);
            }
        }
	      
        [XmlAttribute("AssignId")]
        [Bindable(true)]
        public short? AssignId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Assign_ID");
		    }
            set 
		    {
			    SetColumnValue("Assign_ID", value);
            }
        }
	      
        [XmlAttribute("Status")]
        [Bindable(true)]
        public byte Status 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Status");
		    }
            set 
		    {
			    SetColumnValue("Status", value);
            }
        }
	      
        [XmlAttribute("SExpireDate")]
        [Bindable(true)]
        public string SExpireDate 
	    {
		    get
		    {
			    return GetColumnValue<string>("sExpire_Date");
		    }
            set 
		    {
			    SetColumnValue("sExpire_Date", value);
            }
        }
	      
        [XmlAttribute("CreatedBy")]
        [Bindable(true)]
        public string CreatedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("Created_by");
		    }
            set 
		    {
			    SetColumnValue("Created_by", value);
            }
        }
	      
        [XmlAttribute("CreatedDate")]
        [Bindable(true)]
        public DateTime CreatedDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("CreatedDate");
		    }
            set 
		    {
			    SetColumnValue("CreatedDate", value);
            }
        }
	      
        [XmlAttribute("Modifiedby")]
        [Bindable(true)]
        public string Modifiedby 
	    {
		    get
		    {
			    return GetColumnValue<string>("Modifiedby");
		    }
            set 
		    {
			    SetColumnValue("Modifiedby", value);
            }
        }
	      
        [XmlAttribute("ModifiedDate")]
        [Bindable(true)]
        public DateTime? ModifiedDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ModifiedDate");
		    }
            set 
		    {
			    SetColumnValue("ModifiedDate", value);
            }
        }
	      
        [XmlAttribute("PresName")]
        [Bindable(true)]
        public string PresName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Pres_Name");
		    }
            set 
		    {
			    SetColumnValue("Pres_Name", value);
            }
        }
	      
        [XmlAttribute("PresCode")]
        [Bindable(true)]
        public string PresCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Pres_Code");
		    }
            set 
		    {
			    SetColumnValue("Pres_Code", value);
            }
        }
	      
        [XmlAttribute("Signer")]
        [Bindable(true)]
        public short? Signer 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Signer");
		    }
            set 
		    {
			    SetColumnValue("Signer", value);
            }
        }
	      
        [XmlAttribute("SignedDate")]
        [Bindable(true)]
        public DateTime? SignedDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Signed_Date");
		    }
            set 
		    {
			    SetColumnValue("Signed_Date", value);
            }
        }
	      
        [XmlAttribute("PreHos")]
        [Bindable(true)]
        public byte? PreHos 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Pre_Hos");
		    }
            set 
		    {
			    SetColumnValue("Pre_Hos", value);
            }
        }
	      
        [XmlAttribute("PresType")]
        [Bindable(true)]
        public byte? PresType 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Pres_Type");
		    }
            set 
		    {
			    SetColumnValue("Pres_Type", value);
            }
        }
	      
        [XmlAttribute("Thanhtien")]
        [Bindable(true)]
        public decimal? Thanhtien 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("THANHTIEN");
		    }
            set 
		    {
			    SetColumnValue("THANHTIEN", value);
            }
        }
	      
        [XmlAttribute("Tt")]
        [Bindable(true)]
        public decimal? Tt 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("TT");
		    }
            set 
		    {
			    SetColumnValue("TT", value);
            }
        }
	      
        [XmlAttribute("InsuranceNum")]
        [Bindable(true)]
        public string InsuranceNum 
	    {
		    get
		    {
			    return GetColumnValue<string>("Insurance_Num");
		    }
            set 
		    {
			    SetColumnValue("Insurance_Num", value);
            }
        }
	      
        [XmlAttribute("PresDetailId")]
        [Bindable(true)]
        public int PresDetailId 
	    {
		    get
		    {
			    return GetColumnValue<int>("PresDetail_ID");
		    }
            set 
		    {
			    SetColumnValue("PresDetail_ID", value);
            }
        }
	      
        [XmlAttribute("PresId")]
        [Bindable(true)]
        public int PresId 
	    {
		    get
		    {
			    return GetColumnValue<int>("Pres_ID");
		    }
            set 
		    {
			    SetColumnValue("Pres_ID", value);
            }
        }
	      
        [XmlAttribute("DrugId")]
        [Bindable(true)]
        public int DrugId 
	    {
		    get
		    {
			    return GetColumnValue<int>("Drug_ID");
		    }
            set 
		    {
			    SetColumnValue("Drug_ID", value);
            }
        }
	      
        [XmlAttribute("ExpireDate")]
        [Bindable(true)]
        public DateTime ExpireDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("Expire_Date");
		    }
            set 
		    {
			    SetColumnValue("Expire_Date", value);
            }
        }
	      
        [XmlAttribute("Quantity")]
        [Bindable(true)]
        public int Quantity 
	    {
		    get
		    {
			    return GetColumnValue<int>("Quantity");
		    }
            set 
		    {
			    SetColumnValue("Quantity", value);
            }
        }
	      
        [XmlAttribute("Price")]
        [Bindable(true)]
        public decimal Price 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("Price");
		    }
            set 
		    {
			    SetColumnValue("Price", value);
            }
        }
	      
        [XmlAttribute("SurchargePrice")]
        [Bindable(true)]
        public decimal? SurchargePrice 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Surcharge_Price");
		    }
            set 
		    {
			    SetColumnValue("Surcharge_Price", value);
            }
        }
	      
        [XmlAttribute("SDesc")]
        [Bindable(true)]
        public string SDesc 
	    {
		    get
		    {
			    return GetColumnValue<string>("sDesc");
		    }
            set 
		    {
			    SetColumnValue("sDesc", value);
            }
        }
	      
        [XmlAttribute("PaymentStatus")]
        [Bindable(true)]
        public int? PaymentStatus 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Payment_Status");
		    }
            set 
		    {
			    SetColumnValue("Payment_Status", value);
            }
        }
	      
        [XmlAttribute("QuantityCancel")]
        [Bindable(true)]
        public int? QuantityCancel 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Quantity_Cancel");
		    }
            set 
		    {
			    SetColumnValue("Quantity_Cancel", value);
            }
        }
	      
        [XmlAttribute("IsCancel")]
        [Bindable(true)]
        public int? IsCancel 
	    {
		    get
		    {
			    return GetColumnValue<int?>("IsCancel");
		    }
            set 
		    {
			    SetColumnValue("IsCancel", value);
            }
        }
	      
        [XmlAttribute("PaymentDate")]
        [Bindable(true)]
        public DateTime? PaymentDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Payment_Date");
		    }
            set 
		    {
			    SetColumnValue("Payment_Date", value);
            }
        }
	      
        [XmlAttribute("IsPayment")]
        [Bindable(true)]
        public byte? IsPayment 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("IsPayment");
		    }
            set 
		    {
			    SetColumnValue("IsPayment", value);
            }
        }
	      
        [XmlAttribute("StockId")]
        [Bindable(true)]
        public int? StockId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Stock_ID");
		    }
            set 
		    {
			    SetColumnValue("Stock_ID", value);
            }
        }
	      
        [XmlAttribute("HasComfirm")]
        [Bindable(true)]
        public byte? HasComfirm 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("HasComfirm");
		    }
            set 
		    {
			    SetColumnValue("HasComfirm", value);
            }
        }
	      
        [XmlAttribute("BhytStatus")]
        [Bindable(true)]
        public byte? BhytStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("BHYT_Status");
		    }
            set 
		    {
			    SetColumnValue("BHYT_Status", value);
            }
        }
	      
        [XmlAttribute("ThuTuIn")]
        [Bindable(true)]
        public short? ThuTuIn 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Thu_Tu_In");
		    }
            set 
		    {
			    SetColumnValue("Thu_Tu_In", value);
            }
        }
	      
        [XmlAttribute("GiaBhytCt")]
        [Bindable(true)]
        public decimal? GiaBhytCt 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Gia_BHYT_CT");
		    }
            set 
		    {
			    SetColumnValue("Gia_BHYT_CT", value);
            }
        }
	      
        [XmlAttribute("GiaBnct")]
        [Bindable(true)]
        public decimal? GiaBnct 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Gia_BNCT");
		    }
            set 
		    {
			    SetColumnValue("Gia_BNCT", value);
            }
        }
	      
        [XmlAttribute("MaDTuong")]
        [Bindable(true)]
        public string MaDTuong 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ma_DTuong");
		    }
            set 
		    {
			    SetColumnValue("Ma_DTuong", value);
            }
        }
	      
        [XmlAttribute("PaymentId")]
        [Bindable(true)]
        public int? PaymentId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Payment_ID");
		    }
            set 
		    {
			    SetColumnValue("Payment_ID", value);
            }
        }
	      
        [XmlAttribute("XacNhan")]
        [Bindable(true)]
        public byte? XacNhan 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("XAC_NHAN");
		    }
            set 
		    {
			    SetColumnValue("XAC_NHAN", value);
            }
        }
	      
        [XmlAttribute("ComfirmDeposit")]
        [Bindable(true)]
        public int? ComfirmDeposit 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ComfirmDeposit");
		    }
            set 
		    {
			    SetColumnValue("ComfirmDeposit", value);
            }
        }
	      
        [XmlAttribute("TrongGoi")]
        [Bindable(true)]
        public byte? TrongGoi 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("TRONG_GOI");
		    }
            set 
		    {
			    SetColumnValue("TRONG_GOI", value);
            }
        }
	      
        [XmlAttribute("CachDung")]
        [Bindable(true)]
        public string CachDung 
	    {
		    get
		    {
			    return GetColumnValue<string>("CACH_DUNG");
		    }
            set 
		    {
			    SetColumnValue("CACH_DUNG", value);
            }
        }
	      
        [XmlAttribute("ChiDanThem")]
        [Bindable(true)]
        public string ChiDanThem 
	    {
		    get
		    {
			    return GetColumnValue<string>("CHI_DAN_THEM");
		    }
            set 
		    {
			    SetColumnValue("CHI_DAN_THEM", value);
            }
        }
	      
        [XmlAttribute("DviDung")]
        [Bindable(true)]
        public string DviDung 
	    {
		    get
		    {
			    return GetColumnValue<string>("DVI_DUNG");
		    }
            set 
		    {
			    SetColumnValue("DVI_DUNG", value);
            }
        }
	      
        [XmlAttribute("SoLanDung")]
        [Bindable(true)]
        public string SoLanDung 
	    {
		    get
		    {
			    return GetColumnValue<string>("SO_LAN_DUNG");
		    }
            set 
		    {
			    SetColumnValue("SO_LAN_DUNG", value);
            }
        }
	      
        [XmlAttribute("SluongSua")]
        [Bindable(true)]
        public int? SluongSua 
	    {
		    get
		    {
			    return GetColumnValue<int?>("SLUONG_SUA");
		    }
            set 
		    {
			    SetColumnValue("SLUONG_SUA", value);
            }
        }
	      
        [XmlAttribute("SluongLinh")]
        [Bindable(true)]
        public int? SluongLinh 
	    {
		    get
		    {
			    return GetColumnValue<int?>("SLUONG_LINH");
		    }
            set 
		    {
			    SetColumnValue("SLUONG_LINH", value);
            }
        }
	      
        [XmlAttribute("NgayTao")]
        [Bindable(true)]
        public DateTime? NgayTao 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("NGAY_TAO");
		    }
            set 
		    {
			    SetColumnValue("NGAY_TAO", value);
            }
        }
	      
        [XmlAttribute("NguoiTao")]
        [Bindable(true)]
        public string NguoiTao 
	    {
		    get
		    {
			    return GetColumnValue<string>("NGUOI_TAO");
		    }
            set 
		    {
			    SetColumnValue("NGUOI_TAO", value);
            }
        }
	      
        [XmlAttribute("SoLuongDung")]
        [Bindable(true)]
        public string SoLuongDung 
	    {
		    get
		    {
			    return GetColumnValue<string>("SO_LUONG_DUNG");
		    }
            set 
		    {
			    SetColumnValue("SO_LUONG_DUNG", value);
            }
        }
	      
        [XmlAttribute("DrugCode")]
        [Bindable(true)]
        public string DrugCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Drug_Code");
		    }
            set 
		    {
			    SetColumnValue("Drug_Code", value);
            }
        }
	      
        [XmlAttribute("Active")]
        [Bindable(true)]
        public string Active 
	    {
		    get
		    {
			    return GetColumnValue<string>("ACTIVE");
		    }
            set 
		    {
			    SetColumnValue("ACTIVE", value);
            }
        }
	      
        [XmlAttribute("DrugName")]
        [Bindable(true)]
        public string DrugName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Drug_Name");
		    }
            set 
		    {
			    SetColumnValue("Drug_Name", value);
            }
        }
	      
        [XmlAttribute("HamLuong")]
        [Bindable(true)]
        public string HamLuong 
	    {
		    get
		    {
			    return GetColumnValue<string>("HamLuong");
		    }
            set 
		    {
			    SetColumnValue("HamLuong", value);
            }
        }
	      
        [XmlAttribute("DrugTypeId")]
        [Bindable(true)]
        public short? DrugTypeId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("DrugType_ID");
		    }
            set 
		    {
			    SetColumnValue("DrugType_ID", value);
            }
        }
	      
        [XmlAttribute("DrugTypeName")]
        [Bindable(true)]
        public string DrugTypeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("DrugType_Name");
		    }
            set 
		    {
			    SetColumnValue("DrugType_Name", value);
            }
        }
	      
        [XmlAttribute("UnitId")]
        [Bindable(true)]
        public short? UnitId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("UNIT_ID");
		    }
            set 
		    {
			    SetColumnValue("UNIT_ID", value);
            }
        }
	      
        [XmlAttribute("UnitName")]
        [Bindable(true)]
        public string UnitName 
	    {
		    get
		    {
			    return GetColumnValue<string>("UNIT_Name");
		    }
            set 
		    {
			    SetColumnValue("UNIT_Name", value);
            }
        }
	      
        [XmlAttribute("ObjectTypeId")]
        [Bindable(true)]
        public short? ObjectTypeId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("ObjectType_ID");
		    }
            set 
		    {
			    SetColumnValue("ObjectType_ID", value);
            }
        }
	      
        [XmlAttribute("DoctorName")]
        [Bindable(true)]
        public string DoctorName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Doctor_Name");
		    }
            set 
		    {
			    SetColumnValue("Doctor_Name", value);
            }
        }
	      
        [XmlAttribute("InputUserName")]
        [Bindable(true)]
        public string InputUserName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Input_UserName");
		    }
            set 
		    {
			    SetColumnValue("Input_UserName", value);
            }
        }
	      
        [XmlAttribute("SPresDate")]
        [Bindable(true)]
        public string SPresDate 
	    {
		    get
		    {
			    return GetColumnValue<string>("sPres_Date");
		    }
            set 
		    {
			    SetColumnValue("sPres_Date", value);
            }
        }
	      
        [XmlAttribute("SSex")]
        [Bindable(true)]
        public string SSex 
	    {
		    get
		    {
			    return GetColumnValue<string>("sSex");
		    }
            set 
		    {
			    SetColumnValue("sSex", value);
            }
        }
	      
        [XmlAttribute("DrugTypeCode")]
        [Bindable(true)]
        public string DrugTypeCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("DrugType_Code");
		    }
            set 
		    {
			    SetColumnValue("DrugType_Code", value);
            }
        }
	      
        [XmlAttribute("DepartmentName")]
        [Bindable(true)]
        public string DepartmentName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Department_Name");
		    }
            set 
		    {
			    SetColumnValue("Department_Name", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string TreatId = @"Treat_ID";
            
            public static string PatientDeptId = @"PatientDept_ID";
            
            public static string ReplacePresId = @"ReplacePres_ID";
            
            public static string ExamId = @"Exam_ID";
            
            public static string PatientId = @"Patient_ID";
            
            public static string PatientCode = @"Patient_Code";
            
            public static string PresDate = @"Pres_Date";
            
            public static string IsLocked = @"IsLocked";
            
            public static string AssignId = @"Assign_ID";
            
            public static string Status = @"Status";
            
            public static string SExpireDate = @"sExpire_Date";
            
            public static string CreatedBy = @"Created_by";
            
            public static string CreatedDate = @"CreatedDate";
            
            public static string Modifiedby = @"Modifiedby";
            
            public static string ModifiedDate = @"ModifiedDate";
            
            public static string PresName = @"Pres_Name";
            
            public static string PresCode = @"Pres_Code";
            
            public static string Signer = @"Signer";
            
            public static string SignedDate = @"Signed_Date";
            
            public static string PreHos = @"Pre_Hos";
            
            public static string PresType = @"Pres_Type";
            
            public static string Thanhtien = @"THANHTIEN";
            
            public static string Tt = @"TT";
            
            public static string InsuranceNum = @"Insurance_Num";
            
            public static string PresDetailId = @"PresDetail_ID";
            
            public static string PresId = @"Pres_ID";
            
            public static string DrugId = @"Drug_ID";
            
            public static string ExpireDate = @"Expire_Date";
            
            public static string Quantity = @"Quantity";
            
            public static string Price = @"Price";
            
            public static string SurchargePrice = @"Surcharge_Price";
            
            public static string SDesc = @"sDesc";
            
            public static string PaymentStatus = @"Payment_Status";
            
            public static string QuantityCancel = @"Quantity_Cancel";
            
            public static string IsCancel = @"IsCancel";
            
            public static string PaymentDate = @"Payment_Date";
            
            public static string IsPayment = @"IsPayment";
            
            public static string StockId = @"Stock_ID";
            
            public static string HasComfirm = @"HasComfirm";
            
            public static string BhytStatus = @"BHYT_Status";
            
            public static string ThuTuIn = @"Thu_Tu_In";
            
            public static string GiaBhytCt = @"Gia_BHYT_CT";
            
            public static string GiaBnct = @"Gia_BNCT";
            
            public static string MaDTuong = @"Ma_DTuong";
            
            public static string PaymentId = @"Payment_ID";
            
            public static string XacNhan = @"XAC_NHAN";
            
            public static string ComfirmDeposit = @"ComfirmDeposit";
            
            public static string TrongGoi = @"TRONG_GOI";
            
            public static string CachDung = @"CACH_DUNG";
            
            public static string ChiDanThem = @"CHI_DAN_THEM";
            
            public static string DviDung = @"DVI_DUNG";
            
            public static string SoLanDung = @"SO_LAN_DUNG";
            
            public static string SluongSua = @"SLUONG_SUA";
            
            public static string SluongLinh = @"SLUONG_LINH";
            
            public static string NgayTao = @"NGAY_TAO";
            
            public static string NguoiTao = @"NGUOI_TAO";
            
            public static string SoLuongDung = @"SO_LUONG_DUNG";
            
            public static string DrugCode = @"Drug_Code";
            
            public static string Active = @"ACTIVE";
            
            public static string DrugName = @"Drug_Name";
            
            public static string HamLuong = @"HamLuong";
            
            public static string DrugTypeId = @"DrugType_ID";
            
            public static string DrugTypeName = @"DrugType_Name";
            
            public static string UnitId = @"UNIT_ID";
            
            public static string UnitName = @"UNIT_Name";
            
            public static string ObjectTypeId = @"ObjectType_ID";
            
            public static string DoctorName = @"Doctor_Name";
            
            public static string InputUserName = @"Input_UserName";
            
            public static string SPresDate = @"sPres_Date";
            
            public static string SSex = @"sSex";
            
            public static string DrugTypeCode = @"DrugType_Code";
            
            public static string DepartmentName = @"Department_Name";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
