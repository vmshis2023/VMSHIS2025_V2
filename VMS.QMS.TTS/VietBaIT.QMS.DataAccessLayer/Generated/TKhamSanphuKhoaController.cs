using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_KHAM_SANPHU_KHOA
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TKhamSanphuKhoaController
    {
        // Preload our schema..
        TKhamSanphuKhoa thisSchemaLoad = new TKhamSanphuKhoa();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TKhamSanphuKhoaCollection FetchAll()
        {
            TKhamSanphuKhoaCollection coll = new TKhamSanphuKhoaCollection();
            Query qry = new Query(TKhamSanphuKhoa.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TKhamSanphuKhoaCollection FetchByID(object IdKhamSanphuKhoa)
        {
            TKhamSanphuKhoaCollection coll = new TKhamSanphuKhoaCollection().Where("ID_KHAM_SANPHU_KHOA", IdKhamSanphuKhoa).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TKhamSanphuKhoaCollection FetchByQuery(Query qry)
        {
            TKhamSanphuKhoaCollection coll = new TKhamSanphuKhoaCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdKhamSanphuKhoa)
        {
            return (TKhamSanphuKhoa.Delete(IdKhamSanphuKhoa) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdKhamSanphuKhoa)
        {
            return (TKhamSanphuKhoa.Destroy(IdKhamSanphuKhoa) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int IdKhamSanphuKhoa,long? PatientId,string PatientCode,int? IdHsPhaThai,int? IdPhieuVaovien,DateTime? KhamKinhCcuoi,string KhamAmHo,string KhamAmDao,string KhamCoTuCung,string KhamTuCung,string PphuPhai,string PphuTrai,string NguoiTao,DateTime? NgayTao,string NguoiSua,DateTime? NgaySua)
	    {
		    TKhamSanphuKhoa item = new TKhamSanphuKhoa();
		    
            item.IdKhamSanphuKhoa = IdKhamSanphuKhoa;
            
            item.PatientId = PatientId;
            
            item.PatientCode = PatientCode;
            
            item.IdHsPhaThai = IdHsPhaThai;
            
            item.IdPhieuVaovien = IdPhieuVaovien;
            
            item.KhamKinhCcuoi = KhamKinhCcuoi;
            
            item.KhamAmHo = KhamAmHo;
            
            item.KhamAmDao = KhamAmDao;
            
            item.KhamCoTuCung = KhamCoTuCung;
            
            item.KhamTuCung = KhamTuCung;
            
            item.PphuPhai = PphuPhai;
            
            item.PphuTrai = PphuTrai;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NgaySua = NgaySua;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int IdKhamSanphuKhoa,long? PatientId,string PatientCode,int? IdHsPhaThai,int? IdPhieuVaovien,DateTime? KhamKinhCcuoi,string KhamAmHo,string KhamAmDao,string KhamCoTuCung,string KhamTuCung,string PphuPhai,string PphuTrai,string NguoiTao,DateTime? NgayTao,string NguoiSua,DateTime? NgaySua)
	    {
		    TKhamSanphuKhoa item = new TKhamSanphuKhoa();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdKhamSanphuKhoa = IdKhamSanphuKhoa;
				
			item.PatientId = PatientId;
				
			item.PatientCode = PatientCode;
				
			item.IdHsPhaThai = IdHsPhaThai;
				
			item.IdPhieuVaovien = IdPhieuVaovien;
				
			item.KhamKinhCcuoi = KhamKinhCcuoi;
				
			item.KhamAmHo = KhamAmHo;
				
			item.KhamAmDao = KhamAmDao;
				
			item.KhamCoTuCung = KhamCoTuCung;
				
			item.KhamTuCung = KhamTuCung;
				
			item.PphuPhai = PphuPhai;
				
			item.PphuTrai = PphuTrai;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NgaySua = NgaySua;
				
	        item.Save(UserName);
	    }
    }
}
