using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the TPatientDept class.
	/// </summary>
    [Serializable]
	public partial class TPatientDeptCollection : ActiveList<TPatientDept, TPatientDeptCollection>
	{	   
		public TPatientDeptCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TPatientDeptCollection</returns>
		public TPatientDeptCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TPatientDept o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_Patient_Dept table.
	/// </summary>
	[Serializable]
	public partial class TPatientDept : ActiveRecord<TPatientDept>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TPatientDept()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TPatientDept(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TPatientDept(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TPatientDept(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_Patient_Dept", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarPatientDeptId = new TableSchema.TableColumn(schema);
				colvarPatientDeptId.ColumnName = "PatientDept_ID";
				colvarPatientDeptId.DataType = DbType.Int64;
				colvarPatientDeptId.MaxLength = 0;
				colvarPatientDeptId.AutoIncrement = true;
				colvarPatientDeptId.IsNullable = false;
				colvarPatientDeptId.IsPrimaryKey = true;
				colvarPatientDeptId.IsForeignKey = false;
				colvarPatientDeptId.IsReadOnly = false;
				colvarPatientDeptId.DefaultSetting = @"";
				colvarPatientDeptId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientDeptId);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int64;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = false;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarFromDepartmentId = new TableSchema.TableColumn(schema);
				colvarFromDepartmentId.ColumnName = "FromDepartment_ID";
				colvarFromDepartmentId.DataType = DbType.Int32;
				colvarFromDepartmentId.MaxLength = 0;
				colvarFromDepartmentId.AutoIncrement = false;
				colvarFromDepartmentId.IsNullable = true;
				colvarFromDepartmentId.IsPrimaryKey = false;
				colvarFromDepartmentId.IsForeignKey = false;
				colvarFromDepartmentId.IsReadOnly = false;
				colvarFromDepartmentId.DefaultSetting = @"";
				colvarFromDepartmentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFromDepartmentId);
				
				TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
				colvarDepartmentId.ColumnName = "Department_ID";
				colvarDepartmentId.DataType = DbType.Int16;
				colvarDepartmentId.MaxLength = 0;
				colvarDepartmentId.AutoIncrement = false;
				colvarDepartmentId.IsNullable = false;
				colvarDepartmentId.IsPrimaryKey = false;
				colvarDepartmentId.IsForeignKey = false;
				colvarDepartmentId.IsReadOnly = false;
				colvarDepartmentId.DefaultSetting = @"";
				colvarDepartmentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDepartmentId);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_code";
				colvarPatientCode.DataType = DbType.AnsiString;
				colvarPatientCode.MaxLength = 20;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = false;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarRoomId = new TableSchema.TableColumn(schema);
				colvarRoomId.ColumnName = "Room_ID";
				colvarRoomId.DataType = DbType.Int16;
				colvarRoomId.MaxLength = 0;
				colvarRoomId.AutoIncrement = false;
				colvarRoomId.IsNullable = true;
				colvarRoomId.IsPrimaryKey = false;
				colvarRoomId.IsForeignKey = false;
				colvarRoomId.IsReadOnly = false;
				colvarRoomId.DefaultSetting = @"";
				colvarRoomId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRoomId);
				
				TableSchema.TableColumn colvarBedId = new TableSchema.TableColumn(schema);
				colvarBedId.ColumnName = "Bed_ID";
				colvarBedId.DataType = DbType.Int16;
				colvarBedId.MaxLength = 0;
				colvarBedId.AutoIncrement = false;
				colvarBedId.IsNullable = true;
				colvarBedId.IsPrimaryKey = false;
				colvarBedId.IsForeignKey = false;
				colvarBedId.IsReadOnly = false;
				colvarBedId.DefaultSetting = @"";
				colvarBedId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBedId);
				
				TableSchema.TableColumn colvarBedType = new TableSchema.TableColumn(schema);
				colvarBedType.ColumnName = "Bed_Type";
				colvarBedType.DataType = DbType.Byte;
				colvarBedType.MaxLength = 0;
				colvarBedType.AutoIncrement = false;
				colvarBedType.IsNullable = true;
				colvarBedType.IsPrimaryKey = false;
				colvarBedType.IsForeignKey = false;
				colvarBedType.IsReadOnly = false;
				
						colvarBedType.DefaultSetting = @"((0))";
				colvarBedType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBedType);
				
				TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
				colvarStatus.ColumnName = "Status";
				colvarStatus.DataType = DbType.Byte;
				colvarStatus.MaxLength = 0;
				colvarStatus.AutoIncrement = false;
				colvarStatus.IsNullable = false;
				colvarStatus.IsPrimaryKey = false;
				colvarStatus.IsForeignKey = false;
				colvarStatus.IsReadOnly = false;
				
						colvarStatus.DefaultSetting = @"((0))";
				colvarStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStatus);
				
				TableSchema.TableColumn colvarRegDate = new TableSchema.TableColumn(schema);
				colvarRegDate.ColumnName = "Reg_Date";
				colvarRegDate.DataType = DbType.DateTime;
				colvarRegDate.MaxLength = 0;
				colvarRegDate.AutoIncrement = false;
				colvarRegDate.IsNullable = false;
				colvarRegDate.IsPrimaryKey = false;
				colvarRegDate.IsForeignKey = false;
				colvarRegDate.IsReadOnly = false;
				
						colvarRegDate.DefaultSetting = @"(getdate())";
				colvarRegDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegDate);
				
				TableSchema.TableColumn colvarEndDate = new TableSchema.TableColumn(schema);
				colvarEndDate.ColumnName = "End_Date";
				colvarEndDate.DataType = DbType.DateTime;
				colvarEndDate.MaxLength = 0;
				colvarEndDate.AutoIncrement = false;
				colvarEndDate.IsNullable = true;
				colvarEndDate.IsPrimaryKey = false;
				colvarEndDate.IsForeignKey = false;
				colvarEndDate.IsReadOnly = false;
				colvarEndDate.DefaultSetting = @"";
				colvarEndDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEndDate);
				
				TableSchema.TableColumn colvarDoctorAssignId = new TableSchema.TableColumn(schema);
				colvarDoctorAssignId.ColumnName = "DoctorAssign_ID";
				colvarDoctorAssignId.DataType = DbType.Int16;
				colvarDoctorAssignId.MaxLength = 0;
				colvarDoctorAssignId.AutoIncrement = false;
				colvarDoctorAssignId.IsNullable = true;
				colvarDoctorAssignId.IsPrimaryKey = false;
				colvarDoctorAssignId.IsForeignKey = false;
				colvarDoctorAssignId.IsReadOnly = false;
				colvarDoctorAssignId.DefaultSetting = @"";
				colvarDoctorAssignId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDoctorAssignId);
				
				TableSchema.TableColumn colvarCreateBy = new TableSchema.TableColumn(schema);
				colvarCreateBy.ColumnName = "Create_By";
				colvarCreateBy.DataType = DbType.AnsiString;
				colvarCreateBy.MaxLength = 50;
				colvarCreateBy.AutoIncrement = false;
				colvarCreateBy.IsNullable = true;
				colvarCreateBy.IsPrimaryKey = false;
				colvarCreateBy.IsForeignKey = false;
				colvarCreateBy.IsReadOnly = false;
				colvarCreateBy.DefaultSetting = @"";
				colvarCreateBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreateBy);
				
				TableSchema.TableColumn colvarCreateDate = new TableSchema.TableColumn(schema);
				colvarCreateDate.ColumnName = "Create_Date";
				colvarCreateDate.DataType = DbType.DateTime;
				colvarCreateDate.MaxLength = 0;
				colvarCreateDate.AutoIncrement = false;
				colvarCreateDate.IsNullable = false;
				colvarCreateDate.IsPrimaryKey = false;
				colvarCreateDate.IsForeignKey = false;
				colvarCreateDate.IsReadOnly = false;
				
						colvarCreateDate.DefaultSetting = @"(getdate())";
				colvarCreateDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreateDate);
				
				TableSchema.TableColumn colvarModifyBy = new TableSchema.TableColumn(schema);
				colvarModifyBy.ColumnName = "Modify_By";
				colvarModifyBy.DataType = DbType.AnsiString;
				colvarModifyBy.MaxLength = 50;
				colvarModifyBy.AutoIncrement = false;
				colvarModifyBy.IsNullable = true;
				colvarModifyBy.IsPrimaryKey = false;
				colvarModifyBy.IsForeignKey = false;
				colvarModifyBy.IsReadOnly = false;
				colvarModifyBy.DefaultSetting = @"";
				colvarModifyBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModifyBy);
				
				TableSchema.TableColumn colvarModifyDate = new TableSchema.TableColumn(schema);
				colvarModifyDate.ColumnName = "Modify_Date";
				colvarModifyDate.DataType = DbType.DateTime;
				colvarModifyDate.MaxLength = 0;
				colvarModifyDate.AutoIncrement = false;
				colvarModifyDate.IsNullable = true;
				colvarModifyDate.IsPrimaryKey = false;
				colvarModifyDate.IsForeignKey = false;
				colvarModifyDate.IsReadOnly = false;
				colvarModifyDate.DefaultSetting = @"";
				colvarModifyDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModifyDate);
				
				TableSchema.TableColumn colvarIsCancel = new TableSchema.TableColumn(schema);
				colvarIsCancel.ColumnName = "IsCancel";
				colvarIsCancel.DataType = DbType.Int32;
				colvarIsCancel.MaxLength = 0;
				colvarIsCancel.AutoIncrement = false;
				colvarIsCancel.IsNullable = true;
				colvarIsCancel.IsPrimaryKey = false;
				colvarIsCancel.IsForeignKey = false;
				colvarIsCancel.IsReadOnly = false;
				colvarIsCancel.DefaultSetting = @"";
				colvarIsCancel.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsCancel);
				
				TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
				colvarPaymentDate.ColumnName = "Payment_Date";
				colvarPaymentDate.DataType = DbType.DateTime;
				colvarPaymentDate.MaxLength = 0;
				colvarPaymentDate.AutoIncrement = false;
				colvarPaymentDate.IsNullable = true;
				colvarPaymentDate.IsPrimaryKey = false;
				colvarPaymentDate.IsForeignKey = false;
				colvarPaymentDate.IsReadOnly = false;
				colvarPaymentDate.DefaultSetting = @"";
				colvarPaymentDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentDate);
				
				TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
				colvarPaymentStatus.ColumnName = "Payment_Status";
				colvarPaymentStatus.DataType = DbType.Int32;
				colvarPaymentStatus.MaxLength = 0;
				colvarPaymentStatus.AutoIncrement = false;
				colvarPaymentStatus.IsNullable = true;
				colvarPaymentStatus.IsPrimaryKey = false;
				colvarPaymentStatus.IsForeignKey = false;
				colvarPaymentStatus.IsReadOnly = false;
				
						colvarPaymentStatus.DefaultSetting = @"((0))";
				colvarPaymentStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentStatus);
				
				TableSchema.TableColumn colvarBhytStatus = new TableSchema.TableColumn(schema);
				colvarBhytStatus.ColumnName = "BHYT_Status";
				colvarBhytStatus.DataType = DbType.Int32;
				colvarBhytStatus.MaxLength = 0;
				colvarBhytStatus.AutoIncrement = false;
				colvarBhytStatus.IsNullable = true;
				colvarBhytStatus.IsPrimaryKey = false;
				colvarBhytStatus.IsForeignKey = false;
				colvarBhytStatus.IsReadOnly = false;
				colvarBhytStatus.DefaultSetting = @"";
				colvarBhytStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBhytStatus);
				
				TableSchema.TableColumn colvarNoiTru = new TableSchema.TableColumn(schema);
				colvarNoiTru.ColumnName = "Noi_Tru";
				colvarNoiTru.DataType = DbType.Int32;
				colvarNoiTru.MaxLength = 0;
				colvarNoiTru.AutoIncrement = false;
				colvarNoiTru.IsNullable = true;
				colvarNoiTru.IsPrimaryKey = false;
				colvarNoiTru.IsForeignKey = false;
				colvarNoiTru.IsReadOnly = false;
				colvarNoiTru.DefaultSetting = @"";
				colvarNoiTru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoiTru);
				
				TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
				colvarQuantity.ColumnName = "Quantity";
				colvarQuantity.DataType = DbType.Int32;
				colvarQuantity.MaxLength = 0;
				colvarQuantity.AutoIncrement = false;
				colvarQuantity.IsNullable = true;
				colvarQuantity.IsPrimaryKey = false;
				colvarQuantity.IsForeignKey = false;
				colvarQuantity.IsReadOnly = false;
				colvarQuantity.DefaultSetting = @"";
				colvarQuantity.ForeignKeyTableName = "";
				schema.Columns.Add(colvarQuantity);
				
				TableSchema.TableColumn colvarPrice = new TableSchema.TableColumn(schema);
				colvarPrice.ColumnName = "Price";
				colvarPrice.DataType = DbType.Decimal;
				colvarPrice.MaxLength = 0;
				colvarPrice.AutoIncrement = false;
				colvarPrice.IsNullable = true;
				colvarPrice.IsPrimaryKey = false;
				colvarPrice.IsForeignKey = false;
				colvarPrice.IsReadOnly = false;
				colvarPrice.DefaultSetting = @"";
				colvarPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPrice);
				
				TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
				colvarIsPayment.ColumnName = "IsPayment";
				colvarIsPayment.DataType = DbType.Int32;
				colvarIsPayment.MaxLength = 0;
				colvarIsPayment.AutoIncrement = false;
				colvarIsPayment.IsNullable = true;
				colvarIsPayment.IsPrimaryKey = false;
				colvarIsPayment.IsForeignKey = false;
				colvarIsPayment.IsReadOnly = false;
				colvarIsPayment.DefaultSetting = @"";
				colvarIsPayment.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsPayment);
				
				TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
				colvarPaymentId.ColumnName = "Payment_ID";
				colvarPaymentId.DataType = DbType.Int32;
				colvarPaymentId.MaxLength = 0;
				colvarPaymentId.AutoIncrement = false;
				colvarPaymentId.IsNullable = true;
				colvarPaymentId.IsPrimaryKey = false;
				colvarPaymentId.IsForeignKey = false;
				colvarPaymentId.IsReadOnly = false;
				colvarPaymentId.DefaultSetting = @"";
				colvarPaymentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentId);
				
				TableSchema.TableColumn colvarIdKhoaRavien = new TableSchema.TableColumn(schema);
				colvarIdKhoaRavien.ColumnName = "ID_KHOA_RAVIEN";
				colvarIdKhoaRavien.DataType = DbType.Int32;
				colvarIdKhoaRavien.MaxLength = 0;
				colvarIdKhoaRavien.AutoIncrement = false;
				colvarIdKhoaRavien.IsNullable = true;
				colvarIdKhoaRavien.IsPrimaryKey = false;
				colvarIdKhoaRavien.IsForeignKey = false;
				colvarIdKhoaRavien.IsReadOnly = false;
				colvarIdKhoaRavien.DefaultSetting = @"";
				colvarIdKhoaRavien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoaRavien);
				
				TableSchema.TableColumn colvarTrangThaiRavien = new TableSchema.TableColumn(schema);
				colvarTrangThaiRavien.ColumnName = "TRANG_THAI_RAVIEN";
				colvarTrangThaiRavien.DataType = DbType.Int32;
				colvarTrangThaiRavien.MaxLength = 0;
				colvarTrangThaiRavien.AutoIncrement = false;
				colvarTrangThaiRavien.IsNullable = true;
				colvarTrangThaiRavien.IsPrimaryKey = false;
				colvarTrangThaiRavien.IsForeignKey = false;
				colvarTrangThaiRavien.IsReadOnly = false;
				colvarTrangThaiRavien.DefaultSetting = @"";
				colvarTrangThaiRavien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThaiRavien);
				
				TableSchema.TableColumn colvarGiaBhytCt = new TableSchema.TableColumn(schema);
				colvarGiaBhytCt.ColumnName = "Gia_BHYT_CT";
				colvarGiaBhytCt.DataType = DbType.Decimal;
				colvarGiaBhytCt.MaxLength = 0;
				colvarGiaBhytCt.AutoIncrement = false;
				colvarGiaBhytCt.IsNullable = true;
				colvarGiaBhytCt.IsPrimaryKey = false;
				colvarGiaBhytCt.IsForeignKey = false;
				colvarGiaBhytCt.IsReadOnly = false;
				colvarGiaBhytCt.DefaultSetting = @"";
				colvarGiaBhytCt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaBhytCt);
				
				TableSchema.TableColumn colvarGiaBnct = new TableSchema.TableColumn(schema);
				colvarGiaBnct.ColumnName = "Gia_BNCT";
				colvarGiaBnct.DataType = DbType.Decimal;
				colvarGiaBnct.MaxLength = 0;
				colvarGiaBnct.AutoIncrement = false;
				colvarGiaBnct.IsNullable = true;
				colvarGiaBnct.IsPrimaryKey = false;
				colvarGiaBnct.IsForeignKey = false;
				colvarGiaBnct.IsReadOnly = false;
				colvarGiaBnct.DefaultSetting = @"";
				colvarGiaBnct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaBnct);
				
				TableSchema.TableColumn colvarIdGoiDvu = new TableSchema.TableColumn(schema);
				colvarIdGoiDvu.ColumnName = "ID_GOI_DVU";
				colvarIdGoiDvu.DataType = DbType.Int32;
				colvarIdGoiDvu.MaxLength = 0;
				colvarIdGoiDvu.AutoIncrement = false;
				colvarIdGoiDvu.IsNullable = true;
				colvarIdGoiDvu.IsPrimaryKey = false;
				colvarIdGoiDvu.IsForeignKey = false;
				colvarIdGoiDvu.IsReadOnly = false;
				colvarIdGoiDvu.DefaultSetting = @"";
				colvarIdGoiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGoiDvu);
				
				TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
				colvarTrongGoi.ColumnName = "TRONG_GOI";
				colvarTrongGoi.DataType = DbType.Int32;
				colvarTrongGoi.MaxLength = 0;
				colvarTrongGoi.AutoIncrement = false;
				colvarTrongGoi.IsNullable = true;
				colvarTrongGoi.IsPrimaryKey = false;
				colvarTrongGoi.IsForeignKey = false;
				colvarTrongGoi.IsReadOnly = false;
				colvarTrongGoi.DefaultSetting = @"";
				colvarTrongGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrongGoi);
				
				TableSchema.TableColumn colvarIdYtaPgiuong = new TableSchema.TableColumn(schema);
				colvarIdYtaPgiuong.ColumnName = "ID_YTA_PGIUONG";
				colvarIdYtaPgiuong.DataType = DbType.Int32;
				colvarIdYtaPgiuong.MaxLength = 0;
				colvarIdYtaPgiuong.AutoIncrement = false;
				colvarIdYtaPgiuong.IsNullable = true;
				colvarIdYtaPgiuong.IsPrimaryKey = false;
				colvarIdYtaPgiuong.IsForeignKey = false;
				colvarIdYtaPgiuong.IsReadOnly = false;
				colvarIdYtaPgiuong.DefaultSetting = @"";
				colvarIdYtaPgiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdYtaPgiuong);
				
				TableSchema.TableColumn colvarNgayPgiuong = new TableSchema.TableColumn(schema);
				colvarNgayPgiuong.ColumnName = "NGAY_PGIUONG";
				colvarNgayPgiuong.DataType = DbType.DateTime;
				colvarNgayPgiuong.MaxLength = 0;
				colvarNgayPgiuong.AutoIncrement = false;
				colvarNgayPgiuong.IsNullable = true;
				colvarNgayPgiuong.IsPrimaryKey = false;
				colvarNgayPgiuong.IsForeignKey = false;
				colvarNgayPgiuong.IsReadOnly = false;
				colvarNgayPgiuong.DefaultSetting = @"";
				colvarNgayPgiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayPgiuong);
				
				TableSchema.TableColumn colvarNguoiPgiuong = new TableSchema.TableColumn(schema);
				colvarNguoiPgiuong.ColumnName = "NGUOI_PGIUONG";
				colvarNguoiPgiuong.DataType = DbType.String;
				colvarNguoiPgiuong.MaxLength = 50;
				colvarNguoiPgiuong.AutoIncrement = false;
				colvarNguoiPgiuong.IsNullable = true;
				colvarNguoiPgiuong.IsPrimaryKey = false;
				colvarNguoiPgiuong.IsForeignKey = false;
				colvarNguoiPgiuong.IsReadOnly = false;
				colvarNguoiPgiuong.DefaultSetting = @"";
				colvarNguoiPgiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiPgiuong);
				
				TableSchema.TableColumn colvarSurchargePrice = new TableSchema.TableColumn(schema);
				colvarSurchargePrice.ColumnName = "Surcharge_Price";
				colvarSurchargePrice.DataType = DbType.Decimal;
				colvarSurchargePrice.MaxLength = 0;
				colvarSurchargePrice.AutoIncrement = false;
				colvarSurchargePrice.IsNullable = true;
				colvarSurchargePrice.IsPrimaryKey = false;
				colvarSurchargePrice.IsForeignKey = false;
				colvarSurchargePrice.IsReadOnly = false;
				colvarSurchargePrice.DefaultSetting = @"";
				colvarSurchargePrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSurchargePrice);
				
				TableSchema.TableColumn colvarXacNhan = new TableSchema.TableColumn(schema);
				colvarXacNhan.ColumnName = "XAC_NHAN";
				colvarXacNhan.DataType = DbType.Int32;
				colvarXacNhan.MaxLength = 0;
				colvarXacNhan.AutoIncrement = false;
				colvarXacNhan.IsNullable = true;
				colvarXacNhan.IsPrimaryKey = false;
				colvarXacNhan.IsForeignKey = false;
				colvarXacNhan.IsReadOnly = false;
				colvarXacNhan.DefaultSetting = @"";
				colvarXacNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXacNhan);
				
				TableSchema.TableColumn colvarIpMacSua = new TableSchema.TableColumn(schema);
				colvarIpMacSua.ColumnName = "IP_MAC_SUA";
				colvarIpMacSua.DataType = DbType.String;
				colvarIpMacSua.MaxLength = 100;
				colvarIpMacSua.AutoIncrement = false;
				colvarIpMacSua.IsNullable = true;
				colvarIpMacSua.IsPrimaryKey = false;
				colvarIpMacSua.IsForeignKey = false;
				colvarIpMacSua.IsReadOnly = false;
				colvarIpMacSua.DefaultSetting = @"";
				colvarIpMacSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMacSua);
				
				TableSchema.TableColumn colvarIpMacTao = new TableSchema.TableColumn(schema);
				colvarIpMacTao.ColumnName = "IP_MAC_TAO";
				colvarIpMacTao.DataType = DbType.String;
				colvarIpMacTao.MaxLength = 100;
				colvarIpMacTao.AutoIncrement = false;
				colvarIpMacTao.IsNullable = true;
				colvarIpMacTao.IsPrimaryKey = false;
				colvarIpMacTao.IsForeignKey = false;
				colvarIpMacTao.IsReadOnly = false;
				colvarIpMacTao.DefaultSetting = @"";
				colvarIpMacTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMacTao);
				
				TableSchema.TableColumn colvarIpMaySua = new TableSchema.TableColumn(schema);
				colvarIpMaySua.ColumnName = "IP_MAY_SUA";
				colvarIpMaySua.DataType = DbType.String;
				colvarIpMaySua.MaxLength = 50;
				colvarIpMaySua.AutoIncrement = false;
				colvarIpMaySua.IsNullable = true;
				colvarIpMaySua.IsPrimaryKey = false;
				colvarIpMaySua.IsForeignKey = false;
				colvarIpMaySua.IsReadOnly = false;
				colvarIpMaySua.DefaultSetting = @"";
				colvarIpMaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaySua);
				
				TableSchema.TableColumn colvarIpMayTao = new TableSchema.TableColumn(schema);
				colvarIpMayTao.ColumnName = "IP_MAY_TAO";
				colvarIpMayTao.DataType = DbType.String;
				colvarIpMayTao.MaxLength = 50;
				colvarIpMayTao.AutoIncrement = false;
				colvarIpMayTao.IsNullable = true;
				colvarIpMayTao.IsPrimaryKey = false;
				colvarIpMayTao.IsForeignKey = false;
				colvarIpMayTao.IsReadOnly = false;
				colvarIpMayTao.DefaultSetting = @"";
				colvarIpMayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMayTao);
				
				TableSchema.TableColumn colvarTenHienThi = new TableSchema.TableColumn(schema);
				colvarTenHienThi.ColumnName = "TEN_HIEN_THI";
				colvarTenHienThi.DataType = DbType.String;
				colvarTenHienThi.MaxLength = 200;
				colvarTenHienThi.AutoIncrement = false;
				colvarTenHienThi.IsNullable = true;
				colvarTenHienThi.IsPrimaryKey = false;
				colvarTenHienThi.IsForeignKey = false;
				colvarTenHienThi.IsReadOnly = false;
				colvarTenHienThi.DefaultSetting = @"";
				colvarTenHienThi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenHienThi);
				
				TableSchema.TableColumn colvarGiaBgGoc = new TableSchema.TableColumn(schema);
				colvarGiaBgGoc.ColumnName = "GIA_BG_GOC";
				colvarGiaBgGoc.DataType = DbType.Decimal;
				colvarGiaBgGoc.MaxLength = 0;
				colvarGiaBgGoc.AutoIncrement = false;
				colvarGiaBgGoc.IsNullable = true;
				colvarGiaBgGoc.IsPrimaryKey = false;
				colvarGiaBgGoc.IsForeignKey = false;
				colvarGiaBgGoc.IsReadOnly = false;
				colvarGiaBgGoc.DefaultSetting = @"";
				colvarGiaBgGoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaBgGoc);
				
				TableSchema.TableColumn colvarKieuThue = new TableSchema.TableColumn(schema);
				colvarKieuThue.ColumnName = "KIEU_THUE";
				colvarKieuThue.DataType = DbType.String;
				colvarKieuThue.MaxLength = 50;
				colvarKieuThue.AutoIncrement = false;
				colvarKieuThue.IsNullable = true;
				colvarKieuThue.IsPrimaryKey = false;
				colvarKieuThue.IsForeignKey = false;
				colvarKieuThue.IsReadOnly = false;
				colvarKieuThue.DefaultSetting = @"";
				colvarKieuThue.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuThue);
				
				TableSchema.TableColumn colvarPkPatientdeptId = new TableSchema.TableColumn(schema);
				colvarPkPatientdeptId.ColumnName = "PK_PATIENTDEPT_ID";
				colvarPkPatientdeptId.DataType = DbType.Int32;
				colvarPkPatientdeptId.MaxLength = 0;
				colvarPkPatientdeptId.AutoIncrement = false;
				colvarPkPatientdeptId.IsNullable = true;
				colvarPkPatientdeptId.IsPrimaryKey = false;
				colvarPkPatientdeptId.IsForeignKey = false;
				colvarPkPatientdeptId.IsReadOnly = false;
				colvarPkPatientdeptId.DefaultSetting = @"";
				colvarPkPatientdeptId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPkPatientdeptId);
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "ID";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = false;
				colvarId.IsNullable = true;
				colvarId.IsPrimaryKey = false;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarIdBenhLy = new TableSchema.TableColumn(schema);
				colvarIdBenhLy.ColumnName = "ID_BENH_LY";
				colvarIdBenhLy.DataType = DbType.Int32;
				colvarIdBenhLy.MaxLength = 0;
				colvarIdBenhLy.AutoIncrement = false;
				colvarIdBenhLy.IsNullable = true;
				colvarIdBenhLy.IsPrimaryKey = false;
				colvarIdBenhLy.IsForeignKey = false;
				colvarIdBenhLy.IsReadOnly = false;
				colvarIdBenhLy.DefaultSetting = @"";
				colvarIdBenhLy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhLy);
				
				TableSchema.TableColumn colvarIdLoaiBg = new TableSchema.TableColumn(schema);
				colvarIdLoaiBg.ColumnName = "ID_LOAI_BG";
				colvarIdLoaiBg.DataType = DbType.Int32;
				colvarIdLoaiBg.MaxLength = 0;
				colvarIdLoaiBg.AutoIncrement = false;
				colvarIdLoaiBg.IsNullable = true;
				colvarIdLoaiBg.IsPrimaryKey = false;
				colvarIdLoaiBg.IsForeignKey = false;
				colvarIdLoaiBg.IsReadOnly = false;
				colvarIdLoaiBg.DefaultSetting = @"";
				colvarIdLoaiBg.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdLoaiBg);
				
				TableSchema.TableColumn colvarPhuThuNgoaigoi = new TableSchema.TableColumn(schema);
				colvarPhuThuNgoaigoi.ColumnName = "PHU_THU_NGOAIGOI";
				colvarPhuThuNgoaigoi.DataType = DbType.Decimal;
				colvarPhuThuNgoaigoi.MaxLength = 0;
				colvarPhuThuNgoaigoi.AutoIncrement = false;
				colvarPhuThuNgoaigoi.IsNullable = true;
				colvarPhuThuNgoaigoi.IsPrimaryKey = false;
				colvarPhuThuNgoaigoi.IsForeignKey = false;
				colvarPhuThuNgoaigoi.IsReadOnly = false;
				colvarPhuThuNgoaigoi.DefaultSetting = @"";
				colvarPhuThuNgoaigoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhuThuNgoaigoi);
				
				TableSchema.TableColumn colvarStt = new TableSchema.TableColumn(schema);
				colvarStt.ColumnName = "STT";
				colvarStt.DataType = DbType.Int32;
				colvarStt.MaxLength = 0;
				colvarStt.AutoIncrement = false;
				colvarStt.IsNullable = true;
				colvarStt.IsPrimaryKey = false;
				colvarStt.IsForeignKey = false;
				colvarStt.IsReadOnly = false;
				colvarStt.DefaultSetting = @"";
				colvarStt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStt);
				
				TableSchema.TableColumn colvarIdKhoaDtriHo = new TableSchema.TableColumn(schema);
				colvarIdKhoaDtriHo.ColumnName = "Id_Khoa_Dtri_Ho";
				colvarIdKhoaDtriHo.DataType = DbType.Int16;
				colvarIdKhoaDtriHo.MaxLength = 0;
				colvarIdKhoaDtriHo.AutoIncrement = false;
				colvarIdKhoaDtriHo.IsNullable = true;
				colvarIdKhoaDtriHo.IsPrimaryKey = false;
				colvarIdKhoaDtriHo.IsForeignKey = false;
				colvarIdKhoaDtriHo.IsReadOnly = false;
				colvarIdKhoaDtriHo.DefaultSetting = @"";
				colvarIdKhoaDtriHo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoaDtriHo);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_Patient_Dept",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("PatientDeptId")]
		[Bindable(true)]
		public long PatientDeptId 
		{
			get { return GetColumnValue<long>(Columns.PatientDeptId); }
			set { SetColumnValue(Columns.PatientDeptId, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public long PatientId 
		{
			get { return GetColumnValue<long>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("FromDepartmentId")]
		[Bindable(true)]
		public int? FromDepartmentId 
		{
			get { return GetColumnValue<int?>(Columns.FromDepartmentId); }
			set { SetColumnValue(Columns.FromDepartmentId, value); }
		}
		  
		[XmlAttribute("DepartmentId")]
		[Bindable(true)]
		public short DepartmentId 
		{
			get { return GetColumnValue<short>(Columns.DepartmentId); }
			set { SetColumnValue(Columns.DepartmentId, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("RoomId")]
		[Bindable(true)]
		public short? RoomId 
		{
			get { return GetColumnValue<short?>(Columns.RoomId); }
			set { SetColumnValue(Columns.RoomId, value); }
		}
		  
		[XmlAttribute("BedId")]
		[Bindable(true)]
		public short? BedId 
		{
			get { return GetColumnValue<short?>(Columns.BedId); }
			set { SetColumnValue(Columns.BedId, value); }
		}
		  
		[XmlAttribute("BedType")]
		[Bindable(true)]
		public byte? BedType 
		{
			get { return GetColumnValue<byte?>(Columns.BedType); }
			set { SetColumnValue(Columns.BedType, value); }
		}
		  
		[XmlAttribute("Status")]
		[Bindable(true)]
		public byte Status 
		{
			get { return GetColumnValue<byte>(Columns.Status); }
			set { SetColumnValue(Columns.Status, value); }
		}
		  
		[XmlAttribute("RegDate")]
		[Bindable(true)]
		public DateTime RegDate 
		{
			get { return GetColumnValue<DateTime>(Columns.RegDate); }
			set { SetColumnValue(Columns.RegDate, value); }
		}
		  
		[XmlAttribute("EndDate")]
		[Bindable(true)]
		public DateTime? EndDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.EndDate); }
			set { SetColumnValue(Columns.EndDate, value); }
		}
		  
		[XmlAttribute("DoctorAssignId")]
		[Bindable(true)]
		public short? DoctorAssignId 
		{
			get { return GetColumnValue<short?>(Columns.DoctorAssignId); }
			set { SetColumnValue(Columns.DoctorAssignId, value); }
		}
		  
		[XmlAttribute("CreateBy")]
		[Bindable(true)]
		public string CreateBy 
		{
			get { return GetColumnValue<string>(Columns.CreateBy); }
			set { SetColumnValue(Columns.CreateBy, value); }
		}
		  
		[XmlAttribute("CreateDate")]
		[Bindable(true)]
		public DateTime CreateDate 
		{
			get { return GetColumnValue<DateTime>(Columns.CreateDate); }
			set { SetColumnValue(Columns.CreateDate, value); }
		}
		  
		[XmlAttribute("ModifyBy")]
		[Bindable(true)]
		public string ModifyBy 
		{
			get { return GetColumnValue<string>(Columns.ModifyBy); }
			set { SetColumnValue(Columns.ModifyBy, value); }
		}
		  
		[XmlAttribute("ModifyDate")]
		[Bindable(true)]
		public DateTime? ModifyDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.ModifyDate); }
			set { SetColumnValue(Columns.ModifyDate, value); }
		}
		  
		[XmlAttribute("IsCancel")]
		[Bindable(true)]
		public int? IsCancel 
		{
			get { return GetColumnValue<int?>(Columns.IsCancel); }
			set { SetColumnValue(Columns.IsCancel, value); }
		}
		  
		[XmlAttribute("PaymentDate")]
		[Bindable(true)]
		public DateTime? PaymentDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.PaymentDate); }
			set { SetColumnValue(Columns.PaymentDate, value); }
		}
		  
		[XmlAttribute("PaymentStatus")]
		[Bindable(true)]
		public int? PaymentStatus 
		{
			get { return GetColumnValue<int?>(Columns.PaymentStatus); }
			set { SetColumnValue(Columns.PaymentStatus, value); }
		}
		  
		[XmlAttribute("BhytStatus")]
		[Bindable(true)]
		public int? BhytStatus 
		{
			get { return GetColumnValue<int?>(Columns.BhytStatus); }
			set { SetColumnValue(Columns.BhytStatus, value); }
		}
		  
		[XmlAttribute("NoiTru")]
		[Bindable(true)]
		public int? NoiTru 
		{
			get { return GetColumnValue<int?>(Columns.NoiTru); }
			set { SetColumnValue(Columns.NoiTru, value); }
		}
		  
		[XmlAttribute("Quantity")]
		[Bindable(true)]
		public int? Quantity 
		{
			get { return GetColumnValue<int?>(Columns.Quantity); }
			set { SetColumnValue(Columns.Quantity, value); }
		}
		  
		[XmlAttribute("Price")]
		[Bindable(true)]
		public decimal? Price 
		{
			get { return GetColumnValue<decimal?>(Columns.Price); }
			set { SetColumnValue(Columns.Price, value); }
		}
		  
		[XmlAttribute("IsPayment")]
		[Bindable(true)]
		public int? IsPayment 
		{
			get { return GetColumnValue<int?>(Columns.IsPayment); }
			set { SetColumnValue(Columns.IsPayment, value); }
		}
		  
		[XmlAttribute("PaymentId")]
		[Bindable(true)]
		public int? PaymentId 
		{
			get { return GetColumnValue<int?>(Columns.PaymentId); }
			set { SetColumnValue(Columns.PaymentId, value); }
		}
		  
		[XmlAttribute("IdKhoaRavien")]
		[Bindable(true)]
		public int? IdKhoaRavien 
		{
			get { return GetColumnValue<int?>(Columns.IdKhoaRavien); }
			set { SetColumnValue(Columns.IdKhoaRavien, value); }
		}
		  
		[XmlAttribute("TrangThaiRavien")]
		[Bindable(true)]
		public int? TrangThaiRavien 
		{
			get { return GetColumnValue<int?>(Columns.TrangThaiRavien); }
			set { SetColumnValue(Columns.TrangThaiRavien, value); }
		}
		  
		[XmlAttribute("GiaBhytCt")]
		[Bindable(true)]
		public decimal? GiaBhytCt 
		{
			get { return GetColumnValue<decimal?>(Columns.GiaBhytCt); }
			set { SetColumnValue(Columns.GiaBhytCt, value); }
		}
		  
		[XmlAttribute("GiaBnct")]
		[Bindable(true)]
		public decimal? GiaBnct 
		{
			get { return GetColumnValue<decimal?>(Columns.GiaBnct); }
			set { SetColumnValue(Columns.GiaBnct, value); }
		}
		  
		[XmlAttribute("IdGoiDvu")]
		[Bindable(true)]
		public int? IdGoiDvu 
		{
			get { return GetColumnValue<int?>(Columns.IdGoiDvu); }
			set { SetColumnValue(Columns.IdGoiDvu, value); }
		}
		  
		[XmlAttribute("TrongGoi")]
		[Bindable(true)]
		public int? TrongGoi 
		{
			get { return GetColumnValue<int?>(Columns.TrongGoi); }
			set { SetColumnValue(Columns.TrongGoi, value); }
		}
		  
		[XmlAttribute("IdYtaPgiuong")]
		[Bindable(true)]
		public int? IdYtaPgiuong 
		{
			get { return GetColumnValue<int?>(Columns.IdYtaPgiuong); }
			set { SetColumnValue(Columns.IdYtaPgiuong, value); }
		}
		  
		[XmlAttribute("NgayPgiuong")]
		[Bindable(true)]
		public DateTime? NgayPgiuong 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayPgiuong); }
			set { SetColumnValue(Columns.NgayPgiuong, value); }
		}
		  
		[XmlAttribute("NguoiPgiuong")]
		[Bindable(true)]
		public string NguoiPgiuong 
		{
			get { return GetColumnValue<string>(Columns.NguoiPgiuong); }
			set { SetColumnValue(Columns.NguoiPgiuong, value); }
		}
		  
		[XmlAttribute("SurchargePrice")]
		[Bindable(true)]
		public decimal? SurchargePrice 
		{
			get { return GetColumnValue<decimal?>(Columns.SurchargePrice); }
			set { SetColumnValue(Columns.SurchargePrice, value); }
		}
		  
		[XmlAttribute("XacNhan")]
		[Bindable(true)]
		public int? XacNhan 
		{
			get { return GetColumnValue<int?>(Columns.XacNhan); }
			set { SetColumnValue(Columns.XacNhan, value); }
		}
		  
		[XmlAttribute("IpMacSua")]
		[Bindable(true)]
		public string IpMacSua 
		{
			get { return GetColumnValue<string>(Columns.IpMacSua); }
			set { SetColumnValue(Columns.IpMacSua, value); }
		}
		  
		[XmlAttribute("IpMacTao")]
		[Bindable(true)]
		public string IpMacTao 
		{
			get { return GetColumnValue<string>(Columns.IpMacTao); }
			set { SetColumnValue(Columns.IpMacTao, value); }
		}
		  
		[XmlAttribute("IpMaySua")]
		[Bindable(true)]
		public string IpMaySua 
		{
			get { return GetColumnValue<string>(Columns.IpMaySua); }
			set { SetColumnValue(Columns.IpMaySua, value); }
		}
		  
		[XmlAttribute("IpMayTao")]
		[Bindable(true)]
		public string IpMayTao 
		{
			get { return GetColumnValue<string>(Columns.IpMayTao); }
			set { SetColumnValue(Columns.IpMayTao, value); }
		}
		  
		[XmlAttribute("TenHienThi")]
		[Bindable(true)]
		public string TenHienThi 
		{
			get { return GetColumnValue<string>(Columns.TenHienThi); }
			set { SetColumnValue(Columns.TenHienThi, value); }
		}
		  
		[XmlAttribute("GiaBgGoc")]
		[Bindable(true)]
		public decimal? GiaBgGoc 
		{
			get { return GetColumnValue<decimal?>(Columns.GiaBgGoc); }
			set { SetColumnValue(Columns.GiaBgGoc, value); }
		}
		  
		[XmlAttribute("KieuThue")]
		[Bindable(true)]
		public string KieuThue 
		{
			get { return GetColumnValue<string>(Columns.KieuThue); }
			set { SetColumnValue(Columns.KieuThue, value); }
		}
		  
		[XmlAttribute("PkPatientdeptId")]
		[Bindable(true)]
		public int? PkPatientdeptId 
		{
			get { return GetColumnValue<int?>(Columns.PkPatientdeptId); }
			set { SetColumnValue(Columns.PkPatientdeptId, value); }
		}
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int? Id 
		{
			get { return GetColumnValue<int?>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("IdBenhLy")]
		[Bindable(true)]
		public int? IdBenhLy 
		{
			get { return GetColumnValue<int?>(Columns.IdBenhLy); }
			set { SetColumnValue(Columns.IdBenhLy, value); }
		}
		  
		[XmlAttribute("IdLoaiBg")]
		[Bindable(true)]
		public int? IdLoaiBg 
		{
			get { return GetColumnValue<int?>(Columns.IdLoaiBg); }
			set { SetColumnValue(Columns.IdLoaiBg, value); }
		}
		  
		[XmlAttribute("PhuThuNgoaigoi")]
		[Bindable(true)]
		public decimal? PhuThuNgoaigoi 
		{
			get { return GetColumnValue<decimal?>(Columns.PhuThuNgoaigoi); }
			set { SetColumnValue(Columns.PhuThuNgoaigoi, value); }
		}
		  
		[XmlAttribute("Stt")]
		[Bindable(true)]
		public int? Stt 
		{
			get { return GetColumnValue<int?>(Columns.Stt); }
			set { SetColumnValue(Columns.Stt, value); }
		}
		  
		[XmlAttribute("IdKhoaDtriHo")]
		[Bindable(true)]
		public short? IdKhoaDtriHo 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoaDtriHo); }
			set { SetColumnValue(Columns.IdKhoaDtriHo, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long varPatientId,int? varFromDepartmentId,short varDepartmentId,string varPatientCode,short? varRoomId,short? varBedId,byte? varBedType,byte varStatus,DateTime varRegDate,DateTime? varEndDate,short? varDoctorAssignId,string varCreateBy,DateTime varCreateDate,string varModifyBy,DateTime? varModifyDate,int? varIsCancel,DateTime? varPaymentDate,int? varPaymentStatus,int? varBhytStatus,int? varNoiTru,int? varQuantity,decimal? varPrice,int? varIsPayment,int? varPaymentId,int? varIdKhoaRavien,int? varTrangThaiRavien,decimal? varGiaBhytCt,decimal? varGiaBnct,int? varIdGoiDvu,int? varTrongGoi,int? varIdYtaPgiuong,DateTime? varNgayPgiuong,string varNguoiPgiuong,decimal? varSurchargePrice,int? varXacNhan,string varIpMacSua,string varIpMacTao,string varIpMaySua,string varIpMayTao,string varTenHienThi,decimal? varGiaBgGoc,string varKieuThue,int? varPkPatientdeptId,int? varId,int? varIdBenhLy,int? varIdLoaiBg,decimal? varPhuThuNgoaigoi,int? varStt,short? varIdKhoaDtriHo)
		{
			TPatientDept item = new TPatientDept();
			
			item.PatientId = varPatientId;
			
			item.FromDepartmentId = varFromDepartmentId;
			
			item.DepartmentId = varDepartmentId;
			
			item.PatientCode = varPatientCode;
			
			item.RoomId = varRoomId;
			
			item.BedId = varBedId;
			
			item.BedType = varBedType;
			
			item.Status = varStatus;
			
			item.RegDate = varRegDate;
			
			item.EndDate = varEndDate;
			
			item.DoctorAssignId = varDoctorAssignId;
			
			item.CreateBy = varCreateBy;
			
			item.CreateDate = varCreateDate;
			
			item.ModifyBy = varModifyBy;
			
			item.ModifyDate = varModifyDate;
			
			item.IsCancel = varIsCancel;
			
			item.PaymentDate = varPaymentDate;
			
			item.PaymentStatus = varPaymentStatus;
			
			item.BhytStatus = varBhytStatus;
			
			item.NoiTru = varNoiTru;
			
			item.Quantity = varQuantity;
			
			item.Price = varPrice;
			
			item.IsPayment = varIsPayment;
			
			item.PaymentId = varPaymentId;
			
			item.IdKhoaRavien = varIdKhoaRavien;
			
			item.TrangThaiRavien = varTrangThaiRavien;
			
			item.GiaBhytCt = varGiaBhytCt;
			
			item.GiaBnct = varGiaBnct;
			
			item.IdGoiDvu = varIdGoiDvu;
			
			item.TrongGoi = varTrongGoi;
			
			item.IdYtaPgiuong = varIdYtaPgiuong;
			
			item.NgayPgiuong = varNgayPgiuong;
			
			item.NguoiPgiuong = varNguoiPgiuong;
			
			item.SurchargePrice = varSurchargePrice;
			
			item.XacNhan = varXacNhan;
			
			item.IpMacSua = varIpMacSua;
			
			item.IpMacTao = varIpMacTao;
			
			item.IpMaySua = varIpMaySua;
			
			item.IpMayTao = varIpMayTao;
			
			item.TenHienThi = varTenHienThi;
			
			item.GiaBgGoc = varGiaBgGoc;
			
			item.KieuThue = varKieuThue;
			
			item.PkPatientdeptId = varPkPatientdeptId;
			
			item.Id = varId;
			
			item.IdBenhLy = varIdBenhLy;
			
			item.IdLoaiBg = varIdLoaiBg;
			
			item.PhuThuNgoaigoi = varPhuThuNgoaigoi;
			
			item.Stt = varStt;
			
			item.IdKhoaDtriHo = varIdKhoaDtriHo;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varPatientDeptId,long varPatientId,int? varFromDepartmentId,short varDepartmentId,string varPatientCode,short? varRoomId,short? varBedId,byte? varBedType,byte varStatus,DateTime varRegDate,DateTime? varEndDate,short? varDoctorAssignId,string varCreateBy,DateTime varCreateDate,string varModifyBy,DateTime? varModifyDate,int? varIsCancel,DateTime? varPaymentDate,int? varPaymentStatus,int? varBhytStatus,int? varNoiTru,int? varQuantity,decimal? varPrice,int? varIsPayment,int? varPaymentId,int? varIdKhoaRavien,int? varTrangThaiRavien,decimal? varGiaBhytCt,decimal? varGiaBnct,int? varIdGoiDvu,int? varTrongGoi,int? varIdYtaPgiuong,DateTime? varNgayPgiuong,string varNguoiPgiuong,decimal? varSurchargePrice,int? varXacNhan,string varIpMacSua,string varIpMacTao,string varIpMaySua,string varIpMayTao,string varTenHienThi,decimal? varGiaBgGoc,string varKieuThue,int? varPkPatientdeptId,int? varId,int? varIdBenhLy,int? varIdLoaiBg,decimal? varPhuThuNgoaigoi,int? varStt,short? varIdKhoaDtriHo)
		{
			TPatientDept item = new TPatientDept();
			
				item.PatientDeptId = varPatientDeptId;
			
				item.PatientId = varPatientId;
			
				item.FromDepartmentId = varFromDepartmentId;
			
				item.DepartmentId = varDepartmentId;
			
				item.PatientCode = varPatientCode;
			
				item.RoomId = varRoomId;
			
				item.BedId = varBedId;
			
				item.BedType = varBedType;
			
				item.Status = varStatus;
			
				item.RegDate = varRegDate;
			
				item.EndDate = varEndDate;
			
				item.DoctorAssignId = varDoctorAssignId;
			
				item.CreateBy = varCreateBy;
			
				item.CreateDate = varCreateDate;
			
				item.ModifyBy = varModifyBy;
			
				item.ModifyDate = varModifyDate;
			
				item.IsCancel = varIsCancel;
			
				item.PaymentDate = varPaymentDate;
			
				item.PaymentStatus = varPaymentStatus;
			
				item.BhytStatus = varBhytStatus;
			
				item.NoiTru = varNoiTru;
			
				item.Quantity = varQuantity;
			
				item.Price = varPrice;
			
				item.IsPayment = varIsPayment;
			
				item.PaymentId = varPaymentId;
			
				item.IdKhoaRavien = varIdKhoaRavien;
			
				item.TrangThaiRavien = varTrangThaiRavien;
			
				item.GiaBhytCt = varGiaBhytCt;
			
				item.GiaBnct = varGiaBnct;
			
				item.IdGoiDvu = varIdGoiDvu;
			
				item.TrongGoi = varTrongGoi;
			
				item.IdYtaPgiuong = varIdYtaPgiuong;
			
				item.NgayPgiuong = varNgayPgiuong;
			
				item.NguoiPgiuong = varNguoiPgiuong;
			
				item.SurchargePrice = varSurchargePrice;
			
				item.XacNhan = varXacNhan;
			
				item.IpMacSua = varIpMacSua;
			
				item.IpMacTao = varIpMacTao;
			
				item.IpMaySua = varIpMaySua;
			
				item.IpMayTao = varIpMayTao;
			
				item.TenHienThi = varTenHienThi;
			
				item.GiaBgGoc = varGiaBgGoc;
			
				item.KieuThue = varKieuThue;
			
				item.PkPatientdeptId = varPkPatientdeptId;
			
				item.Id = varId;
			
				item.IdBenhLy = varIdBenhLy;
			
				item.IdLoaiBg = varIdLoaiBg;
			
				item.PhuThuNgoaigoi = varPhuThuNgoaigoi;
			
				item.Stt = varStt;
			
				item.IdKhoaDtriHo = varIdKhoaDtriHo;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn PatientDeptIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn FromDepartmentIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn DepartmentIdColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn RoomIdColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn BedIdColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn BedTypeColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn StatusColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn RegDateColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn EndDateColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn DoctorAssignIdColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn CreateByColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn CreateDateColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifyByColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifyDateColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn IsCancelColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentDateColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentStatusColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn BhytStatusColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn NoiTruColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn QuantityColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn PriceColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn IsPaymentColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentIdColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaRavienColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiRavienColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaBhytCtColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaBnctColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGoiDvuColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn TrongGoiColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn IdYtaPgiuongColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayPgiuongColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiPgiuongColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn SurchargePriceColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn XacNhanColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMacSuaColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMacTaoColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaySuaColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMayTaoColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        public static TableSchema.TableColumn TenHienThiColumn
        {
            get { return Schema.Columns[40]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaBgGocColumn
        {
            get { return Schema.Columns[41]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuThueColumn
        {
            get { return Schema.Columns[42]; }
        }
        
        
        
        public static TableSchema.TableColumn PkPatientdeptIdColumn
        {
            get { return Schema.Columns[43]; }
        }
        
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[44]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhLyColumn
        {
            get { return Schema.Columns[45]; }
        }
        
        
        
        public static TableSchema.TableColumn IdLoaiBgColumn
        {
            get { return Schema.Columns[46]; }
        }
        
        
        
        public static TableSchema.TableColumn PhuThuNgoaigoiColumn
        {
            get { return Schema.Columns[47]; }
        }
        
        
        
        public static TableSchema.TableColumn SttColumn
        {
            get { return Schema.Columns[48]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaDtriHoColumn
        {
            get { return Schema.Columns[49]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string PatientDeptId = @"PatientDept_ID";
			 public static string PatientId = @"Patient_ID";
			 public static string FromDepartmentId = @"FromDepartment_ID";
			 public static string DepartmentId = @"Department_ID";
			 public static string PatientCode = @"Patient_code";
			 public static string RoomId = @"Room_ID";
			 public static string BedId = @"Bed_ID";
			 public static string BedType = @"Bed_Type";
			 public static string Status = @"Status";
			 public static string RegDate = @"Reg_Date";
			 public static string EndDate = @"End_Date";
			 public static string DoctorAssignId = @"DoctorAssign_ID";
			 public static string CreateBy = @"Create_By";
			 public static string CreateDate = @"Create_Date";
			 public static string ModifyBy = @"Modify_By";
			 public static string ModifyDate = @"Modify_Date";
			 public static string IsCancel = @"IsCancel";
			 public static string PaymentDate = @"Payment_Date";
			 public static string PaymentStatus = @"Payment_Status";
			 public static string BhytStatus = @"BHYT_Status";
			 public static string NoiTru = @"Noi_Tru";
			 public static string Quantity = @"Quantity";
			 public static string Price = @"Price";
			 public static string IsPayment = @"IsPayment";
			 public static string PaymentId = @"Payment_ID";
			 public static string IdKhoaRavien = @"ID_KHOA_RAVIEN";
			 public static string TrangThaiRavien = @"TRANG_THAI_RAVIEN";
			 public static string GiaBhytCt = @"Gia_BHYT_CT";
			 public static string GiaBnct = @"Gia_BNCT";
			 public static string IdGoiDvu = @"ID_GOI_DVU";
			 public static string TrongGoi = @"TRONG_GOI";
			 public static string IdYtaPgiuong = @"ID_YTA_PGIUONG";
			 public static string NgayPgiuong = @"NGAY_PGIUONG";
			 public static string NguoiPgiuong = @"NGUOI_PGIUONG";
			 public static string SurchargePrice = @"Surcharge_Price";
			 public static string XacNhan = @"XAC_NHAN";
			 public static string IpMacSua = @"IP_MAC_SUA";
			 public static string IpMacTao = @"IP_MAC_TAO";
			 public static string IpMaySua = @"IP_MAY_SUA";
			 public static string IpMayTao = @"IP_MAY_TAO";
			 public static string TenHienThi = @"TEN_HIEN_THI";
			 public static string GiaBgGoc = @"GIA_BG_GOC";
			 public static string KieuThue = @"KIEU_THUE";
			 public static string PkPatientdeptId = @"PK_PATIENTDEPT_ID";
			 public static string Id = @"ID";
			 public static string IdBenhLy = @"ID_BENH_LY";
			 public static string IdLoaiBg = @"ID_LOAI_BG";
			 public static string PhuThuNgoaigoi = @"PHU_THU_NGOAIGOI";
			 public static string Stt = @"STT";
			 public static string IdKhoaDtriHo = @"Id_Khoa_Dtri_Ho";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
