using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for D_DuTru_CSo
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class DDuTruCSoController
    {
        // Preload our schema..
        DDuTruCSo thisSchemaLoad = new DDuTruCSo();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public DDuTruCSoCollection FetchAll()
        {
            DDuTruCSoCollection coll = new DDuTruCSoCollection();
            Query qry = new Query(DDuTruCSo.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public DDuTruCSoCollection FetchByID(object Id)
        {
            DDuTruCSoCollection coll = new DDuTruCSoCollection().Where("ID", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public DDuTruCSoCollection FetchByQuery(Query qry)
        {
            DDuTruCSoCollection coll = new DDuTruCSoCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (DDuTruCSo.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (DDuTruCSo.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? IdPhieuCSo,string TenPhieu,DateTime? NgayLapPhieu,short? IdNhanVien,short? IdKhoa,short? IdKho,int? IdThuoc,int? SoLuong,DateTime? NgayTao,string NguoiTao)
	    {
		    DDuTruCSo item = new DDuTruCSo();
		    
            item.IdPhieuCSo = IdPhieuCSo;
            
            item.TenPhieu = TenPhieu;
            
            item.NgayLapPhieu = NgayLapPhieu;
            
            item.IdNhanVien = IdNhanVien;
            
            item.IdKhoa = IdKhoa;
            
            item.IdKho = IdKho;
            
            item.IdThuoc = IdThuoc;
            
            item.SoLuong = SoLuong;
            
            item.NgayTao = NgayTao;
            
            item.NguoiTao = NguoiTao;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Id,int? IdPhieuCSo,string TenPhieu,DateTime? NgayLapPhieu,short? IdNhanVien,short? IdKhoa,short? IdKho,int? IdThuoc,int? SoLuong,DateTime? NgayTao,string NguoiTao)
	    {
		    DDuTruCSo item = new DDuTruCSo();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.IdPhieuCSo = IdPhieuCSo;
				
			item.TenPhieu = TenPhieu;
				
			item.NgayLapPhieu = NgayLapPhieu;
				
			item.IdNhanVien = IdNhanVien;
				
			item.IdKhoa = IdKhoa;
				
			item.IdKho = IdKho;
				
			item.IdThuoc = IdThuoc;
				
			item.SoLuong = SoLuong;
				
			item.NgayTao = NgayTao;
				
			item.NguoiTao = NguoiTao;
				
	        item.Save(UserName);
	    }
    }
}
