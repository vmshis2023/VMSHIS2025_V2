using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewInPhieuHoaSinh class.
    /// </summary>
    [Serializable]
    public partial class ViewInPhieuHoaSinhCollection : ReadOnlyList<ViewInPhieuHoaSinh, ViewInPhieuHoaSinhCollection>
    {        
        public ViewInPhieuHoaSinhCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_InPhieuHoaSinh view.
    /// </summary>
    [Serializable]
    public partial class ViewInPhieuHoaSinh : ReadOnlyRecord<ViewInPhieuHoaSinh>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_InPhieuHoaSinh", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
                colvarServiceId.ColumnName = "Service_ID";
                colvarServiceId.DataType = DbType.Int16;
                colvarServiceId.MaxLength = 0;
                colvarServiceId.AutoIncrement = false;
                colvarServiceId.IsNullable = true;
                colvarServiceId.IsPrimaryKey = false;
                colvarServiceId.IsForeignKey = false;
                colvarServiceId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceId);
                
                TableSchema.TableColumn colvarAssignId = new TableSchema.TableColumn(schema);
                colvarAssignId.ColumnName = "Assign_ID";
                colvarAssignId.DataType = DbType.Int64;
                colvarAssignId.MaxLength = 0;
                colvarAssignId.AutoIncrement = false;
                colvarAssignId.IsNullable = false;
                colvarAssignId.IsPrimaryKey = false;
                colvarAssignId.IsForeignKey = false;
                colvarAssignId.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignId);
                
                TableSchema.TableColumn colvarServiceDetailId = new TableSchema.TableColumn(schema);
                colvarServiceDetailId.ColumnName = "ServiceDetail_ID";
                colvarServiceDetailId.DataType = DbType.Int32;
                colvarServiceDetailId.MaxLength = 0;
                colvarServiceDetailId.AutoIncrement = false;
                colvarServiceDetailId.IsNullable = false;
                colvarServiceDetailId.IsPrimaryKey = false;
                colvarServiceDetailId.IsForeignKey = false;
                colvarServiceDetailId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceDetailId);
                
                TableSchema.TableColumn colvarServiceName = new TableSchema.TableColumn(schema);
                colvarServiceName.ColumnName = "Service_Name";
                colvarServiceName.DataType = DbType.String;
                colvarServiceName.MaxLength = 300;
                colvarServiceName.AutoIncrement = false;
                colvarServiceName.IsNullable = false;
                colvarServiceName.IsPrimaryKey = false;
                colvarServiceName.IsForeignKey = false;
                colvarServiceName.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceName);
                
                TableSchema.TableColumn colvarAssignCode = new TableSchema.TableColumn(schema);
                colvarAssignCode.ColumnName = "Assign_Code";
                colvarAssignCode.DataType = DbType.AnsiString;
                colvarAssignCode.MaxLength = 50;
                colvarAssignCode.AutoIncrement = false;
                colvarAssignCode.IsNullable = true;
                colvarAssignCode.IsPrimaryKey = false;
                colvarAssignCode.IsForeignKey = false;
                colvarAssignCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignCode);
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Int64;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = false;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_Code";
                colvarPatientCode.DataType = DbType.AnsiString;
                colvarPatientCode.MaxLength = 20;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = false;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarMaChidinh = new TableSchema.TableColumn(schema);
                colvarMaChidinh.ColumnName = "MA_CHIDINH";
                colvarMaChidinh.DataType = DbType.AnsiString;
                colvarMaChidinh.MaxLength = 30;
                colvarMaChidinh.AutoIncrement = false;
                colvarMaChidinh.IsNullable = true;
                colvarMaChidinh.IsPrimaryKey = false;
                colvarMaChidinh.IsForeignKey = false;
                colvarMaChidinh.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaChidinh);
                
                TableSchema.TableColumn colvarBarcode = new TableSchema.TableColumn(schema);
                colvarBarcode.ColumnName = "Barcode";
                colvarBarcode.DataType = DbType.String;
                colvarBarcode.MaxLength = 20;
                colvarBarcode.AutoIncrement = false;
                colvarBarcode.IsNullable = true;
                colvarBarcode.IsPrimaryKey = false;
                colvarBarcode.IsForeignKey = false;
                colvarBarcode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBarcode);
                
                TableSchema.TableColumn colvarGroupOrder = new TableSchema.TableColumn(schema);
                colvarGroupOrder.ColumnName = "GroupOrder";
                colvarGroupOrder.DataType = DbType.Int16;
                colvarGroupOrder.MaxLength = 0;
                colvarGroupOrder.AutoIncrement = false;
                colvarGroupOrder.IsNullable = false;
                colvarGroupOrder.IsPrimaryKey = false;
                colvarGroupOrder.IsForeignKey = false;
                colvarGroupOrder.IsReadOnly = false;
                
                schema.Columns.Add(colvarGroupOrder);
                
                TableSchema.TableColumn colvarServiceDetailName = new TableSchema.TableColumn(schema);
                colvarServiceDetailName.ColumnName = "ServiceDetail_Name";
                colvarServiceDetailName.DataType = DbType.String;
                colvarServiceDetailName.MaxLength = 300;
                colvarServiceDetailName.AutoIncrement = false;
                colvarServiceDetailName.IsNullable = true;
                colvarServiceDetailName.IsPrimaryKey = false;
                colvarServiceDetailName.IsForeignKey = false;
                colvarServiceDetailName.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceDetailName);
                
                TableSchema.TableColumn colvarIntOrder = new TableSchema.TableColumn(schema);
                colvarIntOrder.ColumnName = "IntOrder";
                colvarIntOrder.DataType = DbType.Int32;
                colvarIntOrder.MaxLength = 0;
                colvarIntOrder.AutoIncrement = false;
                colvarIntOrder.IsNullable = true;
                colvarIntOrder.IsPrimaryKey = false;
                colvarIntOrder.IsForeignKey = false;
                colvarIntOrder.IsReadOnly = false;
                
                schema.Columns.Add(colvarIntOrder);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("view_InPhieuHoaSinh",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewInPhieuHoaSinh()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewInPhieuHoaSinh(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewInPhieuHoaSinh(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewInPhieuHoaSinh(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("ServiceId")]
        [Bindable(true)]
        public short? ServiceId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Service_ID");
		    }
            set 
		    {
			    SetColumnValue("Service_ID", value);
            }
        }
	      
        [XmlAttribute("AssignId")]
        [Bindable(true)]
        public long AssignId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Assign_ID");
		    }
            set 
		    {
			    SetColumnValue("Assign_ID", value);
            }
        }
	      
        [XmlAttribute("ServiceDetailId")]
        [Bindable(true)]
        public int ServiceDetailId 
	    {
		    get
		    {
			    return GetColumnValue<int>("ServiceDetail_ID");
		    }
            set 
		    {
			    SetColumnValue("ServiceDetail_ID", value);
            }
        }
	      
        [XmlAttribute("ServiceName")]
        [Bindable(true)]
        public string ServiceName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Service_Name");
		    }
            set 
		    {
			    SetColumnValue("Service_Name", value);
            }
        }
	      
        [XmlAttribute("AssignCode")]
        [Bindable(true)]
        public string AssignCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Assign_Code");
		    }
            set 
		    {
			    SetColumnValue("Assign_Code", value);
            }
        }
	      
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public long PatientId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Code");
		    }
            set 
		    {
			    SetColumnValue("Patient_Code", value);
            }
        }
	      
        [XmlAttribute("MaChidinh")]
        [Bindable(true)]
        public string MaChidinh 
	    {
		    get
		    {
			    return GetColumnValue<string>("MA_CHIDINH");
		    }
            set 
		    {
			    SetColumnValue("MA_CHIDINH", value);
            }
        }
	      
        [XmlAttribute("Barcode")]
        [Bindable(true)]
        public string Barcode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Barcode");
		    }
            set 
		    {
			    SetColumnValue("Barcode", value);
            }
        }
	      
        [XmlAttribute("GroupOrder")]
        [Bindable(true)]
        public short GroupOrder 
	    {
		    get
		    {
			    return GetColumnValue<short>("GroupOrder");
		    }
            set 
		    {
			    SetColumnValue("GroupOrder", value);
            }
        }
	      
        [XmlAttribute("ServiceDetailName")]
        [Bindable(true)]
        public string ServiceDetailName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ServiceDetail_Name");
		    }
            set 
		    {
			    SetColumnValue("ServiceDetail_Name", value);
            }
        }
	      
        [XmlAttribute("IntOrder")]
        [Bindable(true)]
        public int? IntOrder 
	    {
		    get
		    {
			    return GetColumnValue<int?>("IntOrder");
		    }
            set 
		    {
			    SetColumnValue("IntOrder", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string ServiceId = @"Service_ID";
            
            public static string AssignId = @"Assign_ID";
            
            public static string ServiceDetailId = @"ServiceDetail_ID";
            
            public static string ServiceName = @"Service_Name";
            
            public static string AssignCode = @"Assign_Code";
            
            public static string PatientId = @"Patient_ID";
            
            public static string PatientCode = @"Patient_Code";
            
            public static string MaChidinh = @"MA_CHIDINH";
            
            public static string Barcode = @"Barcode";
            
            public static string GroupOrder = @"GroupOrder";
            
            public static string ServiceDetailName = @"ServiceDetail_Name";
            
            public static string IntOrder = @"IntOrder";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
