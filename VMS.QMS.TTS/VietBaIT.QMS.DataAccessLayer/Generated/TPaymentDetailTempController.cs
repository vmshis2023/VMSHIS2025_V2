using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_Payment_Detail_temp
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TPaymentDetailTempController
    {
        // Preload our schema..
        TPaymentDetailTemp thisSchemaLoad = new TPaymentDetailTemp();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TPaymentDetailTempCollection FetchAll()
        {
            TPaymentDetailTempCollection coll = new TPaymentDetailTempCollection();
            Query qry = new Query(TPaymentDetailTemp.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TPaymentDetailTempCollection FetchByID(object PaymentDetailId)
        {
            TPaymentDetailTempCollection coll = new TPaymentDetailTempCollection().Where("PaymentDetail_ID", PaymentDetailId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TPaymentDetailTempCollection FetchByQuery(Query qry)
        {
            TPaymentDetailTempCollection coll = new TPaymentDetailTempCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object PaymentDetailId)
        {
            return (TPaymentDetailTemp.Delete(PaymentDetailId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object PaymentDetailId)
        {
            return (TPaymentDetailTemp.Destroy(PaymentDetailId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long PaymentDetailId,int PaymentId,int? Quantity,decimal? OriginPrice,decimal? DiscountRate,decimal? DiscountPrice,decimal? TienBnTra,decimal? SurchargePrice,int? Id,int? IdDetail,int? ServiceId,int? ServiceDetailId,string ServiceDetailName,byte? PaymentTypeId,byte? IsCancel,byte? IsPayment,string CancelBy,DateTime? CancelDate,short? DepartmentId,short? DoctorAssignId,int? ThuTuIn,string DonViTinh,string MaDv,decimal? PTramBh,string MaKieuTtoan,byte? NoiTru,string TenHienThi,short? IdNvienThien)
	    {
		    TPaymentDetailTemp item = new TPaymentDetailTemp();
		    
            item.PaymentDetailId = PaymentDetailId;
            
            item.PaymentId = PaymentId;
            
            item.Quantity = Quantity;
            
            item.OriginPrice = OriginPrice;
            
            item.DiscountRate = DiscountRate;
            
            item.DiscountPrice = DiscountPrice;
            
            item.TienBnTra = TienBnTra;
            
            item.SurchargePrice = SurchargePrice;
            
            item.Id = Id;
            
            item.IdDetail = IdDetail;
            
            item.ServiceId = ServiceId;
            
            item.ServiceDetailId = ServiceDetailId;
            
            item.ServiceDetailName = ServiceDetailName;
            
            item.PaymentTypeId = PaymentTypeId;
            
            item.IsCancel = IsCancel;
            
            item.IsPayment = IsPayment;
            
            item.CancelBy = CancelBy;
            
            item.CancelDate = CancelDate;
            
            item.DepartmentId = DepartmentId;
            
            item.DoctorAssignId = DoctorAssignId;
            
            item.ThuTuIn = ThuTuIn;
            
            item.DonViTinh = DonViTinh;
            
            item.MaDv = MaDv;
            
            item.PTramBh = PTramBh;
            
            item.MaKieuTtoan = MaKieuTtoan;
            
            item.NoiTru = NoiTru;
            
            item.TenHienThi = TenHienThi;
            
            item.IdNvienThien = IdNvienThien;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long PaymentDetailId,int PaymentId,int? Quantity,decimal? OriginPrice,decimal? DiscountRate,decimal? DiscountPrice,decimal? TienBnTra,decimal? SurchargePrice,int? Id,int? IdDetail,int? ServiceId,int? ServiceDetailId,string ServiceDetailName,byte? PaymentTypeId,byte? IsCancel,byte? IsPayment,string CancelBy,DateTime? CancelDate,short? DepartmentId,short? DoctorAssignId,int? ThuTuIn,string DonViTinh,string MaDv,decimal? PTramBh,string MaKieuTtoan,byte? NoiTru,string TenHienThi,short? IdNvienThien)
	    {
		    TPaymentDetailTemp item = new TPaymentDetailTemp();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.PaymentDetailId = PaymentDetailId;
				
			item.PaymentId = PaymentId;
				
			item.Quantity = Quantity;
				
			item.OriginPrice = OriginPrice;
				
			item.DiscountRate = DiscountRate;
				
			item.DiscountPrice = DiscountPrice;
				
			item.TienBnTra = TienBnTra;
				
			item.SurchargePrice = SurchargePrice;
				
			item.Id = Id;
				
			item.IdDetail = IdDetail;
				
			item.ServiceId = ServiceId;
				
			item.ServiceDetailId = ServiceDetailId;
				
			item.ServiceDetailName = ServiceDetailName;
				
			item.PaymentTypeId = PaymentTypeId;
				
			item.IsCancel = IsCancel;
				
			item.IsPayment = IsPayment;
				
			item.CancelBy = CancelBy;
				
			item.CancelDate = CancelDate;
				
			item.DepartmentId = DepartmentId;
				
			item.DoctorAssignId = DoctorAssignId;
				
			item.ThuTuIn = ThuTuIn;
				
			item.DonViTinh = DonViTinh;
				
			item.MaDv = MaDv;
				
			item.PTramBh = PTramBh;
				
			item.MaKieuTtoan = MaKieuTtoan;
				
			item.NoiTru = NoiTru;
				
			item.TenHienThi = TenHienThi;
				
			item.IdNvienThien = IdNvienThien;
				
	        item.Save(UserName);
	    }
    }
}
