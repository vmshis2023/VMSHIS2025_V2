using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_NOITIET_PHIEU_DCT_AO
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TNoitietPhieuDctAoController
    {
        // Preload our schema..
        TNoitietPhieuDctAo thisSchemaLoad = new TNoitietPhieuDctAo();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TNoitietPhieuDctAoCollection FetchAll()
        {
            TNoitietPhieuDctAoCollection coll = new TNoitietPhieuDctAoCollection();
            Query qry = new Query(TNoitietPhieuDctAo.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TNoitietPhieuDctAoCollection FetchByID(object IdPhieuDct)
        {
            TNoitietPhieuDctAoCollection coll = new TNoitietPhieuDctAoCollection().Where("ID_PHIEU_DCT", IdPhieuDct).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TNoitietPhieuDctAoCollection FetchByQuery(Query qry)
        {
            TNoitietPhieuDctAoCollection coll = new TNoitietPhieuDctAoCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdPhieuDct)
        {
            return (TNoitietPhieuDctAo.Delete(IdPhieuDct) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdPhieuDct)
        {
            return (TNoitietPhieuDctAo.Destroy(IdPhieuDct) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string MaPhieuDct,string PatientCode,int? PatientId,decimal? TienGoc,decimal? TienBhct,decimal? TienBnct,string NguoiTao,DateTime? NgayTao,byte? KieuThanhtoan,string MaKhoaThien,DateTime? NgaySua,string NguoiSua)
	    {
		    TNoitietPhieuDctAo item = new TNoitietPhieuDctAo();
		    
            item.MaPhieuDct = MaPhieuDct;
            
            item.PatientCode = PatientCode;
            
            item.PatientId = PatientId;
            
            item.TienGoc = TienGoc;
            
            item.TienBhct = TienBhct;
            
            item.TienBnct = TienBnct;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.KieuThanhtoan = KieuThanhtoan;
            
            item.MaKhoaThien = MaKhoaThien;
            
            item.NgaySua = NgaySua;
            
            item.NguoiSua = NguoiSua;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int IdPhieuDct,string MaPhieuDct,string PatientCode,int? PatientId,decimal? TienGoc,decimal? TienBhct,decimal? TienBnct,string NguoiTao,DateTime? NgayTao,byte? KieuThanhtoan,string MaKhoaThien,DateTime? NgaySua,string NguoiSua)
	    {
		    TNoitietPhieuDctAo item = new TNoitietPhieuDctAo();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdPhieuDct = IdPhieuDct;
				
			item.MaPhieuDct = MaPhieuDct;
				
			item.PatientCode = PatientCode;
				
			item.PatientId = PatientId;
				
			item.TienGoc = TienGoc;
				
			item.TienBhct = TienBhct;
				
			item.TienBnct = TienBnct;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.KieuThanhtoan = KieuThanhtoan;
				
			item.MaKhoaThien = MaKhoaThien;
				
			item.NgaySua = NgaySua;
				
			item.NguoiSua = NguoiSua;
				
	        item.Save(UserName);
	    }
    }
}
