using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the SysThamSoReport class.
	/// </summary>
    [Serializable]
	public partial class SysThamSoReportCollection : ActiveList<SysThamSoReport, SysThamSoReportCollection>
	{	   
		public SysThamSoReportCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>SysThamSoReportCollection</returns>
		public SysThamSoReportCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                SysThamSoReport o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Sys_ThamSo_Report table.
	/// </summary>
	[Serializable]
	public partial class SysThamSoReport : ActiveRecord<SysThamSoReport>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public SysThamSoReport()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public SysThamSoReport(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public SysThamSoReport(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public SysThamSoReport(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Sys_ThamSo_Report", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarMaBaoCao = new TableSchema.TableColumn(schema);
				colvarMaBaoCao.ColumnName = "MA_BAO_CAO";
				colvarMaBaoCao.DataType = DbType.AnsiString;
				colvarMaBaoCao.MaxLength = 100;
				colvarMaBaoCao.AutoIncrement = false;
				colvarMaBaoCao.IsNullable = false;
				colvarMaBaoCao.IsPrimaryKey = true;
				colvarMaBaoCao.IsForeignKey = false;
				colvarMaBaoCao.IsReadOnly = false;
				colvarMaBaoCao.DefaultSetting = @"";
				colvarMaBaoCao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaBaoCao);
				
				TableSchema.TableColumn colvarTenThamSo = new TableSchema.TableColumn(schema);
				colvarTenThamSo.ColumnName = "TEN_THAM_SO";
				colvarTenThamSo.DataType = DbType.AnsiString;
				colvarTenThamSo.MaxLength = 100;
				colvarTenThamSo.AutoIncrement = false;
				colvarTenThamSo.IsNullable = false;
				colvarTenThamSo.IsPrimaryKey = true;
				colvarTenThamSo.IsForeignKey = false;
				colvarTenThamSo.IsReadOnly = false;
				colvarTenThamSo.DefaultSetting = @"";
				colvarTenThamSo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenThamSo);
				
				TableSchema.TableColumn colvarGiaTri = new TableSchema.TableColumn(schema);
				colvarGiaTri.ColumnName = "GIA_TRI";
				colvarGiaTri.DataType = DbType.String;
				colvarGiaTri.MaxLength = 300;
				colvarGiaTri.AutoIncrement = false;
				colvarGiaTri.IsNullable = true;
				colvarGiaTri.IsPrimaryKey = false;
				colvarGiaTri.IsForeignKey = false;
				colvarGiaTri.IsReadOnly = false;
				colvarGiaTri.DefaultSetting = @"";
				colvarGiaTri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaTri);
				
				TableSchema.TableColumn colvarTrinhKy = new TableSchema.TableColumn(schema);
				colvarTrinhKy.ColumnName = "TRINH_KY";
				colvarTrinhKy.DataType = DbType.Boolean;
				colvarTrinhKy.MaxLength = 0;
				colvarTrinhKy.AutoIncrement = false;
				colvarTrinhKy.IsNullable = true;
				colvarTrinhKy.IsPrimaryKey = false;
				colvarTrinhKy.IsForeignKey = false;
				colvarTrinhKy.IsReadOnly = false;
				
						colvarTrinhKy.DefaultSetting = @"((0))";
				colvarTrinhKy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrinhKy);
				
				TableSchema.TableColumn colvarBangChu = new TableSchema.TableColumn(schema);
				colvarBangChu.ColumnName = "BANG_CHU";
				colvarBangChu.DataType = DbType.Boolean;
				colvarBangChu.MaxLength = 0;
				colvarBangChu.AutoIncrement = false;
				colvarBangChu.IsNullable = true;
				colvarBangChu.IsPrimaryKey = false;
				colvarBangChu.IsForeignKey = false;
				colvarBangChu.IsReadOnly = false;
				
						colvarBangChu.DefaultSetting = @"((0))";
				colvarBangChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBangChu);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("Sys_ThamSo_Report",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("MaBaoCao")]
		[Bindable(true)]
		public string MaBaoCao 
		{
			get { return GetColumnValue<string>(Columns.MaBaoCao); }
			set { SetColumnValue(Columns.MaBaoCao, value); }
		}
		  
		[XmlAttribute("TenThamSo")]
		[Bindable(true)]
		public string TenThamSo 
		{
			get { return GetColumnValue<string>(Columns.TenThamSo); }
			set { SetColumnValue(Columns.TenThamSo, value); }
		}
		  
		[XmlAttribute("GiaTri")]
		[Bindable(true)]
		public string GiaTri 
		{
			get { return GetColumnValue<string>(Columns.GiaTri); }
			set { SetColumnValue(Columns.GiaTri, value); }
		}
		  
		[XmlAttribute("TrinhKy")]
		[Bindable(true)]
		public bool? TrinhKy 
		{
			get { return GetColumnValue<bool?>(Columns.TrinhKy); }
			set { SetColumnValue(Columns.TrinhKy, value); }
		}
		  
		[XmlAttribute("BangChu")]
		[Bindable(true)]
		public bool? BangChu 
		{
			get { return GetColumnValue<bool?>(Columns.BangChu); }
			set { SetColumnValue(Columns.BangChu, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaBaoCao,string varTenThamSo,string varGiaTri,bool? varTrinhKy,bool? varBangChu)
		{
			SysThamSoReport item = new SysThamSoReport();
			
			item.MaBaoCao = varMaBaoCao;
			
			item.TenThamSo = varTenThamSo;
			
			item.GiaTri = varGiaTri;
			
			item.TrinhKy = varTrinhKy;
			
			item.BangChu = varBangChu;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(string varMaBaoCao,string varTenThamSo,string varGiaTri,bool? varTrinhKy,bool? varBangChu)
		{
			SysThamSoReport item = new SysThamSoReport();
			
				item.MaBaoCao = varMaBaoCao;
			
				item.TenThamSo = varTenThamSo;
			
				item.GiaTri = varGiaTri;
			
				item.TrinhKy = varTrinhKy;
			
				item.BangChu = varBangChu;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn MaBaoCaoColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn TenThamSoColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaTriColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TrinhKyColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn BangChuColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string MaBaoCao = @"MA_BAO_CAO";
			 public static string TenThamSo = @"TEN_THAM_SO";
			 public static string GiaTri = @"GIA_TRI";
			 public static string TrinhKy = @"TRINH_KY";
			 public static string BangChu = @"BANG_CHU";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
