using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the KydongTAssignDetail class.
	/// </summary>
    [Serializable]
	public partial class KydongTAssignDetailCollection : ActiveList<KydongTAssignDetail, KydongTAssignDetailCollection>
	{	   
		public KydongTAssignDetailCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KydongTAssignDetailCollection</returns>
		public KydongTAssignDetailCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KydongTAssignDetail o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the KYDONG_T_Assign_Detail table.
	/// </summary>
	[Serializable]
	public partial class KydongTAssignDetail : ActiveRecord<KydongTAssignDetail>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KydongTAssignDetail()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KydongTAssignDetail(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KydongTAssignDetail(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KydongTAssignDetail(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("KYDONG_T_Assign_Detail", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarAssignDetailId = new TableSchema.TableColumn(schema);
				colvarAssignDetailId.ColumnName = "AssignDetail_ID";
				colvarAssignDetailId.DataType = DbType.Int64;
				colvarAssignDetailId.MaxLength = 0;
				colvarAssignDetailId.AutoIncrement = true;
				colvarAssignDetailId.IsNullable = false;
				colvarAssignDetailId.IsPrimaryKey = true;
				colvarAssignDetailId.IsForeignKey = false;
				colvarAssignDetailId.IsReadOnly = false;
				colvarAssignDetailId.DefaultSetting = @"";
				colvarAssignDetailId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAssignDetailId);
				
				TableSchema.TableColumn colvarExamId = new TableSchema.TableColumn(schema);
				colvarExamId.ColumnName = "Exam_ID";
				colvarExamId.DataType = DbType.Int64;
				colvarExamId.MaxLength = 0;
				colvarExamId.AutoIncrement = false;
				colvarExamId.IsNullable = true;
				colvarExamId.IsPrimaryKey = false;
				colvarExamId.IsForeignKey = false;
				colvarExamId.IsReadOnly = false;
				
						colvarExamId.DefaultSetting = @"((-1))";
				colvarExamId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarExamId);
				
				TableSchema.TableColumn colvarAssignId = new TableSchema.TableColumn(schema);
				colvarAssignId.ColumnName = "Assign_ID";
				colvarAssignId.DataType = DbType.Int64;
				colvarAssignId.MaxLength = 0;
				colvarAssignId.AutoIncrement = false;
				colvarAssignId.IsNullable = false;
				colvarAssignId.IsPrimaryKey = false;
				colvarAssignId.IsForeignKey = false;
				colvarAssignId.IsReadOnly = false;
				colvarAssignId.DefaultSetting = @"";
				colvarAssignId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAssignId);
				
				TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
				colvarServiceId.ColumnName = "Service_ID";
				colvarServiceId.DataType = DbType.Int16;
				colvarServiceId.MaxLength = 0;
				colvarServiceId.AutoIncrement = false;
				colvarServiceId.IsNullable = true;
				colvarServiceId.IsPrimaryKey = false;
				colvarServiceId.IsForeignKey = false;
				colvarServiceId.IsReadOnly = false;
				
						colvarServiceId.DefaultSetting = @"((0))";
				colvarServiceId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceId);
				
				TableSchema.TableColumn colvarServiceDetailId = new TableSchema.TableColumn(schema);
				colvarServiceDetailId.ColumnName = "ServiceDetail_ID";
				colvarServiceDetailId.DataType = DbType.Int32;
				colvarServiceDetailId.MaxLength = 0;
				colvarServiceDetailId.AutoIncrement = false;
				colvarServiceDetailId.IsNullable = false;
				colvarServiceDetailId.IsPrimaryKey = false;
				colvarServiceDetailId.IsForeignKey = false;
				colvarServiceDetailId.IsReadOnly = false;
				colvarServiceDetailId.DefaultSetting = @"";
				colvarServiceDetailId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceDetailId);
				
				TableSchema.TableColumn colvarMeasureUnit = new TableSchema.TableColumn(schema);
				colvarMeasureUnit.ColumnName = "Measure_Unit";
				colvarMeasureUnit.DataType = DbType.AnsiString;
				colvarMeasureUnit.MaxLength = 50;
				colvarMeasureUnit.AutoIncrement = false;
				colvarMeasureUnit.IsNullable = true;
				colvarMeasureUnit.IsPrimaryKey = false;
				colvarMeasureUnit.IsForeignKey = false;
				colvarMeasureUnit.IsReadOnly = false;
				colvarMeasureUnit.DefaultSetting = @"";
				colvarMeasureUnit.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMeasureUnit);
				
				TableSchema.TableColumn colvarMeasureType = new TableSchema.TableColumn(schema);
				colvarMeasureType.ColumnName = "Measure_Type";
				colvarMeasureType.DataType = DbType.Byte;
				colvarMeasureType.MaxLength = 0;
				colvarMeasureType.AutoIncrement = false;
				colvarMeasureType.IsNullable = true;
				colvarMeasureType.IsPrimaryKey = false;
				colvarMeasureType.IsForeignKey = false;
				colvarMeasureType.IsReadOnly = false;
				
						colvarMeasureType.DefaultSetting = @"((0))";
				colvarMeasureType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMeasureType);
				
				TableSchema.TableColumn colvarNormalLevel0 = new TableSchema.TableColumn(schema);
				colvarNormalLevel0.ColumnName = "Normal_Level_0";
				colvarNormalLevel0.DataType = DbType.AnsiString;
				colvarNormalLevel0.MaxLength = 50;
				colvarNormalLevel0.AutoIncrement = false;
				colvarNormalLevel0.IsNullable = true;
				colvarNormalLevel0.IsPrimaryKey = false;
				colvarNormalLevel0.IsForeignKey = false;
				colvarNormalLevel0.IsReadOnly = false;
				colvarNormalLevel0.DefaultSetting = @"";
				colvarNormalLevel0.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNormalLevel0);
				
				TableSchema.TableColumn colvarNormalLevel1 = new TableSchema.TableColumn(schema);
				colvarNormalLevel1.ColumnName = "Normal_Level_1";
				colvarNormalLevel1.DataType = DbType.AnsiString;
				colvarNormalLevel1.MaxLength = 50;
				colvarNormalLevel1.AutoIncrement = false;
				colvarNormalLevel1.IsNullable = true;
				colvarNormalLevel1.IsPrimaryKey = false;
				colvarNormalLevel1.IsForeignKey = false;
				colvarNormalLevel1.IsReadOnly = false;
				colvarNormalLevel1.DefaultSetting = @"";
				colvarNormalLevel1.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNormalLevel1);
				
				TableSchema.TableColumn colvarDiagPerson = new TableSchema.TableColumn(schema);
				colvarDiagPerson.ColumnName = "Diag_Person";
				colvarDiagPerson.DataType = DbType.Int16;
				colvarDiagPerson.MaxLength = 0;
				colvarDiagPerson.AutoIncrement = false;
				colvarDiagPerson.IsNullable = true;
				colvarDiagPerson.IsPrimaryKey = false;
				colvarDiagPerson.IsForeignKey = false;
				colvarDiagPerson.IsReadOnly = false;
				colvarDiagPerson.DefaultSetting = @"";
				colvarDiagPerson.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiagPerson);
				
				TableSchema.TableColumn colvarDiscountRate = new TableSchema.TableColumn(schema);
				colvarDiscountRate.ColumnName = "Discount_Rate";
				colvarDiscountRate.DataType = DbType.Decimal;
				colvarDiscountRate.MaxLength = 0;
				colvarDiscountRate.AutoIncrement = false;
				colvarDiscountRate.IsNullable = true;
				colvarDiscountRate.IsPrimaryKey = false;
				colvarDiscountRate.IsForeignKey = false;
				colvarDiscountRate.IsReadOnly = false;
				colvarDiscountRate.DefaultSetting = @"";
				colvarDiscountRate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountRate);
				
				TableSchema.TableColumn colvarDiscountType = new TableSchema.TableColumn(schema);
				colvarDiscountType.ColumnName = "Discount_Type";
				colvarDiscountType.DataType = DbType.Byte;
				colvarDiscountType.MaxLength = 0;
				colvarDiscountType.AutoIncrement = false;
				colvarDiscountType.IsNullable = true;
				colvarDiscountType.IsPrimaryKey = false;
				colvarDiscountType.IsForeignKey = false;
				colvarDiscountType.IsReadOnly = false;
				colvarDiscountType.DefaultSetting = @"";
				colvarDiscountType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountType);
				
				TableSchema.TableColumn colvarOriginPrice = new TableSchema.TableColumn(schema);
				colvarOriginPrice.ColumnName = "Origin_Price";
				colvarOriginPrice.DataType = DbType.Currency;
				colvarOriginPrice.MaxLength = 0;
				colvarOriginPrice.AutoIncrement = false;
				colvarOriginPrice.IsNullable = false;
				colvarOriginPrice.IsPrimaryKey = false;
				colvarOriginPrice.IsForeignKey = false;
				colvarOriginPrice.IsReadOnly = false;
				colvarOriginPrice.DefaultSetting = @"";
				colvarOriginPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOriginPrice);
				
				TableSchema.TableColumn colvarDiscountPrice = new TableSchema.TableColumn(schema);
				colvarDiscountPrice.ColumnName = "Discount_Price";
				colvarDiscountPrice.DataType = DbType.Currency;
				colvarDiscountPrice.MaxLength = 0;
				colvarDiscountPrice.AutoIncrement = false;
				colvarDiscountPrice.IsNullable = true;
				colvarDiscountPrice.IsPrimaryKey = false;
				colvarDiscountPrice.IsForeignKey = false;
				colvarDiscountPrice.IsReadOnly = false;
				colvarDiscountPrice.DefaultSetting = @"";
				colvarDiscountPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountPrice);
				
				TableSchema.TableColumn colvarSurchargePrice = new TableSchema.TableColumn(schema);
				colvarSurchargePrice.ColumnName = "Surcharge_Price";
				colvarSurchargePrice.DataType = DbType.Currency;
				colvarSurchargePrice.MaxLength = 0;
				colvarSurchargePrice.AutoIncrement = false;
				colvarSurchargePrice.IsNullable = true;
				colvarSurchargePrice.IsPrimaryKey = false;
				colvarSurchargePrice.IsForeignKey = false;
				colvarSurchargePrice.IsReadOnly = false;
				colvarSurchargePrice.DefaultSetting = @"";
				colvarSurchargePrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSurchargePrice);
				
				TableSchema.TableColumn colvarUserId = new TableSchema.TableColumn(schema);
				colvarUserId.ColumnName = "User_ID";
				colvarUserId.DataType = DbType.AnsiString;
				colvarUserId.MaxLength = 50;
				colvarUserId.AutoIncrement = false;
				colvarUserId.IsNullable = true;
				colvarUserId.IsPrimaryKey = false;
				colvarUserId.IsForeignKey = false;
				colvarUserId.IsReadOnly = false;
				colvarUserId.DefaultSetting = @"";
				colvarUserId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUserId);
				
				TableSchema.TableColumn colvarAssignTypeId = new TableSchema.TableColumn(schema);
				colvarAssignTypeId.ColumnName = "Assign_Type_ID";
				colvarAssignTypeId.DataType = DbType.Byte;
				colvarAssignTypeId.MaxLength = 0;
				colvarAssignTypeId.AutoIncrement = false;
				colvarAssignTypeId.IsNullable = true;
				colvarAssignTypeId.IsPrimaryKey = false;
				colvarAssignTypeId.IsForeignKey = false;
				colvarAssignTypeId.IsReadOnly = false;
				
						colvarAssignTypeId.DefaultSetting = @"((0))";
				colvarAssignTypeId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAssignTypeId);
				
				TableSchema.TableColumn colvarInputDate = new TableSchema.TableColumn(schema);
				colvarInputDate.ColumnName = "Input_Date";
				colvarInputDate.DataType = DbType.DateTime;
				colvarInputDate.MaxLength = 0;
				colvarInputDate.AutoIncrement = false;
				colvarInputDate.IsNullable = true;
				colvarInputDate.IsPrimaryKey = false;
				colvarInputDate.IsForeignKey = false;
				colvarInputDate.IsReadOnly = false;
				
						colvarInputDate.DefaultSetting = @"(getdate())";
				colvarInputDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInputDate);
				
				TableSchema.TableColumn colvarModifyDate = new TableSchema.TableColumn(schema);
				colvarModifyDate.ColumnName = "Modify_Date";
				colvarModifyDate.DataType = DbType.DateTime;
				colvarModifyDate.MaxLength = 0;
				colvarModifyDate.AutoIncrement = false;
				colvarModifyDate.IsNullable = true;
				colvarModifyDate.IsPrimaryKey = false;
				colvarModifyDate.IsForeignKey = false;
				colvarModifyDate.IsReadOnly = false;
				colvarModifyDate.DefaultSetting = @"";
				colvarModifyDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModifyDate);
				
				TableSchema.TableColumn colvarModifyBy = new TableSchema.TableColumn(schema);
				colvarModifyBy.ColumnName = "Modify_By";
				colvarModifyBy.DataType = DbType.String;
				colvarModifyBy.MaxLength = 50;
				colvarModifyBy.AutoIncrement = false;
				colvarModifyBy.IsNullable = true;
				colvarModifyBy.IsPrimaryKey = false;
				colvarModifyBy.IsForeignKey = false;
				colvarModifyBy.IsReadOnly = false;
				colvarModifyBy.DefaultSetting = @"";
				colvarModifyBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModifyBy);
				
				TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
				colvarPaymentStatus.ColumnName = "Payment_Status";
				colvarPaymentStatus.DataType = DbType.Byte;
				colvarPaymentStatus.MaxLength = 0;
				colvarPaymentStatus.AutoIncrement = false;
				colvarPaymentStatus.IsNullable = true;
				colvarPaymentStatus.IsPrimaryKey = false;
				colvarPaymentStatus.IsForeignKey = false;
				colvarPaymentStatus.IsReadOnly = false;
				
						colvarPaymentStatus.DefaultSetting = @"((0))";
				colvarPaymentStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentStatus);
				
				TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
				colvarPaymentDate.ColumnName = "Payment_Date";
				colvarPaymentDate.DataType = DbType.DateTime;
				colvarPaymentDate.MaxLength = 0;
				colvarPaymentDate.AutoIncrement = false;
				colvarPaymentDate.IsNullable = true;
				colvarPaymentDate.IsPrimaryKey = false;
				colvarPaymentDate.IsForeignKey = false;
				colvarPaymentDate.IsReadOnly = false;
				colvarPaymentDate.DefaultSetting = @"";
				colvarPaymentDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentDate);
				
				TableSchema.TableColumn colvarIsCancel = new TableSchema.TableColumn(schema);
				colvarIsCancel.ColumnName = "IsCancel";
				colvarIsCancel.DataType = DbType.Int32;
				colvarIsCancel.MaxLength = 0;
				colvarIsCancel.AutoIncrement = false;
				colvarIsCancel.IsNullable = true;
				colvarIsCancel.IsPrimaryKey = false;
				colvarIsCancel.IsForeignKey = false;
				colvarIsCancel.IsReadOnly = false;
				colvarIsCancel.DefaultSetting = @"";
				colvarIsCancel.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsCancel);
				
				TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
				colvarIsPayment.ColumnName = "IsPayment";
				colvarIsPayment.DataType = DbType.Int32;
				colvarIsPayment.MaxLength = 0;
				colvarIsPayment.AutoIncrement = false;
				colvarIsPayment.IsNullable = true;
				colvarIsPayment.IsPrimaryKey = false;
				colvarIsPayment.IsForeignKey = false;
				colvarIsPayment.IsReadOnly = false;
				colvarIsPayment.DefaultSetting = @"";
				colvarIsPayment.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsPayment);
				
				TableSchema.TableColumn colvarObjectTypeId = new TableSchema.TableColumn(schema);
				colvarObjectTypeId.ColumnName = "ObjectType_ID";
				colvarObjectTypeId.DataType = DbType.Int32;
				colvarObjectTypeId.MaxLength = 0;
				colvarObjectTypeId.AutoIncrement = false;
				colvarObjectTypeId.IsNullable = true;
				colvarObjectTypeId.IsPrimaryKey = false;
				colvarObjectTypeId.IsForeignKey = false;
				colvarObjectTypeId.IsReadOnly = false;
				colvarObjectTypeId.DefaultSetting = @"";
				colvarObjectTypeId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObjectTypeId);
				
				TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
				colvarQuantity.ColumnName = "Quantity";
				colvarQuantity.DataType = DbType.Int32;
				colvarQuantity.MaxLength = 0;
				colvarQuantity.AutoIncrement = false;
				colvarQuantity.IsNullable = true;
				colvarQuantity.IsPrimaryKey = false;
				colvarQuantity.IsForeignKey = false;
				colvarQuantity.IsReadOnly = false;
				colvarQuantity.DefaultSetting = @"";
				colvarQuantity.ForeignKeyTableName = "";
				schema.Columns.Add(colvarQuantity);
				
				TableSchema.TableColumn colvarSummary = new TableSchema.TableColumn(schema);
				colvarSummary.ColumnName = "Summary";
				colvarSummary.DataType = DbType.String;
				colvarSummary.MaxLength = 500;
				colvarSummary.AutoIncrement = false;
				colvarSummary.IsNullable = true;
				colvarSummary.IsPrimaryKey = false;
				colvarSummary.IsForeignKey = false;
				colvarSummary.IsReadOnly = false;
				colvarSummary.DefaultSetting = @"";
				colvarSummary.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSummary);
				
				TableSchema.TableColumn colvarAssignDetailStatus = new TableSchema.TableColumn(schema);
				colvarAssignDetailStatus.ColumnName = "AssignDetail_Status";
				colvarAssignDetailStatus.DataType = DbType.Int32;
				colvarAssignDetailStatus.MaxLength = 0;
				colvarAssignDetailStatus.AutoIncrement = false;
				colvarAssignDetailStatus.IsNullable = true;
				colvarAssignDetailStatus.IsPrimaryKey = false;
				colvarAssignDetailStatus.IsForeignKey = false;
				colvarAssignDetailStatus.IsReadOnly = false;
				colvarAssignDetailStatus.DefaultSetting = @"";
				colvarAssignDetailStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAssignDetailStatus);
				
				TableSchema.TableColumn colvarSDesc = new TableSchema.TableColumn(schema);
				colvarSDesc.ColumnName = "sDesc";
				colvarSDesc.DataType = DbType.String;
				colvarSDesc.MaxLength = 1073741823;
				colvarSDesc.AutoIncrement = false;
				colvarSDesc.IsNullable = true;
				colvarSDesc.IsPrimaryKey = false;
				colvarSDesc.IsForeignKey = false;
				colvarSDesc.IsReadOnly = false;
				colvarSDesc.DefaultSetting = @"";
				colvarSDesc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSDesc);
				
				TableSchema.TableColumn colvarSPathImage1 = new TableSchema.TableColumn(schema);
				colvarSPathImage1.ColumnName = "sPathImage1";
				colvarSPathImage1.DataType = DbType.String;
				colvarSPathImage1.MaxLength = 200;
				colvarSPathImage1.AutoIncrement = false;
				colvarSPathImage1.IsNullable = true;
				colvarSPathImage1.IsPrimaryKey = false;
				colvarSPathImage1.IsForeignKey = false;
				colvarSPathImage1.IsReadOnly = false;
				colvarSPathImage1.DefaultSetting = @"";
				colvarSPathImage1.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSPathImage1);
				
				TableSchema.TableColumn colvarSPathImage2 = new TableSchema.TableColumn(schema);
				colvarSPathImage2.ColumnName = "sPathImage2";
				colvarSPathImage2.DataType = DbType.String;
				colvarSPathImage2.MaxLength = 200;
				colvarSPathImage2.AutoIncrement = false;
				colvarSPathImage2.IsNullable = true;
				colvarSPathImage2.IsPrimaryKey = false;
				colvarSPathImage2.IsForeignKey = false;
				colvarSPathImage2.IsReadOnly = false;
				colvarSPathImage2.DefaultSetting = @"";
				colvarSPathImage2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSPathImage2);
				
				TableSchema.TableColumn colvarBhytStatus = new TableSchema.TableColumn(schema);
				colvarBhytStatus.ColumnName = "BHYT_Status";
				colvarBhytStatus.DataType = DbType.Int32;
				colvarBhytStatus.MaxLength = 0;
				colvarBhytStatus.AutoIncrement = false;
				colvarBhytStatus.IsNullable = true;
				colvarBhytStatus.IsPrimaryKey = false;
				colvarBhytStatus.IsForeignKey = false;
				colvarBhytStatus.IsReadOnly = false;
				
						colvarBhytStatus.DefaultSetting = @"((0))";
				colvarBhytStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBhytStatus);
				
				TableSchema.TableColumn colvarProposal = new TableSchema.TableColumn(schema);
				colvarProposal.ColumnName = "Proposal";
				colvarProposal.DataType = DbType.String;
				colvarProposal.MaxLength = 500;
				colvarProposal.AutoIncrement = false;
				colvarProposal.IsNullable = true;
				colvarProposal.IsPrimaryKey = false;
				colvarProposal.IsForeignKey = false;
				colvarProposal.IsReadOnly = false;
				colvarProposal.DefaultSetting = @"";
				colvarProposal.ForeignKeyTableName = "";
				schema.Columns.Add(colvarProposal);
				
				TableSchema.TableColumn colvarVungKs = new TableSchema.TableColumn(schema);
				colvarVungKs.ColumnName = "Vung_KS";
				colvarVungKs.DataType = DbType.String;
				colvarVungKs.MaxLength = 500;
				colvarVungKs.AutoIncrement = false;
				colvarVungKs.IsNullable = true;
				colvarVungKs.IsPrimaryKey = false;
				colvarVungKs.IsForeignKey = false;
				colvarVungKs.IsReadOnly = false;
				colvarVungKs.DefaultSetting = @"";
				colvarVungKs.ForeignKeyTableName = "";
				schema.Columns.Add(colvarVungKs);
				
				TableSchema.TableColumn colvarBsThucHien = new TableSchema.TableColumn(schema);
				colvarBsThucHien.ColumnName = "BS_ThucHien";
				colvarBsThucHien.DataType = DbType.String;
				colvarBsThucHien.MaxLength = 50;
				colvarBsThucHien.AutoIncrement = false;
				colvarBsThucHien.IsNullable = true;
				colvarBsThucHien.IsPrimaryKey = false;
				colvarBsThucHien.IsForeignKey = false;
				colvarBsThucHien.IsReadOnly = false;
				colvarBsThucHien.DefaultSetting = @"";
				colvarBsThucHien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBsThucHien);
				
				TableSchema.TableColumn colvarNgayThucHien = new TableSchema.TableColumn(schema);
				colvarNgayThucHien.ColumnName = "Ngay_ThucHien";
				colvarNgayThucHien.DataType = DbType.DateTime;
				colvarNgayThucHien.MaxLength = 0;
				colvarNgayThucHien.AutoIncrement = false;
				colvarNgayThucHien.IsNullable = true;
				colvarNgayThucHien.IsPrimaryKey = false;
				colvarNgayThucHien.IsForeignKey = false;
				colvarNgayThucHien.IsReadOnly = false;
				colvarNgayThucHien.DefaultSetting = @"";
				colvarNgayThucHien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayThucHien);
				
				TableSchema.TableColumn colvarAssignDetailCode = new TableSchema.TableColumn(schema);
				colvarAssignDetailCode.ColumnName = "AssignDetailCode";
				colvarAssignDetailCode.DataType = DbType.String;
				colvarAssignDetailCode.MaxLength = 50;
				colvarAssignDetailCode.AutoIncrement = false;
				colvarAssignDetailCode.IsNullable = true;
				colvarAssignDetailCode.IsPrimaryKey = false;
				colvarAssignDetailCode.IsForeignKey = false;
				colvarAssignDetailCode.IsReadOnly = false;
				colvarAssignDetailCode.DefaultSetting = @"";
				colvarAssignDetailCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAssignDetailCode);
				
				TableSchema.TableColumn colvarGiaBhct = new TableSchema.TableColumn(schema);
				colvarGiaBhct.ColumnName = "Gia_BHCT";
				colvarGiaBhct.DataType = DbType.Decimal;
				colvarGiaBhct.MaxLength = 0;
				colvarGiaBhct.AutoIncrement = false;
				colvarGiaBhct.IsNullable = true;
				colvarGiaBhct.IsPrimaryKey = false;
				colvarGiaBhct.IsForeignKey = false;
				colvarGiaBhct.IsReadOnly = false;
				colvarGiaBhct.DefaultSetting = @"";
				colvarGiaBhct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaBhct);
				
				TableSchema.TableColumn colvarGiaBnct = new TableSchema.TableColumn(schema);
				colvarGiaBnct.ColumnName = "Gia_BNCT";
				colvarGiaBnct.DataType = DbType.Decimal;
				colvarGiaBnct.MaxLength = 0;
				colvarGiaBnct.AutoIncrement = false;
				colvarGiaBnct.IsNullable = true;
				colvarGiaBnct.IsPrimaryKey = false;
				colvarGiaBnct.IsForeignKey = false;
				colvarGiaBnct.IsReadOnly = false;
				colvarGiaBnct.DefaultSetting = @"";
				colvarGiaBnct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaBnct);
				
				TableSchema.TableColumn colvarPTramBhyt = new TableSchema.TableColumn(schema);
				colvarPTramBhyt.ColumnName = "PTram_BHYT";
				colvarPTramBhyt.DataType = DbType.Int32;
				colvarPTramBhyt.MaxLength = 0;
				colvarPTramBhyt.AutoIncrement = false;
				colvarPTramBhyt.IsNullable = true;
				colvarPTramBhyt.IsPrimaryKey = false;
				colvarPTramBhyt.IsForeignKey = false;
				colvarPTramBhyt.IsReadOnly = false;
				colvarPTramBhyt.DefaultSetting = @"";
				colvarPTramBhyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPTramBhyt);
				
				TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
				colvarPaymentId.ColumnName = "Payment_ID";
				colvarPaymentId.DataType = DbType.Int32;
				colvarPaymentId.MaxLength = 0;
				colvarPaymentId.AutoIncrement = false;
				colvarPaymentId.IsNullable = true;
				colvarPaymentId.IsPrimaryKey = false;
				colvarPaymentId.IsForeignKey = false;
				colvarPaymentId.IsReadOnly = false;
				colvarPaymentId.DefaultSetting = @"";
				colvarPaymentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentId);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("KYDONG_T_Assign_Detail",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("AssignDetailId")]
		[Bindable(true)]
		public long AssignDetailId 
		{
			get { return GetColumnValue<long>(Columns.AssignDetailId); }
			set { SetColumnValue(Columns.AssignDetailId, value); }
		}
		  
		[XmlAttribute("ExamId")]
		[Bindable(true)]
		public long? ExamId 
		{
			get { return GetColumnValue<long?>(Columns.ExamId); }
			set { SetColumnValue(Columns.ExamId, value); }
		}
		  
		[XmlAttribute("AssignId")]
		[Bindable(true)]
		public long AssignId 
		{
			get { return GetColumnValue<long>(Columns.AssignId); }
			set { SetColumnValue(Columns.AssignId, value); }
		}
		  
		[XmlAttribute("ServiceId")]
		[Bindable(true)]
		public short? ServiceId 
		{
			get { return GetColumnValue<short?>(Columns.ServiceId); }
			set { SetColumnValue(Columns.ServiceId, value); }
		}
		  
		[XmlAttribute("ServiceDetailId")]
		[Bindable(true)]
		public int ServiceDetailId 
		{
			get { return GetColumnValue<int>(Columns.ServiceDetailId); }
			set { SetColumnValue(Columns.ServiceDetailId, value); }
		}
		  
		[XmlAttribute("MeasureUnit")]
		[Bindable(true)]
		public string MeasureUnit 
		{
			get { return GetColumnValue<string>(Columns.MeasureUnit); }
			set { SetColumnValue(Columns.MeasureUnit, value); }
		}
		  
		[XmlAttribute("MeasureType")]
		[Bindable(true)]
		public byte? MeasureType 
		{
			get { return GetColumnValue<byte?>(Columns.MeasureType); }
			set { SetColumnValue(Columns.MeasureType, value); }
		}
		  
		[XmlAttribute("NormalLevel0")]
		[Bindable(true)]
		public string NormalLevel0 
		{
			get { return GetColumnValue<string>(Columns.NormalLevel0); }
			set { SetColumnValue(Columns.NormalLevel0, value); }
		}
		  
		[XmlAttribute("NormalLevel1")]
		[Bindable(true)]
		public string NormalLevel1 
		{
			get { return GetColumnValue<string>(Columns.NormalLevel1); }
			set { SetColumnValue(Columns.NormalLevel1, value); }
		}
		  
		[XmlAttribute("DiagPerson")]
		[Bindable(true)]
		public short? DiagPerson 
		{
			get { return GetColumnValue<short?>(Columns.DiagPerson); }
			set { SetColumnValue(Columns.DiagPerson, value); }
		}
		  
		[XmlAttribute("DiscountRate")]
		[Bindable(true)]
		public decimal? DiscountRate 
		{
			get { return GetColumnValue<decimal?>(Columns.DiscountRate); }
			set { SetColumnValue(Columns.DiscountRate, value); }
		}
		  
		[XmlAttribute("DiscountType")]
		[Bindable(true)]
		public byte? DiscountType 
		{
			get { return GetColumnValue<byte?>(Columns.DiscountType); }
			set { SetColumnValue(Columns.DiscountType, value); }
		}
		  
		[XmlAttribute("OriginPrice")]
		[Bindable(true)]
		public decimal OriginPrice 
		{
			get { return GetColumnValue<decimal>(Columns.OriginPrice); }
			set { SetColumnValue(Columns.OriginPrice, value); }
		}
		  
		[XmlAttribute("DiscountPrice")]
		[Bindable(true)]
		public decimal? DiscountPrice 
		{
			get { return GetColumnValue<decimal?>(Columns.DiscountPrice); }
			set { SetColumnValue(Columns.DiscountPrice, value); }
		}
		  
		[XmlAttribute("SurchargePrice")]
		[Bindable(true)]
		public decimal? SurchargePrice 
		{
			get { return GetColumnValue<decimal?>(Columns.SurchargePrice); }
			set { SetColumnValue(Columns.SurchargePrice, value); }
		}
		  
		[XmlAttribute("UserId")]
		[Bindable(true)]
		public string UserId 
		{
			get { return GetColumnValue<string>(Columns.UserId); }
			set { SetColumnValue(Columns.UserId, value); }
		}
		  
		[XmlAttribute("AssignTypeId")]
		[Bindable(true)]
		public byte? AssignTypeId 
		{
			get { return GetColumnValue<byte?>(Columns.AssignTypeId); }
			set { SetColumnValue(Columns.AssignTypeId, value); }
		}
		  
		[XmlAttribute("InputDate")]
		[Bindable(true)]
		public DateTime? InputDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.InputDate); }
			set { SetColumnValue(Columns.InputDate, value); }
		}
		  
		[XmlAttribute("ModifyDate")]
		[Bindable(true)]
		public DateTime? ModifyDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.ModifyDate); }
			set { SetColumnValue(Columns.ModifyDate, value); }
		}
		  
		[XmlAttribute("ModifyBy")]
		[Bindable(true)]
		public string ModifyBy 
		{
			get { return GetColumnValue<string>(Columns.ModifyBy); }
			set { SetColumnValue(Columns.ModifyBy, value); }
		}
		  
		[XmlAttribute("PaymentStatus")]
		[Bindable(true)]
		public byte? PaymentStatus 
		{
			get { return GetColumnValue<byte?>(Columns.PaymentStatus); }
			set { SetColumnValue(Columns.PaymentStatus, value); }
		}
		  
		[XmlAttribute("PaymentDate")]
		[Bindable(true)]
		public DateTime? PaymentDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.PaymentDate); }
			set { SetColumnValue(Columns.PaymentDate, value); }
		}
		  
		[XmlAttribute("IsCancel")]
		[Bindable(true)]
		public int? IsCancel 
		{
			get { return GetColumnValue<int?>(Columns.IsCancel); }
			set { SetColumnValue(Columns.IsCancel, value); }
		}
		  
		[XmlAttribute("IsPayment")]
		[Bindable(true)]
		public int? IsPayment 
		{
			get { return GetColumnValue<int?>(Columns.IsPayment); }
			set { SetColumnValue(Columns.IsPayment, value); }
		}
		  
		[XmlAttribute("ObjectTypeId")]
		[Bindable(true)]
		public int? ObjectTypeId 
		{
			get { return GetColumnValue<int?>(Columns.ObjectTypeId); }
			set { SetColumnValue(Columns.ObjectTypeId, value); }
		}
		  
		[XmlAttribute("Quantity")]
		[Bindable(true)]
		public int? Quantity 
		{
			get { return GetColumnValue<int?>(Columns.Quantity); }
			set { SetColumnValue(Columns.Quantity, value); }
		}
		  
		[XmlAttribute("Summary")]
		[Bindable(true)]
		public string Summary 
		{
			get { return GetColumnValue<string>(Columns.Summary); }
			set { SetColumnValue(Columns.Summary, value); }
		}
		  
		[XmlAttribute("AssignDetailStatus")]
		[Bindable(true)]
		public int? AssignDetailStatus 
		{
			get { return GetColumnValue<int?>(Columns.AssignDetailStatus); }
			set { SetColumnValue(Columns.AssignDetailStatus, value); }
		}
		  
		[XmlAttribute("SDesc")]
		[Bindable(true)]
		public string SDesc 
		{
			get { return GetColumnValue<string>(Columns.SDesc); }
			set { SetColumnValue(Columns.SDesc, value); }
		}
		  
		[XmlAttribute("SPathImage1")]
		[Bindable(true)]
		public string SPathImage1 
		{
			get { return GetColumnValue<string>(Columns.SPathImage1); }
			set { SetColumnValue(Columns.SPathImage1, value); }
		}
		  
		[XmlAttribute("SPathImage2")]
		[Bindable(true)]
		public string SPathImage2 
		{
			get { return GetColumnValue<string>(Columns.SPathImage2); }
			set { SetColumnValue(Columns.SPathImage2, value); }
		}
		  
		[XmlAttribute("BhytStatus")]
		[Bindable(true)]
		public int? BhytStatus 
		{
			get { return GetColumnValue<int?>(Columns.BhytStatus); }
			set { SetColumnValue(Columns.BhytStatus, value); }
		}
		  
		[XmlAttribute("Proposal")]
		[Bindable(true)]
		public string Proposal 
		{
			get { return GetColumnValue<string>(Columns.Proposal); }
			set { SetColumnValue(Columns.Proposal, value); }
		}
		  
		[XmlAttribute("VungKs")]
		[Bindable(true)]
		public string VungKs 
		{
			get { return GetColumnValue<string>(Columns.VungKs); }
			set { SetColumnValue(Columns.VungKs, value); }
		}
		  
		[XmlAttribute("BsThucHien")]
		[Bindable(true)]
		public string BsThucHien 
		{
			get { return GetColumnValue<string>(Columns.BsThucHien); }
			set { SetColumnValue(Columns.BsThucHien, value); }
		}
		  
		[XmlAttribute("NgayThucHien")]
		[Bindable(true)]
		public DateTime? NgayThucHien 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayThucHien); }
			set { SetColumnValue(Columns.NgayThucHien, value); }
		}
		  
		[XmlAttribute("AssignDetailCode")]
		[Bindable(true)]
		public string AssignDetailCode 
		{
			get { return GetColumnValue<string>(Columns.AssignDetailCode); }
			set { SetColumnValue(Columns.AssignDetailCode, value); }
		}
		  
		[XmlAttribute("GiaBhct")]
		[Bindable(true)]
		public decimal? GiaBhct 
		{
			get { return GetColumnValue<decimal?>(Columns.GiaBhct); }
			set { SetColumnValue(Columns.GiaBhct, value); }
		}
		  
		[XmlAttribute("GiaBnct")]
		[Bindable(true)]
		public decimal? GiaBnct 
		{
			get { return GetColumnValue<decimal?>(Columns.GiaBnct); }
			set { SetColumnValue(Columns.GiaBnct, value); }
		}
		  
		[XmlAttribute("PTramBhyt")]
		[Bindable(true)]
		public int? PTramBhyt 
		{
			get { return GetColumnValue<int?>(Columns.PTramBhyt); }
			set { SetColumnValue(Columns.PTramBhyt, value); }
		}
		  
		[XmlAttribute("PaymentId")]
		[Bindable(true)]
		public int? PaymentId 
		{
			get { return GetColumnValue<int?>(Columns.PaymentId); }
			set { SetColumnValue(Columns.PaymentId, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long? varExamId,long varAssignId,short? varServiceId,int varServiceDetailId,string varMeasureUnit,byte? varMeasureType,string varNormalLevel0,string varNormalLevel1,short? varDiagPerson,decimal? varDiscountRate,byte? varDiscountType,decimal varOriginPrice,decimal? varDiscountPrice,decimal? varSurchargePrice,string varUserId,byte? varAssignTypeId,DateTime? varInputDate,DateTime? varModifyDate,string varModifyBy,byte? varPaymentStatus,DateTime? varPaymentDate,int? varIsCancel,int? varIsPayment,int? varObjectTypeId,int? varQuantity,string varSummary,int? varAssignDetailStatus,string varSDesc,string varSPathImage1,string varSPathImage2,int? varBhytStatus,string varProposal,string varVungKs,string varBsThucHien,DateTime? varNgayThucHien,string varAssignDetailCode,decimal? varGiaBhct,decimal? varGiaBnct,int? varPTramBhyt,int? varPaymentId)
		{
			KydongTAssignDetail item = new KydongTAssignDetail();
			
			item.ExamId = varExamId;
			
			item.AssignId = varAssignId;
			
			item.ServiceId = varServiceId;
			
			item.ServiceDetailId = varServiceDetailId;
			
			item.MeasureUnit = varMeasureUnit;
			
			item.MeasureType = varMeasureType;
			
			item.NormalLevel0 = varNormalLevel0;
			
			item.NormalLevel1 = varNormalLevel1;
			
			item.DiagPerson = varDiagPerson;
			
			item.DiscountRate = varDiscountRate;
			
			item.DiscountType = varDiscountType;
			
			item.OriginPrice = varOriginPrice;
			
			item.DiscountPrice = varDiscountPrice;
			
			item.SurchargePrice = varSurchargePrice;
			
			item.UserId = varUserId;
			
			item.AssignTypeId = varAssignTypeId;
			
			item.InputDate = varInputDate;
			
			item.ModifyDate = varModifyDate;
			
			item.ModifyBy = varModifyBy;
			
			item.PaymentStatus = varPaymentStatus;
			
			item.PaymentDate = varPaymentDate;
			
			item.IsCancel = varIsCancel;
			
			item.IsPayment = varIsPayment;
			
			item.ObjectTypeId = varObjectTypeId;
			
			item.Quantity = varQuantity;
			
			item.Summary = varSummary;
			
			item.AssignDetailStatus = varAssignDetailStatus;
			
			item.SDesc = varSDesc;
			
			item.SPathImage1 = varSPathImage1;
			
			item.SPathImage2 = varSPathImage2;
			
			item.BhytStatus = varBhytStatus;
			
			item.Proposal = varProposal;
			
			item.VungKs = varVungKs;
			
			item.BsThucHien = varBsThucHien;
			
			item.NgayThucHien = varNgayThucHien;
			
			item.AssignDetailCode = varAssignDetailCode;
			
			item.GiaBhct = varGiaBhct;
			
			item.GiaBnct = varGiaBnct;
			
			item.PTramBhyt = varPTramBhyt;
			
			item.PaymentId = varPaymentId;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varAssignDetailId,long? varExamId,long varAssignId,short? varServiceId,int varServiceDetailId,string varMeasureUnit,byte? varMeasureType,string varNormalLevel0,string varNormalLevel1,short? varDiagPerson,decimal? varDiscountRate,byte? varDiscountType,decimal varOriginPrice,decimal? varDiscountPrice,decimal? varSurchargePrice,string varUserId,byte? varAssignTypeId,DateTime? varInputDate,DateTime? varModifyDate,string varModifyBy,byte? varPaymentStatus,DateTime? varPaymentDate,int? varIsCancel,int? varIsPayment,int? varObjectTypeId,int? varQuantity,string varSummary,int? varAssignDetailStatus,string varSDesc,string varSPathImage1,string varSPathImage2,int? varBhytStatus,string varProposal,string varVungKs,string varBsThucHien,DateTime? varNgayThucHien,string varAssignDetailCode,decimal? varGiaBhct,decimal? varGiaBnct,int? varPTramBhyt,int? varPaymentId)
		{
			KydongTAssignDetail item = new KydongTAssignDetail();
			
				item.AssignDetailId = varAssignDetailId;
			
				item.ExamId = varExamId;
			
				item.AssignId = varAssignId;
			
				item.ServiceId = varServiceId;
			
				item.ServiceDetailId = varServiceDetailId;
			
				item.MeasureUnit = varMeasureUnit;
			
				item.MeasureType = varMeasureType;
			
				item.NormalLevel0 = varNormalLevel0;
			
				item.NormalLevel1 = varNormalLevel1;
			
				item.DiagPerson = varDiagPerson;
			
				item.DiscountRate = varDiscountRate;
			
				item.DiscountType = varDiscountType;
			
				item.OriginPrice = varOriginPrice;
			
				item.DiscountPrice = varDiscountPrice;
			
				item.SurchargePrice = varSurchargePrice;
			
				item.UserId = varUserId;
			
				item.AssignTypeId = varAssignTypeId;
			
				item.InputDate = varInputDate;
			
				item.ModifyDate = varModifyDate;
			
				item.ModifyBy = varModifyBy;
			
				item.PaymentStatus = varPaymentStatus;
			
				item.PaymentDate = varPaymentDate;
			
				item.IsCancel = varIsCancel;
			
				item.IsPayment = varIsPayment;
			
				item.ObjectTypeId = varObjectTypeId;
			
				item.Quantity = varQuantity;
			
				item.Summary = varSummary;
			
				item.AssignDetailStatus = varAssignDetailStatus;
			
				item.SDesc = varSDesc;
			
				item.SPathImage1 = varSPathImage1;
			
				item.SPathImage2 = varSPathImage2;
			
				item.BhytStatus = varBhytStatus;
			
				item.Proposal = varProposal;
			
				item.VungKs = varVungKs;
			
				item.BsThucHien = varBsThucHien;
			
				item.NgayThucHien = varNgayThucHien;
			
				item.AssignDetailCode = varAssignDetailCode;
			
				item.GiaBhct = varGiaBhct;
			
				item.GiaBnct = varGiaBnct;
			
				item.PTramBhyt = varPTramBhyt;
			
				item.PaymentId = varPaymentId;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn AssignDetailIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn ExamIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn AssignIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceIdColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceDetailIdColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn MeasureUnitColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn MeasureTypeColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NormalLevel0Column
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NormalLevel1Column
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn DiagPersonColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountRateColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountTypeColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn OriginPriceColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountPriceColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn SurchargePriceColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn UserIdColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn AssignTypeIdColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn InputDateColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifyDateColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifyByColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentStatusColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentDateColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn IsCancelColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn IsPaymentColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn ObjectTypeIdColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn QuantityColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn SummaryColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn AssignDetailStatusColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn SDescColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn SPathImage1Column
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn SPathImage2Column
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn BhytStatusColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn ProposalColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn VungKsColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn BsThucHienColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayThucHienColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn AssignDetailCodeColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaBhctColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaBnctColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn PTramBhytColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentIdColumn
        {
            get { return Schema.Columns[40]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string AssignDetailId = @"AssignDetail_ID";
			 public static string ExamId = @"Exam_ID";
			 public static string AssignId = @"Assign_ID";
			 public static string ServiceId = @"Service_ID";
			 public static string ServiceDetailId = @"ServiceDetail_ID";
			 public static string MeasureUnit = @"Measure_Unit";
			 public static string MeasureType = @"Measure_Type";
			 public static string NormalLevel0 = @"Normal_Level_0";
			 public static string NormalLevel1 = @"Normal_Level_1";
			 public static string DiagPerson = @"Diag_Person";
			 public static string DiscountRate = @"Discount_Rate";
			 public static string DiscountType = @"Discount_Type";
			 public static string OriginPrice = @"Origin_Price";
			 public static string DiscountPrice = @"Discount_Price";
			 public static string SurchargePrice = @"Surcharge_Price";
			 public static string UserId = @"User_ID";
			 public static string AssignTypeId = @"Assign_Type_ID";
			 public static string InputDate = @"Input_Date";
			 public static string ModifyDate = @"Modify_Date";
			 public static string ModifyBy = @"Modify_By";
			 public static string PaymentStatus = @"Payment_Status";
			 public static string PaymentDate = @"Payment_Date";
			 public static string IsCancel = @"IsCancel";
			 public static string IsPayment = @"IsPayment";
			 public static string ObjectTypeId = @"ObjectType_ID";
			 public static string Quantity = @"Quantity";
			 public static string Summary = @"Summary";
			 public static string AssignDetailStatus = @"AssignDetail_Status";
			 public static string SDesc = @"sDesc";
			 public static string SPathImage1 = @"sPathImage1";
			 public static string SPathImage2 = @"sPathImage2";
			 public static string BhytStatus = @"BHYT_Status";
			 public static string Proposal = @"Proposal";
			 public static string VungKs = @"Vung_KS";
			 public static string BsThucHien = @"BS_ThucHien";
			 public static string NgayThucHien = @"Ngay_ThucHien";
			 public static string AssignDetailCode = @"AssignDetailCode";
			 public static string GiaBhct = @"Gia_BHCT";
			 public static string GiaBnct = @"Gia_BNCT";
			 public static string PTramBhyt = @"PTram_BHYT";
			 public static string PaymentId = @"Payment_ID";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
