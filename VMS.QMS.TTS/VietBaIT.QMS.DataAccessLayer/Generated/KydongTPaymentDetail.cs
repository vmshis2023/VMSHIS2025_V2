using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the KydongTPaymentDetail class.
	/// </summary>
    [Serializable]
	public partial class KydongTPaymentDetailCollection : ActiveList<KydongTPaymentDetail, KydongTPaymentDetailCollection>
	{	   
		public KydongTPaymentDetailCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KydongTPaymentDetailCollection</returns>
		public KydongTPaymentDetailCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KydongTPaymentDetail o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the KYDONG_T_Payment_Detail table.
	/// </summary>
	[Serializable]
	public partial class KydongTPaymentDetail : ActiveRecord<KydongTPaymentDetail>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KydongTPaymentDetail()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KydongTPaymentDetail(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KydongTPaymentDetail(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KydongTPaymentDetail(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("KYDONG_T_Payment_Detail", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarPaymentDetailId = new TableSchema.TableColumn(schema);
				colvarPaymentDetailId.ColumnName = "PaymentDetail_ID";
				colvarPaymentDetailId.DataType = DbType.Int64;
				colvarPaymentDetailId.MaxLength = 0;
				colvarPaymentDetailId.AutoIncrement = true;
				colvarPaymentDetailId.IsNullable = false;
				colvarPaymentDetailId.IsPrimaryKey = true;
				colvarPaymentDetailId.IsForeignKey = false;
				colvarPaymentDetailId.IsReadOnly = false;
				colvarPaymentDetailId.DefaultSetting = @"";
				colvarPaymentDetailId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentDetailId);
				
				TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
				colvarPaymentId.ColumnName = "Payment_ID";
				colvarPaymentId.DataType = DbType.Int32;
				colvarPaymentId.MaxLength = 0;
				colvarPaymentId.AutoIncrement = false;
				colvarPaymentId.IsNullable = false;
				colvarPaymentId.IsPrimaryKey = false;
				colvarPaymentId.IsForeignKey = false;
				colvarPaymentId.IsReadOnly = false;
				colvarPaymentId.DefaultSetting = @"";
				colvarPaymentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentId);
				
				TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
				colvarQuantity.ColumnName = "Quantity";
				colvarQuantity.DataType = DbType.Int32;
				colvarQuantity.MaxLength = 0;
				colvarQuantity.AutoIncrement = false;
				colvarQuantity.IsNullable = true;
				colvarQuantity.IsPrimaryKey = false;
				colvarQuantity.IsForeignKey = false;
				colvarQuantity.IsReadOnly = false;
				colvarQuantity.DefaultSetting = @"";
				colvarQuantity.ForeignKeyTableName = "";
				schema.Columns.Add(colvarQuantity);
				
				TableSchema.TableColumn colvarOriginPrice = new TableSchema.TableColumn(schema);
				colvarOriginPrice.ColumnName = "Origin_Price";
				colvarOriginPrice.DataType = DbType.Decimal;
				colvarOriginPrice.MaxLength = 0;
				colvarOriginPrice.AutoIncrement = false;
				colvarOriginPrice.IsNullable = true;
				colvarOriginPrice.IsPrimaryKey = false;
				colvarOriginPrice.IsForeignKey = false;
				colvarOriginPrice.IsReadOnly = false;
				colvarOriginPrice.DefaultSetting = @"";
				colvarOriginPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOriginPrice);
				
				TableSchema.TableColumn colvarDiscountRate = new TableSchema.TableColumn(schema);
				colvarDiscountRate.ColumnName = "Discount_Rate";
				colvarDiscountRate.DataType = DbType.Decimal;
				colvarDiscountRate.MaxLength = 0;
				colvarDiscountRate.AutoIncrement = false;
				colvarDiscountRate.IsNullable = true;
				colvarDiscountRate.IsPrimaryKey = false;
				colvarDiscountRate.IsForeignKey = false;
				colvarDiscountRate.IsReadOnly = false;
				colvarDiscountRate.DefaultSetting = @"";
				colvarDiscountRate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountRate);
				
				TableSchema.TableColumn colvarDiscountPrice = new TableSchema.TableColumn(schema);
				colvarDiscountPrice.ColumnName = "Discount_Price";
				colvarDiscountPrice.DataType = DbType.Decimal;
				colvarDiscountPrice.MaxLength = 0;
				colvarDiscountPrice.AutoIncrement = false;
				colvarDiscountPrice.IsNullable = true;
				colvarDiscountPrice.IsPrimaryKey = false;
				colvarDiscountPrice.IsForeignKey = false;
				colvarDiscountPrice.IsReadOnly = false;
				colvarDiscountPrice.DefaultSetting = @"";
				colvarDiscountPrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiscountPrice);
				
				TableSchema.TableColumn colvarTienBnTra = new TableSchema.TableColumn(schema);
				colvarTienBnTra.ColumnName = "TIEN_BN_TRA";
				colvarTienBnTra.DataType = DbType.Decimal;
				colvarTienBnTra.MaxLength = 0;
				colvarTienBnTra.AutoIncrement = false;
				colvarTienBnTra.IsNullable = true;
				colvarTienBnTra.IsPrimaryKey = false;
				colvarTienBnTra.IsForeignKey = false;
				colvarTienBnTra.IsReadOnly = false;
				colvarTienBnTra.DefaultSetting = @"";
				colvarTienBnTra.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTienBnTra);
				
				TableSchema.TableColumn colvarSurchargePrice = new TableSchema.TableColumn(schema);
				colvarSurchargePrice.ColumnName = "Surcharge_Price";
				colvarSurchargePrice.DataType = DbType.Decimal;
				colvarSurchargePrice.MaxLength = 0;
				colvarSurchargePrice.AutoIncrement = false;
				colvarSurchargePrice.IsNullable = true;
				colvarSurchargePrice.IsPrimaryKey = false;
				colvarSurchargePrice.IsForeignKey = false;
				colvarSurchargePrice.IsReadOnly = false;
				colvarSurchargePrice.DefaultSetting = @"";
				colvarSurchargePrice.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSurchargePrice);
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "ID";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = false;
				colvarId.IsNullable = true;
				colvarId.IsPrimaryKey = false;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarIdDetail = new TableSchema.TableColumn(schema);
				colvarIdDetail.ColumnName = "ID_Detail";
				colvarIdDetail.DataType = DbType.Int32;
				colvarIdDetail.MaxLength = 0;
				colvarIdDetail.AutoIncrement = false;
				colvarIdDetail.IsNullable = true;
				colvarIdDetail.IsPrimaryKey = false;
				colvarIdDetail.IsForeignKey = false;
				colvarIdDetail.IsReadOnly = false;
				colvarIdDetail.DefaultSetting = @"";
				colvarIdDetail.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDetail);
				
				TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
				colvarServiceId.ColumnName = "Service_ID";
				colvarServiceId.DataType = DbType.Int32;
				colvarServiceId.MaxLength = 0;
				colvarServiceId.AutoIncrement = false;
				colvarServiceId.IsNullable = true;
				colvarServiceId.IsPrimaryKey = false;
				colvarServiceId.IsForeignKey = false;
				colvarServiceId.IsReadOnly = false;
				colvarServiceId.DefaultSetting = @"";
				colvarServiceId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceId);
				
				TableSchema.TableColumn colvarServiceDetailId = new TableSchema.TableColumn(schema);
				colvarServiceDetailId.ColumnName = "ServiceDetail_ID";
				colvarServiceDetailId.DataType = DbType.Int32;
				colvarServiceDetailId.MaxLength = 0;
				colvarServiceDetailId.AutoIncrement = false;
				colvarServiceDetailId.IsNullable = true;
				colvarServiceDetailId.IsPrimaryKey = false;
				colvarServiceDetailId.IsForeignKey = false;
				colvarServiceDetailId.IsReadOnly = false;
				colvarServiceDetailId.DefaultSetting = @"";
				colvarServiceDetailId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceDetailId);
				
				TableSchema.TableColumn colvarServiceDetailName = new TableSchema.TableColumn(schema);
				colvarServiceDetailName.ColumnName = "ServiceDetail_Name";
				colvarServiceDetailName.DataType = DbType.String;
				colvarServiceDetailName.MaxLength = 1000;
				colvarServiceDetailName.AutoIncrement = false;
				colvarServiceDetailName.IsNullable = true;
				colvarServiceDetailName.IsPrimaryKey = false;
				colvarServiceDetailName.IsForeignKey = false;
				colvarServiceDetailName.IsReadOnly = false;
				colvarServiceDetailName.DefaultSetting = @"";
				colvarServiceDetailName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServiceDetailName);
				
				TableSchema.TableColumn colvarPaymentTypeId = new TableSchema.TableColumn(schema);
				colvarPaymentTypeId.ColumnName = "PaymentType_ID";
				colvarPaymentTypeId.DataType = DbType.Byte;
				colvarPaymentTypeId.MaxLength = 0;
				colvarPaymentTypeId.AutoIncrement = false;
				colvarPaymentTypeId.IsNullable = true;
				colvarPaymentTypeId.IsPrimaryKey = false;
				colvarPaymentTypeId.IsForeignKey = false;
				colvarPaymentTypeId.IsReadOnly = false;
				colvarPaymentTypeId.DefaultSetting = @"";
				colvarPaymentTypeId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentTypeId);
				
				TableSchema.TableColumn colvarIsCancel = new TableSchema.TableColumn(schema);
				colvarIsCancel.ColumnName = "IsCancel";
				colvarIsCancel.DataType = DbType.Int32;
				colvarIsCancel.MaxLength = 0;
				colvarIsCancel.AutoIncrement = false;
				colvarIsCancel.IsNullable = true;
				colvarIsCancel.IsPrimaryKey = false;
				colvarIsCancel.IsForeignKey = false;
				colvarIsCancel.IsReadOnly = false;
				colvarIsCancel.DefaultSetting = @"";
				colvarIsCancel.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsCancel);
				
				TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
				colvarIsPayment.ColumnName = "IsPayment";
				colvarIsPayment.DataType = DbType.Int32;
				colvarIsPayment.MaxLength = 0;
				colvarIsPayment.AutoIncrement = false;
				colvarIsPayment.IsNullable = true;
				colvarIsPayment.IsPrimaryKey = false;
				colvarIsPayment.IsForeignKey = false;
				colvarIsPayment.IsReadOnly = false;
				colvarIsPayment.DefaultSetting = @"";
				colvarIsPayment.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsPayment);
				
				TableSchema.TableColumn colvarCancelBy = new TableSchema.TableColumn(schema);
				colvarCancelBy.ColumnName = "Cancel_By";
				colvarCancelBy.DataType = DbType.String;
				colvarCancelBy.MaxLength = 50;
				colvarCancelBy.AutoIncrement = false;
				colvarCancelBy.IsNullable = true;
				colvarCancelBy.IsPrimaryKey = false;
				colvarCancelBy.IsForeignKey = false;
				colvarCancelBy.IsReadOnly = false;
				colvarCancelBy.DefaultSetting = @"";
				colvarCancelBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCancelBy);
				
				TableSchema.TableColumn colvarCancelDate = new TableSchema.TableColumn(schema);
				colvarCancelDate.ColumnName = "Cancel_Date";
				colvarCancelDate.DataType = DbType.DateTime;
				colvarCancelDate.MaxLength = 0;
				colvarCancelDate.AutoIncrement = false;
				colvarCancelDate.IsNullable = true;
				colvarCancelDate.IsPrimaryKey = false;
				colvarCancelDate.IsForeignKey = false;
				colvarCancelDate.IsReadOnly = false;
				colvarCancelDate.DefaultSetting = @"";
				colvarCancelDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCancelDate);
				
				TableSchema.TableColumn colvarPaymentDetailType = new TableSchema.TableColumn(schema);
				colvarPaymentDetailType.ColumnName = "Payment_Detail_Type";
				colvarPaymentDetailType.DataType = DbType.Int32;
				colvarPaymentDetailType.MaxLength = 0;
				colvarPaymentDetailType.AutoIncrement = false;
				colvarPaymentDetailType.IsNullable = true;
				colvarPaymentDetailType.IsPrimaryKey = false;
				colvarPaymentDetailType.IsForeignKey = false;
				colvarPaymentDetailType.IsReadOnly = false;
				colvarPaymentDetailType.DefaultSetting = @"";
				colvarPaymentDetailType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentDetailType);
				
				TableSchema.TableColumn colvarMaDv = new TableSchema.TableColumn(schema);
				colvarMaDv.ColumnName = "Ma_DV";
				colvarMaDv.DataType = DbType.String;
				colvarMaDv.MaxLength = 50;
				colvarMaDv.AutoIncrement = false;
				colvarMaDv.IsNullable = true;
				colvarMaDv.IsPrimaryKey = false;
				colvarMaDv.IsForeignKey = false;
				colvarMaDv.IsReadOnly = false;
				colvarMaDv.DefaultSetting = @"";
				colvarMaDv.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDv);
				
				TableSchema.TableColumn colvarDonViTinh = new TableSchema.TableColumn(schema);
				colvarDonViTinh.ColumnName = "DonVi_Tinh";
				colvarDonViTinh.DataType = DbType.String;
				colvarDonViTinh.MaxLength = 50;
				colvarDonViTinh.AutoIncrement = false;
				colvarDonViTinh.IsNullable = true;
				colvarDonViTinh.IsPrimaryKey = false;
				colvarDonViTinh.IsForeignKey = false;
				colvarDonViTinh.IsReadOnly = false;
				colvarDonViTinh.DefaultSetting = @"";
				colvarDonViTinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonViTinh);
				
				TableSchema.TableColumn colvarPTramBh = new TableSchema.TableColumn(schema);
				colvarPTramBh.ColumnName = "PTram_BH";
				colvarPTramBh.DataType = DbType.Decimal;
				colvarPTramBh.MaxLength = 0;
				colvarPTramBh.AutoIncrement = false;
				colvarPTramBh.IsNullable = true;
				colvarPTramBh.IsPrimaryKey = false;
				colvarPTramBh.IsForeignKey = false;
				colvarPTramBh.IsReadOnly = false;
				colvarPTramBh.DefaultSetting = @"";
				colvarPTramBh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPTramBh);
				
				TableSchema.TableColumn colvarMaKieuTtoan = new TableSchema.TableColumn(schema);
				colvarMaKieuTtoan.ColumnName = "MA_KIEU_TTOAN";
				colvarMaKieuTtoan.DataType = DbType.String;
				colvarMaKieuTtoan.MaxLength = 50;
				colvarMaKieuTtoan.AutoIncrement = false;
				colvarMaKieuTtoan.IsNullable = true;
				colvarMaKieuTtoan.IsPrimaryKey = false;
				colvarMaKieuTtoan.IsForeignKey = false;
				colvarMaKieuTtoan.IsReadOnly = false;
				colvarMaKieuTtoan.DefaultSetting = @"";
				colvarMaKieuTtoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKieuTtoan);
				
				TableSchema.TableColumn colvarIdChiTietTToan = new TableSchema.TableColumn(schema);
				colvarIdChiTietTToan.ColumnName = "ID_ChiTiet_TToan";
				colvarIdChiTietTToan.DataType = DbType.Int32;
				colvarIdChiTietTToan.MaxLength = 0;
				colvarIdChiTietTToan.AutoIncrement = false;
				colvarIdChiTietTToan.IsNullable = true;
				colvarIdChiTietTToan.IsPrimaryKey = false;
				colvarIdChiTietTToan.IsForeignKey = false;
				colvarIdChiTietTToan.IsReadOnly = false;
				colvarIdChiTietTToan.DefaultSetting = @"";
				colvarIdChiTietTToan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdChiTietTToan);
				
				TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
				colvarDepartmentId.ColumnName = "Department_ID";
				colvarDepartmentId.DataType = DbType.Int32;
				colvarDepartmentId.MaxLength = 0;
				colvarDepartmentId.AutoIncrement = false;
				colvarDepartmentId.IsNullable = true;
				colvarDepartmentId.IsPrimaryKey = false;
				colvarDepartmentId.IsForeignKey = false;
				colvarDepartmentId.IsReadOnly = false;
				colvarDepartmentId.DefaultSetting = @"";
				colvarDepartmentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDepartmentId);
				
				TableSchema.TableColumn colvarDoctorAssignId = new TableSchema.TableColumn(schema);
				colvarDoctorAssignId.ColumnName = "DoctorAssign_ID";
				colvarDoctorAssignId.DataType = DbType.Int32;
				colvarDoctorAssignId.MaxLength = 0;
				colvarDoctorAssignId.AutoIncrement = false;
				colvarDoctorAssignId.IsNullable = true;
				colvarDoctorAssignId.IsPrimaryKey = false;
				colvarDoctorAssignId.IsForeignKey = false;
				colvarDoctorAssignId.IsReadOnly = false;
				colvarDoctorAssignId.DefaultSetting = @"";
				colvarDoctorAssignId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDoctorAssignId);
				
				TableSchema.TableColumn colvarIdGoiDvu = new TableSchema.TableColumn(schema);
				colvarIdGoiDvu.ColumnName = "ID_GOI_DVU";
				colvarIdGoiDvu.DataType = DbType.Int32;
				colvarIdGoiDvu.MaxLength = 0;
				colvarIdGoiDvu.AutoIncrement = false;
				colvarIdGoiDvu.IsNullable = true;
				colvarIdGoiDvu.IsPrimaryKey = false;
				colvarIdGoiDvu.IsForeignKey = false;
				colvarIdGoiDvu.IsReadOnly = false;
				colvarIdGoiDvu.DefaultSetting = @"";
				colvarIdGoiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGoiDvu);
				
				TableSchema.TableColumn colvarThuTuIn = new TableSchema.TableColumn(schema);
				colvarThuTuIn.ColumnName = "Thu_Tu_In";
				colvarThuTuIn.DataType = DbType.Int32;
				colvarThuTuIn.MaxLength = 0;
				colvarThuTuIn.AutoIncrement = false;
				colvarThuTuIn.IsNullable = true;
				colvarThuTuIn.IsPrimaryKey = false;
				colvarThuTuIn.IsForeignKey = false;
				colvarThuTuIn.IsReadOnly = false;
				colvarThuTuIn.DefaultSetting = @"";
				colvarThuTuIn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThuTuIn);
				
				TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
				colvarTrongGoi.ColumnName = "TRONG_GOI";
				colvarTrongGoi.DataType = DbType.Int32;
				colvarTrongGoi.MaxLength = 0;
				colvarTrongGoi.AutoIncrement = false;
				colvarTrongGoi.IsNullable = true;
				colvarTrongGoi.IsPrimaryKey = false;
				colvarTrongGoi.IsForeignKey = false;
				colvarTrongGoi.IsReadOnly = false;
				colvarTrongGoi.DefaultSetting = @"";
				colvarTrongGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrongGoi);
				
				TableSchema.TableColumn colvarTenHienThi = new TableSchema.TableColumn(schema);
				colvarTenHienThi.ColumnName = "TEN_HIEN_THI";
				colvarTenHienThi.DataType = DbType.String;
				colvarTenHienThi.MaxLength = 500;
				colvarTenHienThi.AutoIncrement = false;
				colvarTenHienThi.IsNullable = true;
				colvarTenHienThi.IsPrimaryKey = false;
				colvarTenHienThi.IsForeignKey = false;
				colvarTenHienThi.IsReadOnly = false;
				colvarTenHienThi.DefaultSetting = @"";
				colvarTenHienThi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenHienThi);
				
				TableSchema.TableColumn colvarNoiTru = new TableSchema.TableColumn(schema);
				colvarNoiTru.ColumnName = "NOI_TRU";
				colvarNoiTru.DataType = DbType.Byte;
				colvarNoiTru.MaxLength = 0;
				colvarNoiTru.AutoIncrement = false;
				colvarNoiTru.IsNullable = true;
				colvarNoiTru.IsPrimaryKey = false;
				colvarNoiTru.IsForeignKey = false;
				colvarNoiTru.IsReadOnly = false;
				
						colvarNoiTru.DefaultSetting = @"((0))";
				colvarNoiTru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoiTru);
				
				TableSchema.TableColumn colvarTtChuyen = new TableSchema.TableColumn(schema);
				colvarTtChuyen.ColumnName = "TT_CHUYEN";
				colvarTtChuyen.DataType = DbType.Byte;
				colvarTtChuyen.MaxLength = 0;
				colvarTtChuyen.AutoIncrement = false;
				colvarTtChuyen.IsNullable = true;
				colvarTtChuyen.IsPrimaryKey = false;
				colvarTtChuyen.IsForeignKey = false;
				colvarTtChuyen.IsReadOnly = false;
				colvarTtChuyen.DefaultSetting = @"";
				colvarTtChuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTtChuyen);
				
				TableSchema.TableColumn colvarBhytStatus = new TableSchema.TableColumn(schema);
				colvarBhytStatus.ColumnName = "BHYT_Status";
				colvarBhytStatus.DataType = DbType.Byte;
				colvarBhytStatus.MaxLength = 0;
				colvarBhytStatus.AutoIncrement = false;
				colvarBhytStatus.IsNullable = true;
				colvarBhytStatus.IsPrimaryKey = false;
				colvarBhytStatus.IsForeignKey = false;
				colvarBhytStatus.IsReadOnly = false;
				
						colvarBhytStatus.DefaultSetting = @"((0))";
				colvarBhytStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBhytStatus);
				
				TableSchema.TableColumn colvarIdNvienThien = new TableSchema.TableColumn(schema);
				colvarIdNvienThien.ColumnName = "ID_NVIEN_THIEN";
				colvarIdNvienThien.DataType = DbType.Int16;
				colvarIdNvienThien.MaxLength = 0;
				colvarIdNvienThien.AutoIncrement = false;
				colvarIdNvienThien.IsNullable = true;
				colvarIdNvienThien.IsPrimaryKey = false;
				colvarIdNvienThien.IsForeignKey = false;
				colvarIdNvienThien.IsReadOnly = false;
				colvarIdNvienThien.DefaultSetting = @"";
				colvarIdNvienThien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNvienThien);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("KYDONG_T_Payment_Detail",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("PaymentDetailId")]
		[Bindable(true)]
		public long PaymentDetailId 
		{
			get { return GetColumnValue<long>(Columns.PaymentDetailId); }
			set { SetColumnValue(Columns.PaymentDetailId, value); }
		}
		  
		[XmlAttribute("PaymentId")]
		[Bindable(true)]
		public int PaymentId 
		{
			get { return GetColumnValue<int>(Columns.PaymentId); }
			set { SetColumnValue(Columns.PaymentId, value); }
		}
		  
		[XmlAttribute("Quantity")]
		[Bindable(true)]
		public int? Quantity 
		{
			get { return GetColumnValue<int?>(Columns.Quantity); }
			set { SetColumnValue(Columns.Quantity, value); }
		}
		  
		[XmlAttribute("OriginPrice")]
		[Bindable(true)]
		public decimal? OriginPrice 
		{
			get { return GetColumnValue<decimal?>(Columns.OriginPrice); }
			set { SetColumnValue(Columns.OriginPrice, value); }
		}
		  
		[XmlAttribute("DiscountRate")]
		[Bindable(true)]
		public decimal? DiscountRate 
		{
			get { return GetColumnValue<decimal?>(Columns.DiscountRate); }
			set { SetColumnValue(Columns.DiscountRate, value); }
		}
		  
		[XmlAttribute("DiscountPrice")]
		[Bindable(true)]
		public decimal? DiscountPrice 
		{
			get { return GetColumnValue<decimal?>(Columns.DiscountPrice); }
			set { SetColumnValue(Columns.DiscountPrice, value); }
		}
		  
		[XmlAttribute("TienBnTra")]
		[Bindable(true)]
		public decimal? TienBnTra 
		{
			get { return GetColumnValue<decimal?>(Columns.TienBnTra); }
			set { SetColumnValue(Columns.TienBnTra, value); }
		}
		  
		[XmlAttribute("SurchargePrice")]
		[Bindable(true)]
		public decimal? SurchargePrice 
		{
			get { return GetColumnValue<decimal?>(Columns.SurchargePrice); }
			set { SetColumnValue(Columns.SurchargePrice, value); }
		}
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int? Id 
		{
			get { return GetColumnValue<int?>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("IdDetail")]
		[Bindable(true)]
		public int? IdDetail 
		{
			get { return GetColumnValue<int?>(Columns.IdDetail); }
			set { SetColumnValue(Columns.IdDetail, value); }
		}
		  
		[XmlAttribute("ServiceId")]
		[Bindable(true)]
		public int? ServiceId 
		{
			get { return GetColumnValue<int?>(Columns.ServiceId); }
			set { SetColumnValue(Columns.ServiceId, value); }
		}
		  
		[XmlAttribute("ServiceDetailId")]
		[Bindable(true)]
		public int? ServiceDetailId 
		{
			get { return GetColumnValue<int?>(Columns.ServiceDetailId); }
			set { SetColumnValue(Columns.ServiceDetailId, value); }
		}
		  
		[XmlAttribute("ServiceDetailName")]
		[Bindable(true)]
		public string ServiceDetailName 
		{
			get { return GetColumnValue<string>(Columns.ServiceDetailName); }
			set { SetColumnValue(Columns.ServiceDetailName, value); }
		}
		  
		[XmlAttribute("PaymentTypeId")]
		[Bindable(true)]
		public byte? PaymentTypeId 
		{
			get { return GetColumnValue<byte?>(Columns.PaymentTypeId); }
			set { SetColumnValue(Columns.PaymentTypeId, value); }
		}
		  
		[XmlAttribute("IsCancel")]
		[Bindable(true)]
		public int? IsCancel 
		{
			get { return GetColumnValue<int?>(Columns.IsCancel); }
			set { SetColumnValue(Columns.IsCancel, value); }
		}
		  
		[XmlAttribute("IsPayment")]
		[Bindable(true)]
		public int? IsPayment 
		{
			get { return GetColumnValue<int?>(Columns.IsPayment); }
			set { SetColumnValue(Columns.IsPayment, value); }
		}
		  
		[XmlAttribute("CancelBy")]
		[Bindable(true)]
		public string CancelBy 
		{
			get { return GetColumnValue<string>(Columns.CancelBy); }
			set { SetColumnValue(Columns.CancelBy, value); }
		}
		  
		[XmlAttribute("CancelDate")]
		[Bindable(true)]
		public DateTime? CancelDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.CancelDate); }
			set { SetColumnValue(Columns.CancelDate, value); }
		}
		  
		[XmlAttribute("PaymentDetailType")]
		[Bindable(true)]
		public int? PaymentDetailType 
		{
			get { return GetColumnValue<int?>(Columns.PaymentDetailType); }
			set { SetColumnValue(Columns.PaymentDetailType, value); }
		}
		  
		[XmlAttribute("MaDv")]
		[Bindable(true)]
		public string MaDv 
		{
			get { return GetColumnValue<string>(Columns.MaDv); }
			set { SetColumnValue(Columns.MaDv, value); }
		}
		  
		[XmlAttribute("DonViTinh")]
		[Bindable(true)]
		public string DonViTinh 
		{
			get { return GetColumnValue<string>(Columns.DonViTinh); }
			set { SetColumnValue(Columns.DonViTinh, value); }
		}
		  
		[XmlAttribute("PTramBh")]
		[Bindable(true)]
		public decimal? PTramBh 
		{
			get { return GetColumnValue<decimal?>(Columns.PTramBh); }
			set { SetColumnValue(Columns.PTramBh, value); }
		}
		  
		[XmlAttribute("MaKieuTtoan")]
		[Bindable(true)]
		public string MaKieuTtoan 
		{
			get { return GetColumnValue<string>(Columns.MaKieuTtoan); }
			set { SetColumnValue(Columns.MaKieuTtoan, value); }
		}
		  
		[XmlAttribute("IdChiTietTToan")]
		[Bindable(true)]
		public int? IdChiTietTToan 
		{
			get { return GetColumnValue<int?>(Columns.IdChiTietTToan); }
			set { SetColumnValue(Columns.IdChiTietTToan, value); }
		}
		  
		[XmlAttribute("DepartmentId")]
		[Bindable(true)]
		public int? DepartmentId 
		{
			get { return GetColumnValue<int?>(Columns.DepartmentId); }
			set { SetColumnValue(Columns.DepartmentId, value); }
		}
		  
		[XmlAttribute("DoctorAssignId")]
		[Bindable(true)]
		public int? DoctorAssignId 
		{
			get { return GetColumnValue<int?>(Columns.DoctorAssignId); }
			set { SetColumnValue(Columns.DoctorAssignId, value); }
		}
		  
		[XmlAttribute("IdGoiDvu")]
		[Bindable(true)]
		public int? IdGoiDvu 
		{
			get { return GetColumnValue<int?>(Columns.IdGoiDvu); }
			set { SetColumnValue(Columns.IdGoiDvu, value); }
		}
		  
		[XmlAttribute("ThuTuIn")]
		[Bindable(true)]
		public int? ThuTuIn 
		{
			get { return GetColumnValue<int?>(Columns.ThuTuIn); }
			set { SetColumnValue(Columns.ThuTuIn, value); }
		}
		  
		[XmlAttribute("TrongGoi")]
		[Bindable(true)]
		public int? TrongGoi 
		{
			get { return GetColumnValue<int?>(Columns.TrongGoi); }
			set { SetColumnValue(Columns.TrongGoi, value); }
		}
		  
		[XmlAttribute("TenHienThi")]
		[Bindable(true)]
		public string TenHienThi 
		{
			get { return GetColumnValue<string>(Columns.TenHienThi); }
			set { SetColumnValue(Columns.TenHienThi, value); }
		}
		  
		[XmlAttribute("NoiTru")]
		[Bindable(true)]
		public byte? NoiTru 
		{
			get { return GetColumnValue<byte?>(Columns.NoiTru); }
			set { SetColumnValue(Columns.NoiTru, value); }
		}
		  
		[XmlAttribute("TtChuyen")]
		[Bindable(true)]
		public byte? TtChuyen 
		{
			get { return GetColumnValue<byte?>(Columns.TtChuyen); }
			set { SetColumnValue(Columns.TtChuyen, value); }
		}
		  
		[XmlAttribute("BhytStatus")]
		[Bindable(true)]
		public byte? BhytStatus 
		{
			get { return GetColumnValue<byte?>(Columns.BhytStatus); }
			set { SetColumnValue(Columns.BhytStatus, value); }
		}
		  
		[XmlAttribute("IdNvienThien")]
		[Bindable(true)]
		public short? IdNvienThien 
		{
			get { return GetColumnValue<short?>(Columns.IdNvienThien); }
			set { SetColumnValue(Columns.IdNvienThien, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varPaymentId,int? varQuantity,decimal? varOriginPrice,decimal? varDiscountRate,decimal? varDiscountPrice,decimal? varTienBnTra,decimal? varSurchargePrice,int? varId,int? varIdDetail,int? varServiceId,int? varServiceDetailId,string varServiceDetailName,byte? varPaymentTypeId,int? varIsCancel,int? varIsPayment,string varCancelBy,DateTime? varCancelDate,int? varPaymentDetailType,string varMaDv,string varDonViTinh,decimal? varPTramBh,string varMaKieuTtoan,int? varIdChiTietTToan,int? varDepartmentId,int? varDoctorAssignId,int? varIdGoiDvu,int? varThuTuIn,int? varTrongGoi,string varTenHienThi,byte? varNoiTru,byte? varTtChuyen,byte? varBhytStatus,short? varIdNvienThien)
		{
			KydongTPaymentDetail item = new KydongTPaymentDetail();
			
			item.PaymentId = varPaymentId;
			
			item.Quantity = varQuantity;
			
			item.OriginPrice = varOriginPrice;
			
			item.DiscountRate = varDiscountRate;
			
			item.DiscountPrice = varDiscountPrice;
			
			item.TienBnTra = varTienBnTra;
			
			item.SurchargePrice = varSurchargePrice;
			
			item.Id = varId;
			
			item.IdDetail = varIdDetail;
			
			item.ServiceId = varServiceId;
			
			item.ServiceDetailId = varServiceDetailId;
			
			item.ServiceDetailName = varServiceDetailName;
			
			item.PaymentTypeId = varPaymentTypeId;
			
			item.IsCancel = varIsCancel;
			
			item.IsPayment = varIsPayment;
			
			item.CancelBy = varCancelBy;
			
			item.CancelDate = varCancelDate;
			
			item.PaymentDetailType = varPaymentDetailType;
			
			item.MaDv = varMaDv;
			
			item.DonViTinh = varDonViTinh;
			
			item.PTramBh = varPTramBh;
			
			item.MaKieuTtoan = varMaKieuTtoan;
			
			item.IdChiTietTToan = varIdChiTietTToan;
			
			item.DepartmentId = varDepartmentId;
			
			item.DoctorAssignId = varDoctorAssignId;
			
			item.IdGoiDvu = varIdGoiDvu;
			
			item.ThuTuIn = varThuTuIn;
			
			item.TrongGoi = varTrongGoi;
			
			item.TenHienThi = varTenHienThi;
			
			item.NoiTru = varNoiTru;
			
			item.TtChuyen = varTtChuyen;
			
			item.BhytStatus = varBhytStatus;
			
			item.IdNvienThien = varIdNvienThien;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varPaymentDetailId,int varPaymentId,int? varQuantity,decimal? varOriginPrice,decimal? varDiscountRate,decimal? varDiscountPrice,decimal? varTienBnTra,decimal? varSurchargePrice,int? varId,int? varIdDetail,int? varServiceId,int? varServiceDetailId,string varServiceDetailName,byte? varPaymentTypeId,int? varIsCancel,int? varIsPayment,string varCancelBy,DateTime? varCancelDate,int? varPaymentDetailType,string varMaDv,string varDonViTinh,decimal? varPTramBh,string varMaKieuTtoan,int? varIdChiTietTToan,int? varDepartmentId,int? varDoctorAssignId,int? varIdGoiDvu,int? varThuTuIn,int? varTrongGoi,string varTenHienThi,byte? varNoiTru,byte? varTtChuyen,byte? varBhytStatus,short? varIdNvienThien)
		{
			KydongTPaymentDetail item = new KydongTPaymentDetail();
			
				item.PaymentDetailId = varPaymentDetailId;
			
				item.PaymentId = varPaymentId;
			
				item.Quantity = varQuantity;
			
				item.OriginPrice = varOriginPrice;
			
				item.DiscountRate = varDiscountRate;
			
				item.DiscountPrice = varDiscountPrice;
			
				item.TienBnTra = varTienBnTra;
			
				item.SurchargePrice = varSurchargePrice;
			
				item.Id = varId;
			
				item.IdDetail = varIdDetail;
			
				item.ServiceId = varServiceId;
			
				item.ServiceDetailId = varServiceDetailId;
			
				item.ServiceDetailName = varServiceDetailName;
			
				item.PaymentTypeId = varPaymentTypeId;
			
				item.IsCancel = varIsCancel;
			
				item.IsPayment = varIsPayment;
			
				item.CancelBy = varCancelBy;
			
				item.CancelDate = varCancelDate;
			
				item.PaymentDetailType = varPaymentDetailType;
			
				item.MaDv = varMaDv;
			
				item.DonViTinh = varDonViTinh;
			
				item.PTramBh = varPTramBh;
			
				item.MaKieuTtoan = varMaKieuTtoan;
			
				item.IdChiTietTToan = varIdChiTietTToan;
			
				item.DepartmentId = varDepartmentId;
			
				item.DoctorAssignId = varDoctorAssignId;
			
				item.IdGoiDvu = varIdGoiDvu;
			
				item.ThuTuIn = varThuTuIn;
			
				item.TrongGoi = varTrongGoi;
			
				item.TenHienThi = varTenHienThi;
			
				item.NoiTru = varNoiTru;
			
				item.TtChuyen = varTtChuyen;
			
				item.BhytStatus = varBhytStatus;
			
				item.IdNvienThien = varIdNvienThien;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn PaymentDetailIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn QuantityColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn OriginPriceColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountRateColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn DiscountPriceColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn TienBnTraColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn SurchargePriceColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDetailColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceIdColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceDetailIdColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceDetailNameColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentTypeIdColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn IsCancelColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn IsPaymentColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn CancelByColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn CancelDateColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentDetailTypeColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDvColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn DonViTinhColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn PTramBhColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKieuTtoanColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn IdChiTietTToanColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn DepartmentIdColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn DoctorAssignIdColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGoiDvuColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn ThuTuInColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn TrongGoiColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn TenHienThiColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn NoiTruColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn TtChuyenColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn BhytStatusColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNvienThienColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string PaymentDetailId = @"PaymentDetail_ID";
			 public static string PaymentId = @"Payment_ID";
			 public static string Quantity = @"Quantity";
			 public static string OriginPrice = @"Origin_Price";
			 public static string DiscountRate = @"Discount_Rate";
			 public static string DiscountPrice = @"Discount_Price";
			 public static string TienBnTra = @"TIEN_BN_TRA";
			 public static string SurchargePrice = @"Surcharge_Price";
			 public static string Id = @"ID";
			 public static string IdDetail = @"ID_Detail";
			 public static string ServiceId = @"Service_ID";
			 public static string ServiceDetailId = @"ServiceDetail_ID";
			 public static string ServiceDetailName = @"ServiceDetail_Name";
			 public static string PaymentTypeId = @"PaymentType_ID";
			 public static string IsCancel = @"IsCancel";
			 public static string IsPayment = @"IsPayment";
			 public static string CancelBy = @"Cancel_By";
			 public static string CancelDate = @"Cancel_Date";
			 public static string PaymentDetailType = @"Payment_Detail_Type";
			 public static string MaDv = @"Ma_DV";
			 public static string DonViTinh = @"DonVi_Tinh";
			 public static string PTramBh = @"PTram_BH";
			 public static string MaKieuTtoan = @"MA_KIEU_TTOAN";
			 public static string IdChiTietTToan = @"ID_ChiTiet_TToan";
			 public static string DepartmentId = @"Department_ID";
			 public static string DoctorAssignId = @"DoctorAssign_ID";
			 public static string IdGoiDvu = @"ID_GOI_DVU";
			 public static string ThuTuIn = @"Thu_Tu_In";
			 public static string TrongGoi = @"TRONG_GOI";
			 public static string TenHienThi = @"TEN_HIEN_THI";
			 public static string NoiTru = @"NOI_TRU";
			 public static string TtChuyen = @"TT_CHUYEN";
			 public static string BhytStatus = @"BHYT_Status";
			 public static string IdNvienThien = @"ID_NVIEN_THIEN";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
