using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the ViewLaythongtinChidinhCl class.
    /// </summary>
    [Serializable]
    public partial class ViewLaythongtinChidinhClCollection : ReadOnlyList<ViewLaythongtinChidinhCl, ViewLaythongtinChidinhClCollection>
    {        
        public ViewLaythongtinChidinhClCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VIEW_LAYTHONGTIN_CHIDINH_CLS view.
    /// </summary>
    [Serializable]
    public partial class ViewLaythongtinChidinhCl : ReadOnlyRecord<ViewLaythongtinChidinhCl>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VIEW_LAYTHONGTIN_CHIDINH_CLS", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarAssignDetailId = new TableSchema.TableColumn(schema);
                colvarAssignDetailId.ColumnName = "AssignDetail_ID";
                colvarAssignDetailId.DataType = DbType.Int64;
                colvarAssignDetailId.MaxLength = 0;
                colvarAssignDetailId.AutoIncrement = false;
                colvarAssignDetailId.IsNullable = false;
                colvarAssignDetailId.IsPrimaryKey = false;
                colvarAssignDetailId.IsForeignKey = false;
                colvarAssignDetailId.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignDetailId);
                
                TableSchema.TableColumn colvarServiceId = new TableSchema.TableColumn(schema);
                colvarServiceId.ColumnName = "Service_ID";
                colvarServiceId.DataType = DbType.Int16;
                colvarServiceId.MaxLength = 0;
                colvarServiceId.AutoIncrement = false;
                colvarServiceId.IsNullable = true;
                colvarServiceId.IsPrimaryKey = false;
                colvarServiceId.IsForeignKey = false;
                colvarServiceId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceId);
                
                TableSchema.TableColumn colvarServiceDetailId = new TableSchema.TableColumn(schema);
                colvarServiceDetailId.ColumnName = "ServiceDetail_ID";
                colvarServiceDetailId.DataType = DbType.Int32;
                colvarServiceDetailId.MaxLength = 0;
                colvarServiceDetailId.AutoIncrement = false;
                colvarServiceDetailId.IsNullable = false;
                colvarServiceDetailId.IsPrimaryKey = false;
                colvarServiceDetailId.IsForeignKey = false;
                colvarServiceDetailId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceDetailId);
                
                TableSchema.TableColumn colvarDiscountRate = new TableSchema.TableColumn(schema);
                colvarDiscountRate.ColumnName = "Discount_Rate";
                colvarDiscountRate.DataType = DbType.Decimal;
                colvarDiscountRate.MaxLength = 0;
                colvarDiscountRate.AutoIncrement = false;
                colvarDiscountRate.IsNullable = true;
                colvarDiscountRate.IsPrimaryKey = false;
                colvarDiscountRate.IsForeignKey = false;
                colvarDiscountRate.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiscountRate);
                
                TableSchema.TableColumn colvarDiscountType = new TableSchema.TableColumn(schema);
                colvarDiscountType.ColumnName = "Discount_Type";
                colvarDiscountType.DataType = DbType.Byte;
                colvarDiscountType.MaxLength = 0;
                colvarDiscountType.AutoIncrement = false;
                colvarDiscountType.IsNullable = true;
                colvarDiscountType.IsPrimaryKey = false;
                colvarDiscountType.IsForeignKey = false;
                colvarDiscountType.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiscountType);
                
                TableSchema.TableColumn colvarOriginPrice = new TableSchema.TableColumn(schema);
                colvarOriginPrice.ColumnName = "Origin_Price";
                colvarOriginPrice.DataType = DbType.Currency;
                colvarOriginPrice.MaxLength = 0;
                colvarOriginPrice.AutoIncrement = false;
                colvarOriginPrice.IsNullable = false;
                colvarOriginPrice.IsPrimaryKey = false;
                colvarOriginPrice.IsForeignKey = false;
                colvarOriginPrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginPrice);
                
                TableSchema.TableColumn colvarDiscountPrice = new TableSchema.TableColumn(schema);
                colvarDiscountPrice.ColumnName = "Discount_Price";
                colvarDiscountPrice.DataType = DbType.Currency;
                colvarDiscountPrice.MaxLength = 0;
                colvarDiscountPrice.AutoIncrement = false;
                colvarDiscountPrice.IsNullable = true;
                colvarDiscountPrice.IsPrimaryKey = false;
                colvarDiscountPrice.IsForeignKey = false;
                colvarDiscountPrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiscountPrice);
                
                TableSchema.TableColumn colvarSurchargePrice = new TableSchema.TableColumn(schema);
                colvarSurchargePrice.ColumnName = "Surcharge_Price";
                colvarSurchargePrice.DataType = DbType.Currency;
                colvarSurchargePrice.MaxLength = 0;
                colvarSurchargePrice.AutoIncrement = false;
                colvarSurchargePrice.IsNullable = true;
                colvarSurchargePrice.IsPrimaryKey = false;
                colvarSurchargePrice.IsForeignKey = false;
                colvarSurchargePrice.IsReadOnly = false;
                
                schema.Columns.Add(colvarSurchargePrice);
                
                TableSchema.TableColumn colvarUserId = new TableSchema.TableColumn(schema);
                colvarUserId.ColumnName = "User_ID";
                colvarUserId.DataType = DbType.AnsiString;
                colvarUserId.MaxLength = 20;
                colvarUserId.AutoIncrement = false;
                colvarUserId.IsNullable = true;
                colvarUserId.IsPrimaryKey = false;
                colvarUserId.IsForeignKey = false;
                colvarUserId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserId);
                
                TableSchema.TableColumn colvarAssignTypeId = new TableSchema.TableColumn(schema);
                colvarAssignTypeId.ColumnName = "Assign_Type_ID";
                colvarAssignTypeId.DataType = DbType.Byte;
                colvarAssignTypeId.MaxLength = 0;
                colvarAssignTypeId.AutoIncrement = false;
                colvarAssignTypeId.IsNullable = true;
                colvarAssignTypeId.IsPrimaryKey = false;
                colvarAssignTypeId.IsForeignKey = false;
                colvarAssignTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignTypeId);
                
                TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
                colvarPaymentStatus.ColumnName = "Payment_Status";
                colvarPaymentStatus.DataType = DbType.Byte;
                colvarPaymentStatus.MaxLength = 0;
                colvarPaymentStatus.AutoIncrement = false;
                colvarPaymentStatus.IsNullable = true;
                colvarPaymentStatus.IsPrimaryKey = false;
                colvarPaymentStatus.IsForeignKey = false;
                colvarPaymentStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentStatus);
                
                TableSchema.TableColumn colvarInputDate = new TableSchema.TableColumn(schema);
                colvarInputDate.ColumnName = "Input_Date";
                colvarInputDate.DataType = DbType.DateTime;
                colvarInputDate.MaxLength = 0;
                colvarInputDate.AutoIncrement = false;
                colvarInputDate.IsNullable = true;
                colvarInputDate.IsPrimaryKey = false;
                colvarInputDate.IsForeignKey = false;
                colvarInputDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInputDate);
                
                TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
                colvarPaymentDate.ColumnName = "Payment_Date";
                colvarPaymentDate.DataType = DbType.DateTime;
                colvarPaymentDate.MaxLength = 0;
                colvarPaymentDate.AutoIncrement = false;
                colvarPaymentDate.IsNullable = true;
                colvarPaymentDate.IsPrimaryKey = false;
                colvarPaymentDate.IsForeignKey = false;
                colvarPaymentDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentDate);
                
                TableSchema.TableColumn colvarIsCancel = new TableSchema.TableColumn(schema);
                colvarIsCancel.ColumnName = "IsCancel";
                colvarIsCancel.DataType = DbType.Byte;
                colvarIsCancel.MaxLength = 0;
                colvarIsCancel.AutoIncrement = false;
                colvarIsCancel.IsNullable = true;
                colvarIsCancel.IsPrimaryKey = false;
                colvarIsCancel.IsForeignKey = false;
                colvarIsCancel.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsCancel);
                
                TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
                colvarIsPayment.ColumnName = "IsPayment";
                colvarIsPayment.DataType = DbType.Byte;
                colvarIsPayment.MaxLength = 0;
                colvarIsPayment.AutoIncrement = false;
                colvarIsPayment.IsNullable = true;
                colvarIsPayment.IsPrimaryKey = false;
                colvarIsPayment.IsForeignKey = false;
                colvarIsPayment.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsPayment);
                
                TableSchema.TableColumn colvarQuantity = new TableSchema.TableColumn(schema);
                colvarQuantity.ColumnName = "Quantity";
                colvarQuantity.DataType = DbType.Int32;
                colvarQuantity.MaxLength = 0;
                colvarQuantity.AutoIncrement = false;
                colvarQuantity.IsNullable = true;
                colvarQuantity.IsPrimaryKey = false;
                colvarQuantity.IsForeignKey = false;
                colvarQuantity.IsReadOnly = false;
                
                schema.Columns.Add(colvarQuantity);
                
                TableSchema.TableColumn colvarSummary = new TableSchema.TableColumn(schema);
                colvarSummary.ColumnName = "Summary";
                colvarSummary.DataType = DbType.String;
                colvarSummary.MaxLength = 300;
                colvarSummary.AutoIncrement = false;
                colvarSummary.IsNullable = true;
                colvarSummary.IsPrimaryKey = false;
                colvarSummary.IsForeignKey = false;
                colvarSummary.IsReadOnly = false;
                
                schema.Columns.Add(colvarSummary);
                
                TableSchema.TableColumn colvarSDesc = new TableSchema.TableColumn(schema);
                colvarSDesc.ColumnName = "sDesc";
                colvarSDesc.DataType = DbType.String;
                colvarSDesc.MaxLength = 1073741823;
                colvarSDesc.AutoIncrement = false;
                colvarSDesc.IsNullable = true;
                colvarSDesc.IsPrimaryKey = false;
                colvarSDesc.IsForeignKey = false;
                colvarSDesc.IsReadOnly = false;
                
                schema.Columns.Add(colvarSDesc);
                
                TableSchema.TableColumn colvarBhytStatus = new TableSchema.TableColumn(schema);
                colvarBhytStatus.ColumnName = "BHYT_Status";
                colvarBhytStatus.DataType = DbType.Byte;
                colvarBhytStatus.MaxLength = 0;
                colvarBhytStatus.AutoIncrement = false;
                colvarBhytStatus.IsNullable = true;
                colvarBhytStatus.IsPrimaryKey = false;
                colvarBhytStatus.IsForeignKey = false;
                colvarBhytStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarBhytStatus);
                
                TableSchema.TableColumn colvarProposal = new TableSchema.TableColumn(schema);
                colvarProposal.ColumnName = "Proposal";
                colvarProposal.DataType = DbType.String;
                colvarProposal.MaxLength = 300;
                colvarProposal.AutoIncrement = false;
                colvarProposal.IsNullable = true;
                colvarProposal.IsPrimaryKey = false;
                colvarProposal.IsForeignKey = false;
                colvarProposal.IsReadOnly = false;
                
                schema.Columns.Add(colvarProposal);
                
                TableSchema.TableColumn colvarVungKs = new TableSchema.TableColumn(schema);
                colvarVungKs.ColumnName = "Vung_KS";
                colvarVungKs.DataType = DbType.String;
                colvarVungKs.MaxLength = 300;
                colvarVungKs.AutoIncrement = false;
                colvarVungKs.IsNullable = true;
                colvarVungKs.IsPrimaryKey = false;
                colvarVungKs.IsForeignKey = false;
                colvarVungKs.IsReadOnly = false;
                
                schema.Columns.Add(colvarVungKs);
                
                TableSchema.TableColumn colvarBsThucHien = new TableSchema.TableColumn(schema);
                colvarBsThucHien.ColumnName = "BS_ThucHien";
                colvarBsThucHien.DataType = DbType.String;
                colvarBsThucHien.MaxLength = 50;
                colvarBsThucHien.AutoIncrement = false;
                colvarBsThucHien.IsNullable = true;
                colvarBsThucHien.IsPrimaryKey = false;
                colvarBsThucHien.IsForeignKey = false;
                colvarBsThucHien.IsReadOnly = false;
                
                schema.Columns.Add(colvarBsThucHien);
                
                TableSchema.TableColumn colvarNgayThucHien = new TableSchema.TableColumn(schema);
                colvarNgayThucHien.ColumnName = "Ngay_ThucHien";
                colvarNgayThucHien.DataType = DbType.DateTime;
                colvarNgayThucHien.MaxLength = 0;
                colvarNgayThucHien.AutoIncrement = false;
                colvarNgayThucHien.IsNullable = true;
                colvarNgayThucHien.IsPrimaryKey = false;
                colvarNgayThucHien.IsForeignKey = false;
                colvarNgayThucHien.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgayThucHien);
                
                TableSchema.TableColumn colvarAssignDetailCode = new TableSchema.TableColumn(schema);
                colvarAssignDetailCode.ColumnName = "AssignDetailCode";
                colvarAssignDetailCode.DataType = DbType.String;
                colvarAssignDetailCode.MaxLength = 50;
                colvarAssignDetailCode.AutoIncrement = false;
                colvarAssignDetailCode.IsNullable = true;
                colvarAssignDetailCode.IsPrimaryKey = false;
                colvarAssignDetailCode.IsForeignKey = false;
                colvarAssignDetailCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignDetailCode);
                
                TableSchema.TableColumn colvarTestId = new TableSchema.TableColumn(schema);
                colvarTestId.ColumnName = "Test_ID";
                colvarTestId.DataType = DbType.Int32;
                colvarTestId.MaxLength = 0;
                colvarTestId.AutoIncrement = false;
                colvarTestId.IsNullable = true;
                colvarTestId.IsPrimaryKey = false;
                colvarTestId.IsForeignKey = false;
                colvarTestId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTestId);
                
                TableSchema.TableColumn colvarDisplayOnReport = new TableSchema.TableColumn(schema);
                colvarDisplayOnReport.ColumnName = "DisplayOnReport";
                colvarDisplayOnReport.DataType = DbType.Byte;
                colvarDisplayOnReport.MaxLength = 0;
                colvarDisplayOnReport.AutoIncrement = false;
                colvarDisplayOnReport.IsNullable = false;
                colvarDisplayOnReport.IsPrimaryKey = false;
                colvarDisplayOnReport.IsForeignKey = false;
                colvarDisplayOnReport.IsReadOnly = false;
                
                schema.Columns.Add(colvarDisplayOnReport);
                
                TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
                colvarGhiChu.ColumnName = "Ghi_Chu";
                colvarGhiChu.DataType = DbType.String;
                colvarGhiChu.MaxLength = 255;
                colvarGhiChu.AutoIncrement = false;
                colvarGhiChu.IsNullable = true;
                colvarGhiChu.IsPrimaryKey = false;
                colvarGhiChu.IsForeignKey = false;
                colvarGhiChu.IsReadOnly = false;
                
                schema.Columns.Add(colvarGhiChu);
                
                TableSchema.TableColumn colvarGiaBhytCt = new TableSchema.TableColumn(schema);
                colvarGiaBhytCt.ColumnName = "Gia_BHYT_CT";
                colvarGiaBhytCt.DataType = DbType.Decimal;
                colvarGiaBhytCt.MaxLength = 0;
                colvarGiaBhytCt.AutoIncrement = false;
                colvarGiaBhytCt.IsNullable = true;
                colvarGiaBhytCt.IsPrimaryKey = false;
                colvarGiaBhytCt.IsForeignKey = false;
                colvarGiaBhytCt.IsReadOnly = false;
                
                schema.Columns.Add(colvarGiaBhytCt);
                
                TableSchema.TableColumn colvarGiaBnct = new TableSchema.TableColumn(schema);
                colvarGiaBnct.ColumnName = "Gia_BNCT";
                colvarGiaBnct.DataType = DbType.Decimal;
                colvarGiaBnct.MaxLength = 0;
                colvarGiaBnct.AutoIncrement = false;
                colvarGiaBnct.IsNullable = true;
                colvarGiaBnct.IsPrimaryKey = false;
                colvarGiaBnct.IsForeignKey = false;
                colvarGiaBnct.IsReadOnly = false;
                
                schema.Columns.Add(colvarGiaBnct);
                
                TableSchema.TableColumn colvarXacNhan = new TableSchema.TableColumn(schema);
                colvarXacNhan.ColumnName = "XAC_NHAN";
                colvarXacNhan.DataType = DbType.Byte;
                colvarXacNhan.MaxLength = 0;
                colvarXacNhan.AutoIncrement = false;
                colvarXacNhan.IsNullable = true;
                colvarXacNhan.IsPrimaryKey = false;
                colvarXacNhan.IsForeignKey = false;
                colvarXacNhan.IsReadOnly = false;
                
                schema.Columns.Add(colvarXacNhan);
                
                TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
                colvarPaymentId.ColumnName = "Payment_ID";
                colvarPaymentId.DataType = DbType.Int32;
                colvarPaymentId.MaxLength = 0;
                colvarPaymentId.AutoIncrement = false;
                colvarPaymentId.IsNullable = true;
                colvarPaymentId.IsPrimaryKey = false;
                colvarPaymentId.IsForeignKey = false;
                colvarPaymentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentId);
                
                TableSchema.TableColumn colvarComfirmDeposit = new TableSchema.TableColumn(schema);
                colvarComfirmDeposit.ColumnName = "ComfirmDeposit";
                colvarComfirmDeposit.DataType = DbType.Byte;
                colvarComfirmDeposit.MaxLength = 0;
                colvarComfirmDeposit.AutoIncrement = false;
                colvarComfirmDeposit.IsNullable = true;
                colvarComfirmDeposit.IsPrimaryKey = false;
                colvarComfirmDeposit.IsForeignKey = false;
                colvarComfirmDeposit.IsReadOnly = false;
                
                schema.Columns.Add(colvarComfirmDeposit);
                
                TableSchema.TableColumn colvarIdGoiDvu = new TableSchema.TableColumn(schema);
                colvarIdGoiDvu.ColumnName = "ID_GOI_DVU";
                colvarIdGoiDvu.DataType = DbType.Int32;
                colvarIdGoiDvu.MaxLength = 0;
                colvarIdGoiDvu.AutoIncrement = false;
                colvarIdGoiDvu.IsNullable = true;
                colvarIdGoiDvu.IsPrimaryKey = false;
                colvarIdGoiDvu.IsForeignKey = false;
                colvarIdGoiDvu.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdGoiDvu);
                
                TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
                colvarTrongGoi.ColumnName = "TRONG_GOI";
                colvarTrongGoi.DataType = DbType.Byte;
                colvarTrongGoi.MaxLength = 0;
                colvarTrongGoi.AutoIncrement = false;
                colvarTrongGoi.IsNullable = true;
                colvarTrongGoi.IsPrimaryKey = false;
                colvarTrongGoi.IsForeignKey = false;
                colvarTrongGoi.IsReadOnly = false;
                
                schema.Columns.Add(colvarTrongGoi);
                
                TableSchema.TableColumn colvarIsLocked = new TableSchema.TableColumn(schema);
                colvarIsLocked.ColumnName = "IsLocked";
                colvarIsLocked.DataType = DbType.Int32;
                colvarIsLocked.MaxLength = 0;
                colvarIsLocked.AutoIncrement = false;
                colvarIsLocked.IsNullable = false;
                colvarIsLocked.IsPrimaryKey = false;
                colvarIsLocked.IsForeignKey = false;
                colvarIsLocked.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsLocked);
                
                TableSchema.TableColumn colvarIsNew = new TableSchema.TableColumn(schema);
                colvarIsNew.ColumnName = "IsNew";
                colvarIsNew.DataType = DbType.Int32;
                colvarIsNew.MaxLength = 0;
                colvarIsNew.AutoIncrement = false;
                colvarIsNew.IsNullable = false;
                colvarIsNew.IsPrimaryKey = false;
                colvarIsNew.IsForeignKey = false;
                colvarIsNew.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsNew);
                
                TableSchema.TableColumn colvarAssignId = new TableSchema.TableColumn(schema);
                colvarAssignId.ColumnName = "Assign_ID";
                colvarAssignId.DataType = DbType.Int64;
                colvarAssignId.MaxLength = 0;
                colvarAssignId.AutoIncrement = false;
                colvarAssignId.IsNullable = false;
                colvarAssignId.IsPrimaryKey = false;
                colvarAssignId.IsForeignKey = false;
                colvarAssignId.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignId);
                
                TableSchema.TableColumn colvarExamId = new TableSchema.TableColumn(schema);
                colvarExamId.ColumnName = "Exam_ID";
                colvarExamId.DataType = DbType.Int64;
                colvarExamId.MaxLength = 0;
                colvarExamId.AutoIncrement = false;
                colvarExamId.IsNullable = true;
                colvarExamId.IsPrimaryKey = false;
                colvarExamId.IsForeignKey = false;
                colvarExamId.IsReadOnly = false;
                
                schema.Columns.Add(colvarExamId);
                
                TableSchema.TableColumn colvarTreatId = new TableSchema.TableColumn(schema);
                colvarTreatId.ColumnName = "Treat_ID";
                colvarTreatId.DataType = DbType.Int32;
                colvarTreatId.MaxLength = 0;
                colvarTreatId.AutoIncrement = false;
                colvarTreatId.IsNullable = true;
                colvarTreatId.IsPrimaryKey = false;
                colvarTreatId.IsForeignKey = false;
                colvarTreatId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTreatId);
                
                TableSchema.TableColumn colvarPatientDeptId = new TableSchema.TableColumn(schema);
                colvarPatientDeptId.ColumnName = "PatientDept_ID";
                colvarPatientDeptId.DataType = DbType.Int32;
                colvarPatientDeptId.MaxLength = 0;
                colvarPatientDeptId.AutoIncrement = false;
                colvarPatientDeptId.IsNullable = true;
                colvarPatientDeptId.IsPrimaryKey = false;
                colvarPatientDeptId.IsForeignKey = false;
                colvarPatientDeptId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientDeptId);
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_Code";
                colvarPatientCode.DataType = DbType.AnsiString;
                colvarPatientCode.MaxLength = 20;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = false;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Int64;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = false;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarRegDate = new TableSchema.TableColumn(schema);
                colvarRegDate.ColumnName = "Reg_Date";
                colvarRegDate.DataType = DbType.DateTime;
                colvarRegDate.MaxLength = 0;
                colvarRegDate.AutoIncrement = false;
                colvarRegDate.IsNullable = false;
                colvarRegDate.IsPrimaryKey = false;
                colvarRegDate.IsForeignKey = false;
                colvarRegDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarRegDate);
                
                TableSchema.TableColumn colvarDiagPerson = new TableSchema.TableColumn(schema);
                colvarDiagPerson.ColumnName = "Diag_Person";
                colvarDiagPerson.DataType = DbType.Int16;
                colvarDiagPerson.MaxLength = 0;
                colvarDiagPerson.AutoIncrement = false;
                colvarDiagPerson.IsNullable = true;
                colvarDiagPerson.IsPrimaryKey = false;
                colvarDiagPerson.IsForeignKey = false;
                colvarDiagPerson.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiagPerson);
                
                TableSchema.TableColumn colvarDepartmentId = new TableSchema.TableColumn(schema);
                colvarDepartmentId.ColumnName = "Department_ID";
                colvarDepartmentId.DataType = DbType.Int16;
                colvarDepartmentId.MaxLength = 0;
                colvarDepartmentId.AutoIncrement = false;
                colvarDepartmentId.IsNullable = true;
                colvarDepartmentId.IsPrimaryKey = false;
                colvarDepartmentId.IsForeignKey = false;
                colvarDepartmentId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepartmentId);
                
                TableSchema.TableColumn colvarAssignStatus = new TableSchema.TableColumn(schema);
                colvarAssignStatus.ColumnName = "Assign_Status";
                colvarAssignStatus.DataType = DbType.Byte;
                colvarAssignStatus.MaxLength = 0;
                colvarAssignStatus.AutoIncrement = false;
                colvarAssignStatus.IsNullable = true;
                colvarAssignStatus.IsPrimaryKey = false;
                colvarAssignStatus.IsForeignKey = false;
                colvarAssignStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignStatus);
                
                TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);
                colvarCreatedBy.ColumnName = "Created_by";
                colvarCreatedBy.DataType = DbType.AnsiString;
                colvarCreatedBy.MaxLength = 20;
                colvarCreatedBy.AutoIncrement = false;
                colvarCreatedBy.IsNullable = true;
                colvarCreatedBy.IsPrimaryKey = false;
                colvarCreatedBy.IsForeignKey = false;
                colvarCreatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreatedBy);
                
                TableSchema.TableColumn colvarCreateDate = new TableSchema.TableColumn(schema);
                colvarCreateDate.ColumnName = "Create_Date";
                colvarCreateDate.DataType = DbType.DateTime;
                colvarCreateDate.MaxLength = 0;
                colvarCreateDate.AutoIncrement = false;
                colvarCreateDate.IsNullable = true;
                colvarCreateDate.IsPrimaryKey = false;
                colvarCreateDate.IsForeignKey = false;
                colvarCreateDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreateDate);
                
                TableSchema.TableColumn colvarAssignCode = new TableSchema.TableColumn(schema);
                colvarAssignCode.ColumnName = "Assign_Code";
                colvarAssignCode.DataType = DbType.AnsiString;
                colvarAssignCode.MaxLength = 50;
                colvarAssignCode.AutoIncrement = false;
                colvarAssignCode.IsNullable = true;
                colvarAssignCode.IsPrimaryKey = false;
                colvarAssignCode.IsForeignKey = false;
                colvarAssignCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignCode);
                
                TableSchema.TableColumn colvarBarcode = new TableSchema.TableColumn(schema);
                colvarBarcode.ColumnName = "Barcode";
                colvarBarcode.DataType = DbType.String;
                colvarBarcode.MaxLength = 20;
                colvarBarcode.AutoIncrement = false;
                colvarBarcode.IsNullable = true;
                colvarBarcode.IsPrimaryKey = false;
                colvarBarcode.IsForeignKey = false;
                colvarBarcode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBarcode);
                
                TableSchema.TableColumn colvarObjectTypeId = new TableSchema.TableColumn(schema);
                colvarObjectTypeId.ColumnName = "ObjectType_Id";
                colvarObjectTypeId.DataType = DbType.Int16;
                colvarObjectTypeId.MaxLength = 0;
                colvarObjectTypeId.AutoIncrement = false;
                colvarObjectTypeId.IsNullable = true;
                colvarObjectTypeId.IsPrimaryKey = false;
                colvarObjectTypeId.IsForeignKey = false;
                colvarObjectTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarObjectTypeId);
                
                TableSchema.TableColumn colvarNoiTru = new TableSchema.TableColumn(schema);
                colvarNoiTru.ColumnName = "Noi_Tru";
                colvarNoiTru.DataType = DbType.Byte;
                colvarNoiTru.MaxLength = 0;
                colvarNoiTru.AutoIncrement = false;
                colvarNoiTru.IsNullable = true;
                colvarNoiTru.IsPrimaryKey = false;
                colvarNoiTru.IsForeignKey = false;
                colvarNoiTru.IsReadOnly = false;
                
                schema.Columns.Add(colvarNoiTru);
                
                TableSchema.TableColumn colvarIdNoiThien = new TableSchema.TableColumn(schema);
                colvarIdNoiThien.ColumnName = "ID_NOI_THIEN";
                colvarIdNoiThien.DataType = DbType.Int16;
                colvarIdNoiThien.MaxLength = 0;
                colvarIdNoiThien.AutoIncrement = false;
                colvarIdNoiThien.IsNullable = true;
                colvarIdNoiThien.IsPrimaryKey = false;
                colvarIdNoiThien.IsForeignKey = false;
                colvarIdNoiThien.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdNoiThien);
                
                TableSchema.TableColumn colvarIsPHIDvuKtheo = new TableSchema.TableColumn(schema);
                colvarIsPHIDvuKtheo.ColumnName = "IsPHI_DVU_KTHEO";
                colvarIsPHIDvuKtheo.DataType = DbType.Byte;
                colvarIsPHIDvuKtheo.MaxLength = 0;
                colvarIsPHIDvuKtheo.AutoIncrement = false;
                colvarIsPHIDvuKtheo.IsNullable = true;
                colvarIsPHIDvuKtheo.IsPrimaryKey = false;
                colvarIsPHIDvuKtheo.IsForeignKey = false;
                colvarIsPHIDvuKtheo.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsPHIDvuKtheo);
                
                TableSchema.TableColumn colvarServiceDetailName = new TableSchema.TableColumn(schema);
                colvarServiceDetailName.ColumnName = "ServiceDetail_Name";
                colvarServiceDetailName.DataType = DbType.String;
                colvarServiceDetailName.MaxLength = 300;
                colvarServiceDetailName.AutoIncrement = false;
                colvarServiceDetailName.IsNullable = true;
                colvarServiceDetailName.IsPrimaryKey = false;
                colvarServiceDetailName.IsForeignKey = false;
                colvarServiceDetailName.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceDetailName);
                
                TableSchema.TableColumn colvarSIntOrder = new TableSchema.TableColumn(schema);
                colvarSIntOrder.ColumnName = "sIntOrder";
                colvarSIntOrder.DataType = DbType.Int32;
                colvarSIntOrder.MaxLength = 0;
                colvarSIntOrder.AutoIncrement = false;
                colvarSIntOrder.IsNullable = true;
                colvarSIntOrder.IsPrimaryKey = false;
                colvarSIntOrder.IsForeignKey = false;
                colvarSIntOrder.IsReadOnly = false;
                
                schema.Columns.Add(colvarSIntOrder);
                
                TableSchema.TableColumn colvarServiceName = new TableSchema.TableColumn(schema);
                colvarServiceName.ColumnName = "SERVICE_NAME";
                colvarServiceName.DataType = DbType.String;
                colvarServiceName.MaxLength = 300;
                colvarServiceName.AutoIncrement = false;
                colvarServiceName.IsNullable = true;
                colvarServiceName.IsPrimaryKey = false;
                colvarServiceName.IsForeignKey = false;
                colvarServiceName.IsReadOnly = false;
                
                schema.Columns.Add(colvarServiceName);
                
                TableSchema.TableColumn colvarGroupIntOrder = new TableSchema.TableColumn(schema);
                colvarGroupIntOrder.ColumnName = "GroupIntOrder";
                colvarGroupIntOrder.DataType = DbType.Int16;
                colvarGroupIntOrder.MaxLength = 0;
                colvarGroupIntOrder.AutoIncrement = false;
                colvarGroupIntOrder.IsNullable = true;
                colvarGroupIntOrder.IsPrimaryKey = false;
                colvarGroupIntOrder.IsForeignKey = false;
                colvarGroupIntOrder.IsReadOnly = false;
                
                schema.Columns.Add(colvarGroupIntOrder);
                
                TableSchema.TableColumn colvarStaffName = new TableSchema.TableColumn(schema);
                colvarStaffName.ColumnName = "Staff_name";
                colvarStaffName.DataType = DbType.String;
                colvarStaffName.MaxLength = 100;
                colvarStaffName.AutoIncrement = false;
                colvarStaffName.IsNullable = true;
                colvarStaffName.IsPrimaryKey = false;
                colvarStaffName.IsForeignKey = false;
                colvarStaffName.IsReadOnly = false;
                
                schema.Columns.Add(colvarStaffName);
                
                TableSchema.TableColumn colvarThanhTien = new TableSchema.TableColumn(schema);
                colvarThanhTien.ColumnName = "THANH_TIEN";
                colvarThanhTien.DataType = DbType.Currency;
                colvarThanhTien.MaxLength = 0;
                colvarThanhTien.AutoIncrement = false;
                colvarThanhTien.IsNullable = true;
                colvarThanhTien.IsPrimaryKey = false;
                colvarThanhTien.IsForeignKey = false;
                colvarThanhTien.IsReadOnly = false;
                
                schema.Columns.Add(colvarThanhTien);
                
                TableSchema.TableColumn colvarTt = new TableSchema.TableColumn(schema);
                colvarTt.ColumnName = "TT";
                colvarTt.DataType = DbType.Currency;
                colvarTt.MaxLength = 0;
                colvarTt.AutoIncrement = false;
                colvarTt.IsNullable = true;
                colvarTt.IsPrimaryKey = false;
                colvarTt.IsForeignKey = false;
                colvarTt.IsReadOnly = false;
                
                schema.Columns.Add(colvarTt);
                
                TableSchema.TableColumn colvarAssignDetailStatus = new TableSchema.TableColumn(schema);
                colvarAssignDetailStatus.ColumnName = "AssignDetail_Status";
                colvarAssignDetailStatus.DataType = DbType.Byte;
                colvarAssignDetailStatus.MaxLength = 0;
                colvarAssignDetailStatus.AutoIncrement = false;
                colvarAssignDetailStatus.IsNullable = false;
                colvarAssignDetailStatus.IsPrimaryKey = false;
                colvarAssignDetailStatus.IsForeignKey = false;
                colvarAssignDetailStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarAssignDetailStatus);
                
                TableSchema.TableColumn colvarNoiThucHien = new TableSchema.TableColumn(schema);
                colvarNoiThucHien.ColumnName = "NOI_THUC_HIEN";
                colvarNoiThucHien.DataType = DbType.String;
                colvarNoiThucHien.MaxLength = 100;
                colvarNoiThucHien.AutoIncrement = false;
                colvarNoiThucHien.IsNullable = true;
                colvarNoiThucHien.IsPrimaryKey = false;
                colvarNoiThucHien.IsForeignKey = false;
                colvarNoiThucHien.IsReadOnly = false;
                
                schema.Columns.Add(colvarNoiThucHien);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("VIEW_LAYTHONGTIN_CHIDINH_CLS",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewLaythongtinChidinhCl()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewLaythongtinChidinhCl(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewLaythongtinChidinhCl(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewLaythongtinChidinhCl(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("AssignDetailId")]
        [Bindable(true)]
        public long AssignDetailId 
	    {
		    get
		    {
			    return GetColumnValue<long>("AssignDetail_ID");
		    }
            set 
		    {
			    SetColumnValue("AssignDetail_ID", value);
            }
        }
	      
        [XmlAttribute("ServiceId")]
        [Bindable(true)]
        public short? ServiceId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Service_ID");
		    }
            set 
		    {
			    SetColumnValue("Service_ID", value);
            }
        }
	      
        [XmlAttribute("ServiceDetailId")]
        [Bindable(true)]
        public int ServiceDetailId 
	    {
		    get
		    {
			    return GetColumnValue<int>("ServiceDetail_ID");
		    }
            set 
		    {
			    SetColumnValue("ServiceDetail_ID", value);
            }
        }
	      
        [XmlAttribute("DiscountRate")]
        [Bindable(true)]
        public decimal? DiscountRate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Discount_Rate");
		    }
            set 
		    {
			    SetColumnValue("Discount_Rate", value);
            }
        }
	      
        [XmlAttribute("DiscountType")]
        [Bindable(true)]
        public byte? DiscountType 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Discount_Type");
		    }
            set 
		    {
			    SetColumnValue("Discount_Type", value);
            }
        }
	      
        [XmlAttribute("OriginPrice")]
        [Bindable(true)]
        public decimal OriginPrice 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("Origin_Price");
		    }
            set 
		    {
			    SetColumnValue("Origin_Price", value);
            }
        }
	      
        [XmlAttribute("DiscountPrice")]
        [Bindable(true)]
        public decimal? DiscountPrice 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Discount_Price");
		    }
            set 
		    {
			    SetColumnValue("Discount_Price", value);
            }
        }
	      
        [XmlAttribute("SurchargePrice")]
        [Bindable(true)]
        public decimal? SurchargePrice 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Surcharge_Price");
		    }
            set 
		    {
			    SetColumnValue("Surcharge_Price", value);
            }
        }
	      
        [XmlAttribute("UserId")]
        [Bindable(true)]
        public string UserId 
	    {
		    get
		    {
			    return GetColumnValue<string>("User_ID");
		    }
            set 
		    {
			    SetColumnValue("User_ID", value);
            }
        }
	      
        [XmlAttribute("AssignTypeId")]
        [Bindable(true)]
        public byte? AssignTypeId 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Assign_Type_ID");
		    }
            set 
		    {
			    SetColumnValue("Assign_Type_ID", value);
            }
        }
	      
        [XmlAttribute("PaymentStatus")]
        [Bindable(true)]
        public byte? PaymentStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Payment_Status");
		    }
            set 
		    {
			    SetColumnValue("Payment_Status", value);
            }
        }
	      
        [XmlAttribute("InputDate")]
        [Bindable(true)]
        public DateTime? InputDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Input_Date");
		    }
            set 
		    {
			    SetColumnValue("Input_Date", value);
            }
        }
	      
        [XmlAttribute("PaymentDate")]
        [Bindable(true)]
        public DateTime? PaymentDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Payment_Date");
		    }
            set 
		    {
			    SetColumnValue("Payment_Date", value);
            }
        }
	      
        [XmlAttribute("IsCancel")]
        [Bindable(true)]
        public byte? IsCancel 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("IsCancel");
		    }
            set 
		    {
			    SetColumnValue("IsCancel", value);
            }
        }
	      
        [XmlAttribute("IsPayment")]
        [Bindable(true)]
        public byte? IsPayment 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("IsPayment");
		    }
            set 
		    {
			    SetColumnValue("IsPayment", value);
            }
        }
	      
        [XmlAttribute("Quantity")]
        [Bindable(true)]
        public int? Quantity 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Quantity");
		    }
            set 
		    {
			    SetColumnValue("Quantity", value);
            }
        }
	      
        [XmlAttribute("Summary")]
        [Bindable(true)]
        public string Summary 
	    {
		    get
		    {
			    return GetColumnValue<string>("Summary");
		    }
            set 
		    {
			    SetColumnValue("Summary", value);
            }
        }
	      
        [XmlAttribute("SDesc")]
        [Bindable(true)]
        public string SDesc 
	    {
		    get
		    {
			    return GetColumnValue<string>("sDesc");
		    }
            set 
		    {
			    SetColumnValue("sDesc", value);
            }
        }
	      
        [XmlAttribute("BhytStatus")]
        [Bindable(true)]
        public byte? BhytStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("BHYT_Status");
		    }
            set 
		    {
			    SetColumnValue("BHYT_Status", value);
            }
        }
	      
        [XmlAttribute("Proposal")]
        [Bindable(true)]
        public string Proposal 
	    {
		    get
		    {
			    return GetColumnValue<string>("Proposal");
		    }
            set 
		    {
			    SetColumnValue("Proposal", value);
            }
        }
	      
        [XmlAttribute("VungKs")]
        [Bindable(true)]
        public string VungKs 
	    {
		    get
		    {
			    return GetColumnValue<string>("Vung_KS");
		    }
            set 
		    {
			    SetColumnValue("Vung_KS", value);
            }
        }
	      
        [XmlAttribute("BsThucHien")]
        [Bindable(true)]
        public string BsThucHien 
	    {
		    get
		    {
			    return GetColumnValue<string>("BS_ThucHien");
		    }
            set 
		    {
			    SetColumnValue("BS_ThucHien", value);
            }
        }
	      
        [XmlAttribute("NgayThucHien")]
        [Bindable(true)]
        public DateTime? NgayThucHien 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Ngay_ThucHien");
		    }
            set 
		    {
			    SetColumnValue("Ngay_ThucHien", value);
            }
        }
	      
        [XmlAttribute("AssignDetailCode")]
        [Bindable(true)]
        public string AssignDetailCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("AssignDetailCode");
		    }
            set 
		    {
			    SetColumnValue("AssignDetailCode", value);
            }
        }
	      
        [XmlAttribute("TestId")]
        [Bindable(true)]
        public int? TestId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Test_ID");
		    }
            set 
		    {
			    SetColumnValue("Test_ID", value);
            }
        }
	      
        [XmlAttribute("DisplayOnReport")]
        [Bindable(true)]
        public byte DisplayOnReport 
	    {
		    get
		    {
			    return GetColumnValue<byte>("DisplayOnReport");
		    }
            set 
		    {
			    SetColumnValue("DisplayOnReport", value);
            }
        }
	      
        [XmlAttribute("GhiChu")]
        [Bindable(true)]
        public string GhiChu 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ghi_Chu");
		    }
            set 
		    {
			    SetColumnValue("Ghi_Chu", value);
            }
        }
	      
        [XmlAttribute("GiaBhytCt")]
        [Bindable(true)]
        public decimal? GiaBhytCt 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Gia_BHYT_CT");
		    }
            set 
		    {
			    SetColumnValue("Gia_BHYT_CT", value);
            }
        }
	      
        [XmlAttribute("GiaBnct")]
        [Bindable(true)]
        public decimal? GiaBnct 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Gia_BNCT");
		    }
            set 
		    {
			    SetColumnValue("Gia_BNCT", value);
            }
        }
	      
        [XmlAttribute("XacNhan")]
        [Bindable(true)]
        public byte? XacNhan 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("XAC_NHAN");
		    }
            set 
		    {
			    SetColumnValue("XAC_NHAN", value);
            }
        }
	      
        [XmlAttribute("PaymentId")]
        [Bindable(true)]
        public int? PaymentId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Payment_ID");
		    }
            set 
		    {
			    SetColumnValue("Payment_ID", value);
            }
        }
	      
        [XmlAttribute("ComfirmDeposit")]
        [Bindable(true)]
        public byte? ComfirmDeposit 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("ComfirmDeposit");
		    }
            set 
		    {
			    SetColumnValue("ComfirmDeposit", value);
            }
        }
	      
        [XmlAttribute("IdGoiDvu")]
        [Bindable(true)]
        public int? IdGoiDvu 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ID_GOI_DVU");
		    }
            set 
		    {
			    SetColumnValue("ID_GOI_DVU", value);
            }
        }
	      
        [XmlAttribute("TrongGoi")]
        [Bindable(true)]
        public byte? TrongGoi 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("TRONG_GOI");
		    }
            set 
		    {
			    SetColumnValue("TRONG_GOI", value);
            }
        }
	      
        [XmlAttribute("IsLocked")]
        [Bindable(true)]
        public int IsLocked 
	    {
		    get
		    {
			    return GetColumnValue<int>("IsLocked");
		    }
            set 
		    {
			    SetColumnValue("IsLocked", value);
            }
        }
	      
        [XmlAttribute("IsNew")]
        [Bindable(true)]
        public int IsNew 
	    {
		    get
		    {
			    return GetColumnValue<int>("IsNew");
		    }
            set 
		    {
			    SetColumnValue("IsNew", value);
            }
        }
	      
        [XmlAttribute("AssignId")]
        [Bindable(true)]
        public long AssignId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Assign_ID");
		    }
            set 
		    {
			    SetColumnValue("Assign_ID", value);
            }
        }
	      
        [XmlAttribute("ExamId")]
        [Bindable(true)]
        public long? ExamId 
	    {
		    get
		    {
			    return GetColumnValue<long?>("Exam_ID");
		    }
            set 
		    {
			    SetColumnValue("Exam_ID", value);
            }
        }
	      
        [XmlAttribute("TreatId")]
        [Bindable(true)]
        public int? TreatId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Treat_ID");
		    }
            set 
		    {
			    SetColumnValue("Treat_ID", value);
            }
        }
	      
        [XmlAttribute("PatientDeptId")]
        [Bindable(true)]
        public int? PatientDeptId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PatientDept_ID");
		    }
            set 
		    {
			    SetColumnValue("PatientDept_ID", value);
            }
        }
	      
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Code");
		    }
            set 
		    {
			    SetColumnValue("Patient_Code", value);
            }
        }
	      
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public long PatientId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("RegDate")]
        [Bindable(true)]
        public DateTime RegDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("Reg_Date");
		    }
            set 
		    {
			    SetColumnValue("Reg_Date", value);
            }
        }
	      
        [XmlAttribute("DiagPerson")]
        [Bindable(true)]
        public short? DiagPerson 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Diag_Person");
		    }
            set 
		    {
			    SetColumnValue("Diag_Person", value);
            }
        }
	      
        [XmlAttribute("DepartmentId")]
        [Bindable(true)]
        public short? DepartmentId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Department_ID");
		    }
            set 
		    {
			    SetColumnValue("Department_ID", value);
            }
        }
	      
        [XmlAttribute("AssignStatus")]
        [Bindable(true)]
        public byte? AssignStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Assign_Status");
		    }
            set 
		    {
			    SetColumnValue("Assign_Status", value);
            }
        }
	      
        [XmlAttribute("CreatedBy")]
        [Bindable(true)]
        public string CreatedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("Created_by");
		    }
            set 
		    {
			    SetColumnValue("Created_by", value);
            }
        }
	      
        [XmlAttribute("CreateDate")]
        [Bindable(true)]
        public DateTime? CreateDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Create_Date");
		    }
            set 
		    {
			    SetColumnValue("Create_Date", value);
            }
        }
	      
        [XmlAttribute("AssignCode")]
        [Bindable(true)]
        public string AssignCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Assign_Code");
		    }
            set 
		    {
			    SetColumnValue("Assign_Code", value);
            }
        }
	      
        [XmlAttribute("Barcode")]
        [Bindable(true)]
        public string Barcode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Barcode");
		    }
            set 
		    {
			    SetColumnValue("Barcode", value);
            }
        }
	      
        [XmlAttribute("ObjectTypeId")]
        [Bindable(true)]
        public short? ObjectTypeId 
	    {
		    get
		    {
			    return GetColumnValue<short?>("ObjectType_Id");
		    }
            set 
		    {
			    SetColumnValue("ObjectType_Id", value);
            }
        }
	      
        [XmlAttribute("NoiTru")]
        [Bindable(true)]
        public byte? NoiTru 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Noi_Tru");
		    }
            set 
		    {
			    SetColumnValue("Noi_Tru", value);
            }
        }
	      
        [XmlAttribute("IdNoiThien")]
        [Bindable(true)]
        public short? IdNoiThien 
	    {
		    get
		    {
			    return GetColumnValue<short?>("ID_NOI_THIEN");
		    }
            set 
		    {
			    SetColumnValue("ID_NOI_THIEN", value);
            }
        }
	      
        [XmlAttribute("IsPHIDvuKtheo")]
        [Bindable(true)]
        public byte? IsPHIDvuKtheo 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("IsPHI_DVU_KTHEO");
		    }
            set 
		    {
			    SetColumnValue("IsPHI_DVU_KTHEO", value);
            }
        }
	      
        [XmlAttribute("ServiceDetailName")]
        [Bindable(true)]
        public string ServiceDetailName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ServiceDetail_Name");
		    }
            set 
		    {
			    SetColumnValue("ServiceDetail_Name", value);
            }
        }
	      
        [XmlAttribute("SIntOrder")]
        [Bindable(true)]
        public int? SIntOrder 
	    {
		    get
		    {
			    return GetColumnValue<int?>("sIntOrder");
		    }
            set 
		    {
			    SetColumnValue("sIntOrder", value);
            }
        }
	      
        [XmlAttribute("ServiceName")]
        [Bindable(true)]
        public string ServiceName 
	    {
		    get
		    {
			    return GetColumnValue<string>("SERVICE_NAME");
		    }
            set 
		    {
			    SetColumnValue("SERVICE_NAME", value);
            }
        }
	      
        [XmlAttribute("GroupIntOrder")]
        [Bindable(true)]
        public short? GroupIntOrder 
	    {
		    get
		    {
			    return GetColumnValue<short?>("GroupIntOrder");
		    }
            set 
		    {
			    SetColumnValue("GroupIntOrder", value);
            }
        }
	      
        [XmlAttribute("StaffName")]
        [Bindable(true)]
        public string StaffName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Staff_name");
		    }
            set 
		    {
			    SetColumnValue("Staff_name", value);
            }
        }
	      
        [XmlAttribute("ThanhTien")]
        [Bindable(true)]
        public decimal? ThanhTien 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("THANH_TIEN");
		    }
            set 
		    {
			    SetColumnValue("THANH_TIEN", value);
            }
        }
	      
        [XmlAttribute("Tt")]
        [Bindable(true)]
        public decimal? Tt 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("TT");
		    }
            set 
		    {
			    SetColumnValue("TT", value);
            }
        }
	      
        [XmlAttribute("AssignDetailStatus")]
        [Bindable(true)]
        public byte AssignDetailStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte>("AssignDetail_Status");
		    }
            set 
		    {
			    SetColumnValue("AssignDetail_Status", value);
            }
        }
	      
        [XmlAttribute("NoiThucHien")]
        [Bindable(true)]
        public string NoiThucHien 
	    {
		    get
		    {
			    return GetColumnValue<string>("NOI_THUC_HIEN");
		    }
            set 
		    {
			    SetColumnValue("NOI_THUC_HIEN", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string AssignDetailId = @"AssignDetail_ID";
            
            public static string ServiceId = @"Service_ID";
            
            public static string ServiceDetailId = @"ServiceDetail_ID";
            
            public static string DiscountRate = @"Discount_Rate";
            
            public static string DiscountType = @"Discount_Type";
            
            public static string OriginPrice = @"Origin_Price";
            
            public static string DiscountPrice = @"Discount_Price";
            
            public static string SurchargePrice = @"Surcharge_Price";
            
            public static string UserId = @"User_ID";
            
            public static string AssignTypeId = @"Assign_Type_ID";
            
            public static string PaymentStatus = @"Payment_Status";
            
            public static string InputDate = @"Input_Date";
            
            public static string PaymentDate = @"Payment_Date";
            
            public static string IsCancel = @"IsCancel";
            
            public static string IsPayment = @"IsPayment";
            
            public static string Quantity = @"Quantity";
            
            public static string Summary = @"Summary";
            
            public static string SDesc = @"sDesc";
            
            public static string BhytStatus = @"BHYT_Status";
            
            public static string Proposal = @"Proposal";
            
            public static string VungKs = @"Vung_KS";
            
            public static string BsThucHien = @"BS_ThucHien";
            
            public static string NgayThucHien = @"Ngay_ThucHien";
            
            public static string AssignDetailCode = @"AssignDetailCode";
            
            public static string TestId = @"Test_ID";
            
            public static string DisplayOnReport = @"DisplayOnReport";
            
            public static string GhiChu = @"Ghi_Chu";
            
            public static string GiaBhytCt = @"Gia_BHYT_CT";
            
            public static string GiaBnct = @"Gia_BNCT";
            
            public static string XacNhan = @"XAC_NHAN";
            
            public static string PaymentId = @"Payment_ID";
            
            public static string ComfirmDeposit = @"ComfirmDeposit";
            
            public static string IdGoiDvu = @"ID_GOI_DVU";
            
            public static string TrongGoi = @"TRONG_GOI";
            
            public static string IsLocked = @"IsLocked";
            
            public static string IsNew = @"IsNew";
            
            public static string AssignId = @"Assign_ID";
            
            public static string ExamId = @"Exam_ID";
            
            public static string TreatId = @"Treat_ID";
            
            public static string PatientDeptId = @"PatientDept_ID";
            
            public static string PatientCode = @"Patient_Code";
            
            public static string PatientId = @"Patient_ID";
            
            public static string RegDate = @"Reg_Date";
            
            public static string DiagPerson = @"Diag_Person";
            
            public static string DepartmentId = @"Department_ID";
            
            public static string AssignStatus = @"Assign_Status";
            
            public static string CreatedBy = @"Created_by";
            
            public static string CreateDate = @"Create_Date";
            
            public static string AssignCode = @"Assign_Code";
            
            public static string Barcode = @"Barcode";
            
            public static string ObjectTypeId = @"ObjectType_Id";
            
            public static string NoiTru = @"Noi_Tru";
            
            public static string IdNoiThien = @"ID_NOI_THIEN";
            
            public static string IsPHIDvuKtheo = @"IsPHI_DVU_KTHEO";
            
            public static string ServiceDetailName = @"ServiceDetail_Name";
            
            public static string SIntOrder = @"sIntOrder";
            
            public static string ServiceName = @"SERVICE_NAME";
            
            public static string GroupIntOrder = @"GroupIntOrder";
            
            public static string StaffName = @"Staff_name";
            
            public static string ThanhTien = @"THANH_TIEN";
            
            public static string Tt = @"TT";
            
            public static string AssignDetailStatus = @"AssignDetail_Status";
            
            public static string NoiThucHien = @"NOI_THUC_HIEN";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
