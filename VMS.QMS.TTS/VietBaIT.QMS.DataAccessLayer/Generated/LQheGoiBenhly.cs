using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the LQheGoiBenhly class.
	/// </summary>
    [Serializable]
	public partial class LQheGoiBenhlyCollection : ActiveList<LQheGoiBenhly, LQheGoiBenhlyCollection>
	{	   
		public LQheGoiBenhlyCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>LQheGoiBenhlyCollection</returns>
		public LQheGoiBenhlyCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                LQheGoiBenhly o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the L_QHE_GOI_BENHLY table.
	/// </summary>
	[Serializable]
	public partial class LQheGoiBenhly : ActiveRecord<LQheGoiBenhly>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public LQheGoiBenhly()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public LQheGoiBenhly(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public LQheGoiBenhly(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public LQheGoiBenhly(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("L_QHE_GOI_BENHLY", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdBenhLy = new TableSchema.TableColumn(schema);
				colvarIdBenhLy.ColumnName = "ID_BENH_LY";
				colvarIdBenhLy.DataType = DbType.Int32;
				colvarIdBenhLy.MaxLength = 0;
				colvarIdBenhLy.AutoIncrement = true;
				colvarIdBenhLy.IsNullable = false;
				colvarIdBenhLy.IsPrimaryKey = true;
				colvarIdBenhLy.IsForeignKey = false;
				colvarIdBenhLy.IsReadOnly = false;
				colvarIdBenhLy.DefaultSetting = @"";
				colvarIdBenhLy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhLy);
				
				TableSchema.TableColumn colvarMaBenhLy = new TableSchema.TableColumn(schema);
				colvarMaBenhLy.ColumnName = "MA_BENH_LY";
				colvarMaBenhLy.DataType = DbType.String;
				colvarMaBenhLy.MaxLength = 50;
				colvarMaBenhLy.AutoIncrement = false;
				colvarMaBenhLy.IsNullable = true;
				colvarMaBenhLy.IsPrimaryKey = false;
				colvarMaBenhLy.IsForeignKey = false;
				colvarMaBenhLy.IsReadOnly = false;
				colvarMaBenhLy.DefaultSetting = @"";
				colvarMaBenhLy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaBenhLy);
				
				TableSchema.TableColumn colvarTenBenhLy = new TableSchema.TableColumn(schema);
				colvarTenBenhLy.ColumnName = "TEN_BENH_LY";
				colvarTenBenhLy.DataType = DbType.String;
				colvarTenBenhLy.MaxLength = 200;
				colvarTenBenhLy.AutoIncrement = false;
				colvarTenBenhLy.IsNullable = true;
				colvarTenBenhLy.IsPrimaryKey = false;
				colvarTenBenhLy.IsForeignKey = false;
				colvarTenBenhLy.IsReadOnly = false;
				colvarTenBenhLy.DefaultSetting = @"";
				colvarTenBenhLy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenBenhLy);
				
				TableSchema.TableColumn colvarThuTu = new TableSchema.TableColumn(schema);
				colvarThuTu.ColumnName = "THU_TU";
				colvarThuTu.DataType = DbType.Int32;
				colvarThuTu.MaxLength = 0;
				colvarThuTu.AutoIncrement = false;
				colvarThuTu.IsNullable = true;
				colvarThuTu.IsPrimaryKey = false;
				colvarThuTu.IsForeignKey = false;
				colvarThuTu.IsReadOnly = false;
				colvarThuTu.DefaultSetting = @"";
				colvarThuTu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThuTu);
				
				TableSchema.TableColumn colvarMaDtuong = new TableSchema.TableColumn(schema);
				colvarMaDtuong.ColumnName = "MA_DTUONG";
				colvarMaDtuong.DataType = DbType.String;
				colvarMaDtuong.MaxLength = 50;
				colvarMaDtuong.AutoIncrement = false;
				colvarMaDtuong.IsNullable = true;
				colvarMaDtuong.IsPrimaryKey = false;
				colvarMaDtuong.IsForeignKey = false;
				colvarMaDtuong.IsReadOnly = false;
				colvarMaDtuong.DefaultSetting = @"";
				colvarMaDtuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDtuong);
				
				TableSchema.TableColumn colvarIdGoiDvu = new TableSchema.TableColumn(schema);
				colvarIdGoiDvu.ColumnName = "ID_GOI_DVU";
				colvarIdGoiDvu.DataType = DbType.Int32;
				colvarIdGoiDvu.MaxLength = 0;
				colvarIdGoiDvu.AutoIncrement = false;
				colvarIdGoiDvu.IsNullable = true;
				colvarIdGoiDvu.IsPrimaryKey = false;
				colvarIdGoiDvu.IsForeignKey = false;
				colvarIdGoiDvu.IsReadOnly = false;
				colvarIdGoiDvu.DefaultSetting = @"";
				colvarIdGoiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGoiDvu);
				
				TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
				colvarGhiChu.ColumnName = "GHI_CHU";
				colvarGhiChu.DataType = DbType.String;
				colvarGhiChu.MaxLength = 255;
				colvarGhiChu.AutoIncrement = false;
				colvarGhiChu.IsNullable = true;
				colvarGhiChu.IsPrimaryKey = false;
				colvarGhiChu.IsForeignKey = false;
				colvarGhiChu.IsReadOnly = false;
				colvarGhiChu.DefaultSetting = @"";
				colvarGhiChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChu);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarMaDtuongApDung = new TableSchema.TableColumn(schema);
				colvarMaDtuongApDung.ColumnName = "MA_DTUONG_AP_DUNG";
				colvarMaDtuongApDung.DataType = DbType.String;
				colvarMaDtuongApDung.MaxLength = 50;
				colvarMaDtuongApDung.AutoIncrement = false;
				colvarMaDtuongApDung.IsNullable = true;
				colvarMaDtuongApDung.IsPrimaryKey = false;
				colvarMaDtuongApDung.IsForeignKey = false;
				colvarMaDtuongApDung.IsReadOnly = false;
				colvarMaDtuongApDung.DefaultSetting = @"";
				colvarMaDtuongApDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDtuongApDung);
				
				TableSchema.TableColumn colvarMaNhomBly = new TableSchema.TableColumn(schema);
				colvarMaNhomBly.ColumnName = "MA_NHOM_BLY";
				colvarMaNhomBly.DataType = DbType.String;
				colvarMaNhomBly.MaxLength = 50;
				colvarMaNhomBly.AutoIncrement = false;
				colvarMaNhomBly.IsNullable = true;
				colvarMaNhomBly.IsPrimaryKey = false;
				colvarMaNhomBly.IsForeignKey = false;
				colvarMaNhomBly.IsReadOnly = false;
				colvarMaNhomBly.DefaultSetting = @"";
				colvarMaNhomBly.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNhomBly);
				
				TableSchema.TableColumn colvarDonGiaBly = new TableSchema.TableColumn(schema);
				colvarDonGiaBly.ColumnName = "DON_GIA_BLY";
				colvarDonGiaBly.DataType = DbType.Decimal;
				colvarDonGiaBly.MaxLength = 0;
				colvarDonGiaBly.AutoIncrement = false;
				colvarDonGiaBly.IsNullable = true;
				colvarDonGiaBly.IsPrimaryKey = false;
				colvarDonGiaBly.IsForeignKey = false;
				colvarDonGiaBly.IsReadOnly = false;
				colvarDonGiaBly.DefaultSetting = @"";
				colvarDonGiaBly.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGiaBly);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("L_QHE_GOI_BENHLY",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdBenhLy")]
		[Bindable(true)]
		public int IdBenhLy 
		{
			get { return GetColumnValue<int>(Columns.IdBenhLy); }
			set { SetColumnValue(Columns.IdBenhLy, value); }
		}
		  
		[XmlAttribute("MaBenhLy")]
		[Bindable(true)]
		public string MaBenhLy 
		{
			get { return GetColumnValue<string>(Columns.MaBenhLy); }
			set { SetColumnValue(Columns.MaBenhLy, value); }
		}
		  
		[XmlAttribute("TenBenhLy")]
		[Bindable(true)]
		public string TenBenhLy 
		{
			get { return GetColumnValue<string>(Columns.TenBenhLy); }
			set { SetColumnValue(Columns.TenBenhLy, value); }
		}
		  
		[XmlAttribute("ThuTu")]
		[Bindable(true)]
		public int? ThuTu 
		{
			get { return GetColumnValue<int?>(Columns.ThuTu); }
			set { SetColumnValue(Columns.ThuTu, value); }
		}
		  
		[XmlAttribute("MaDtuong")]
		[Bindable(true)]
		public string MaDtuong 
		{
			get { return GetColumnValue<string>(Columns.MaDtuong); }
			set { SetColumnValue(Columns.MaDtuong, value); }
		}
		  
		[XmlAttribute("IdGoiDvu")]
		[Bindable(true)]
		public int? IdGoiDvu 
		{
			get { return GetColumnValue<int?>(Columns.IdGoiDvu); }
			set { SetColumnValue(Columns.IdGoiDvu, value); }
		}
		  
		[XmlAttribute("GhiChu")]
		[Bindable(true)]
		public string GhiChu 
		{
			get { return GetColumnValue<string>(Columns.GhiChu); }
			set { SetColumnValue(Columns.GhiChu, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("MaDtuongApDung")]
		[Bindable(true)]
		public string MaDtuongApDung 
		{
			get { return GetColumnValue<string>(Columns.MaDtuongApDung); }
			set { SetColumnValue(Columns.MaDtuongApDung, value); }
		}
		  
		[XmlAttribute("MaNhomBly")]
		[Bindable(true)]
		public string MaNhomBly 
		{
			get { return GetColumnValue<string>(Columns.MaNhomBly); }
			set { SetColumnValue(Columns.MaNhomBly, value); }
		}
		  
		[XmlAttribute("DonGiaBly")]
		[Bindable(true)]
		public decimal? DonGiaBly 
		{
			get { return GetColumnValue<decimal?>(Columns.DonGiaBly); }
			set { SetColumnValue(Columns.DonGiaBly, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaBenhLy,string varTenBenhLy,int? varThuTu,string varMaDtuong,int? varIdGoiDvu,string varGhiChu,DateTime? varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,string varMaDtuongApDung,string varMaNhomBly,decimal? varDonGiaBly)
		{
			LQheGoiBenhly item = new LQheGoiBenhly();
			
			item.MaBenhLy = varMaBenhLy;
			
			item.TenBenhLy = varTenBenhLy;
			
			item.ThuTu = varThuTu;
			
			item.MaDtuong = varMaDtuong;
			
			item.IdGoiDvu = varIdGoiDvu;
			
			item.GhiChu = varGhiChu;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
			item.MaDtuongApDung = varMaDtuongApDung;
			
			item.MaNhomBly = varMaNhomBly;
			
			item.DonGiaBly = varDonGiaBly;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdBenhLy,string varMaBenhLy,string varTenBenhLy,int? varThuTu,string varMaDtuong,int? varIdGoiDvu,string varGhiChu,DateTime? varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,string varMaDtuongApDung,string varMaNhomBly,decimal? varDonGiaBly)
		{
			LQheGoiBenhly item = new LQheGoiBenhly();
			
				item.IdBenhLy = varIdBenhLy;
			
				item.MaBenhLy = varMaBenhLy;
			
				item.TenBenhLy = varTenBenhLy;
			
				item.ThuTu = varThuTu;
			
				item.MaDtuong = varMaDtuong;
			
				item.IdGoiDvu = varIdGoiDvu;
			
				item.GhiChu = varGhiChu;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
				item.MaDtuongApDung = varMaDtuongApDung;
			
				item.MaNhomBly = varMaNhomBly;
			
				item.DonGiaBly = varDonGiaBly;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdBenhLyColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaBenhLyColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TenBenhLyColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn ThuTuColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDtuongColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGoiDvuColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDtuongApDungColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNhomBlyColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaBlyColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdBenhLy = @"ID_BENH_LY";
			 public static string MaBenhLy = @"MA_BENH_LY";
			 public static string TenBenhLy = @"TEN_BENH_LY";
			 public static string ThuTu = @"THU_TU";
			 public static string MaDtuong = @"MA_DTUONG";
			 public static string IdGoiDvu = @"ID_GOI_DVU";
			 public static string GhiChu = @"GHI_CHU";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string MaDtuongApDung = @"MA_DTUONG_AP_DUNG";
			 public static string MaNhomBly = @"MA_NHOM_BLY";
			 public static string DonGiaBly = @"DON_GIA_BLY";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
