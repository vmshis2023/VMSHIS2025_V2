using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_KHAM_TOANTHAN
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TKhamToanthanController
    {
        // Preload our schema..
        TKhamToanthan thisSchemaLoad = new TKhamToanthan();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TKhamToanthanCollection FetchAll()
        {
            TKhamToanthanCollection coll = new TKhamToanthanCollection();
            Query qry = new Query(TKhamToanthan.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TKhamToanthanCollection FetchByID(object IdKtoanThan)
        {
            TKhamToanthanCollection coll = new TKhamToanthanCollection().Where("ID_KTOAN_THAN", IdKtoanThan).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TKhamToanthanCollection FetchByQuery(Query qry)
        {
            TKhamToanthanCollection coll = new TKhamToanthanCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdKtoanThan)
        {
            return (TKhamToanthan.Delete(IdKtoanThan) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdKtoanThan)
        {
            return (TKhamToanthan.Destroy(IdKtoanThan) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string PatientCode,long? PatientId,int? IdPhieuVaovien,int? Mach,decimal? NhietDo,string HuyetAp,int? NhipTho,decimal? CanNang,decimal? ChieuCao,string DaNmac,string KhamThoan,string KhamHhap,string KhamBphanKhac,int? IdHsPhaThai,DateTime? NgaySua,DateTime? NgayTao,string NguoiSua,string NguoiTao)
	    {
		    TKhamToanthan item = new TKhamToanthan();
		    
            item.PatientCode = PatientCode;
            
            item.PatientId = PatientId;
            
            item.IdPhieuVaovien = IdPhieuVaovien;
            
            item.Mach = Mach;
            
            item.NhietDo = NhietDo;
            
            item.HuyetAp = HuyetAp;
            
            item.NhipTho = NhipTho;
            
            item.CanNang = CanNang;
            
            item.ChieuCao = ChieuCao;
            
            item.DaNmac = DaNmac;
            
            item.KhamThoan = KhamThoan;
            
            item.KhamHhap = KhamHhap;
            
            item.KhamBphanKhac = KhamBphanKhac;
            
            item.IdHsPhaThai = IdHsPhaThai;
            
            item.NgaySua = NgaySua;
            
            item.NgayTao = NgayTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NguoiTao = NguoiTao;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int IdKtoanThan,string PatientCode,long? PatientId,int? IdPhieuVaovien,int? Mach,decimal? NhietDo,string HuyetAp,int? NhipTho,decimal? CanNang,decimal? ChieuCao,string DaNmac,string KhamThoan,string KhamHhap,string KhamBphanKhac,int? IdHsPhaThai,DateTime? NgaySua,DateTime? NgayTao,string NguoiSua,string NguoiTao)
	    {
		    TKhamToanthan item = new TKhamToanthan();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdKtoanThan = IdKtoanThan;
				
			item.PatientCode = PatientCode;
				
			item.PatientId = PatientId;
				
			item.IdPhieuVaovien = IdPhieuVaovien;
				
			item.Mach = Mach;
				
			item.NhietDo = NhietDo;
				
			item.HuyetAp = HuyetAp;
				
			item.NhipTho = NhipTho;
				
			item.CanNang = CanNang;
				
			item.ChieuCao = ChieuCao;
				
			item.DaNmac = DaNmac;
				
			item.KhamThoan = KhamThoan;
				
			item.KhamHhap = KhamHhap;
				
			item.KhamBphanKhac = KhamBphanKhac;
				
			item.IdHsPhaThai = IdHsPhaThai;
				
			item.NgaySua = NgaySua;
				
			item.NgayTao = NgayTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NguoiTao = NguoiTao;
				
	        item.Save(UserName);
	    }
    }
}
