using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.HISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for T_Treatment
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TTreatmentController
    {
        // Preload our schema..
        TTreatment thisSchemaLoad = new TTreatment();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TTreatmentCollection FetchAll()
        {
            TTreatmentCollection coll = new TTreatmentCollection();
            Query qry = new Query(TTreatment.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TTreatmentCollection FetchByID(object TreatId)
        {
            TTreatmentCollection coll = new TTreatmentCollection().Where("Treat_ID", TreatId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TTreatmentCollection FetchByQuery(Query qry)
        {
            TTreatmentCollection coll = new TTreatmentCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object TreatId)
        {
            return (TTreatment.Delete(TreatId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object TreatId)
        {
            return (TTreatment.Destroy(TreatId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string PatientCode,int? PatientId,int? PatientDeptId,short? DoctorId,short? DepartmentId,string Day,bool? AdditionalStatus,string Events,string Orders,DateTime? CreateDate,string CreateBy,DateTime? ModifyDate,string ModifyBy,byte? Status,DateTime? NurseCreatedDate,string NurseCreatedBy,DateTime? NgayLapPhieu,string GioLapPhieu,string IpMacSua,string IpMacTao,string IpMaySua,string IpMayTao,bool? DaIn)
	    {
		    TTreatment item = new TTreatment();
		    
            item.PatientCode = PatientCode;
            
            item.PatientId = PatientId;
            
            item.PatientDeptId = PatientDeptId;
            
            item.DoctorId = DoctorId;
            
            item.DepartmentId = DepartmentId;
            
            item.Day = Day;
            
            item.AdditionalStatus = AdditionalStatus;
            
            item.Events = Events;
            
            item.Orders = Orders;
            
            item.CreateDate = CreateDate;
            
            item.CreateBy = CreateBy;
            
            item.ModifyDate = ModifyDate;
            
            item.ModifyBy = ModifyBy;
            
            item.Status = Status;
            
            item.NurseCreatedDate = NurseCreatedDate;
            
            item.NurseCreatedBy = NurseCreatedBy;
            
            item.NgayLapPhieu = NgayLapPhieu;
            
            item.GioLapPhieu = GioLapPhieu;
            
            item.IpMacSua = IpMacSua;
            
            item.IpMacTao = IpMacTao;
            
            item.IpMaySua = IpMaySua;
            
            item.IpMayTao = IpMayTao;
            
            item.DaIn = DaIn;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int TreatId,string PatientCode,int? PatientId,int? PatientDeptId,short? DoctorId,short? DepartmentId,string Day,bool? AdditionalStatus,string Events,string Orders,DateTime? CreateDate,string CreateBy,DateTime? ModifyDate,string ModifyBy,byte? Status,DateTime? NurseCreatedDate,string NurseCreatedBy,DateTime? NgayLapPhieu,string GioLapPhieu,string IpMacSua,string IpMacTao,string IpMaySua,string IpMayTao,bool? DaIn)
	    {
		    TTreatment item = new TTreatment();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.TreatId = TreatId;
				
			item.PatientCode = PatientCode;
				
			item.PatientId = PatientId;
				
			item.PatientDeptId = PatientDeptId;
				
			item.DoctorId = DoctorId;
				
			item.DepartmentId = DepartmentId;
				
			item.Day = Day;
				
			item.AdditionalStatus = AdditionalStatus;
				
			item.Events = Events;
				
			item.Orders = Orders;
				
			item.CreateDate = CreateDate;
				
			item.CreateBy = CreateBy;
				
			item.ModifyDate = ModifyDate;
				
			item.ModifyBy = ModifyBy;
				
			item.Status = Status;
				
			item.NurseCreatedDate = NurseCreatedDate;
				
			item.NurseCreatedBy = NurseCreatedBy;
				
			item.NgayLapPhieu = NgayLapPhieu;
				
			item.GioLapPhieu = GioLapPhieu;
				
			item.IpMacSua = IpMacSua;
				
			item.IpMacTao = IpMacTao;
				
			item.IpMaySua = IpMaySua;
				
			item.IpMayTao = IpMayTao;
				
			item.DaIn = DaIn;
				
	        item.Save(UserName);
	    }
    }
}
